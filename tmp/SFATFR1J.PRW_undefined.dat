#Include "Protheus.ch"

/*/{Protheus.doc} SFATFR1J
Funcao para impressao dos documentos de termo de responsabilidade do ativo fixo.
	
@author 	José Leite de Barros Neto
@since 		28/10/2013
@version 	1.0		

@return Nil, Nulo

@history 18/10/2019, Franklin de Brito de Oliveira, Adicionado área para assinatura de corresponsáveis
@history 18/10/2019, Franklin de Brito de Oliveira, Adicionado parâmetro para permitir impressão de bens de outra unidade mas alocados no mesmo local
@history 20/01/2020, Franklin de Brito de Oliveira, Correção no parâmetro "Desc. Sintética".
@history 19/10/2020, Franklin de Brito de Oliveira, Correção em nomenclatura do termo de responsabilidade.
@history 28/10/2020, Franklin de Brito de Oliveira, Mudança nos termos impresso no relatório.
/*/

User Function SFATFR1J()

	Private cPerg 	:= "XSFATFR1"
	Private cCadastro	:= "Impressão de Termo de Responsabilidade"
	Private aSays		:= {}
	Private aButtons	:= {}
	Private nOpca 	:= 0
	Private oPrint
	//Private nCont		:= 0
	Private nContLoc	:= 0

	// Funcao para criacao das perguntas.
	fCriaSx1()

	// Forca o usuario a preencher as perguntas.
	If .Not. Pergunte(cPerg,.t.)
		Return
	EndIf

	AADD(aSays,"Este programa irá realizar a impressão dos Termos," )
	AADD(aSays,"de responsabilidade Ativo Fixo." )

	AADD(aButtons, { 5,.T.,{|| Pergunte(cPerg,.T. )}})
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,FechaBatch()}})
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )

	If nOpca == 1

		If ApMsgYesNo("Confirma impressão do Termo ?","Confirmar")
			Processa({|| fimprime()})
		EndIf
	
	EndIf

Return( Nil )

/** {Protheus.doc} fImprime
Funcao para impressao do relatorio

@param: 	<Nil>
@author 	José Leite de Barros Neto
@since 	28/10/2013
@Uso: 		SFIEMT
*/	
Static Function fImprime()

	Local _cCodResp	:= ""
	Local _cDescLoc	:= ""
	Local _lPrimeiro	:= .T.
	Local cBasItem1	:= MV_PAR03 + MV_PAR04
	Local cBasItem2	:= MV_PAR05 + MV_PAR06
	Local _cWhere		:= ""
	Local _cInner		:= ""
	Local nVlrTotal	:= 0
	Local nVlrResid	:= 0
	
	Private oCour07N 	:= TFont():New("Courier New",07,07,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour08N 	:= TFont():New("Courier New",08,08,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour09N 	:= TFont():New("Courier New",09,09,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour10N 	:= TFont():New("Courier New",10,10,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour12N 	:= TFont():New("Courier New",12,12,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour14N 	:= TFont():New("Courier New",14,14,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oFont8	:= TFont():New("Arial",08,08,.T.,.F.,5,.T.,5,.T.,.F.)
	Private oArial08N	:= TFont():New("Arial",08,08,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial10N	:= TFont():New("Arial",10,10,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial12N	:= TFont():New("Arial",10,12,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial14N	:= TFont():New("Arial",13,14,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial16N	:= TFont():New("Arial",14,16,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial20N	:= TFont():New("Arial",18,20,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial21N	:= TFont():New("Arial",19,21,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime08N	:= TFont():New("Time New Roman",08,08,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime09N	:= TFont():New("Time New Roman",09,09,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime10N	:= TFont():New("Time New Roman",10,10,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime12N	:= TFont():New("Time New Roman",12,12,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime14N	:= TFont():New("Time New Roman",14,14,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime16N	:= TFont():New("Time New Roman",16,16,.T.,.T.,5,.T.,5,.T.,.F.)
	Private nRowIni 	:= 010
	Private nColIni 	:= 050
	Private nColFim 	:= 2300
	Private nRowFim 	:= 3250
	Private nRowAtu 	:= 0
	Private _cAlias	:= ""

	nRowAtu := nRowIni
	
	If .Not. Empty(mv_par09)
		_cWhere := "	AND N1_DESCRIC LIKE '%"+AllTrim(Upper(mv_par09))+"%' "
	Else
		_cWhere := "	AND 1=1 "	
	EndIf
		
	If mv_par10 == 1
		_cWhere += " AND ND_FILIAL = '" + xFilial('SND') + "' "
	EndIf
	
	_cWhere := "%" + _cWhere + "%"
	
	_cAlias := GetNextAlias()

	BeginSql Alias _cAlias
	
		Column N1_AQUISIC		as Date
		Column TOTAL 			as Numeric(14,2)
		Column RESIDUAL 		as Numeric(14,2)

		SELECT ND_CBASE, ND_ITEM, ND_CODRESP, RD0_NOME, RD0_TIPO, //  -- 1 = Interno / 2 = Externo
				N1_DESCRIC, N1_LOCAL, N1_XSERIEP, N1_AQUISIC, 
				(N3_VORIG1+N3_AMPLIA1) as TOTAL, ( (N3_VORIG1+N3_AMPLIA1) - N3_VRDACM1 ) as RESIDUAL
			
		FROM %Table:SND% SND
	 
		INNER JOIN %Table:RD0% RD0 ON RD0_FILIAL = %xFilial:RD0%  AND  RD0_CODIGO = ND_CODRESP AND RD0.%NotDel%
		INNER JOIN %Table:SN1% SN1 ON N1_FILIAL = ND_FILIAL AND N1_CBASE = ND_CBASE AND N1_ITEM = ND_ITEM AND SN1.%NotDel%
		INNER JOIN %Table:SN3% SN3 ON N3_FILIAL = ND_FILIAL AND N3_CBASE = ND_CBASE AND N3_ITEM = ND_ITEM AND SN3.%NotDel%
		
		WHERE 	SND.%NotDel%
				AND ND_CODRESP BETWEEN %Exp:MV_PAR01% AND %Exp:MV_PAR02%
				AND ND_CBASE || ND_ITEM BETWEEN %Exp:cBasItem1% AND %Exp:cBasItem2%
				AND ND_STATUS = "1"
				AND N1_LOCAL BETWEEN %Exp:MV_PAR07% AND %Exp:MV_PAR08%
				AND N1_QUANTD <> 0
	      		%Exp:_cWhere%
	      		
		ORDER BY ND_CODRESP, N1_LOCAL, ND_CBASE

	EndSql
	
	MemoWrite("c:/pLog/Rel_Termo_Responsabilidade.sql",  GetLastQuery()[2])

	While .Not. (_cAlias)->(Eof())
		
		If _lPrimeiro
	
			oPrint := TMSPrinter():New( "Termo de responsabilidade" )
			oPrint:SetPortrait()
			_lPrimeiro := .F.
		
		EndIf
	
		_cCodResp	:= (_cAlias)->ND_CODRESP
		_cLocal	:= (_cAlias)->N1_LOCAL
		
		fForm()
		
		While .Not. (_cAlias)->(Eof()) .And. (_cAlias)->ND_CODRESP == _cCodResp

		//	nCont++
			
			If (_cAlias)->N1_LOCAL == _cLocal
			
				nContLoc++
				
				nVlrTotal += (_cAlias)->TOTAL
				nVlrResid += (_cAlias)->RESIDUAL
			
			EndIf
						
			If nRowAtu > (nRowFim-0550) .Or. (_cAlias)->N1_LOCAL <> _cLocal
			
				If (_cAlias)->N1_LOCAL <> _cLocal
					
					oPrint:Say(nRowFim-0530,nColIni+0010,"Quantidade de Bens por Local: "+cValtoChar(nContLoc),oArial08N)
					nContLoc	:= 0
					
					oPrint:Say(nRowFim-0530,nColIni+1740,Transform( nVlrTotal, "@E 999,999,999.99" ),oArial08N)
					nVlrTotal	:= 0
				
					oPrint:Say(nRowFim-0530,nColIni+2020,Transform( nVlrResid, "@E 999,999,999.99" ),oArial08N)
					nVlrResid	:= 0
					
					/* Inutilizo linhas em branco */	
					While nRowAtu < (nRowFim-0550)		
						
						InutLinha()
						
					EndDo	
				
					_cLocal	:= (_cAlias)->N1_LOCAL
				
					If (_cAlias)->N1_LOCAL == _cLocal
				
						nContLoc++
						
						nVlrTotal += (_cAlias)->TOTAL
						nVlrResid += (_cAlias)->RESIDUAL
					
					EndIf
				
				EndIf
				
				oPrint:EndPage()
				
				fForm()
				
			EndIf
			
			oPrint:Say(nRowAtu,nColIni+0010,AllTrim( (_cAlias)->ND_CBASE   ),oCour08N)
			oPrint:Say(nRowAtu,nColIni+0300,AllTrim( (_cAlias)->N1_DESCRIC ),oCour08N)
			oPrint:Say(nRowAtu,nColIni+1100,IIF( Empty((_cAlias)->N1_XSERIEP),;
				Replicate("-", 5), AllTrim( (_cAlias)->N1_XSERIEP ) ),oCour07N)
			oPrint:Say(nRowAtu,nColIni+1490,	DTOC( (_cAlias)->N1_AQUISIC ),oCour08N)
			oPrint:Say(nRowAtu,nColIni+1740,Transform( (_cAlias)->TOTAL		, "@E 999,999,999.99" ),oCour08N)
			oPrint:Say(nRowAtu,nColIni+2000,Transform( (_cAlias)->RESIDUAL	, "@E 999,999,999.99" ),oCour08N)
			
			nRowAtu += 0050
		
			(_cAlias)->(DbSkip())
		End
	
		/* Inutilizo linhas em branco */
		While nRowAtu < (nRowFim-550)		
			
			InutLinha()
			
		EndDo	
	
		If (_cAlias)->ND_CODRESP <> _cCodResp
		
			oPrint:Say(nRowFim-0530,nColIni+0010,"Quantidade de Bens por Local: "+cValtoChar(nContLoc),oArial08N)
			nContLoc	:= 0
			
	//		oPrint:Say(nRowFim-0200,nColIni+0010,"Quantidade de Bens do Responsável: "+cValtoChar(nCont),oArial08N)
	//		nCont 	:= 0
			
			oPrint:Say(nRowFim-0530,nColIni+1740,Transform( nVlrTotal, "@E 999,999,999.99" ),oArial08N)
			nVlrTotal	:= 0
			
			oPrint:Say(nRowFim-0530,nColIni+2020,Transform( nVlrResid, "@E 999,999,999.99" ),oArial08N)
			nVlrResid	:= 0

			nRowAtu += 0150
			
	//		nCont := 0
			
		EndIf
	
		oPrint:EndPage()
	
	End

	(_cAlias)->(DbCloseArea())

	If .Not. _lPrimeiro
		oPrint:EndPage()
		oPrint:Preview()     // Visualiza antes de imprimir
	EndIf

Return( Nil )

/** {Protheus.doc} fImprime
Funcao para montagem do formulario

@param: 	<Nil>
@author 	José Leite de Barros Neto
@since 	28/10/2013
@Uso: 		SFIEMT
*/
Static Function fForm()
	oPrint:StartPage()

	oPrint:Box(nRowIni,nColIni,nRowFim-0550,nColFim)
	oPrint:Line(nRowIni+0200,nColIni,nRowIni+0200,nColFim)
	oPrint:Say(nRowIni+0070,nColIni+0700,"TERMO DE RESPONSABILIDADE",oArial14N)
	oPrint:Line(nRowIni+0400,nColIni,nRowIni+0400,nColFim)
	oPrint:Say(nRowIni+0210,nColIni+0010,"Eu, " + AllTrim( (_cAlias)->RD0_NOME ) +", declaro pelo presente, que estou ciente das minhas responsabilidades sobre os bens patrimoniais",oCour08N) 
	oPrint:Say(nRowIni+0240,nColIni+0010,"relacionados neste documento.",oCour08N)
	oPrint:Say(nRowIni+0270,nColIni+0010,"Estou ciente também que devo informar à Gestão Patrimonial e Imobiliária quantos as movimentações, sinistros e danos ocorridos",oCour08N) 
	oPrint:Say(nRowIni+0300,nColIni+0010,"com os mesmos.",oCour08N)
	
	_cDescLoc := AllTrim( Posicione("SNL",1,xFilial("SNL")+(_cAlias)->N1_LOCAL,"NL_DESCRIC") )
		
	oPrint:Say(nRowIni+0350,nColIni+0010,"Localização: " + (_cAlias)->N1_LOCAL + " - " + _cDescLoc ,oCour08N)
	
	oPrint:Line(nRowIni+0440,nColIni,nRowIni+0440,nColFim)
	oPrint:Say(nRowIni+0405,nColIni+0040,"Código do Bem",oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+0600,"Descrição",oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+1180,"Nº de Série",oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+1500,"Dt de Aquis.",oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+1780,"Valor Total",oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+2040,"Valor Residual",oArial08N)

	_nFinal := (nRowFim-0550)

	For _nZ := nRowIni+440 To _nFinal Step 50
		oPrint:Line(_nZ,nColIni,_nZ,nColFim)
	Next _nZ

	oPrint:Line(nRowIni+0400, nColIni+0290, nRowFim-0550, nColIni+0290)
	oPrint:Line(nRowIni+0400, nColIni+1090, nRowFim-0550, nColIni+1090)
	oPrint:Line(nRowIni+0400, nColIni+1450, nRowFim-0550, nColIni+1450)
	oPrint:Line(nRowIni+0400, nColIni+1690, nRowFim-0550, nColIni+1690)
	oPrint:Line(nRowIni+0400, nColIni+1990, nRowFim-0550, nColIni+1990)
	
	oPrint:Box(nRowFim-0490, nColIni, nRowFim-0290,(nColFim/2)-0010)
	oPrint:Say(nRowFim-0470, nColIni+0010,"Gestão Patrimonial e Imobiliária",oArial10N)
	oPrint:Say(nRowFim-0360, ncolIni+0010,"Em:____/____/____   Assinatura:________________________________________",oArial08N)

	oPrint:Box(nRowFim-0490,(nColFim/2)+0010, nRowFim-0290, nColFim)
	oPrint:Say(nRowFim-0470,(nColFim/2)+0020,"Nome: " + (_cAlias)->RD0_NOME,oArial10N)
	oPrint:Say(nRowFim-0360,(nColFim/2)+0020,"Em:____/____/____   Assinatura:______________________________________",oArial08N)
	
	oPrint:Box(nRowFim-270, nColIni, nRowFim, nColFim)
	oPrint:Say(nRowFim-250, nColIni+0010,"CORRESPONSÁVEL(IS): ", oArial10N)
	
	nRowAtu := nRowIni+0450

Return( Nil )

/** {Protheus.doc} fCriaSx1
Funcao para criacao das perguntas

@param: 	<Nil>
@author 	Jose Leite de Barros Neto
@since 	28/10/2013
@Uso: 		SFIEMT
*/
Static Function fCriaSx1()

	//???????????????????????????????
	//?MV_PAR01  Responsavel de     ?
	//?MV_PAR02  Responsavel ate    ?
	//?MV_PAR03  Codigo do Bem de   ?
	//?MV_PAR04  Item do bem de     ?
	//?MV_PAR05  Codigo do Bem ate  ?
	//?MV_PAR06  Item do bem ate    ?
	//?MV_PAR07  Local do bem de    ?
	//?MV_PAR08  Local do bem ate   ?
	//?MV_PAR09  Descricao Sintetica?
	//???????????????????????????????

	u_SFPUTSX1( cPerg, "01","Responsavel de  "		,"","","mv_ch1","C",TamSX3("RD0_CODIGO")[1]	,0,0,"G","","RD0"		,"","","mv_par01","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "02","Responsavel ate "		,"","","mv_ch2","C",TamSX3("RD0_CODIGO")[1]	,0,0,"G","","RD0"		,"","","mv_par02","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "03","Codigo Bem de"			,"","","mv_ch3","C",TamSX3("N1_CBASE")[1]	,0,0,"G","","SN1APT"	,"","","mv_par03","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "04","Item de"				,"","","mv_ch4","C",TamSX3("N1_ITEM")[1]	,0,0,"G","",""			,"","","mv_par04","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "05","Codigo Bem ate"		,"","","mv_ch5","C",TamSX3("N1_CBASE")[1]	,0,0,"G","","SN1APT"	,"","","mv_par05","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "06","Item ate       "		,"","","mv_ch6","C",TamSX3("N1_ITEM")[1]	,0,0,"G","",""			,"","","mv_par06","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "07","Local de       "		,"","","mv_ch7","C",TamSX3("N1_LOCAL")[1]	,0,0,"G","","SN1LOC"	,"","","mv_par07","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "08","Local ate      "		,"","","mv_ch8","C",TamSX3("N1_LOCAL")[1]	,0,0,"G","","SN1LOC"	,"","","mv_par08","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "09","Desc. Sintetica"		,"","","mv_ch9","C",TamSX3("B1_DESC")[1]	,0,0,"G","",""			,"","","mv_par09","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "10","Cons. Filial Logada?"	,"","","mv_cha","N",1                       ,0,0,"C","",""			,"","","mv_par10","Sim","","","","Não","","","","","","","","","","","",{},{},{})

Return( Nil )


/*/{Protheus.doc} InutLinha
Função para inutilizar linhas não preenchidas

@author franklin.oliveira
@since 01/09/2015
@version 1.0

@return Nil
/*/
Static Function InutLinha()

	oPrint:Say(nRowAtu, nColIni+0030, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+0320, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+1120, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+1505, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+1800, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+2100, Replicate("-", 5), oCour08N)
	
	nRowAtu += 0050
	
Return (Nil)