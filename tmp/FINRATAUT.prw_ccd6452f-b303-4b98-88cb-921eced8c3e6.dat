#INCLUDE "PROTHEUS.CH"

/*/{Protheus.doc} FINRATAUT
Ponto de entrada executado antes da validação do aColsSev.
	
@author 	TOTVS
@since 		20/10/2013
@version 	1.0		

@return 	Nil, Nulo

@example

@see 

/*/

User Function FINRATAUT()

	Local aHeadSEV	:= PARAMIXB[1]
	Local aColSEV  	:= PARAMIXB[2]
	Local nPosNat  	:= 0
	Local nPosVlr		:= 0
	Local nPosPer		:= 0
	Local nPosRat		:= 0

	Local nPosNatCC	:= 0
	Local nPosCC  	:= 0
	Local nPosItem  	:= 0
	Local nPosCLVL  	:= 0
	Local nPosVlr  	:= 0
	Local nPosPerc  	:= 0
		
	Local nPosFil  	:= 0
	Local nPosPre  	:= 0
	Local nPosNum  	:= 0
	Local nPosPar  	:= 0
	Local nPosTip  	:= 0
	Local nPosCli  	:= 0
	Local nPosLoj  	:= 0

	Conout("Entrou FINRATAUT")

	If IsInCallStack("U_IMPXML") //AllTrim(Funname())== 'SIESBA05'
    	
    	//-> Monta o array aHeadSEV
		Multiauto(aColSEV,aHeadSEV,"SE1","SEV")
	
		For nX := 1 to Len(_aTotRNat)
		
			If nX <= Len(_aTotRNat) .and. nX > 1
				aAdd(aColSEV, {'',0,0,'',.F.})
			EndIf
		
			nPosNat := aScan(_aTotRNat[nX],{|x| AllTrim(x[1])=="EV_NATUREZ"})
			nPosVlr := aScan(_aTotRNat[nX],{|x| AllTrim(x[1])=="EV_VALOR"})
			nPosPer := aScan(_aTotRNat[nX],{|x| AllTrim(x[1])=="EV_PERC"})
			nPosRat := aScan(_aTotRNat[nX],{|x| AllTrim(x[1])=="EV_RATEICC"})
		
			aColSEV[nX][1] := _aTotRNat[nX,nPosNat,2]	//Natureza
			aColSEV[nX][2] := _aTotRNat[nX,nPosVlr,2]	//Valor
			aColSEV[nX][3] := _aTotRNat[nX,nPosPer,2]	//Perc.Rateio
			aColSEV[nX][4] := _aTotRNat[nX,nPosRat,2]	//Rateio de C.C
			aColSEV[nX][5] := .F.					  	//Deletado
		
		Next
	
		//Grava registros na "SEZTMP"
		If Len(_aTotRCC) > 0
		
			nPosNatCC	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_NATUREZ"	})
			nPosCC  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_CCUSTO"	})
			nPosItem  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_ITEMCTA"	})
			nPosCLVL  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_CLVL"		})
			nPosVlr  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_VALOR"	})
			nPosPerc  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_PERC"		})
		
			nPosFil  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_FILIAL"	})
			nPosPre  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_PREFIXO"	})
			nPosNum  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_NUM"		})
			nPosPar  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_PARCELA"	})
			nPosTip  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_TIPO"		})
			nPosCli  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_CLIFOR"	})
			nPosLoj  	:= aScan(_aTotRCC[1],{|x| AllTrim(x[1]) == "EZ_LOJA"		})
				
		EndIf
	
		For nX := 1 to Len(_aTotRCC)
		
			DbSelectArea("SEZ")
			If RecLock("SEZ", .T.)
		
				SEZ->EZ_NATUREZ	:= _aTotRCC[nX,nPosNatCC,2]
				SEZ->EZ_CCUSTO	:= _aTotRCC[nX,nPosCC,2]
			
				SEZ->EZ_ITEMCTA	:= _aTotRCC[nX,nPosItem,2]
				SEZ->EZ_CLVL   	:= _aTotRCC[nX,nPosCLVL,2]
				SEZ->EZ_VALOR		:= _aTotRCC[nX,nPosVlr,2]
				SEZ->EZ_PERC		:= _aTotRCC[nX,nPosPerc,2]
			
				SEZ->EZ_FILIAL	:= _aTotRCC[nX,nPosFil,2]
				SEZ->EZ_PREFIXO 	:= _aTotRCC[nX,nPosPre,2]
				SEZ->EZ_NUM     	:= _aTotRCC[nX,nPosNum,2]
				SEZ->EZ_PARCELA 	:= _aTotRCC[nX,nPosPar,2]
				SEZ->EZ_TIPO    	:= _aTotRCC[nX,nPosTip,2]
				SEZ->EZ_CLIFOR  	:= _aTotRCC[nX,nPosCli,2]
				SEZ->EZ_LOJA    	:= _aTotRCC[nX,nPosLoj,2]
			
				MsUnLock()
			
			EndIf
		
		Next
	
	EndIf

Return {aHeadSEV,aColSEV}
