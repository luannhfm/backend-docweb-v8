#Include 'Protheus.ch'
#Include 'FWPrintSetup.ch'
#Include 'RptDef.ch'

//-------------------------------------------------------------
/*/{Protheus.doc} SF06R03X
Comprovante de Pagamento Modelo 2

@author Allan da Silva Faria
@since 12/07/2016
@version 1.0
/*/
//-------------------------------------------------------------
User Function SF06R03X()
Local oPrinter	:= Nil																//-- Objeto de impressão			
Local oSetup	:= Nil																//-- Objeto de configuração da impressão
Local cSession	:= GetPrinterSession()												//-- Sessão do usuário logado
Local cPerg 	:= "SF06R03X"														//-- Pergunda
Local cRelName	:= "Comprovante de Pagamento Mod2"									//-- Nome do relatório
Local cFilePrint:= "SF06R03X"														//-- Nome do arquivo de relatório a ser criado
Local lAdjust	:= .F.																//-- Possibilita ajustes de impressão
Local nFlags	:= PD_ISTOTVSPRINTER+PD_DISABLEORIENTATION+PD_DISABLEPAPERSIZE		//-- Opções para setup de impressão
Local aOrdem	:= {"Padrão"}														//-- Array com ordem de impressão do relatório
Local aDevice	:= {"DISCO","SPOOL","EMAIL","EXCEL","HTML","PDF"}					//-- Array com dispositivos para impressão do relatório
Local cDevice	:= ""																//-- Dispositivo selecionado para impressão
Local nPrintType:= 6																//-- Tipo da impressora	
Local nOrient	:= 1

Private lExistCPG := .F.															//-- Controla de existe comprovante de pagamento.
Private nPag	  := 0																//-- Numero de paginas	

//------------------------------------------
//-- Valida de Cadastro de pergunta existe
//-- caso não existe ele cadastra.
//------------------------------------------
PergDef(@cPerg)
Pergunte(cPerg,.F.)

//-- Orientação da impressão 1= Retrado 2= Paisagem
cDevice		:= If(Empty(fwGetProfString(cSession,"PRINTTYPE","SPOOL",.T.)),"PDF",fwGetProfString(cSession,"PRINTTYPE","SPOOL",.T.))
nLocal		:= If(fwGetProfString(cSession,"LOCAL","SERVER",.T.)=="SERVER",1,2 )
nPrintType	:= aScan(aDevice,{|x| x == cDevice })     

oSetup		:= FWPrintSetup():New (nFlags,cRelName)

oSetup:SetPropert(PD_PAPERSIZE		, 2)
oSetup:SetPropert(PD_PRINTTYPE   	, nPrintType)
oSetup:SetPropert(PD_ORIENTATION 	, nOrient)
oSetup:SetPropert(PD_DESTINATION 	, nLocal)
oSetup:SetPropert(PD_MARGIN			, {0,0,0,0})

oSetup:SetUserParms({|| Pergunte(cPerg,.T.)})

oPrinter	:= FWMSPrinter():New(cFilePrint, nPrintType, lAdjust, /*cPathDest*/, .T.,,oSetup)

If oSetup:Activate() == PD_OK

	oPrinter:lServer := oSetup:GetProperty(PD_DESTINATION) == AMB_SERVER	
	oPrinter:SetDevice(oSetup:GetProperty(PD_PRINTTYPE))
	oPrinter:SetPortrait()
	oPrinter:SetPaperSize(oSetup:GetProperty(PD_PAPERSIZE))
	oPrinter:SetCopies(Val(oSetup:cQtdCopia))
			
	If oSetup:GetProperty(PD_PRINTTYPE) == IMP_SPOOL
	
		oPrinter:nDevice		:= IMP_SPOOL
		oPrinter:cPrinter		:= oSetup:aOptions[PD_VALUETYPE]
	
	Else 
	
		oPrinter:nDevice		:= IMP_PDF
		oPrinter:cPathPDF		:= oSetup:aOptions[PD_VALUETYPE]
		oPrinter:SetViewPDF(.T.)
	
	Endif
			
	//-----------------------------------
	//-- Processa os dados para Impressão
	//-----------------------------------
	RptStatus({|lEnd| CursorWait(),PrintDef(lEnd,oPrinter),CursorArrow() },"Imprimindo Comprovante...") 

	If lExistCPG
		oPrinter:Preview()
	Else
		Aviso("COMPROVANTE","Nenhum comprovante de pagamento a ser impresso!",{"OK"},1)
	EndIf
	
Else
	oPrinter:Cancel()
EndIf

Return Nil


//-------------------------------------------------------------
/*/{Protheus.doc} ProcDef
Processa os dados e chama a impressão do comprovante de
pagamento.

@author Allan da Silva Faria
@since 11/07/2016
@version 1.0
/*/
//-------------------------------------------------------------
Static Function ProcDef()

Local cArqTmp := GetNextAlias()
Local nTam_cp := TamSX3("E5_VALOR")[1]
Local nDes_cp := TamSX3("E5_VALOR")[2]

If Select(cArqTmp)>0
	dbSelectArea(cArqTmp)
	(cArqTmp)->(dbCloseArea())
EndIf

//------------------------------------------
//-- Filtra e Monta Arquivo de trabalho
//------------------------------------------
BeginSQL Alias cArqTmp

	column E2_VLCRUZ	as Numeric(nTam_cp,nDes_cp)
	column E5_VALOR 	as Numeric(nTam_cp,nDes_cp)
	column E5_VLJUROS	as Numeric(nTam_cp,nDes_cp)
	column E5_VLMULTA	as Numeric(nTam_cp,nDes_cp)	 
	column E5_VLOCRRE	as Numeric(nTam_cp,nDes_cp)
	column E5_VLDESCO	as Numeric(nTam_cp,nDes_cp)

	SELECT 
	  SE2.E2_FILIAL   AS FILIAL,
	  SE2.E2_FORNECE  AS FORNECEDOR,
	  SE2.E2_LOJA     AS LOJA,
	  SE2.E2_PREFIXO  AS PREFIXO,
	  SE2.E2_NUM      AS TITULO,
	  SE2.E2_PARCELA  AS PARCELA,
	  SE2.E2_VENCTO   AS VENCTO,
	  SE2.E2_IDCNAB   AS IDCNAB,
	  SE2.E2_CODBAR   AS CODBARRAS,
	  SE2.E2_VLCRUZ   AS VALOR,
	  SE5.E5_DATA     AS DATAPAGO,
	  SE5.E5_BANCO    AS BANCO,
	  SE5.E5_AGENCIA  AS AGENCIA,
	  SE5.E5_CONTA    AS CONTA,
	  SE5.E5_VALOR    AS VALORPAGO,
	  SE5.E5_VLJUROS  AS JURO,
	  SE5.E5_VLMULTA  AS MULTA,
	  SE5.E5_VLCORRE  AS CORRECAO,
	  SE5.E5_VLDESCO  AS DESCONTO,
	  SE5.E5_XAUTENT  AS AUTENTICACAO,
	  SE5.E5_XBCOPAG  AS BCOBENEF,
	  SE5.E5_XAGEPAG  AS AGEBENEF,
	  SE5.E5_XCTAPAG  AS CTABENEF,
	  SEA.EA_MODELO   AS MODELO,
	  SEA.EA_TIPOPAG  AS TIPOPAG
	FROM %table:SE2% SE2
	INNER JOIN %table:SE5% SE5
	 ON (SE5.E5_FILIAL = SE2.E2_FILIAL AND SE5.E5_CLIFOR = SE2.E2_FORNECE AND SE5.E5_LOJA = SE2.E2_LOJA 
	    AND SE5.E5_PREFIXO = SE2.E2_PREFIXO AND SE5.E5_NUMERO = SE2.E2_NUM AND SE5.E5_PARCELA = SE2.E2_PARCELA AND SE5.E5_TIPO = SE2.E2_TIPO)
	INNER JOIN %table:SEA% SEA
	  ON (SE2.E2_FILIAL = SEA.EA_FILIAL AND SE2.E2_FORNECE = SEA.EA_FORNECE AND SE2.E2_PREFIXO = SEA.EA_PREFIXO AND SE2.E2_NUM = SEA.EA_NUM 
	      AND SE2.E2_PARCELA = SEA.EA_PARCELA AND SE2.E2_NUMBOR = SEA.EA_NUMBOR)
	WHERE SE2.%notDel%
	  AND SE5.%notDel%
	  AND SEA.%notDel%
	  AND SE2.E2_FILIAL = %xFilial:SE2%
	  AND SE2.E2_NUMBOR = %exp:mv_par01% 
	  AND SE2.E2_SALDO = 0
	  AND SE5.E5_XAUTENT <> ' '
	  //AND SE5.E5_TIPODOC = 'VL'
	  AND SE5.E5_SITUACA = ' '
	  AND SEA.EA_CART = 'P';

EndSQL

dbSelectArea(cArqTmp)
(cArqTmp)->(dbGoTop())

SetRegua((cArqTmp)->(LastRec()))

Return(cArqTmp)


//-------------------------------------------------------------
/*/{Protheus.doc} PrintDef
Imprime o comprovante de pagamento 

@author Allan da Silva Faria
@since 12/07/2016
@version 1.0
@param lEnd		, Logico, controla se o usuário finalizou a impressão
@param oPrinter	, objeto, objeto de impressão
/*/
//-------------------------------------------------------------
Static Function PrintDef(lEnd,oPrinter)

Local aArea	  := SaveArea1({"SA2","SA6"})
Local cArqTmp := ""
Local cDescComp := ""

Private nMargDir:= 15					//-- Margem direita
Private nMargEsq:= 20					//-- Margem Esquerda
Private nCol1Dir:= 498-nMargDir   		
Private nCol2Dir:= 540-nMargDir
Private nMaxLin	:= 685					//-- Numero máximo de linhas
Private nMaxCol	:= 600					//-- Numero máximo de colunas

Private oFontA1	:= TFont():New('Arial',,7,,.T.)
Private oFontA2	:= TFont():New('Arial',,9,,.T.)
Private oFontA3	:= TFont():New('Arial',,12,,.T.)
Private oFontA4	:= TFont():New('Arial',,10,,.T.)
Private oFontA5	:= TFont():New('Arial',,9,,.F.)
private oFontA6	:= TFont():New('Arial',,16,,.T.)
Private li		:= 10

Private nTotPag	:= 0					//-- Total pago
Private nQtdPag	:= 0					//-- Total de títulos pagos 

//------------------------------------------
//-- Processe os dados que serão impressos
//------------------------------------------
cArqTmp := ProcDef()

dbSelectArea("SA6")
SA6->(dbSetOrder(1))

dbSelectArea("SA2")
SA2->(dbSetOrder(1))

//------------------------------------------
//-- Loop Impressão de uma comprovante 
//-- para cada pagamento
//------------------------------------------
Do While ((cArqTmp)->(!EOF()) .AND. .Not. lEnd)
	
	//----------------------------
	//-- Posiciona Banco 
	//----------------------------
	SA6->(dbSeek(FWxFilial("SA6") + (cArqTmp)->(BANCO + AGENCIA + CONTA)))

	//----------------------------
	//-- Posiciona Fornecedor 
	//----------------------------	
	SA2->(dbSeek(FWxFilial("SA2") + (cArqTmp)->(FORNECEDOR + LOJA)))

	If li > nMaxLin .OR. li == 10
	
		If li > 10
			RodDef(oPrinter,.F.)
		EndIf  
				
		oPrinter:StartPage()
	
		//----------------------------------------------------------
		//-- Impressão do Cabelhado Padrão da FIEMT
		//----------------------------------------------------------
		oPrinter:Box(li+5, nMargDir, li+50, nMargDir+75)
		oPrinter:SayBitmap(li+6, nMargDir+1, "lgrl01.bmp", 70, 40 )
		
		oPrinter:Box(li+5, nMargDir+75, li+50, nCol1Dir-5)
		
		oPrinter:SayAlign(li+08, nMargDir+078, SA6->A6_NOME, oFontA3, nMaxCol-nMargEsq, 100, 2, 0)	
		oPrinter:SayAlign(li+20, nMargDir+078, SubStr(FWFilRazSocial(),1,80), oFontA3, nMaxCol-nMargEsq, 100, 2, 0)
		oPrinter:SayAlign(li+035, nMargDir+115, "Comprovante De Pagamento - Borderô: " + mv_par01 + "  Ag: " + (cArqTmp)->AGENCIA + "  C/C: " + (cArqTmp)->CONTA , oFontA3, nMaxCol-nMargEsq, 200, 2, 0)
		
		oPrinter:Box(li+5, nCol1Dir-5, li+50, nMaxCol-nMargEsq)
		oPrinter:SayAlign(li+10, nCol1Dir, "Filial ............: "	, oFontA1, 200, 200, , 0)
		oPrinter:SayAlign(li+20, nCol1Dir, "Dt. Emissão : "			, oFontA1, 200, 200, , 0)
		oPrinter:SayAlign(li+30, nCol1Dir, "Emissor ......: "		, oFontA1, 200, 200, , 0)
		oPrinter:SayAlign(li+40, nCol1Dir, "Folha ...........: "	, oFontA1, 200, 200, , 0)
		
		oPrinter:SayAlign(li+10, nCol2Dir, cFilant						, oFontA1, 200, 200, , 0)
		oPrinter:SayAlign(li+20, nCol2Dir, DToC( dDataBase )			, oFontA1, 200, 200, , 0)
		oPrinter:SayAlign(li+30, nCol2Dir, UsrRetName( RetCodUsr() )	, oFontA1, 200, 200, , 0)
		oPrinter:SayAlign(li+40, nCol2Dir, AllTrim(STR(++nPag))			, oFontA1, 200, 200, , 0)
		
		oPrinter:Line(li+50, nMargDir, li+50, nMaxCol-nMargEsq, , "-8")
			
		//----------------------------------------------------------
		//-- Descrição do Comprovante de Pagamento
		//----------------------------------------------------------
		cDescComp := FWGetSX5("59",PADR((cArqTmp)->TIPOPAG,Len(SX5->X5_CHAVE)))[1,4] + " - " + FWGetSX5("58",PADR((cArqTmp)->MODELO,Len(SX5->X5_CHAVE)))[1,4]
		oPrinter:SayAlign(li+054, nMargDir+2	, "Comprovante de " + cDescComp, oFontA4, nMaxCol-nMargEsq, 200, 2, 0)
		oPrinter:SayAlign(li+065, nMargDir+2	, "Data Pagamento : " + DTOC(SToD((cArqTmp)->DATAPAGO)), oFontA4, nMaxCol-nMargEsq, 200, 2, 0)

		oPrinter:Line(li+80, nMargDir, li+80, nMaxCol-nMargEsq, , "-8")
				
		//----------------------------------------------------------
		//-- Header 
		//----------------------------------------------------------
		oPrinter:SayAlign(li+082, nMargDir+4	, "CPF/CNPJ"		, oFontA2, 200, 200, , 0)
		oPrinter:SayAlign(li+082, nMargDir+75	, "Fornecedor "		, oFontA2, 200, 200, , 0)
		oPrinter:SayAlign(li+082, nMargDir+200	, "Bco.Agen.C/C"	, oFontA2, 200, 200, , 0)
		oPrinter:SayAlign(li+082, nMargDir+285	, "Data "			, oFontA2, 200, 200, , 0)
		oPrinter:SayAlign(li+082, nMargDir+340	, "Valor "			, oFontA2, 200, 200, , 0)
		oPrinter:SayAlign(li+082, nMargDir+390	, "Nr.Doc Crêdito"	, oFontA2, 200, 200, , 0)	
		oPrinter:SayAlign(li+082, nMargDir+460	, "Nr. Autenticação", oFontA2, 200, 200, , 0)
		
		oPrinter:Line(li+95, nMargDir, li+95, nMaxCol-nMargEsq, , "-8")
				
	EndIf
	
	li += 15

	//----------------------------------------------------------
	//-- Imprime títulos pagos
	//----------------------------------------------------------
	oPrinter:SayAlign(li+082, nMargDir+4	, IIF(Len(Alltrim(SA2->A2_CGC))==11,Transform(SA2->A2_CGC,"@R 999.999.999-99"),Transform(SA2->A2_CGC,"@R 99.999.999/9999-99")), oFontA5 , 200, 200, , 0)
	oPrinter:SayAlign(li+082, nMargDir+75	, SubStr(SA2->A2_NOME,1,25)			, oFontA5, 200, 200, , 0)
	oPrinter:SayAlign(li+082, nMargDir+200	, AllTrim((cArqTmp)->BCOBENEF)+"."+AllTrim((cArqTmp)->AGEBENEF)+"."+AllTrim((cArqTmp)->CTABENEF)	, oFontA5, 200, 200, , 0)
		
	oPrinter:SayAlign(li+082, nMargDir+285	, DTOC(SToD((cArqTmp)->DATAPAGO)), oFontA5, 200, 200, , 0)
	oPrinter:SayAlign(li+082, nMargDir+330	, Transform((cArqTmp)->VALOR,X3Picture("E1_VALOR")), oFontA5, 100, 200, , 0)
	oPrinter:SayAlign(li+082, nMargDir+390	, (cArqTmp)->IDCNAB			, oFontA5, 200, 200, , 0)	
	oPrinter:SayAlign(li+082, nMargDir+460	, (cArqTmp)->AUTENTICACAO	, oFontA5, 200, 200, , 0)
	
	nTotPag += (cArqTmp)->VALOR	
	nQtdPag ++

	lExistCPG:= .T.
	IncRegua()

	(cArqTmp)->(dbSkip())	
EndDo

//-------------------------------
//-- Imprime rodape total final
//-------------------------------
RodDef(oPrinter,.T.)

If Select(cArqTmp)>0
	dbSelectArea(cArqTmp)
	(cArqTmp)->(dbCloseArea())
EndIf

RestArea1(aArea)
Return Nil


//-------------------------------------------------------------
/*/{Protheus.doc} RodDef
Imprime rodapé

@author Allan da Silva Faria
@since 12/07/2016
@version 1.0
@param oPrinter	, objeto, Objeto de impressão
@param lTotFin	, lógico, Imprimet total final ou total parcial
/*/
//-------------------------------------------------------------
Static Function RodDef(oPrinter,lTotFin)

Local cDescTotal := IIF(lTotFin,"Total Final","Total Parcial")

	li := nMaxLin
	//--------------------------------------------------
	//-- Total, quantidade de títulos e valor pago 
	//--------------------------------------------------
	oPrinter:SayAlign(li+40, nMargDir+4		, cDescTotal	, oFontA5, 200, 200, , 0)	
	oPrinter:SayAlign(li+40, nMargDir+330	, Str(nQtdPag)	, oFontA5, 200, 200, , 0)
	oPrinter:SayAlign(li+40, nMargDir+460	, Transform(nTotPag,X3Picture("E1_VALOR"))	, oFontA5, 200, 200, , 0)
	
	oPrinter:Line(li+50, nMargDir, li+50, nMaxCol-nMargEsq, , "-8")
	
	oPrinter:EndPage()
	
	li := 10
	
Return Nil


//-------------------------------------------------------------
/*/{Protheus.doc} PergDef
Valida se pergunta existe na SX1, caso não existe
cadastra as perguntas.

@author Allan da Silva Faria
@since 06/07/2016
@version 1.0
@param cPerg, character, Nome da Pergunda 
/*/
//--------------------------------------------------------------
Static Function PergDef(cPerg)

Local aHelpPor := {}

cPerg := PADR(cPerg,Len(SX1->X1_GRUPO))

//---------------------------------------
//-- Help
//---------------------------------------
aAdd(aHelpPor,SepS2A("Informar o borderô que deseja imprimir o comprovante de pagamento."))

//---------------------------------------
//-- Cadastra perguntas
//---------------------------------------
u_SFPUTSX1(cPerg,"01","Borderô?" 	,"","","mv_ch1","C",TamSX3("E2_NUMBOR")[1]	,00,00,"G","","  "	,"","","mv_par01",,,,,,,,,,,,,,,,,aHelpPor[01],,,)

Return Nil


//------------------------------------------------------
/*/{Protheus.doc} SepS2A
Transforma help de pergunta de string para array

@author Edimar Tinti
@since 25/04/2016
@version 1.0
@param cStr, character, help em string
@return Array, Help da pergunta em array
/*/
//------------------------------------------------------
Static Function SepS2A(cStr)

Local aRet	:= StrToArray(cStr," ")
Local nMax	:= 39
Local nCnt	:= 0
Local nLen	:= 0

cStr := ""
For nCnt:=1 To Len(aRet)
	If Len(cStr) + Len(aRet[nCnt]) > nMax + nLen
 		cStr += CHR(13)
 		nLen := Len(cStr)
 	EndIf
 	cStr += AllTrim(aRet[nCnt])+" "
Next nCnt
aRet:= StrToArray(cStr,CHR(13))
Return(aRet)

