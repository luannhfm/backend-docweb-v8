#include "totvs.ch"
#include "restful.ch"

//-------------------------------------------------------------------
/*/{Protheus.doc} Indicadores Vênus
Declaracao do GET de Indicadores Vênus
@author Walmir Junior
@since 29/01/2021
@version 1.0
/*/
//-------------------------------------------------------------------
WSRESTFUL indicadoresvenusyear DESCRIPTION 'endpoint Indicadores - VENUS ' FORMAT "application/json,text/html"
    WSDATA Page              AS INTEGER OPTIONAL
    WSDATA aQueryString      AS ARRAY    OPTIONAL
    
    WSMETHOD GET DESCRIPTION "Sincronização de dados via GET";
        	WsSyntax "/GET/{method}"
	    
END WSRESTFUL

//-------------------------------------------------------------------
/*/{Protheus.doc} GET Indicadores Vênus
Metodo GET
@author Walmir Junior
@since 29/01/2021
@version 1.0
/*/
//-------------------------------------------------------------------
WSMETHOD GET WSSERVICE indicadoresvenusyear
Local _lRet 	:= .T.
Local _cAlias	:= GetNextAlias()
Local _cQuery	:= ""

If Select(_cAlias) > 0
	(_cAlias)->(DbCloseArea())
EndIf
	
_cQuery := " SELECT  " + CRLF
_cQuery += " SUBSTR(ZAR_DTHAPR,1,6) As AnoMes, COUNT(*) As Numero"
_cQuery += " FROM " + RetSqlName("ZAR") + " WHERE D_E_L_E_T_ = ' '  AND ZAR_SITUAC = 'A' "
_cQuery += " GROUP BY SUBSTR(ZAR_DTHAPR,1,6) "
 
_cQuery := ChangeQuery(_cQuery)

dbUseArea(.T., "TOPCONN", TcGenQry(,,_cQuery), _cAlias, .F., .T.)

DbSelectArea(_cALias)
(_cALias)->(DbGoTop())

::SetContentType( 'application/json' )

If !(_cALias)->(Eof())

	cJSONRet := '{ "relacaoMes" : ['
		
	while !(_cALias)->(Eof())
		cJSONRet +=	' {	"AnoMes":"' + AllTrim((_cALias)->AnoMes)	+ '"'
		cJSONRet +=	'	,"numero_filiais" :"' + AllTrim(Str((_cALias)->Numero))	+ '" }'
				
		(_cALias)->(DBSkip())

		cJSONRet +=	Iif(!(_cALias)->(Eof()),',','')
	endDo
		
	cJSONRet += '] }'

	::SetResponse(cJSONRet)
Else
	//Ou retorna o erro encontrado durante o processamento
	SetRestFault("oEst:GetCode()","oEst:GetMessage()")
	lRet := .F.
EndIf

(_cALias)->(dbClosearea())

Return _lRet
