#Include 	"Protheus.ch"
#Include	"Rwmake.ch"
#Include	"Totvs.ch"
#Include	"TopConn.CH"

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<SN0631X>                                                   |
|301 - Relatorio de Cadastro de Cartao Pre Pago      					   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
User Function SN0631X()
Local oReport
Private _cPerg 		:= "SN0631X" 		//Nome da pergunta cadastrado no SX1
Private _cAliasZP0 	:= GetNextAlias() 	// A variavel recebe um nome de uma tabela temporária sequencial
Private _aSM0 		:= {}
_aSM0 := GETAREA()
AjustaSX1(_cPerg)	//Valida as perguntas, atualizando sempre conforme a do código
If Pergunte(_cPerg,.T.) = .F.
	Return()
EndIf
oReport := ReportDef()
oReport:PrintDialog()
RESTAREA(_aSM0)		//Restaura a area salva
Return


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ReportDef>                                                 |
|Relatorio de Cadastro de Cartao Pre Pago.    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ReportDef()
Local oReport
Local cReport	:= "SN0631X"
Local cTitulo	:= "301 - Relatorio de Cadastro de Cartao Pré Pago"
Local cDesc		:= cTitulo
//Verifica se existe a pergunta (.F. -> não chama a tela de parametros)
Pergunte(_cPerg,.F.)
oReport := TReport():New(cReport,cTitulo ,_cPerg,{|oReport| ReportPrint(oReport)},cDesc)
oAlunos:=TRSection():New(oReport,"Alunos")
//New(oParent,cName,cAlias,cTitle,cPicture,nSize,lPixel,bBlock,cAlign,lLineBreak,cHeaderAlign,lCellBreak,nColSpace,lAutoSize,nClrBack,nClrFore,lBold)
TRCell():New(oAlunos,"Matricula"	,,"Matricula"					)
TRCell():New(oAlunos,"Nome"			,,"Nome"				,, 35	)
TRCell():New(oAlunos,"CPF"			,,"CPF"					,, 15	)
TRCell():New(oAlunos,"NrRefer"		,,"Nr Refer"			,,TamSX3("ZP7_XNRREF")[1]	)
TRCell():New(oAlunos,"NrPlast"		,,"Nr Plast"			,,TamSX3("ZP7_XCARTA")[1]	)
TRCell():New(oAlunos,"Data"			,,"Dt Solic."	      			)
TRCell():New(oAlunos,"Evento"		,,"Evento"	      		,,TamSX3("ZP7_XEVENT")[1]	)
TRCell():New(oAlunos,"DescrCurso"	,,"Descr Curso"			,,50	) 
TRCell():New(oAlunos,"Situacao"		,,"Situação"			,,15	) 
//New(oCell,cName,cFunction,oBreak,cTitle,cPicture,uFormula,lEndSection,lEndReport,lEndPage,oParent,bCondition,lDisable,bCanPrint)
TRFunction():New(oAlunos:Cell("Nome"),nil,"COUNT",,"Total de Matriculas","@E 999999",,.T.,.F.,.F.,oAlunos)
Return(oReport)

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ReportPrint>                                               |
|Relatorio de Cadastro de Cartao Beneficio.    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ReportPrint(oReport)
Local _oAlunos 		:= oReport:Section(1)
Local _nQReg		:= 0
Local _cMask 		:= "@E 999,999,999.99"
Pergunte(_cPerg,.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao   - Alunos     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//_oFaturas:Cell("Emissao" 	):SetBlock({|| Substr(fQrySE1->E1_EMISSAO,7,2) + "/" + Substr(fQrySE1->E1_EMISSAO,5,2) + "/" + Substr(fQrySE1->E1_EMISSAO,1,4) })
_oAlunos:Cell("Matricula"	):SetBlock({|| (_cAliasZP0)->ZP7_XMATRI 															})
_oAlunos:Cell("Nome"		):SetBlock({|| (_cAliasZP0)->ZP7_XNOME  															}) 
_oAlunos:Cell("CPF"			):SetBlock({|| Transform((_cAliasZP0)->ZP7_XCPF, "@R 999.999.999-99")  							})  
_oAlunos:Cell("NrRefer"		):SetBlock({|| (_cAliasZP0)->ZP7_XNRREF  															})
_oAlunos:Cell("NrPlast"		):SetBlock({|| (_cAliasZP0)->ZP7_XCARTA  															})
_oAlunos:Cell("Data"		):SetBlock({|| (_cAliasZP0)->ZP0_XDTCAR 															})
_oAlunos:Cell("Evento"		):SetBlock({|| (_cAliasZP0)->ZP7_XEVENT															})
_oAlunos:Cell("DescrCurso"	):SetBlock({|| Substr((_cAliasZP0)->ZP7_XDESCS,1,50)												})
_oAlunos:Cell("Situacao"	):SetBlock({|| Substr((_cAliasZP0)->ZP3XSTATU,1,15)												})
//--
_oAlunos:Cell("Matricula"	):SetAlign(3)
//--
MsAguarde({|| CursorWait(), fQryZP7(), CursorArrow()},"Selecionando Registros","Buscando Informações das Matriculas...")
MsAguarde({|| CursorWait(), (_cAliasZP0)->(DbEval({|| _nQReg++})), CursorArrow() }, "Registros", "Verificando a Quantidade de Registros...")
oReport:SetMeter(_nQReg)
(_cAliasZP0)->(dbGoTop())
_oAlunos:Init()
While (_cAliasZP0)->(!EOF())
	// Sai caso seja pressionado botao cancelar
	If oReport:Cancel()
		Exit
	EndIf
	_oAlunos:PrintLine()
	(_cAliasZP0)->(dbSkip())
	oReport:IncMeter() // Incrementa a regua de progressão
EndDo
_oAlunos:Finish()
(_cAliasZP0)->(dbCloseArea())
Return


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fQryZP7>                                                   |
|Monta query que busca as matriculas. 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function fQryZP7()
Local _lReturn 		:= .t.	
Local _aArea		:= GetArea() 
Local _ChrBreak		:= Chr(13)+Chr(10)   
Local _cQuery		:= ""
Local _cArqTEMP		:= ""
Local _aColsTMP		:= {}  
Local _lEmitido		:= .T.   
Local _cIndTmp 		:= CriaTrab(,.F.)     
Local _cStatus		:= "" 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//|  Defini a estura da tabela temporaria das Matriculas             |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Aadd( _aColsTMP, {"ZP7_XMATRI"	,"C"  ,TamSX3("ZP7_XMATRI")[1] 	,TamSX3("ZP7_XMATRI")[2] 	} )
Aadd( _aColsTMP, {"ZP7_XNOME"	,"C"  ,TamSX3("ZP7_XNOME")[1] 	,TamSX3("ZP7_XNOME")[2] 	} )
Aadd( _aColsTMP, {"ZP7_XCPF"	,"C"  ,TamSX3("ZP7_XCPF")[1] 	,TamSX3("ZP7_XCPF")[2] 		} )
Aadd( _aColsTMP, {"ZP7_XNRREF"	,"C"  ,TamSX3("ZP7_XNRREF")[1] 	,TamSX3("ZP7_XNRREF")[2] 	} )
Aadd( _aColsTMP, {"ZP7_XCARTA"	,"C"  ,TamSX3("ZP7_XCARTA")[1] 	,TamSX3("ZP7_XCARTA")[2] 	} )
Aadd( _aColsTMP, {"ZP7_XPERIO"	,"C"  ,TamSX3("ZP7_XPERIO")[1] 	,TamSX3("ZP7_XPERIO")[2] 	} )
Aadd( _aColsTMP, {"ZP4_XDESCR"	,"C"  ,030 						,0							} )
Aadd( _aColsTMP, {"ZP7_XEVENT"	,"C"  ,TamSX3("ZP7_XEVENT")[1] 	,TamSX3("ZP7_XEVENT")[2] 	} )
Aadd( _aColsTMP, {"ZP7_XDESCS"	,"C"  ,TamSX3("ZP7_XDESCS")[1] 	,TamSX3("ZP7_XDESCS")[2] 	} )
Aadd( _aColsTMP, {"ZP7_XDESEV"	,"C"  ,TamSX3("ZP7_XDESEV")[1] 	,TamSX3("ZP7_XDESEV")[2] 	} )
Aadd( _aColsTMP, {"ZP0_XDTCAR"	,"D"  ,TamSX3("ZP0_XDTCAR")[1] 	,TamSX3("ZP0_XDTCAR")[2] 	} ) 
Aadd( _aColsTMP, {"ZP3XSTATU"	,"C"  ,15						,0							} ) 
If Select(_cAliasZP0) > 0
	DbSelectArea(_cAliasZP0)
	_cAliasZP0->(DbCloseArea())
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//|  Cria e abre arquivo trabalho [TRB_REC] que sera a referencia    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_cArqTEMP := CriaTrab(_aColsTMP,.t.)
dbUseArea(.t.,__LocalDriver,_cArqTEMP,_cAliasZP0,.f.,.f.) 
//-- Ordena Por Descricao do Curso + Nome do Aluno 
IndRegua(_cAliasZP0,_cIndTmp,"ZP7_XDESCS+ZP7_XNOME")
//-- 
DbSelectArea(_cAliasZP0)
(_cAliasZP0)->(dbSetOrder(1))
//-- Converte o parametro de Range
_cQuery	:= ""  
_cQuery	+= " Select distinct ZP7_XMATRI From "+RetSQLName("ZP7")+" "+Chr(13)+Chr(10)  
_cQuery	+= " where D_E_L_E_T_ <> '*' "+Chr(13)+Chr(10)  
_cQuery	+= " and ZP7_FILIAL = '"+FwxFilial("ZP7")+"' "+Chr(13)+Chr(10)  
_cQuery	+= " and ZP7_XMATRI BetWeen '"+MV_PAR01+"' and '"+MV_PAR02+"' "+Chr(13)+Chr(10)  
_cQuery	+= " and ZP7_XPERIO = '"+MV_PAR03+"' "+Chr(13)+Chr(10)  
//-- Trata o Range de Eventos 
If !Empty(Alltrim(MV_PAR04))
	_cQuery += " and ZP7_XEVENT in "+FormatIn(Alltrim(MV_PAR04),";")+" "+_ChrBreak    
Endif	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Grava o Resultado da Query para consulta                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
If Select("TMPZP7")>0
	TMPZP7->(DbCloseArea())
Endif  
DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),"TMPZP7",.t.,.t.)      
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Seleciona a Tabela temporaria e Inicia Loop para Tratar os Dados |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TMPZP7")
TMPZP7->(dbGoTop())
If TMPZP7->(!Eof()) .and. TMPZP7->(!Bof())
	//-- Loop na Consulta para Identificar as Matriculas 	
	Do While TMPZP7->(!Eof())	
		//-- Pega a Primeira Matricula do Periodo Informado 
		dbSelectArea("ZP7")
	  	ZP7->(dbSetOrder(8))		//-- Periodo + Matricula 
		ZP7->(dbSeek(FwxFilial("ZP7")+MV_PAR03+TMPZP7->ZP7_XMATRI))		
		//-- Localiza a Matricula em ALUNOS 
		dbSelectArea("ZP0")
	  	ZP0->(dbSetOrder(1))		//-- CPF
		ZP0->(dbSeek(FwxFilial("ZP0")+ZP7->ZP7_XCPF))		
		//-- 
		//-- Trata Situacao da matricula
		_lEmitido := Iif(Empty(Alltrim(ZP7->ZP7_XNRREF)),.f.,.t.)
		If MV_PAR05 == 1
			If !_lEmitido
				TMPZP7->(dbSkip())	
                Loop
			Endif
		ElseIf MV_PAR05 == 2
			If _lEmitido
				TMPZP7->(dbSkip())	
                Loop
			Endif
		Endif   
		_cStatus  := u_fGetSat(ZP7->ZP7_XNRREF)
		(_cAliasZP0)->(RecLock(_cAliasZP0,.t.))
		Replace (_cAliasZP0)->ZP7_XMATRI With ZP7->ZP7_XMATRI
		Replace (_cAliasZP0)->ZP7_XNOME  With ZP7->ZP7_XNOME   
		Replace (_cAliasZP0)->ZP7_XCPF   With ZP7->ZP7_XCPF
		Replace (_cAliasZP0)->ZP7_XNRREF With ZP7->ZP7_XNRREF
		Replace (_cAliasZP0)->ZP7_XCARTA With ZP7->ZP7_XCARTA
		Replace (_cAliasZP0)->ZP7_XPERIO With ZP7->ZP7_XPERIO
		Replace (_cAliasZP0)->ZP4_XDESCR With Substr(Posicione("ZP4",1,FwxFilial("ZP4")+MV_PAR03,"ZP4_XDESCR"),1,30)
		Replace (_cAliasZP0)->ZP7_XEVENT With ZP7->ZP7_XEVENT   
		Replace (_cAliasZP0)->ZP7_XDESCS With ZP7->ZP7_XDESCS
		Replace (_cAliasZP0)->ZP7_XDESEV With ZP7->ZP7_XDESEV
		Replace (_cAliasZP0)->ZP0_XDTCAR With ZP0->ZP0_XDTCAR 
		Replace (_cAliasZP0)->ZP3XSTATU	 With _cStatus
		(_cAliasZP0)->(MsUnLock())
		(_cAliasZP0)->(dbCommit()) 
		TMPZP7->(dbSkip())	
	Enddo
Endif
TMPZP7->(DbCloseArea())
RestArea(_aArea)
Return .t.


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<AjustaSX1>                                                 |
|Cria as perguntas.					 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function AjustaSX1(_cPerg)
Local _aHelp01 := {"Informe o Codigo da Matricula de/ate ?"			}
Local _aHelp02 := {"Perido dos Eventos ?"							}
Local _aHelp03 := {"Eventos: Range ? ('IN' deve preceder o Range)"	}
Local _aHelp04 := {"Situação: EMITIDOS/NÃO EMITIDOS/TODOS"			}
DbSelectArea("SX1")
DbSetOrder(1)
//--------------------------------------------------------------------
//PutSX1 - cGrupo, cOrdem, _cPergunt, cPerSpa, cPerEng, cVar, cTipo, nTamanho, nDecimal, nPresel, cGSC, cValid, cF3, cGrpSxg, cPyme, cVar01, cDef01, cDefSpa1, cDefEng1, cCnt01, cDef02, cDefSpa2, cDefEng2, cDef03, cDefSpa3, cDefEng3, cDef04, cDefSpa4, cDefEng4, cDef05, cDefSpa5, cDefEng5, aHelpPor, aHelpEng, aHelpSpa, cHelp
u_SFPUTSX1(_cPerg, "01", "Matricula de	 		?","","","mv_ch1","C",15,00,00,"G","" ,""   	,"","","mv_par01","","","","","","","","","","","","","","","","",_aHelp01,"","","")
u_SFPUTSX1(_cPerg, "02", "Matricula Ate 		?","","","mv_ch2","C",15,00,00,"G","" ,""   	,"","","mv_par02","","","","","","","","","","","","","","","","",_aHelp01,"","","")
u_SFPUTSX1(_cPerg, "03", "Periodo				?","","","mv_ch3","C",08,00,00,"G","" ,"ZP4REL","","","mv_par03","","","","","","","","","","","","","","","","",_aHelp02,"","","")
u_SFPUTSX1(_cPerg, "04", "Eventos				?","","","mv_ch4","C",60,00,00,"G","" ,""   	,"","","mv_par04","","","","","","","","","","","","","","","","",_aHelp03,"","","")
u_SFPUTSX1(_cPerg, "05", "Situacao				?","","","mv_ch5","C",10,00,00,"C","" ,""	 	,"","","mv_par05","EMITIDO","","","","NAO EMITIDO","","","AMBOS","","","","","","","","",_aHelp04,"","","")
Return(Nil)
