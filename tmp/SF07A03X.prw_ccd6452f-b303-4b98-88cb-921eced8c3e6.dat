#INCLUDE "TOTVS.CH"
#INCLUDE "TRYEXCEPTION.CH"

/*/{Protheus.doc} SF07A03X
    @description
    @type User Function
    @author Rafael Karczevski
    @since 12/08/2019
    @version 1.0
    /*/
User Function SF07A03X()

    Local cPerg := "SF07A03X"

    CriaSX1(cPerg)

	If Pergunte(cPerg)
        SF7A3XA(mv_par01)
	EndIf

Return

/*/{Protheus.doc} SF7A3XA
    @description
    @type Static Function
    @author Rafael Karczevski
    @since 12/08/2019
    @version 1.0
    /*/
Static Function SF7A3XA(p_cAlias)

    Local cArq := cGetFile("*.csv|*.csv","Texto (CSV)", 1, "C:\", .f., GETF_LOCALHARD, .f.)
    Local cLinha := ""
    Local lPrim := .t.
    Local lCont := .t.
    Local aCampos := {}
    Local aDados := {}
    Local oError
    Local bError := { |oError| MyErro(oError, "SF07A03X")}

    Private aErro := {}

    If p_cAlias == 1
        p_cAlias := "SQ3"
    Else
        p_cAlias := "SRJ"
    EndIf

    If !File(cArq)
        MsgStop("Não foi possivel localizar o arquivo!","[Fonte SF07A03X]")
        lCont := .f.
    EndIf

    If lCont

        FT_FUSE(cArq)
        FT_FGOTOP()

        While !FT_FEOF() .and. lCont

            cLinha := FT_FREADLN()
            If lPrim
                aCampos := Separa(cLinha,";",.t.)
                lPrim := .f.
                For nX := 1 to Len(aCampos) 
                    If !(SubStr(aCampos[nX],1,2) == SubStr(p_cAlias,2,2))
                        lCont := .f.
                        MsgStop("Arquivo invalido para esta operação!")
                        exit
                    EndIf
                Next nX
            Else
                Aadd(aDados,Separa(cLinha,";",.t.))
            EndIf

            FT_FSKIP()
        EndDo
    EndIf

    If lCont

        BEGIN TRANSACTION
            TRYEXCEPTION USING bError

                For nY := 1 to Len(aDados)
                    
                    RecLock(p_cAlias, .t.)
                        If p_cAlias == "SQ3"
                            SQ3->Q3_FILIAL := xFilial("SQ3")
                        Else
                            SRJ->RJ_FILIAL := xFilial("SRJ")
                        EndIf

                        For nX := 1 to Len(aCampos)
                        	If p_cAlias == "SQ3" .And. aCampos[nX] == "Q3_CARGO" .And. Len(aDados[nY][nX]) < TAMSX3("Q3_CARGO")[1]
                        		&(p_cAlias+"->"+aCampos[nX]) := StrZero(Val(aDados[nY][nX]), TAMSX3("Q3_CARGO")[1])
                        	ElseIf p_cAlias == "SRJ" .And. aCampos[nX] == "RJ_FUNCAO" .And. Len(aDados[nY][nX]) < TAMSX3("RJ_FUNCAO")[1]
                        		&(p_cAlias+"->"+aCampos[nX]) := StrZero(Val(aDados[nY][nX]), TAMSX3("RJ_FUNCAO")[1])
                    		ElseIf p_cAlias == "SRJ" .And. aCampos[nX] == "RJ_CARGO" .And. Len(aDados[nY][nX]) < TAMSX3("RJ_CARGO")[1]
                        		&(p_cAlias+"->"+aCampos[nX]) := StrZero(Val(aDados[nY][nX]), TAMSX3("RJ_CARGO")[1])
                        	Else
                        		&(p_cAlias+"->"+aCampos[nX]) := aDados[nY][nX]
                        	EndIf
                        Next nX
                    &(p_cAlias+"->")(MsUnlock())

                Next nY

            CATCHEXCEPTION USING oError
                DisarmTransaction()
            ENDEXCEPTION

        END TRANSACTION

        MsgInfo("Processamento Concluido!","[Fonte: SF07A03X]")
    EndIf

Return


/*/{Protheus.doc} CriaSX1
@description Funcaoo para criacao das perguntas (se nao existirem)

@author Rafael Karczevski
@since 09/05/2018
@version 1.0
/*/
Static Function CriaSX1(p_cPerg)

	Local aHelp	:= {}
	
	AAdd(aHelp, { {"Selecione o cadastro a ser importado"}, {""}, {""} })
	
	u_SFPutSx1( p_cPerg, "01","Cadastro a importar:", "", "", "mv_ch1", "N", 1, 0, 0, "C", "", "", "", "", "mv_par01","Cargo","Cargo","Cargo","","Função","Função","Função","","","","","","","","",""                       , aHelp[1,1], aHelp[1,2], aHelp[1,3], "")

Return

/*/{Protheus.doc} MyErro
@description Função para mostrar as informações de erro.

@author  Geanderson Silva
@since   26/06/2018
@version 1.0
/*/
Static Function MyErro( oError, p_ProcName )

	default p_ProcName := ProcName()

	MsgStop( oError:Description , "Erro (Função:"+FunName()+"->"+p_ProcName+",Linha:"+cValToChar(ProcLine())+")" )
	BREAK
	
Return( NIL )