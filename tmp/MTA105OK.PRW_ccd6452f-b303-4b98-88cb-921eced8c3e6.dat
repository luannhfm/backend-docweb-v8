#INCLUDE "rwmake.ch"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ MTA105OK º Autor ³ Leonardo Soncin    º Data ³  10/02/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Validacao da Inclusao de SA                                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function MTA105OK()
Local lRet   	:= .T.
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_CONTA"})
//Walmir Junior
Local _nPFilCt	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XFILCN9"})
Local _nPNumCt	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XNUMCN9"})
Local _nPClien	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XCLIENT"})
Local _nPCliLJ	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XCLILJ" })
Local _nPProd	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_PRODUTO"})
Local _nPFiCN9	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XFILCN9"})
Local _nPNuCN9	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XNUMCN9"})
Local _nPRvCN9	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_XREVCN9"})
Local _nPQtd	:= aScan(aHeader,{|x| AllTrim(x[2])=="CP_QUANT"})
Local _cProd	:= ""
Local _cValFi	:= GetMV("MV_XEVAFIL")
Local _cFil		:= SubStr(xFilial("SCP"),1,4)

Local aArea		:= GetArea()
Local cPrefix	:= ""
Local nX		:= 0

For nX := 1 to Len(aCols)
	
	If !(GdDeleted( nX, aHeader, aCols))
		
		dbSelectArea("CT1")
		dbSetOrder(1)
		dbSeek(xFilial("CT1")+aCols[nX][nPConta])
		cPrefix	:= CT1->CT1_PREFIX
		
		dbSelectArea("SZQ")
		dbSetOrder(1)
		
		If !dbSeek(xFilial("SZQ")+_c105CCusto+cPrefix)
		
			If !dbSeek(xFilial("SZQ")+_c105CCusto+Space(TamSX3("CT1_PREFIX")[1]))
		
				If .Not. l105Auto
		
					MsgStop("O Centro de custo "+Alltrim(_c105CCusto)+" e o prefixo "+Alltrim(cPrefix)+" não possuem grupo de aprovação cadastrado.","Atenção")
					lRet := .F.
					Exit
		
				Else
		
					ConOut("O Centro de custo "+Alltrim(_c105CCusto)+" e o prefixo "+Alltrim(cPrefix)+" não possuem grupo de aprovação cadastrado.")
					lRet := .F.
					Exit		
		
				EndIf
		
			EndIf
		
		EndIf
		
		If nX > 1
			
			dbSelectArea("CT1")
			dbSetOrder(1)
			dbSeek(xFilial("CT1")+aCols[1][nPConta]) // Prefixo da 1a Linha
		
			If CT1->CT1_PREFIX <> cPrefix
				
				If .Not. l105Auto
					
					MsgStop("Prefixo "+cPrefix+" diferente do prefixo do 1o. item da solicitação.")
					lRet := .F.
					Exit
					
				Else
				
					ConOut("Prefixo "+cPrefix+" diferente do prefixo do 1o. item da solicitação.")
					lRet := .F.
					Exit
				
				EndIf
				
			EndIf
		
		EndIf
	
		//Walmir Junior 09/03/2016 Validar informação do contrato para produtos imunização.
		//A validação deve-se aplicar apenas para a unidades do Sesi.
		_cProd := aCols[nX][_nPProd]
		If !Empty(_cFil) .And. _cFil $ _cValFi .And. !Empty(_cProd)
			DBSelectArea("SB1")
			DBSetOrder(1)
			If SB1->(DBSeek(xFilial("SB1")+_cProd))
				//Tipo Imunização do SESI
				If SB1->B1_TIPO == "IM"
						If Empty(aCols[nX][_nPNumCt]) .Or. Empty(aCols[nX][_nPFilCt])
							MsgStop("Produto '" +_cProd+ "', informe os campos do contrado, são obrigatórios";
							+" para produtos do tipo 'Imunização'! Utilize o recurso F3 no campo Fil Contr.","Atenção")			
							lRet := .F.
							Exit
						ElseIf Empty(aCols[nX][_nPClien])
							MsgStop("Produto '" + _cProd  + "', informe cliente do contrado, é obrigatório";
							+" para produtos do tipo 'Imunização'!","Atenção")			
							lRet := .F.
							Exit
						Else
							U_SF0212X(aCols[nX][_nPFiCN9]+aCols[nX][_nPNuCN9]+aCols[nX][_nPRvCN9],;
									 xFilial("SA1")+ aCols[nX][_nPClien]+ aCols[nX][_nPCliLJ], aCols[nX][_nPQtd])
						EndIf
						
				EndIf
			EndIf
		EndIf		
	EndIf

Next

RestArea(aArea)

Return (lRet)