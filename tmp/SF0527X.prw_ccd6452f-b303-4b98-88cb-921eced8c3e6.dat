#INCLUDE "PROTHEUS.CH"

/*/{Protheus.doc} SF0527X
//TODO Descrição auto-gerada.
@author luiz_
@since 18/09/2017
@version undefined
@example
(examples)
@see (links_or_references)
/*/

User Function SF0527X()

	Local cEstat := U_SFGN001A(ProcName(0), "SF0527X")
	Local cTitulo	:= "Gestao de Funcionarios"
	Local cQuery	:= "" 								//obrigatorio
	Local cAlias	:= "ZH1"							//obrigatorio
	Local cCpoChave	:= "ZH1_MATRIC" 					//obrigatorio
	Local cTitCampo	:= RetTitle(cCpoChave)		     	//obrigatorio
	Local cMascara	:= PesqPict(cAlias,cCpoChave)	    //obrigatorio
	Local nTamCpo	:= TamSx3(cCpoChave)[1]		
	Local cRetCpo	:= "M->ZH1_MATRIC"				    //obrigatorio
	Local nColuna	:= 1	
	Local cCodigo	:= ""                     		    //pego o conteudo e levo para minha consulta padrÃ£o		
 	Private bRet 	:= .F.

   	//Monto minha consulta, neste caso quero retornar apenas uma coluna, mas poderia inserir outros campos para compor outras colunas no grid, lembrando que nÃ£o posso utilizar um alias para o nome do campo, deixar o nome real.
   	//Posso fazer qualquer tipo de consulta, usando INNER, GROUPY BY, UNION's etc..., desde que mantenha o nome dos campos no SELECT.
   	
	cQuery := " SELECT RA_FILIAL,RA_MAT,RA_NOME FROM " + RetSQLName("SRA")
	cQuery += " WHERE  RA_XCLUBE   = 'S'   "
	cQuery += " AND    D_E_L_E_T_ != '*'   "  	
	
 	bRet := FiltroF3(cTitulo,cQuery,nTamCpo,cAlias,cCodigo,cCpoChave,cTitCampo,cMascara,cRetCpo,nColuna)
	
Return(bRet)

/*/{Protheus.doc} FiltroF3
//TODO Descrição auto-gerada.
@author luiz_
@since 18/09/2017
@version undefined
@example
(examples)
@see (links_or_references)
/*/

Static Function FiltroF3(cTitulo,cQuery,nTamCpo,cAlias,cCodigo,cCpoChave,cTitCampo,cMascara,cRetCpo,nColuna)
	
	Local cEstat := U_SFGN001A(ProcName(0), "SF0527X")
	Local cTabela
	Local nLista  
	Local cCampos 	  := ""
	Local bCampo	  := {}
	Local nCont		  := 0
	Local bTitulos	  := {}
	Local aCampos 	  := {}	 
	Local cCSSGet	  := "QLineEdit{ border: 1px solid gray;border-radius: 3px;background-color: #ffffff;selection-background-color: #3366cc;selection-color: #ffffff;padding-left:1px;}"
	Local cCSSButton  := "QPushButton{background-repeat: none; margin: 2px;background-color: #ffffff;border-style: outset;border-width: 2px;border: 1px solid #C0C0C0;border-radius: 5px;border-color: #C0C0C0;font: bold 12px Arial;padding: 6px;QPushButton:pressed {background-color: #ffffff;border-style: inset;}"
	Local cCSSButF3	  := "QPushButton {background-color: #ffffff;margin: 2px;border-style: outset;border-width: 2px;border: 1px solid #C0C0C0;border-radius: 3px; border-color: #C0C0C0;font: Normal 10px Arial;padding: 3px;} QPushButton:pressed {background-color: #e6e6f9;border-style: inset;}"

	Local cCodigo     := ""	
	Local nTamCpo     := 30
	Local _nColuna    := 1
	Local cTitCampo   := RetTitle(cCpoChave)
	Local cMascara    := PesqPict('"'+cAlias+'"',cCpoChave)
	
	Private _oCodigo
	Private _cCodigo 	
	Private _oLista	  := nil
	Private _oDlg 	  := nil
	Private _aDados   := {}
	Private _nColuna  := 0

	_nColuna	      := nColuna

	If Empty(cAlias) .OR. Empty(cCpoChave) .OR. Empty(cRetCpo) .OR. Empty(cQuery)
		MsgStop("Os parametro cQuery, cCpoChave, cRetCpo e cAlias sÃ£o obrigatÃ³rios!","Erro")
		Return
	Endif

	_cCodigo := Space(nTamCpo)
	_cCodigo := cCodigo

	cTabela:= CriaTrab(Nil,.F.)
	DbUseArea(.T.,"TOPCONN", TCGENQRY(,,cQuery),cTabela, .F., .T.)
     
	(cTabela)->(DbGoTop())
	If (cTabela)->(Eof())
		MsgStop("Não ha registros para serem exibidos!","AtenÃ§Ã£o")
		Return
	Endif
   
	Do While (cTabela)->(!Eof())
		/*Cria o array conforme a quantidade de campos existentes na consulta SQL*/
		cCampos	:= ""
		aCampos := {}
		For nX  := 1 TO FCount()
			bCampo := {|nX| Field(nX) }
			If ValType((cTabela)->&(EVAL(bCampo,nX)) ) <> "M" .OR. ValType((cTabela)->&(EVAL(bCampo,nX)) ) <> "U"
				If ValType((cTabela)->&(EVAL(bCampo,nX)) )=="C"
					cCampos += "'" + (cTabela)->&(EVAL(bCampo,nX)) + "',"
				ElseIf ValType((cTabela)->&(EVAL(bCampo,nX)) )=="D"
					cCampos +=  DTOC((cTabela)->&(EVAL(bCampo,nX))) + ","
				Else
					cCampos +=  (cTabela)->&(EVAL(bCampo,nX)) + ","
				EndIf					
				aadd(aCampos,{EVAL(bCampo,nX),Alltrim(RetTitle(EVAL(bCampo,nX))),"LEFT",30})
			Endif
		Next
     
     	If !Empty(cCampos) 
     		cCampos 	:= Substr(cCampos,1,len(cCampos)-1)
     		aAdd( _aDados,&("{"+cCampos+"}"))
     	Endif
     	
		(cTabela)->(DbSkip())     
	Enddo
   
	DbCloseArea(cTabela)
	
	If Len(_aDados) == 0
		MsgInfo("Nao ha¡ dados para exibir!","Aviso")
		Return
	Endif
   
	nLista := aScan(_aDados, {|x| alltrim(x[1]) == alltrim(_cCodigo)})
     
	iif(nLista = 0,nLista := 1,nLista)
     
	Define MsDialog _oDlg Title "Consulta Padrao" + IIF(!Empty(cTitulo)," - " + cTitulo,"") From 0,0 To 280, 500 Of oMainWnd Pixel
	
	oCodigo:= TGet():New( 003, 005,{|u| if(PCount()>0,_cCodigo:=u,_cCodigo)},_oDlg,205, 010,cMascara,{|| /*Processa({|| FiltroF3P(M->_cCodigo)},"Aguarde...")*/ },0,,,.F.,,.T.,,.F.,,.F.,.F.,,.F.,.F.,"",_cCodigo,,,,,,,cTitCampo + ": ",1 )
	oCodigo:SetCss(cCSSGet)	
	oButton1 := TButton():New(010, 212," &Pesquisar ",_oDlg,{|| Processa({|| FiltroF3P(M->_cCodigo) },"Aguarde...") },037,013,,,.F.,.T.,.F.,,.F.,,,.F. )
	oButton1:SetCss(cCSSButton)	
	    
	_oLista:= TCBrowse():New(26,05,245,90,,,,_oDlg,,,,,{|| _oLista:Refresh()},,,,,,,.F.,,.T.,,.F.,,,.f.)
	nCont := 1
        //Para ficar dinÃ¢mico a criaÃ§Ã£o das colunas, eu uso macro substituiÃ§Ã£o "&"
	For nX := 1 to len(aCampos)
		cColuna := &('_oLista:AddColumn(TCColumn():New("'+aCampos[nX,2]+'", {|| _aDados[_oLista:nAt,'+StrZero(nCont,2)+']},PesqPict("'+cAlias+'","'+aCampos[nX,1]+'"),,,"'+aCampos[nX,3]+'", '+StrZero(aCampos[nX,4],3)+',.F.,.F.,,{|| .F. },,.F., ) )')
		nCont++
	Next
	_oLista:SetArray(_aDados)
	_oLista:bWhen 		 := { || Len(_aDados) > 0 }
	_oLista:bLDblClick  := { || FiltroF3R(_oLista:nAt, _aDados, cRetCpo)  }
	_oLista:Refresh()

	oButton2 := TButton():New(122, 005," OK "			,_oDlg,{|| Processa({|| FiltroF3R(_oLista:nAt, _aDados, cRetCpo) },"Aguarde...") },037,012,,,.F.,.T.,.F.,,.F.,,,.F. )
	oButton2:SetCss(cCSSButton)	
	oButton3 := TButton():New(122, 047," Cancelar "	,_oDlg,{|| _oDlg:End() },037,012,,,.F.,.T.,.F.,,.F.,,,.F. )
	oButton3:SetCss(cCSSButton)	

	Activate MSDialog _oDlg Centered	
	
Return(bRet)

/*/{Protheus.doc} FiltroF3P
//TODO Descrição auto-gerada.
@author luiz_
@since 18/09/2017
@version undefined
@example
(examples)
@see (links_or_references)
/*/

Static Function FiltroF3P(cBusca)

	Local cEstat := U_SFGN001A(ProcName(0), "SF0527X")
	Local i := 0

	if !Empty(cBusca)
		For i := 1 to len(_aDados)
			//Aqui busco o texto exato, mas pode utilizar a funÃ§Ã£o AT() para pegar parte do texto
			if UPPER(Alltrim(_aDados[i,_nColuna]))==UPPER(Alltrim(cBusca))
				//Se encontrar me posiciono no grid e saio do "For"			
				_oLista:GoPosition(i)
				_oLista:Setfocus()
				exit
			Endif
		Next
	Endif
Return

/*/{Protheus.doc} FiltroF3R
//TODO Descrição auto-gerada.
@author luiz_
@since 18/09/2017
@version undefined
@example
(examples)
@see (links_or_references)
/*/

Static Function FiltroF3R(nLinha,aDados,cRetCpo)
	
	Local cEstat := U_SFGN001A(ProcName(0), "SF0527X")
	Local _nColMat := 2
	Local _nColFil := 1
	Local oModel   := FWModelActive()
	Local oStrZH1  := oModel:GetModel("ZH1MASTER")
	Local cCodigo  := aDados[nLinha,_nColMat]
	Local cFilMat  := aDados[nLinha,_nColFil]
	
	oStrZH1:SetValue("ZH1_FILMAT",cFilMat)
	oStrZH1:SetValue("ZH1_MATRIC",cCodigo)
			
	bRet         := .T.
	_oDlg:End()    
	
Return