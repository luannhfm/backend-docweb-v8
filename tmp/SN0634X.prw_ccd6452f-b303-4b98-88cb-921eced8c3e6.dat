#Include 	"Protheus.ch"
#Include	"Rwmake.ch"
#Include	"Totvs.ch"
#Include	"TopConn.CH"

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<SN0634X>                                                   |
|304 - Relatorio de Pagamentos - Assistencia PRONATEC/ALUNO      		   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
+--------------------------------------------------------------------------+
|@version<Nil>                                                             |
+--------------------------------------------------------------------------+
| Revisao em: 11/07/2014                              por: Antonio Dantas  |
| Ajuste para atender solicitacao de Guilherme via e-mailem 10/07/2014     |
| 17:53. Implementado Filtros por SESSAO e por RANGE de STATUS             |
+--------------------------------------------------------------------------+
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
User Function SN0634X()
Local oReport
Private _cPerg 		:= "SN0634X" 		//Nome da pergunta cadastrado no SX1
Private _cAlias01 	:= GetNextAlias() 	// A variavel recebe um nome de uma tabela temporária sequencial
Private _aSM0 		:= {}
_aSM0 := GETAREA()
AjustaSX1(_cPerg)	//Valida as perguntas, atualizando sempre conforme a do código
If Pergunte(_cPerg,.T.) = .F.
	Return()
EndIf
oReport := ReportDef()
oReport:PrintDialog()
RESTAREA(_aSM0)		//Restaura a area salva
Return


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ReportDef>                                                 |
|304 - Relatorio de Pagamentos - Assistencia PRONATEC/ALUNO				   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ReportDef()
Local oReport
Local cReport	:= "SN0634X"
Local cTitulo	:= "304 - Relatorio de Pagamentos - Assistencia PRONATEC/ALUNO"
Local cDesc		:= cTitulo
//Verifica se existe a pergunta (.F. -> não chama a tela de parametros)
Pergunte(_cPerg,.F.)
oReport := TReport():New(cReport,cTitulo ,_cPerg,{|oReport| ReportPrint(oReport)},cDesc)
oSec01:=TRSection():New(oReport,"")
//New(oParent,cName,cAlias,cTitle,cPicture,nSize,lPixel,bBlock,cAlign,lLineBreak,cHeaderAlign,lCellBreak,nColSpace,lAutoSize,nClrBack,nClrFore,lBold)
TRCell():New(oSec01,"Unidade"			,,"Unidade"				,,20)
TRCell():New(oSec01,"Evento"			,,"Evento"				,,08)
TRCell():New(oSec01,"Inicio"			,,"Inicio" 				,,15)
TRCell():New(oSec01,"Termino"			,,"Termino"				,,15)
TRCell():New(oSec01,"Curso"  			,,"Curso"				,,35)
TRCell():New(oSec01,"Turno"				,,"Turno"				,,10)
//--
oSec02:=TRSection():New(oSec01,"")
TRCell():New(oSec02,"Nome"				,,"Nome"				,,40)
TRCell():New(oSec02,"Matricula"			,,"Matricula"			,,10)
TRCell():New(oSec02,"CHPeriodo"			,,"CH Periodo"			,,20)
TRCell():New(oSec02,"Per/Cal/Sess"		,,"Per/Cal/Sess"		,,30)
TRCell():New(oSec02,"APagar"			,,"A Pagar"				,,20)
TRCell():New(oSec02,"Devolucao"			,,"Dev./Não Pago"		,,20)
TRCell():New(oSec02,"TotalPago"			,,"Pagos"				,,20)
TRCell():New(oSec02,"DTPagamento"		,,"Pagamento"			,,15)
TRCell():New(oSec02,"Situação"			,,"Situação"			,,24)
//New(oCell,cName,cFunction,oBreak,cTitle,cPicture,uFormula,lEndSection,lEndReport,lEndPage,oParent,bCondition,lDisable,bCanPrint)
TRFunction():New(oSec02:Cell("Matricula")	,nil,"COUNT"	,,,"@E 999999"			,,.T.,.F.,.F.,oSec02)
TRFunction():New(oSec02:Cell("APagar")		,nil,"SUM"		,,,"@E 999,999,999.99"	,,.T.,.F.,.F.,oSec02)
TRFunction():New(oSec02:Cell("Devolucao")	,nil,"SUM"		,,,"@E 999,999,999.99"	,,.T.,.F.,.F.,oSec02)
TRFunction():New(oSec02:Cell("TotalPago")	,nil,"SUM"		,,,"@E 999,999,999.99"	,,.T.,.F.,.F.,oSec02)

Return(oReport)

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ReportPrint>                                               |
|Relatorio de Pagamentos - Assistencia PRONATEC. 						   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ReportPrint(oReport)
Local _oSec01 		:= oReport:Section(1)
Local _oSec02 		:= oReport:Section(1):Section(1)
Local _nQReg		:= 0
Local _cUnid		:= ""
Local _cEvent		:= ""  
Local _cNome 		:= ""


// Cabecalho do envento
_oSec01:Cell("Unidade"	):SetBlock({|| FWFilName( cEmpAnt, (_cAlias01)->UNIDADE ) 	})
_oSec01:Cell("Evento"	):SetBlock({|| (_cAlias01)->EVENTO	 						})
_oSec01:Cell("Inicio"	):SetBlock({|| DTOC((_cAlias01)->INICIO) 					})
_oSec01:Cell("Termino"	):SetBlock({|| DTOC((_cAlias01)->FIM) 						})
_oSec01:Cell("Curso"	):SetBlock({|| (_cAlias01)->CURSO							})
_oSec01:Cell("Turno"	):SetBlock({|| IIF( (_cAlias01)->TURNO = "D","DIURNO",IIF( (_cAlias01)->TURNO = "V","VESPERTINO","NOTURNO")) 		 })
// Matriculas do envento
_oSec02:Cell("Nome"			):SetBlock({|| (_cAlias01)->NOME  									 		})
_oSec02:Cell("Matricula"	):SetBlock({|| (_cAlias01)->MATRICULA  									})
_oSec02:Cell("CHPeriodo"	):SetBlock({|| (_cAlias01)->PERIODO  										})
_oSec02:Cell("Per/Cal/Sess"	):SetBlock({|| (_cAlias01)->ZP7_XPERIO+"/"+(_cAlias01)->ZP7_XSEG+"/"+(_cAlias01)->ZP7_XSESSA					})
_oSec02:Cell("APagar"		):SetBlock({|| Transform( (_cAlias01)->A_PAGAR		,"@E 999,999,999.99" ) 	})
_oSec02:Cell("Devolucao"	):SetBlock({|| Transform( (_cAlias01)->DEVOLVIDO	,"@E 999,999,999.99" )	})
_oSec02:Cell("TotalPago"	):SetBlock({|| Transform( ( (_cAlias01)->A_PAGAR - (_cAlias01)->DEVOLVIDO),"@E 999,999,999.99" ) 				})
_oSec02:Cell("DTPagamento"	):SetBlock({|| DTOC((_cAlias01)->DT_PAGAMENTO) 							})
_oSec02:Cell("Situação"		):SetBlock({|| fPegSitu((_cAlias01)->ZP7_XSTATU) 							})
//--
_oSec02:Cell("APagar"		):SetHeaderAlign("RIGHT")
_oSec02:Cell("APagar"		):SetAlign("RIGHT")
_oSec02:Cell("Devolucao"	):SetHeaderAlign("RIGHT")
_oSec02:Cell("Devolucao"	):SetAlign("RIGHT")
_oSec02:Cell("TotalPago"	):SetHeaderAlign("RIGHT")
_oSec02:Cell("TotalPago"	):SetAlign("RIGHT")
//--
MsAguarde({|| CursorWait(), fQryPRO(), CursorArrow()},"Selecionando Registros","Buscando Informacoes dos Eventos...")
MsAguarde({|| CursorWait(), (_cAlias01)->(DbEval({|| _nQReg++})), CursorArrow() }, "Registros", "Verificando a Quantidade de Registros...")
oReport:SetMeter(_nQReg)
(_cAlias01)->(dbGoTop())


While (_cAlias01)->(!EOF())
	// Sai caso seja pressionado botao cancelar
	If oReport:Cancel()
		Exit
	EndIf
	_oSec01:Init()
	_oSec01:PrintLine()
	_oSec02:Init()  
	//-- 
	_cUnid	:= (_cAlias01)->UNIDADE
	_cEvent := (_cAlias01)->EVENTO
	_cNome	:= (_cAlias01)->NOME 
	Do While _cUnid == (_cAlias01)->UNIDADE .AND. _cEvent == (_cAlias01)->EVENTO  .AND. (_cAlias01)->(!EOF())
		_oSec02:PrintLine()
		(_cAlias01)->(dbSkip())
		If _cNome != (_cAlias01)->NOME 
			_cNome := (_cAlias01)->NOME
		Endif 
		oReport:IncMeter() // Incrementa a regua de progressão
	Enddo
	_oSec02:Finish()
	_oSec01:Finish()
	oReport:SkipLine(3)
EndDo
(_cAlias01)->(dbCloseArea())
Return(Nil)


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fQryPRO>                                                   |
|Monta query que busca os Pagamentos. 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function fQryPRO()
Local _cQry 	:= ""
Pergunte(_cPerg,.F.)
_cQry += " SELECT ZP7_FILIAL UNIDADE, ZP7_XEVENT EVENTO, ZP4_XDTINI INICIO, ZP4_XDTFIM FIM, ZP7_XDESCS CURSO, ZP7_XTURNO TURNO, ZP4_XDESCR PERIODO,  " + CRLF
_cQry += " ZP7_XMATRI MATRICULA, ZP7_XNOME NOME, ZP7_XPERIO, ZP7_XSEG, ZP7_XSESSA, ZP7_XSTATU, ZP7_XVALOR A_PAGAR, ZP7_XDTPG DT_PAGAMENTO, ZP7_XDTPG DTPAGAMENTO," + CRLF
//--
_cQry += " (	SELECT ZP7_XVALOR
_cQry += " 		FROM " + RetSqlName("ZP7") + " ZZP7  " + CRLF
_cQry += " 			WHERE ZZP7.D_E_L_E_T_ <> '*'  " + CRLF
_cQry += "  			AND ZZP7.ZP7_FILIAL = ZP7.ZP7_FILIAL " + CRLF
_cQry += "  			AND ZZP7.ZP7_XMATRI = ZP7.ZP7_XMATRI " + CRLF
_cQry += "  			AND ZZP7.ZP7_XPERIO = ZP7.ZP7_XPERIO " + CRLF
_cQry += "  			AND ZZP7.ZP7_XEVENT = ZP7.ZP7_XEVENT " + CRLF
_cQry += "  			AND ZZP7.ZP7_XSTATU <> 'x' " + CRLF
_cQry += "  			AND ZZP7.ZP7_XSTATU IN ('N','R') 	) DEVOLVIDO " + CRLF
//--
_cQry += " FROM " + RetSqlName("ZP7") + " ZP7 " + CRLF
_cQry += " LEFT JOIN " + RetSqlName("ZP4") + " ZP4 ON ZP4.D_E_L_E_T_ <> '*' AND ZP4_FILIAL = ZP7_FILIAL AND ZP4_XCOD = ZP7_XPERIO " + CRLF
_cQry += " WHERE ZP7.D_E_L_E_T_ <> '*' " + CRLF
_cQry += " AND ZP7_XEVENT BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"' " + CRLF
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Antonio Dantas                                            11/07/2014 |
//| Ajuste para atender solicitacao de Guilherme via e-mailem 10/07/2014 |
//| 17:53. Implementado Filtros por SESSAO e por RANGE de STATUS         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
&&-- _cQry += " AND ZP7_XSTATU <> 'x' " + CRLF    
If !Empty(Alltrim(MV_PAR03))
	_cQry += " and ZP7_XSTATU in "+FormatIn(MV_PAR03,";")+" "+ CRLF
else
	_cQry += " AND ZP7_XSTATU <> 'x' " + CRLF    	
Endif 	
_cQry += " AND ZP7_XSESSA BETWEEN '"+MV_PAR04+"' AND '"+MV_PAR05+"' " + CRLF
&&-- 
_cQry += " GROUP BY ZP7_FILIAL, ZP7_XEVENT ,ZP4_XDTINI ,ZP4_XDTFIM ,ZP7_XDESCS ,ZP7_XTURNO ,ZP4_XDESCR ,ZP7_XMATRI ,ZP7_XNOME, ZP7_XPERIO,ZP7_XSEG, ZP7_XSESSA, ZP7_XSTATU, ZP7_XVALOR ,ZP7_XDTPG  " + CRLF
_cQry += " ORDER BY UNIDADE, EVENTO, INICIO, FIM, NOME " + CRLF
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQry)
If Select(_cAlias01) > 0
	DBSelectArea(_cAlias01)
	(_cAlias01)->(DbCloseArea())
EndIf
dbUseArea(.T.,"TOPCONN",TcGenQry(,,ChangeQuery(_cQry)),_cAlias01,.T.,.F.)
TCSETFIELD(_cAlias01,"ZP4_XDTINI"	,"D",8,0)
TCSETFIELD(_cAlias01,"ZP4_XDTFIM"	,"D",8,0)
TCSETFIELD(_cAlias01,"ZP7_XDTPG"	,"D",8,0)
TCSETFIELD(_cAlias01,"INICIO"		,"D",8,0)
TCSETFIELD(_cAlias01,"FIM"			,"D",8,0)
TCSETFIELD(_cAlias01,"DT_PAGAMENTO"	,"D",8,0)
Return()


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<AjustaSX1>                                                 |
|Cria as perguntas.					 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function AjustaSX1(_cPerg)
Local _aHelp01 := {"Informe o Cod. Evento de/ate"}
Local _aHelp02 := {"Range dos Status das Matriculas"}
Local _aHelp03 := {"Informe o Cod. da Sessão de/ate"}
DbSelectArea("SX1")
DbSetOrder(1)
//--------------------------------------------------------------------
//PutSX1 - cGrupo, cOrdem, _cPergunt, cPerSpa, cPerEng, cVar, cTipo, nTamanho, nDecimal, nPresel, cGSC, cValid, cF3, cGrpSxg, cPyme, cVar01, cDef01, cDefSpa1, cDefEng1, cCnt01, cDef02, cDefSpa2, cDefEng2, cDef03, cDefSpa3, cDefEng3, cDef04, cDefSpa4, cDefEng4, cDef05, cDefSpa5, cDefEng5, aHelpPor, aHelpEng, aHelpSpa, cHelp
u_SFPUTSX1(_cPerg, "01", "Evento de		?"			,"","","mv_ch1","C",08,00,00,"G","" 				,""	 	,"","","mv_par01","","","","","","","","","","","","","","","","",_aHelp01,"","","")
u_SFPUTSX1(_cPerg, "02", "Evento Ate	?"			,"","","mv_ch2","C",08,00,00,"G","" 				,""	 	,"","","mv_par02","","","","","","","","","","","","","","","","",_aHelp01,"","","")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Antonio Dantas                                            11/07/2014 |
//| Ajuste para atender solicitacao de Guilherme via e-mailem 10/07/2014 |
//| 17:53. Implementado Filtros por SESSAO e por RANGE de STATUS         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
u_SFPUTSX1(_cPerg, "03", "Com Seguinte(s) Status ?"	,"","","mv_ch3","C",99,00,00,"G","u_MrkStat()"		,""	 	,"","","mv_par03","","","","","","","","","","","","","","","","",_aHelp02,"","","")
u_SFPUTSX1(_cPerg, "04", "Sessão de		?"			,"","","mv_ch4","C",10,00,00,"G","" 		   		,"ZP6"	,"","","mv_par04","","","","","","","","","","","","","","","","",_aHelp03,"","","")
u_SFPUTSX1(_cPerg, "05", "Sessão Ate	?"			,"","","mv_ch5","C",10,00,00,"G","" 				,"ZP6"	,"","","mv_par05","","","","","","","","","","","","","","","","",_aHelp03,"","","")
Return(Nil)    


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fPegSitu>                                                  |
|Cria as perguntas.					 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<_cCodSit>                                                     |
|_cCodSit = Codigo da Situacao (ZP7_XSTATU)                                |
|@return<_cDesc>                                                           |
|_cDesc = Descricao do codigo                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function fPegSitu(_cCodSit)
Local _cDescricao 	:= ""
Local _nP			:= 0
Local _cRangeST 	:= "BTCLxEORPND"
Local _aStatus 		:={	"Bloqueado p/Remessa"	,;
						"Transf. p/Prox Sessao"	,;
						"Corrigido"				,;
						"Liberado p/Remessa"	,;
						"Não Liberado p/Remessa",;
						"Remessa Gerada"		,;
						"Ordem de Pgto Agendada",;
						"Rejeitado"				,;
						"Pago"					,;
						"Não Pago"				,;
						"Devolvido"				 }
_nP			:= At(Alltrim(_cCodSit),_cRangeST)  
_cDescricao	:= If(_nP>0,Alltrim(_cCodSit)+"-"+_aStatus[_nP],"DESCONHECIDO")
Return _cDescricao

