#Include "Protheus.ch"
#Include "TopConn.ch"
#include 'rptdef.ch'
#DEFINE CRLF CHR(13)+CHR(10)

/*/{Protheus.doc} DTCOMR05
Relatorio de Solicitação de Compras
@author Do.It
@since 16/06/14
@type User function
@history 12/12/2019, Franklin de Brito de Oliveira, Adicionado tratamento para join com a tabela CTT considerar a filial logada.
@history 27/07/2020, Franklin de Brito de Oliveira, Removido validação do TReport.
@history 27/07/2020, Franklin de Brito de Oliveira, Correção na impressão do campo Justificativa.
@history 14/09/2020, Franklin de Brito de Oliveira,Correção na impressão do centro de custo e item contábil.
/*/
User Function DTCOMR05()

Local aArea		:= GetArea() 

//Definição dos fontes do relatório	
//Trebuchet MS	
Private oReport
Private oFTreb10  := TFont():New("Trebuchet MS",,-10,,.F.,,,,.F.,.F.)
Private oFTreb10n := TFont():New("Trebuchet MS",,-10,,.T.,,,,.T.,.F.)
Private oFTreb12  := TFont():New("Trebuchet MS",,-12,,.F.,,,,.F.,.F.)
Private oFTreb12n := TFont():New("Trebuchet MS",,-12,,.T.,,,,.T.,.F.)
//Arial
Private oFArial10 := TFont():New("Arial",,-10,,.F.,,,,.F.,.F.)
Private oFArial10n:= TFont():New("Arial",,-10,,.T.,,,,.F.,.F.)
Private oFArial12 := TFont():New("Arial",,-12,,.F.,,,,.F.,.F.)
Private oFArial12n:= TFont():New("Arial",,-12,,.T.,,,,.T.,.F.)
Private oFArial14 := TFont():New("Arial",,-14,,.F.,,,,.T.,.F.)
Private oFArial16n:= TFont():New("Arial",,-16,,.T.,,,,.T.,.F.)

//Interface de impressao
oReport:= FSDefRelat()
oReport:Init()
Eval( oReport:bAction , oReport )
oReport:Finish()
oReport:Preview()

RestArea(aArea)

Return


//-------------------------------------------------------------------
/*/{Protheus.doc} FSDefRelat                     

Inicializa o objeto TReport(oReport) e Seções(oSection) com suas
definições para geração do relatório

@protected
@author	SergioSouza()
@since 20100623
@param nil, nulo
@return	oReport - Objeto TReport instanciado

/*/
//-------------------------------------------------------------------
Static Function FSDefRelat()

	Local oReport
	Local oSection1,oSection2,oSection3,oSection4,oSection5,oSection6
	Local cReport := "DTCOMR05"
	Local cTitulo := "SOLICITAÇÃO DE COMPRAS"
	Local cDesc	  := ("Este relatório lista os itens de solicitação de compras")
	Local bAction := {|oReport| FGeraRel(oReport)}
	
    //Instancia o objeto TReport por referencia
    oReport := TReport():New(cReport,cTitulo,Nil,bAction,cDesc)

    //Definições do objeto TReport
    oReport:DisableOrientation()
    oReport:SetPortrait()				//Define pagina como retrato    
	oReport:oPage:SetPortrait()			//Define como paisagem
	oReport:oPage:SetPaperSize(9)		//Define como papel como tamanho A4	
	oReport:ParamReadOnly(.F.)			//Parametros nao poderao ser alterados pelo usuario se .T.	
	oReport:lPrtParamPage := .T.		//Não imprime parametros informados pelo usuario	
	oReport:lHeaderVisible := .F.		//Não imprime o cabeçalho	
    oReport:SetEdit(.T.)				//Define se editavel ou não. Escolher tipo e local de impressão    
	oReport:cFontBody := "Trebuchet MS"	//Fonte definido
	oReport:nFontBody := 9              //Tamanho da fonte padrao do relatório
    oReport:HideHeader(.T.)				//Não mostrar cabeçalho
    oReport:HideFooter(.T.)				//Não mostrar rodapé
    oReport:SetDevice( 2 )
    oReport:SetAction( bAction )
    oReport:SetPreview( .T. )
			
Return(oReport)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DTCOMR05  ºAutor  ³Doi.It           º Data ³  09/24/14    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Gera relatório com layout definido no escopo da função     º±±
±±º          ³  manipula objetos de seção e celula do relatorio           º±±
                                                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
/*/
-----------------------------------------------------------------------------
Franklin B. Oliveira 			                                   14/06/2017
	Adicionado a impressão da hora de liberação.
-----------------------------------------------------------------------------
/*/
Static Function FGeraRel(oReport)
	
	Local nRegs 	:= 0
	Local nItnsRegs	:= 0
	Local nLinAux , nLinAux1 , nLinAux2 , nIniBox , cAuxDsc1
	Local nI, nJ
	
	Private aItens  := {}
	Private aComp   := {}
	Private cDescCC := ''
	Private cDescItm:= ''
	Private cCC 	:= ''
	Private cItemC  := ''
	Private cStatus := ''
	Private	cFilEnt := ''
	Private cAprov	:= ''
	Private cSolici	:= ''
	Private cCompra := ''
	Private dDataAp := CtoD('')
	Private cHoraAp := ''
	Private aColums := {}
	//Dimensões da página
	Private nTamBorda 	:= 25
	Private nVertSz 		:= 3400//oReport:oPage:PageHeight()
	Private nHorSiz 		:= 2400//oReport:oPage:PageWidth()
	Private nRight 		:= nHorSiz - nTamBorda	   	//Horizontal
	Private nBottom		:= nVertSz - nTamBorda 		//Vertical
	Private nPagLarg 		:= nHorSiz - nTamBorda
	Private nLin , nCol
	Private nSalto 		:= 60
	Private nMaxLin		:= 3400
	

	ProcessaRel()

nRegs := Len( aItens )
	
	If( nRegs == 0 )
		ApMsgAlert( 'Sem registros para impressão!' )
	Else
		// CONTROLE REGUA
		oReport:SetMeter(nRegs)		
		oReport:IncMeter()
		
		// IMPRIME CABECALHO
		FSImpCabec( oReport )
		// ITENS
		oReport:Box( nLin,nTamBorda+10,nLin+60,nRight-010 )

		aColums := Array( 7 )
		aColums[ 1 ] := nTamBorda+10//1-ITEM
		aColums[ 2 ] := 0120 			//2-COD PROD
		aColums[ 3 ] := 0400 			//3-DESCRICAO
		aColums[ 4 ] := 1160	 			//4-UN MED
		aColums[ 5 ] := 1225 			//5-QUANTIDADE
		aColums[ 6 ] := 1445 			//6-OBSERVACAO
		aColums[ 7 ] := 2090	 			//7-DTNECESSIDADE
		
		// LINHAS DIVISORIAS DO CABECALHO DOS ITENS
//		oReport:Line( nLin, aColums[1], 810 , aColums[1] )
		oReport:Line( nLin, aColums[2], nLin+60, aColums[2] )
		oReport:Line( nLin, aColums[3], nLin+60, aColums[3] )
		oReport:Line( nLin, aColums[4], nLin+60, aColums[4] )
		oReport:Line( nLin, aColums[5], nLin+60, aColums[5] )
		oReport:Line( nLin, aColums[6], nLin+60, aColums[6] )
		oReport:Line( nLin, aColums[7], nLin+60, aColums[7] )
		               
		IncLinha(10)
		oReport:Say( nLin , 0080 , 'ITEM' 			, oFArial10n , nPagLarg ,,, 02 )
		oReport:Say( nLin , 0270 , 'PRODUTO'		, oFArial10n , nPagLarg ,,, 02 )		
		oReport:Say( nLin , 0775 , 'DESCRIÇÃO' 		, oFArial10n , nPagLarg ,,, 02 )		
		oReport:Say( nLin , 1190 , 'UM' 			, oFArial10n , nPagLarg ,,, 02 )
		oReport:Say( nLin , 1335 , 'QUANTIDADE' 	, oFArial10n , nPagLarg ,,, 02 )		
		oReport:Say( nLin , 1765 , 'OBSERVAÇÃO' 	, oFArial10n , nPagLarg ,,, 02 )
		oReport:Say( nLin , 2225 , 'DT NECESSIDADE' , oFArial10n , nPagLarg ,,, 02 )

		IncLinha(50)

		// Impressao dos itens
		For nI := 1 To nRegs
			
			// antes de iniciar um novo item, checa se ira ultrapassar o limite de tela
			// checagem de dois campos de descrição, o maior deles sera a referencia para o final da
			// tela.
			//criar loop
			cAuxDsc1 := StrTran( AllTrim( aItens[ nI , 3 ] ),CRLF,"")
			//criar loop
			cAuxDsc2 := StrTran( AllTrim( aItens[ nI , 6 ] ),CRLF,"")
			// Verifica o maior limite de campo
			nLinAux:= Max( ( MlCount( cAuxDsc1,45 ) * 40 ) + 20 , ( MlCount( cAuxDsc2,40 ) * 40 ) + 20 )
			// SIMULA 
			IncLinha(20,nLinAux)
			nIniBox := nLin
			// I T E M
			oReport:Say( nLin , aColums[1]+10 , aItens[ nI , 1 ] , oFTreb10 , nPagLarg ,,, 0 )
			// P R O D U T O
			oReport:Say( nLin , aColums[2]+10 , aItens[ nI , 2 ] , oFTreb10 , nPagLarg ,,, 0 )
			// D E S C R I C A O
			nLinAux1 := nLin
			nTamanho := MlCount( cAuxDsc1,45 )
			For nJ := 1 To nTamanho
				oReport:Say( nLinAux1 , aColums[3]+10 , Memoline( cAuxDsc1 , 45 , nJ ) , oFTreb10 , nPagLarg ,,, 0 )
				nLinAux1 += 40
			Next
			// U M
			oReport:Say( nLin , aColums[4]+10 , aItens[ nI , 4 ] , oFTreb10 , nPagLarg ,,, 0 )
			// Q U A N T I D A D E
			oReport:Say( nLin , aColums[5]+30 , aItens[ nI , 5 ] , oFTreb10 , nPagLarg ,,, 0 )
			// O B S E R V A C A O
			nLinAux2 := nLin
			nTamanho := MlCount( cAuxDsc2,40 )
			For nJ := 1 To nTamanho
				oReport:Say( nLinAux2 , aColums[6]+10 , MemoLine( cAuxDsc2 , 40 , nJ ) , oFTreb10 , nPagLarg ,,, 0 )
				nLinAux2 += 40
			Next
			// D T   N E C E S S I D A D E
			oReport:Say( nLin , aColums[7]+50 ,cValToChar(SToD(cValToChar( aItens[ nI , 7 ]))) , oFTreb10 , nPagLarg ,,, 0 )
			// Finaliza linha
			IncLinha( nLinAux-20 )
			
			// B O X    D O   I T E M
			oReport:Box( nIniBox , nTamBorda+10 , nLin , nRight-010 )
			// LINHAS DIVISORIAS DO CABECALHO DOS ITENS
//			oReport:Line( nIniBox , aColums[1] , nLin , aColums[1] )
			oReport:Line( nIniBox , aColums[2] , nLin , aColums[2] )
			oReport:Line( nIniBox , aColums[3] , nLin , aColums[3] )
			oReport:Line( nIniBox , aColums[4] , nLin , aColums[4] )
			oReport:Line( nIniBox , aColums[5] , nLin , aColums[5] )
			oReport:Line( nIniBox , aColums[6] , nLin , aColums[6] )
			oReport:Line( nIniBox , aColums[7] , nLin , aColums[7] )   
			
			//Data aprovação
			dDataAp := aItens[nI][8]
			cHoraAp := aItens[nI][9]
		Next
		
		// R O D A P E
		FSImpRodap( oReport )
	EndIf
						
Return(Nil)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DTCOMR05  ºAutor  ³Do.It 		        º Data ³  09/24/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imprime o cabeçalho do reatório                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function FSImpCabec( oReport )
    
	// Restaura o valor de inicio da linha
	nLin := nTamBorda
	nCol := nTamBorda
	// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	// C A B E Ç A L H O
	// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	oReport:StartPage()
	//LAYOUT - desenha borda da tela
	oReport:Box(nLin,nCol,nBottom,nRight) 		//BOX PAGINA
	
	// BLOCO TITULO
	oReport:Box(nLin+=10,nCol+10,310,nRight-010) //BOX TITULO
	oReport:SayBitmap(nLin+=10,nCol+020,'lgrl01.bmp',0700,0255)
    oReport:Say( nLin+=0 		, ( nPagLarg-060 ) 			, 'Página: '+StrZero(oReport:Page(),2) , oFTreb10 , nPagLarg-700-10 ,,, 1 )
    oReport:Say( nLin+=025 		, ((nPagLarg-700)/2)+700+10 , 'Filial: '+AllTrim(SM0->M0_NOME)+' / '+AllTrim(SM0->M0_FILIAL) , oFArial12 , nPagLarg-700-10 ,,, 2 )
    oReport:Say( nLin+=82.5 	, ((nPagLarg-700)/2)+700+10 , 'S O L I C I T A Ç Ã O   D E   C O M P R A' , oFArial16n , nPagLarg-700-10 ,,, 2 )
    oReport:Say( nLin+=82.5		, ((nPagLarg-700)/2)+700+10 , 'Nº: '+SC1->C1_NUM , oFArial12 , nPagLarg-700-10 ,,, 2 )		
    oReport:Say( nLin+=25 		, ( nPagLarg-060 ) 			, 'Impressão: '+DtoC(dDataBase) , oFTreb10 , nPagLarg-700-10 ,,, 1 )
	//--------------------------------------------------------------------------------------------------------------------------------------------
			
	// BLOCO ENTIDADE/UNIDADE
	oReport:Box( nLin+=70 , nCol+10, 850, nRight-010)
    oReport:Say( nLin+=20 , (nPagLarg/2) , 'ENTIDADE / UNIDADE' , oFArial12n , nPagLarg ,,, 2 )
    	    
    oReport:Say( nLin+=(nSalto), ( nCol+060 ) , 'Empresa: '	+Upper(RTrim(SM0->M0_NOMECOM)) 	, oFArial12 , nPagLarg-700-10 ,,, 0 )
	                  
	oReport:Say( nLin+=(nSalto), ( nCol+060 ) , 'Endereço: '	+Upper(RTrim(SM0->M0_ENDCOB))	, oFArial12 , nPagLarg-700-10 ,,, 0 )
	
	nLin+=(nSalto)
	oReport:Say( nLin	, ( nCol+060 ) , 'CEP: '		+Upper(RTrim(SM0->M0_CEPCOB)) 	, oFArial12 , nPagLarg-700-10 ,,, 0 )
	oReport:Say( nLin	, ( nCol+480 ) , 'Cidade: '	+Upper(RTrim(SM0->M0_CIDCOB)) 	, oFArial12 , nPagLarg-700-10 ,,, 0 )
	oReport:Say( nLin	, ( nCol+980 ) , 'UF: '		+Upper(RTrim(SM0->M0_ESTCOB)) 	, oFArial12 , nPagLarg-700-10 ,,, 0 )
	
	nLin+=(nSalto)
	oReport:Say( nLin	, ( nCol+060 ) , 'TEL: '		+Upper(RTrim(SM0->M0_TEL)) 		, oFArial12 , nPagLarg-700-10 ,,, 0 )
	oReport:Say( nLin	, ( nCol+480 ) , 'FAX: '		+Upper(RTrim(SM0->M0_FAX)) 		, oFArial12 , nPagLarg-700-10 ,,, 0 )

	nLin+=(nSalto)
	oReport:Say( nLin	, ( nCol+060 ) , 'CNPJ: '		+Upper(RTrim(SM0->M0_CGC)) 		, oFArial12 , nPagLarg-700-10 ,,, 0 )
	oReport:Say( nLin	, ( nCol+480 ) , 'IE: '		+Upper(RTrim(SM0->M0_INSC))		, oFArial12 , nPagLarg-700-10 ,,, 0 )

	nLin+=(nSalto)
    oReport:Say( nLin	, ( nCol+060 ) , 'U.O.: ' + AllTrim(cCC) + ' - '+ AllTrim(cDescCC), oFArial12 , nCol-nPagLarg ,,, 0 )
	nLin+=(nSalto)
	oReport:Say( nLin	, ( nCol+060 ) , 'C.R.: ' + Alltrim(cItemC) + ' - '+ Alltrim(cDescItm), oFArial12 , nCol-nPagLarg ,,, 0 )

	IncLinha( 100 )
Return( Nil )


//-------------------------------------------------------------------
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DTCOMR05  ºAutor  ³Do.It               º Data ³  09/24/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³  Função que imprime o rodapé do relatóio.                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function FSImpRodap( oReport )   

Local cStatus := ""
Local aAprova := {}
Local cComp   := ""
Local cSolici := ""
Local nY, nX, nJ
cSolici := UsrFullName(SC1->C1_USER)
cStatus := Legenda()   
aAprova := Aprovador()    

For nY := 1 To Len(aComp)
	cComp += aComp[nY][1]+";"
Next nY

For nX := 1 To Len(aAprova)
	cAprov += aAprova[nX][1]+";"
Next nX  
	// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	// R O D A P E
	// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	// JUSTIFICATIVA
	IncLinha(20)		
	
	cJustif := StrTran( StrTran( SC1->C1_XJUSTIF, CRLF, '') , '  ', '') 
	
	nTamanho:= MLCount( cJustif , 128, , .F. )
	nLinAux := ( nTamanho*40 ) + 40
	
	IncLinha( 10 , nLinAux + 20 )		
	nIniBox := nLin
	nLinAux1 := nLin + 50
    oReport:Say( nLin , (nPagLarg/2) , 'JUSTIFICATIVA' , oFArial12n , nPagLarg ,,, 2 )
	
	For nJ := 1 To nTamanho
		oReport:Say( nLinAux1 , nCol+30 , MemoLine( cJustif , 128 , nJ ) , oFArial10 , nPagLarg ,,, 0 )
		nLinAux1 += 40
	Next
	IncLinha( nLinAux + 10 )
	oReport:Box( nIniBox ,nCol+10, nLin ,nRight-010)        
	//		
	// STATUS
	IncLinha( 20 , 200 )
	oReport:Box(nLin,nCol+10,nLin+180,nRight-010)
    oReport:Line( nLin , (nPagLarg/2) , nLin+180 , (nPagLarg/2) ) //DIVISORIA
    IncLinha( 20 )
    oReport:Say( nLin , (nPagLarg/4) , 'STATUS DA SOLICITAÇÃO' , oFArial12n , nPagLarg ,,, 2 )
    IncLinha( 20 )
    oReport:Say( nLin , (nPagLarg/2)+040 , 'Data da Aprovação: ' + cValToChar(SToD(cValToChar(dDataAp))) + " " + cHoraAp, oFArial12 , nPagLarg ,,, 0 )
    IncLinha( 50 )
    oReport:Say( nLin , (nPagLarg/4) , cStatus , oFArial14 , nPagLarg ,,, 2 )
    IncLinha( 20 )
    oReport:Say( nLin , (nPagLarg/2)+040 , 'Aprovador da Solicitação: ' + RTrim( cAprov ) , oFArial12 , nPagLarg ,,, 0 )

    // APROVACAO
	// LOCAL DE ENTREGA
	IncLinha( 90 , 220)
	/* 13/06/2016 - Franklin B. Oliveira:
	Conforme suporte 195186, o local de entrega será descrito no campo C1_XLOCENT ao invés do endereço enderço de entrega da filial.
	cLocEnt := RTrim(SM0->M0_ENDENT)+' - '+RTrim(SM0->M0_CIDENT) + ' / ' + RTrim(SM0->M0_ESTENT) + ' - CEP: ' + RTrim(SM0->M0_CEPENT)
	*/
	cLocEnt := SC1->C1_XLOCENT
	oReport:Box( nLin,nCol+10,nLin+200,nRight-010)
	IncLinha( 20 )
    oReport:Say( nLin , (nPagLarg/2) 		, 'LOCAL DE ENTREGA' , oFArial12n , nPagLarg ,,, 2 )
    IncLinha( nSalto )
    oReport:Say( nLin, ( nCol+060 ) , 'Filial de Entrega: '	, oFArial12n , nPagLarg-700-10 ,,, 0 )
    oReport:Say( nLin, ( nCol+360 ) , Upper(RTrim(SM0->M0_NOMECOM)) 	, oFArial12 , nPagLarg-700-10 ,,, 0 )
    IncLinha( nSalto )
    oReport:Say( nLin, ( nCol+060 ) , 'Local de Entrega: ' , oFArial12n , nPagLarg-700-10 ,,, 0 )
    oReport:Say( nLin, ( nCol+400 ) , Upper(cLocEnt)	, oFArial12 , nPagLarg-700-10 ,,, 0 )
    //SOLCIITANTE / COMPRADOR
    IncLinha( 80 , 150 )
	oReport:Box( nLin,nCol+10, nLin+150,nRight-010)
	IncLinha( 20 )
    oReport:Say( nLin			, ( nCol+060 ) , 'Solicitante: ' , oFArial12n , nPagLarg ,,, 0 )
    oReport:Say( nLin			, ( nCol+280 ) , Upper(RTrim(cSolici)) , oFArial12 , nPagLarg ,,, 0 )
    IncLinha( nSalto )
    oReport:Say( nLin , ( nCol+060 ) , 'Comprador Responsável: '	, oFArial12n , nPagLarg-700-10 ,,, 0 )
    oReport:Say( nLin , ( nCol+520 ) , Upper(RTrim(cComp)) , oFArial12 , nPagLarg-700-10 ,,, 0 )
Return( Nil )

/*
+------------+----------+-------+-----------------------+-------------------+
|  Programa  | IncLinha | Autor | Desenvolvedor 		| Data ³28.08.2008³ |
+------------+----------+-------+-----------------------+-------------------+
| Descrição:                                                                |
|	 A funcao estática IncLinha faz verificação do posicionamento da linha 	|
|	 em pixel, faz salto de linha e de pagina..                             |
+---------------------------------------------------------------------------+
*/
Static Function IncLinha(nAddLin,nSimula)

	Local nNewLin       
	
	Default nAddLin := 0
	Default nSimula := 0
	
	nNewLin := ( nAddLin + nSimula )
	//compara linha corrente com numero de linhas por pagina do relatorio
	If ( ( nLin + nNewLin ) > nMaxLin)
	
		//finaliza pagina
		oReport:EndPage()
		// Imprime cabecalho		
		FSImpCabec( oReport )
	Else
		/*caso o valor nLin nao seja maior que o permitido por pagina
		ele vaisomar nPixelLinN para quebra de linha.... */
		nLin += nAddLin
	EndIf
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DTCOMR05  ºDo.It MG  ³Do.It            º Data ³  09/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³  Função para definir o status da solicitação 				  º±±
±±º          ³   				                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Legenda()  

Local cStatus := ""
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local lAProvSI:= GetNewPar("MV_APROVSI",.F.)
Local cTpCto  := iif ( lPrjCni, GETMV("MV_TPSCCT"), '')  

// ADEQUADO DO FONTE PADRAO EM [02.10.2014]
If SC1->(C1_QUJE > 0) //BR_AMARELO - SC com Pedido Colocado Parcial
	cStatus := 'SC Parcialmente Atendida'
EndIf
If SC1->(C1_FLAGGCT == "1" .And. C1_QUJE < C1_QUANT) //BR_MARROM - SC Totalmente Atendida pelo SIGAGCT
	cStatus := 'Integração Modulo Gestao de Contratos'
EndIf
If SC1->(!Empty(C1_RESIDUO))  //BR_PRETO - SC Eliminada por Residuo
	cStatus := 'Eliminada por Residuo'
EndIf
If SC1->(C1_QUJE == C1_QUANT) //DISABLE - SC com Pedido Colocado
	cStatus := 'Totalmente Atendida'
EndIf
If SC1->(C1_TPSC == "2" .And. C1_QUJE == 0 .And. !Empty(SC1->C1_CODED)) //PMSEDT4 - Solicitação em Processo de Edital" 
	cStatus := 'Em Processo de Edital'
EndIf
If SC1->(C1_TPSC != "2" .And. C1_QUJE == 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT <>"S") //BR_AZUL - SC em Processo de Cotacao
	cStatus := 'Em Processo de Cotação'
EndIf
If SC1->(FieldPos("C1_ACCPROC")) > 0
	If SC1->(C1_ACCPROC =="1" .And. C1_PEDIDO == Space(Len(C1_PEDIDO))) //PMSEDT3 - Solicitação Pendente (MarketPlace)
		cStatus := 'Solicitação Pendente (MarketPlace)'
	EndIf	
	If SC1->(C1_ACCPROC =="1" .And. C1_PEDIDO <> Space(Len(C1_PEDIDO))) //PMSEDT2 - Solicitação em Processo de Cotação (MarketPlace)
		cStatus := 'Solicitação em Processo de Cotação (MarketPlace)'
	EndIf
EndIf
If SC1->(FieldPos("C1_COMPRAC")) > 0
	If SC1->(C1_RESIDUO == 'S' .And. C1_COMPRAC == '1') //BR_VIOLETA - SC em Compra Centralizada
		cStatus := 'SC em Compra Centralizada'
	EndIf
EndIf
If lPrjCni
	If SC1->(C1_XCLASSI .And. C1_APROV == "B") //BR_VERDE_ESCURO 
		cStatus := 'Classificação Pendente'
	EndIf
	//-- Integracao com o modulo de Gestao de Contratos
	If SC1->(Empty(C1_RESIDUO) .And. C1_XSTGCT == "1" .And. C1_APROV $ " ,L" .And. C1_XTIPOSC == "'"+ cTpCto + "'")  //metas_cima_16 
		cStatus := 'Aditivo Gerado no GCT'
	EndIf
	If SC1->(Empty(C1_RESIDUO) .And. C1_XSTGCT == "2" .And. C1_APROV $ " ,L" .And. C1_XTIPOSC == "'"+ cTpCto + "'")  //metas_baixo_16
		cStatus := 'Aditivo não Gerado no GCT'
	EndIf
EndIf
If SC1->(FieldPos("C1_TIPO"))>0
	If SC1->(C1_TIPO == 2) //BR_BRANCO - Solicitacao de Importacao	
		cStatus := 'Solicitação de Importação'
	EndIf
Endif
If SC1->(FieldPos("C1_TPSC")) > 0
	If SC1->(C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV $ " ,L" .And. C1_TPSC == "2")//LIGHTBLU - Solicitacao para Licitacao
		cStatus := 'Solicitação para Licitação'
	EndIf
EndIf    
if lPrjCni                                                                              
	If SC1->(C1_XTIPOSC <> "'"+cTpCto +"'" .And. C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV $ " ,L")  //ENABLE - SC em Aberto
		cStatus := 'SC em Aberto'
	EndIf
Else
	If SC1->(C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV $ " ,L") //ENABLE - SC em Aberto
		cStatus := 'SC em Aberto'
	EndIf
EndIf
If lAprovSI
	If SC1->(C1_QUJE == 0 .And. (C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == "IMPORT") .And. C1_APROV == "R") //BR_LARANJA - SC Rejeitada
		cStatus := 'SC Rejeitada'
	EndIf
	If SC1->(C1_QUJE == 0 .And. (C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == "IMPORT") .And. C1_APROV == "B") //BR_CINZA - SC Bloqueada
		cStatus := 'SC Bloqueada'
	EndIf
Else
	If SC1->(C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV == "R") //BR_LARANJA - SC Rejeitada
		cStatus := 'SC Rejeitada'
	EndIf
	If SC1->(C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV == "B") //BR_CINZA  - SC Bloqueada
		cStatus := 'SC Bloqueada'
	EndIf
EndIf
If lAprovSI
	If SC1->(C1_QUJE == 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT == "S" .And.C1_APROV $ " ,L") //BR_PINK - SC com Produto Importado
		cStatus := 'Com Produto Importado'
	EndIf
Else
	If SC1->(C1_QUJE == 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT == "S") //BR_PINK - SC com Produto Importado
		cStatus := 'Com Produto Importado'
	EndIf
EndIf
If SC1->C1_APROV == "O"
	cStatus := 'SC Bloqueada por Orçamento'
EndIf
If SC1->C1_APROV == "C"
	cStatus := 'SC Aguardando Contingencia'
EndIf
If SC1->C1_APROV == "F"
	cStatus := 'SC Reprovada por Orçamento'
EndIf
If SC1->C1_APROV == "W"
	cStatus := 'Solicitação Pendente de Envio'
EndIf          

Return cStatus   

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DTCOMR05  ºDo.It MG  ³Microsiga        º Data ³  05/09/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³  Função para definir os apravadores da solicitação 		  º±±
±±º          ³     			                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/                                                                           



Static Function Aprovador()
Local aAprov := {}
Local cTipoSC1 := "SC"

dbSelectArea("SCR")
dbSetOrder(1) 

dbSeek(xFilial("SCR")+cTipoSC1+SC1->C1_NUM)

While SCR->(!Eof()) .And. SCR->CR_FILIAL+Alltrim(SCR->CR_NUM) == xFilial("SCR")+Alltrim(SC1->C1_NUM) .And. SCR->CR_TIPO == cTipoSC1
  
	If SCR->CR_STATUS == '03'  
	
		SAK->(DbSetorder(2))
		SAK->(DbSeek(xFilial("SAK")+AllTrim(xFilial("SAK")+SCR->CR_USER)))   
		  
		   Aadd( aAprov, { AllTrim(UsrFullName(SCR->CR_USER))+" ",AllTrim(xFilial("SAK"))+SAK->AK_COD} )  
		   
	EndIf
	SCR->(dbSkip())  
EndDo         
Return aAprov



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DTCOMR05  ºAutor  ³Do.It MG             º Data ³  09/29/14  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função que obtem os ítens do relatório                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function ProcessaRel()

Local cQry	 := GetNextAlias()
Local cCompr := "" 
Local cNum 	 := SC1->C1_NUM
aItens := {}
aComp  := {}

cQuery := " SELECT"
cQuery += " 	C1_NUM,		" + CRLF
cQuery += " 	C1_ITEM,	" + CRLF
cQuery += " 	C1_PRODUTO,	" + CRLF
cQuery += "		replace(replace(utl_raw.cast_to_varchar2(DBMS_LOB.Substr(C1_XXDESCR,2000,1)),chr(13),'CHR(13)'),chr(10),'CHR(10)') C1_XXDESCR,	" + CRLF
cQuery += " 	C1_UM,		" + CRLF
cQuery += " 	C1_QUANT,	" + CRLF
cQuery += " 	C1_OBS,		" + CRLF
cQuery += " 	C1_DATPRF,	" + CRLF
cQuery += " 	C1_EMISSAO,	" + CRLF
cQuery += " 	C1_CC,		" + CRLF
cQuery += " 	C1_ITEMCTA,	" + CRLF
cQuery += " 	C1_SOLICIT,	" + CRLF
cQuery += " 	C1_XJUSTIF,	" + CRLF
cQuery += "		C1_XCODCOM,	" + CRLF
cQuery += "		C1_FILENT, " + CRLF
cQuery += " 	CR_NUM,		" + CRLF
cQuery += " 	CR_TIPO,	" + CRLF
cQuery += " 	CR_USER,	" + CRLF
cQuery += " 	CR_APROV,	" + CRLF
cQuery += " 	CR_DATALIB,	" + CRLF
cQuery += " 	CR_USERLIB,	" + CRLF
cQuery += " 	CR_LIBAPRO,	" + CRLF  
cQuery += " 	CR_XHRALIB,	" + CRLF 
cQuery += " 	Y1_COD, 	" + CRLF
cQuery += " 	Y1_NOME,	" + CRLF
cQuery += "    	C1_CC,	   	" + CRLF
cQuery += "    	CTD_ITEM,   " + CRLF 
cQuery += "	   	C1_ITEMCTA, " + CRLF
cQuery += "    	CTD_DESC01, " + CRLF
cQuery += "    	CTT_CUSTO,  " + CRLF
cQuery += "    	CTT_DESC01  " + CRLF
cQuery += " FROM " + RetSQLName("SC1") + " SC1 " + CRLF 
cQuery += " LEFT JOIN " + RetSQLName("SCR") + " SCR " + CRLF
cQuery += " 	ON  SCR.CR_FILIAL = SC1.C1_FILIAL   " + CRLF
cQuery += "    AND CR_NUM = C1_NUM	" + CRLF                           
cQuery += "    AND CR_TIPO = 'SC'	" + CRLF
cQuery += " 	AND SCR.D_E_L_E_T_	= ' '	" + CRLF
cQuery += "	INNER JOIN " + RetSqlName("SY1") + " SY1 " + CRLF
cQuery += "		ON SY1.Y1_COD = SC1.C1_XCODCOM " + CRLF    
cQuery += "	INNER JOIN " + RetSqlName("CTT") + " CTT " + CRLF
cQuery += "		ON CTT.CTT_FILIAL = '" + xFilial("CTT") + "'" + CRLF    
cQuery += "		AND SC1.C1_CC = CTT.CTT_CUSTO " + CRLF    
cQuery += "	INNER JOIN " + RetSqlName("CTD") + " CTD " + CRLF
cQuery += "		ON SC1.C1_ITEMCTA = CTD.CTD_ITEM " + CRLF  
cQuery += " WHERE " + CRLF
cQuery += " 	SC1.C1_FILIAL 			= '" + SC1->C1_FILIAL + "' " + CRLF
cQuery += " 	AND SC1.D_E_L_E_T_	= ' '					" + CRLF
cQuery += " 	AND SC1.C1_NUM			= '" + cNum + "' 	" + CRLF
cQuery += "	ORDER BY SC1.C1_ITEM" + CRLF

dbUseArea(.T., 'TOPCONN', TcGenQry( ,, cQuery) ,cQry, .T., .T.)

cQuery := ChangeQuery( cQuery )

cDescCC := (cQry)->CTT_DESC01
cDescItm:= (cQry)->CTD_DESC01
cCC 	:= (cQry)->C1_CC
cItemC  := (cQry)->C1_ITEMCTA 
cFilEnt := (cQry)->C1_FILENT

While (cQry)->(!Eof())
	If aScan(aItens,{|x| AllTrim(x[1]) == AllTrim(C1_ITEM)}) == 0
		aAdd(aItens, {	(cQry)->C1_ITEM,;
							(cQry)->C1_PRODUTO,;
							(cQry)->C1_XXDESCR,;
							(cQry)->C1_UM,;
							cValToChar((cQry)->C1_QUANT),;
							(cQry)->C1_OBS,;
							(cQry)->C1_DATPRF,;
							(cQry)->CR_DATALIB,;
							(cQry)->CR_XHRALIB})   
							
	EndIF   
	
	If aScan(aComp,{|x| AllTrim(x[1]) == AllTrim(Y1_NOME)}) == 0
		aAdd(aComp,{(cQry)->Y1_NOME})
	EndIF

	(cQry)->(dbSkip())
EndDo

(cQry)->(dbCloseArea())

Return( Len( aItens ) > 0 )