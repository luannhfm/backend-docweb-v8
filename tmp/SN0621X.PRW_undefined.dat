#INCLUDE "TOTVS.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"
/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<SN0621X>                                                   |
|Rotina Responsavel pelo cadastro do convenio							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<25/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |FIEMT - Federacao das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/

User Function SN0621X()
Local _oBrowse 		:= FWMBrowse():New()
Private aRotina 	:= MenuDef() // FWMVCMenu("SN0621X")
Private _cAlias01 	:= GetNextAlias()
DbSelectArea("ZP1")
DbSetOrder(1)
ZP1->(DbGoTop())
// Define o Alias
_oBrowse:SetAlias('ZP1')
// Descricao
_oBrowse:SetDescription('Cadastro de Convenio')
// Legenda
_oBrowse:AddLegend( "ZP1_XSTATU=='A'", "GREEN"	, "Ativo" )
_oBrowse:AddLegend( "ZP1_XSTATU=='I'", "RED"	, "Inativo" )
_oBrowse:AddLegend( "ZP1_XSTATU=='S'", "YELLOW"	, "Suspenso" )
// Ativa o browse
_oBrowse:Activate()
Return(Nil)

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Responsavel pela criacao dos botoes, alterar, incluir, excluir e demais.  |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<25/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<_oModel>                                                          |
+--------------------------------------------------------------------------+
|Uso        |SENAI    													   |
+-----------+--------------------------------------------------------------+
*/
Static Function MenuDef()
Local aRotina := {}
ADD OPTION aRotina Title "Visualizar"					Action "VIEWDEF.SN0621X"	OPERATION 2 ACCESS 0
ADD OPTION aRotina Title "Incluir"						Action "VIEWDEF.SN0621X"	OPERATION 3 ACCESS 0
ADD OPTION aRotina Title "Alterar"						Action "VIEWDEF.SN0621X"	OPERATION 4 ACCESS 0
ADD OPTION aRotina Title "Excluir"						Action "U_fExcZP1()"		OPERATION 5 ACCESS 0
ADD OPTION aRotina Title "Solic. de Cartões"			Action "U_SN061CX()"		OPERATION 3 ACCESS 0      
ADD OPTION aRotina Title "Ler Ret da Solic. de Cartões"	Action "U_SN061DX()"		OPERATION 3 ACCESS 0      
ADD OPTION aRotina TITLE "Visualizar Cartões"			ACTION "u_SN062MX()" 		OPERATION 2 ACCESS 0  
Return(aRotina)

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ModelDef>                                                  |
|Contem  a  construcao e a definicao do Model, lembrando que o Modelo de   |
|dados (Model) contem as regras de negocio.							   	   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<25/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<_oModel>                                                          |
+--------------------------------------------------------------------------+
|Uso        |SENAI    													   |
+-----------+--------------------------------------------------------------+
*/
Static Function ModelDef()
Local _oModel
Local _oStZP1M	:= 	FWFormStruct( 1, "ZP1")
// Objeto de modelo de dados
_oModel := MPFormModel():New( "SN0621XX",/*PreValid*/,/*Valid*/, {|_oModel| fGravar(_oModel)} )
// A  estrutura  do  modelo  de  dados  (Model)  deve  iniciar,  obrigatoriamente,  com  um  componente de formulario.
_oModel:AddFields( "ZP1MASTER" , /*cOwner*/ , _oStZP1M )
// Chave Primaria
_oModel:SetPrimaryKey( { "ZP1_FILIAL", "ZP1_XCONV" } )
Return(_oModel)


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ViewDef>                                                   |
|Contem a construcao e a definicao da View, ou seja, contrucao da interface|
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<25/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<_oModel>                                                          |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ViewDef()
Local _oView
Local _oModel 	:= FWLoadModel( "SN0621X" )
Local _oStZP1V	:= FWFormStruct( 2, "ZP1" )
// Crio formulario
_oView := FWFormView():New()
// Defino modelo da view
_oView:SetModel( _oModel )
// Mesma regra do modeldef
_oView:AddField( "VW_ZP1A", _oStZP1V, "ZP1MASTER")
// Crio a tela
_oView:CreateHorizontalBox( "CONVENIOS"		, 100 )
// Defino owner da tela
_oView:SetOwnerView( "VW_ZP1A", "CONVENIOS" )
Return(_oView)


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fExcZP1>                                                   |
| Controla a exclussao do convenio                                         |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<25/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<_oModel>                                                          |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
User Function fExcZP1()
Local _cQry	 := ""
Local _nRegs := 0
//Valida exclusao
_cQry += "SELECT * " + CRLF
_cQry += "FROM " + RetSqlName("ZPA")+ " ZPA" 	+ CRLF
_cQry += "WHERE ZPA.D_E_L_E_T_ <> '*' " 			+ CRLF
_cQry += "AND ZPA_FILIAL = '"+ xFilial("ZP1") +"' "	+ CRLF
_cQry += "AND ZPA_XCONVE = '"+ ZP1->ZP1_XCONV +"' " 	+ CRLF
If Select(_cAlias01) > 0
	DBSelectArea(_cAlias01)
	(_cAlias01)->(DbCloseArea())
EndIf
dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQry),_cAlias01,.T.,.F.)
(_cAlias01)->(dbEval({|| _nRegs++}))
// Se nao houver registros, deletar!
If _nRegs == 0
	If ZP1->(RecLock("ZP1",.F.))
		ZP1->(dbDelete())	// Deleta
		ZP1->(msUnlock())	// Destrava
		ZP1->(dbCommit())
		msgInfo("Registro Deletado com Sucesso!")
	Endif
Else
	Aviso(FunName()+"/"+ProcName(),"O registro selecionado possui movimentacao, e nao pode ser deletado!",{"OK"})
EndIf
Return(Nil)


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fGravar>                                                   |
|Funcao de Controel de Gravacao: Chamada as Funcoes de Validacao das       |
|Acoes do Formulario                                                       |
|                                                                          |
|@Author<Antonio Dantas>                                                   |
|@since<13/10/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@receive                                                                  |
|<    _oModel (o) - Objeto do Modelo Principal                             |
|>                                                                         |
|@return                                                                   |
|<   _lReturn (l) - (.t.) Pode Executar a Acao                             |
|                   (.f.) Nao Pode executar a Acao                         |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function fGravar(_oModel)
Local _lReturn  	:= .t.
Local _nOper		:= _oModel:GetOperation()
Local _oStruZP1 	:= _oModel:GetModel("ZP1MASTER")
//--
Local _cCartao 		:= _oStruZP1:GetValue("ZP1_XSCARD")
Local _cPreCad 		:= _oStruZP1:GetValue("ZP1_XPRECA")
do Case
	Case _nOper == 3	//-- Incluir
		_lReturn  := .t.
		If _cCartao == "S" .and. _cPreCad == "S"
			Help(,,"HELP",,"Não é possivel convenio com [Solic Cartao => S=Sim] e [Pre Cadastro => S=Sim]!",1,0)
			_lReturn  := .f.
		Endif
	Case _nOper == 4	//-- Alterar
		_lReturn  := .t.
		If _cCartao == "S" .and. _cPreCad == "S"
			Help(,,"HELP",,"Não é possivel convenio com [Solic Cartao => S=Sim] e [Pre Cadastro => S=Sim]!",1,0)
			_lReturn  := .f.
		Endif
	Case _nOper == 5	//-- Excluir
		_lReturn  := .t.
	Case _nOper == 8	//-- Imprimir
		_lReturn  := .t.
	Case _nOper == 9	//-- Copiar
		_lReturn  := .t.
		
Endcase
If _lReturn
	FWFormCommit(_oModel)
Endif
Return _lReturn  
