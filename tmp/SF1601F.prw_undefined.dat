#Include "PROTHEUS.CH"
#Include "REPORT.CH"

/*/{Protheus.doc} SF1601F
	Relatório para impressão do banco de horas totalizado, conforme parâmetros.

@author Franklin B. Oliveira
@since 19/10/2015
@version 1.00

@Return Nil
/*/
User Function SF1601F()

	Local cEstat := U_SFGN001A(ProcName(0), "SF1601F")
	Local oReport

	CriaSX1("SF1601F")
	Pergunte("SF1601F",.F.)

	oReport := ReportDef()
	oReport:PrintDialog()

Return Nil

/*/{Protheus.doc} ReportDef
	Definição do objeto relatório banco de horas.

@author Franklin B. Oliveira
@since 19/10/2015
@version 1.00

@return oReport, Objeto do tipo TReport, com as definiçoes de impressão
/*/
Static Function ReportDef()

	Local cEstat := U_SFGN001A(ProcName(0), "SF1601F")
	Local oReport
	Local oSection
	Local aOrdem	:= {}

	oReport := TReport():New("SF1601F", "Banco de horas", "SF1601F", {|oReport| PrintReport(oReport)}, "Relatorio de banco de horas")

	oReport:lParamPage := .F.
	oReport:SetTotalInLine(.F.)

	Aadd( aOrdem, "Matricula"		)
	Aadd( aOrdem, "Centro de Custo"	)
	Aadd( aOrdem, "Nome"			)
	Aadd( aOrdem, "C.Custo+Nome"	)

	oSection := TRSection():New(oReport,"Funcionários",{"SRA"}, aOrdem)

	TRCell():New(oSection,"RA_FILIAL"	,"   ", "Filial"			)
	TRCell():New(oSection,"RA_MAT"		,"   ", "Matricula"			)
	TRCell():New(oSection,"RA_NOME"		,"   ", "Nome"				)
	TRCell():New(oSection,"RA_CC"		,"   ", "C. de Custo"		)
	TRCell():New(oSection,"SALDOANT"	,"   ", "Saldo Anterior"	, "@E 99999999.99", 12)
	TRCell():New(oSection,"DEBITO"		,"   ", "Debito"			, "@E 99999999.99", 12)
	TRCell():New(oSection,"CREDITO"		,"   ", "Credito"			, "@E 99999999.99", 12)
	TRCell():New(oSection,"SALDOT"		,"   ", "Saldo Atual"		, "@E 99999999.99", 12)
	TRCell():New(oSection,"SALDOCOMP"	,"   ", "Saldo a Compensar"	, 				  , 12)
	TRCell():New(oSection,"DEBTBDESP"	,"   ", "Debito BH Especial"	, "@E 99999999.99", 12)
	TRCell():New(oSection,"CREDBDESP"	,"   ", "Credito BH Especial"	, "@E 99999999.99", 12)
	TRCell():New(oSection,"SALDOBDESP"	,"   ", "Saldo BH Especial"	    , "@E 99999999.99", 12)

Return oReport

/*/{Protheus.doc} PrintReport
	Função responsável pela impressão do relatório, conforme definição do objeto TReport
	
@author Franklin B. Oliveira
@since 19/10/2015
@version 1.00

@return Nil
/*/
/*
Definição dos parâmetros:
	MV_PAR01 Filial De?
	MV_PAR02 Filial Ate?
	MV_PAR03 C. Custo De?
	MV_PAR04 C. Custo Ate?
	MV_PAR05 Matricula De?
	MV_PAR06 Matricula Ate?
	MV_PAR07 Turno De?
	MV_PAR08 Turno Ate?
	MV_PAR09 Regra De?
	MV_PAR10 Regra Ate?
	MV_PAR11 Sit. Funcionário
	MV_PAR12 Cat. Do Funcionário?
	MV_PAR13 Periodo De
	MV_PAR14 Periodo Até

*/
Static Function PrintReport(oReport)

	Local cEstat := U_SFGN001A(ProcName(0), "SF1601F")
	Local oSection 		:= oReport:Section(1)
	Local oBreakCC
	Local aDados		:= {}
	Local cFiltroSRA	:= ""
	Local cTit			:= ""
	Local cTitle		:= ""
	Local cOrdem		:= ""
	Local nOrdem		:= oSection:GetOrder()
	Local nDebito		:= 0
	Local nCredito		:= 0
	Local nSaldo		:= 0
	Local nSaldoAnt		:= 0
	Local nSaldoCom		:= 0
	Local nAcuAnt		:= 0

	Local nCrdEsp     := 0
	Local nDebEsp     := 0
	Local nTotEsp     := 0

	dPerIni	 := MV_PAR13			//Periodo De
	dPerFim	 := MV_PAR14			//Periodo Ate

	//Altera titulo do relatório para impressão conforme parâmetros
	cTit 	:= OemToansi("Informe de Banco de Horas") + " - " + " ( "+DTOC(dPerIni)+" a "+DTOC(dPerFim)+" )"
	cTitle 	:= If(AllTrim(oReport:Title())==AllTrim(cTitle), cTit, oReport:Title())

	oReport:SetTitle(cTitle)

	//Centralizar Celulas com valores, devido máscara
	oSection:Cell("DEBITO"):SetHeaderAlign("RIGHT")
	oSection:Cell("CREDITO"):SetHeaderAlign("RIGHT")
	oSection:Cell("SALDOT"):SetHeaderAlign("RIGHT")
	oSection:Cell("SALDOCOMP"):SetHeaderAlign("RIGHT")
	oSection:Cell("DEBTBDESP"):SetHeaderAlign("RIGHT")
	oSection:Cell("CREDBDESP"):SetHeaderAlign("RIGHT")
	oSection:Cell("SALDOBDESP"):SetHeaderAlign("RIGHT")


DEFINE FUNCTION oFuncDeb   NAME "FUNCDEB"     FROM oSection:Cell("DEBITO")  	FUNCTION TIMESUM TITLE ("Debito") 		OF oSection PICTURE "@E 99999999.99" 	//"Debito
DEFINE FUNCTION oFuncCred  NAME "FUNCCRED"    FROM oSection:Cell("CREDITO") 	FUNCTION TIMESUM TITLE ("Credito")		OF oSection PICTURE "@E 99999999.99" 	//"Credito
DEFINE FUNCTION oFuncSalT  NAME "FUNCSAL"     FROM oSection:Cell("SALDOT") 		FUNCTION TIMESUM TITLE "Saldo Atual"	OF oSection PICTURE "@E 99999999.99"	//Saldo Atual
DEFINE FUNCTION oFunDBHEsp NAME "FUNCDBHESP"  FROM oSection:Cell("DEBTBDESP")   FUNCTION TIMESUM TITLE ("Deb. BH Esp")  OF oSection PICTURE "@E 99999999.99" 	//Debito BD Especial
DEFINE FUNCTION oFunCBHEsp NAME "FUNCDBHESP"  FROM oSection:Cell("CREDBDESP")   FUNCTION TIMESUM TITLE ("Cred. BH Esp") OF oSection PICTURE "@E 99999999.99" 	//Credito BD Especial
DEFINE FUNCTION oFunBHEsp  NAME "FUNCBHESP"   FROM oSection:Cell("SALDOBDESP")  FUNCTION TIMESUM TITLE ("BH Especial") 	OF oSection PICTURE "@E 99999999.99" 	//Saldo BD Especial


	//Oculta impressão de totalizador por sessão
	oFuncDeb:SetEndSection(.F.)
	oFuncCred:SetEndSection(.F.)
	oFunDBHEsp:SetEndSection(.F.)
	oFunCBHEsp:SetEndSection(.F.)
	oFunBHEsp:SetEndSection(.F.)
	//oFuncSalT:SetEndSection(.F.)

	//Definição da clausula Where conforme selecionado
	If !Empty(MV_PAR01) .Or. !Empty(MV_PAR02)//RA_FILIAL
		cFiltroSRA := "RA_FILIAL BETWEEN '" + AllTrim(MV_PAR01) + "' AND '" + AllTrim(MV_PAR02) + "'"
	EndIf

	If !Empty(MV_PAR03)	.Or. !Empty(MV_PAR04)//RA_CC
		cFiltroSRA += Iif(!Empty(cFiltroSRA)," AND ","")
		cFiltroSRA += "RA_CC BETWEEN '" + AllTrim(MV_PAR03) + "' AND '" + AllTrim(MV_PAR04) + "'"
	EndIf

	If !Empty(MV_PAR05) .Or. !Empty(MV_PAR06) //RA_MAT
		cFiltroSRA += Iif(!Empty(cFiltroSRA)," AND ","")
		cFiltroSRA += "RA_MAT BETWEEN '" + AllTrim(MV_PAR05) + "' AND '" + AllTrim(MV_PAR06) + "'"
	EndIf

	If !Empty(MV_PAR07) .Or. !Empty(MV_PAR08)//RA_TNOTRAB
		cFiltroSRA += Iif(!Empty(cFiltroSRA)," AND ","")
		cFiltroSRA += "RA_TNOTRAB BETWEEN '" + AllTrim(MV_PAR07) + "' AND '" + AllTrim(MV_PAR08) + "'"
	EndIf

	If !Empty(MV_PAR09) .Or. !Empty(MV_PAR10)//RA_REGRA
		cFiltroSRA += Iif(!Empty(cFiltroSRA)," AND ","")
		cFiltroSRA += "RA_REGRA BETWEEN '" + AllTrim(MV_PAR09) + "' AND '" + AllTrim(MV_PAR10) + "'"
	EndIf

	If !Empty(MV_PAR11) .Or. !Empty(MV_PAR12)//Situacao do Funcionario
		cFiltroSRA += Iif(!Empty(cFiltroSRA)," AND ","")
		cFiltroSRA += "INSTR('" + MV_PAR11 + "', RA_SITFOLH ) > 0"
	EndIf

	If !Empty(MV_PAR13) .Or. !Empty(MV_PAR14)//Categoria do Funcionario
		cFiltroSRA += Iif(!Empty(cFiltroSRA)," AND ","")
		cFiltroSRA +=  "INSTR('" + MV_PAR12 + "', RA_CATFUNC) > 0"
	EndIf

	cFiltroSRA := Iif(!Empty(cFiltroSRA), "%" + cFiltroSRA + "%", "% 1 = 1 %")

	//Definição da clausula order by conforme selecionado
	cOrdem := "SRA.RA_FILIAL,"

	If nOrdem == 1
		cOrdem += "SRA.RA_MAT"
	ElseIf nOrdem == 2
		cOrdem += "SRA.RA_CC, SRA.RA_MAT"
		oBreakCC := TRBreak():New(oSection, oSection:Cell("RA_CC"), "Total por Centro de Custo")
	ElseIf nOrdem == 3
		cOrdem += "SRA.RA_NOME, SRA.RA_MAT"
	ElseIf nOrdem == 4
		cOrdem += "SRA.RA_CC, SRA.RA_NOME"
		oBreakCC := TRBreak():New(oSection, oSection:Cell("RA_CC"), "Total por Centro de Custo")
	EndIf

	cOrdem := "%" + cOrdem + "%"

	oSection:BeginQuery()

	BeginSql alias "QRYSRA"
		SELECT SRA.RA_FILIAL,
		  SRA.RA_MAT,
		  SRA.RA_NOME,
		  SRA.RA_CC,
		  SP9.P9_TIPOCOD,
		  SP9.P9_CODIGO,
		  SPI.PI_QUANT,
		  SPI.PI_DATA		  
		FROM %Table:SRA% SRA
		INNER JOIN %Table:SPI% SPI
		ON SPI.%NotDel%
		AND SRA.RA_FILIAL = SPI.PI_FILIAL
		AND SRA.RA_MAT    = SPI.PI_MAT
		INNER JOIN %Table:SP9% SP9
		ON SP9.%NotDel%
		AND SP9.P9_FILIAL   = %xFilial:SP9%
		AND SP9.P9_CODIGO   = SPI.PI_PD
		WHERE %Exp:cFiltroSRA%
		AND SRA.%NotDel% 
		AND SPI.PI_DATA <= %Exp:dPerFim%
		AND SPI.PI_STATUS <> 'B'
		ORDER BY %Exp:cOrdem%
		
	EndSql

	oSection:EndQuery()

	MemoWrite("c:/temp/SF1601F.txt",  GetLastQuery()[2])

	oSection:Init()

	While .Not. QRYSRA->( EoF() )

		cChave := QRYSRA->RA_FILIAL + QRYSRA->RA_MAT

		oSection:Cell("RA_FILIAL"):SetValue(QRYSRA->RA_FILIAL)
		oSection:Cell("RA_MAT"):SetValue(QRYSRA->RA_MAT)
		oSection:Cell("RA_NOME"):SetValue(QRYSRA->RA_NOME)
		oSection:Cell("RA_CC"):SetValue(QRYSRA->RA_CC)

		nDebito		:= 0
		nCredito	:= 0
		nSaldo		:= 0
		nSaldoCom	:= 0
		nSaldoAnt	:= 0
		nAcuAnt		:= 0
		nDebEsp     := 0
		nCrdEsp     := 0
		nTotEsp     := 0


		While .Not. QRYSRA->( EoF() ) .And. cChave == QRYSRA->RA_FILIAL + QRYSRA->RA_MAT

			If QRYSRA->P9_CODIGO <> '122' .And. QRYSRA->P9_CODIGO <> '123'
				//Totaliza saldo Anterior
				If QRYSRA->PI_DATA < dPerIni
					If QRYSRA->P9_TIPOCOD $  "1*3"
						nValor := QRYSRA->PI_QUANT
						//-- Para valor nao nulo considera a Data para Referencia do Saldo
						dDataAux:= If(Empty(nValor), dDataAux, QRYSRA->PI_DATA)
						nSaldoAnt:= __TimeSum(nSaldoAnt, nValor)
					Else
						nValor:= QRYSRA->PI_QUANT
						//-- Para valor nao nulo considera a Data para Referencia do Saldo
						dDataAux:= If(Empty(nValor), dDataAux, QRYSRA->PI_DATA)
						nSaldoAnt:= __TimeSub(nSaldoAnt, nValor)
					Endif
					nSaldo   := nSaldoAnt
				Endif

				//Verifica os lançamento a imprimir
				If (QRYSRA->PI_DATA < dPerIni) .Or. (QRYSRA->PI_DATA > dPerFim)
					nAcuAnt	+=	nSaldo
					QRYSRA->( dbSkip() )
					Loop
				EndIf

				If QRYSRA->P9_TIPOCOD $ "1*3"
					nSaldo		:= __TimeSum(nSaldo, QRYSRA->PI_QUANT)
					nCredito	:= __TimeSum(nCredito, QRYSRA->PI_QUANT)
				Else
					nSaldo	:= __TimeSub(nSaldo, QRYSRA->PI_QUANT)
					nDebito := __TimeSum(nDebito, QRYSRA->PI_QUANT)
				EndIf

				//--------------------------------------
				//Alterado para o Banco de Dados Especial
				//--------------------------------------
			Else
				If QRYSRA->P9_CODIGO <> '123'
					nDebEsp	:= __TimeSum(nDebEsp, QRYSRA->PI_QUANT)
				ElseIF QRYSRA->P9_CODIGO <> '122'
					nCrdEsp := __TimeSum(nCrdEsp, QRYSRA->PI_QUANT)
				EndIf

			EndIf

			QRYSRA->( dbSkip() )

		EndDo

		nSaldo   := __TimeSum(nSaldoAnt, __TimeSub(nCredito, nDebito))
		nTotEsp  := __TimeSum(nTotEsp, __TimeSub(nCrdEsp,nDebEsp))

		//Saldo a Compensar
		If nSaldoAnt > 0

			If nSaldoAnt > nDebito

				nSaldoCom := __TimeSub(nSaldoAnt, nDebito)

			Else

				nSaldoCom := 0

			EndIf

		ElseIf nSaldoAnt < 0 .And. nSaldoAnt > nCredito

			nSaldoCom := __TimeSum(nSaldoAnt, nCredito)

		Else

			If (__TimeSum(nSaldoAnt, nCredito)) < 0

				nSaldoCom := __TimeSum(nSaldoAnt, nCredito)

			Else

				nSaldoCom := 0

			EndIf

		EndIf

		oSection:Cell("SALDOANT"):SetValue(nSaldoAnt)
		oSection:Cell("DEBITO"):SetValue(nDebito)
		oSection:Cell("CREDITO"):SetValue(nCredito)
		oSection:Cell("SALDOT"):SetValue(nSaldo)
		oSection:Cell("SALDOCOMP"):SetValue(IIf(nSaldoCom = 0, "Compensado", nSaldoCom))
		oSection:Cell("DEBTBDESP"):SetValue(nDebEsp)
		oSection:Cell("CREDBDESP"):SetValue(nCrdEsp)
		oSection:Cell("SALDOBDESP"):SetValue(nTotEsp)
		oSection:Cell("")
		oSection:PrintLine()

	EndDo

	oSection:Finish()

Return Nil

/*/{Protheus.doc} CriaSX1
	Função para criação do arquivo de perguntas do relatório de banco de horas
	
@author Franklin B. Oliveira
@since 19/10/2015
@version 1.00
@param cPerg, nome do grupo de pergunta

@return Nil
/*/
Static Function CriaSX1(cPerg)

	Local cEstat := U_SFGN001A(ProcName(0), "SF1601F")

	//MV_PAR01 Filial De?
	//MV_PAR02 Filial Ate?
	//MV_PAR03 C. Custo De?
	//MV_PAR04 C. Custo Ate?
	//MV_PAR05 Matricula De?
	//MV_PAR06 Matricula Ate?
	//MV_PAR07 Turno De?
	//MV_PAR08 Turno Ate?
	//MV_PAR09 Regra De?
	//MV_PAR10 Regra Ate?
	//MV_PAR11 Sit. Funcionário
	//MV_PAR12 Cat. Do Funcionário?
	//MV_PAR13 Periodo De
	//MV_PAR14 Periodo Até


	PutSx1( cPerg, "01","Filial De"			 , "", "", "mv_ch1", "C", TamSX3("RA_FILIAL")[1]	, 0, 0, "G", ""				, "XM0"	, "", "", "mv_par01", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "02","Filial Ate"		 , "", "", "mv_ch2", "C", TamSX3("RA_FILIAL")[1]	, 0, 0, "G", ""				, "XM0"	, "", "", "mv_par02", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "03","C. Custo De"		 , "", "", "mv_ch3", "C", TamSX3("RA_CC")[1]		, 0, 0, "G", ""				, "CTT"	, "", "", "mv_par03", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "04","C. Custo Ate"		 , "", "", "mv_ch4", "C", TamSX3("RA_CC")[1]		, 0, 0, "G", ""				, "CTT"	, "", "", "mv_par04", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "05","Matricula De"		 , "", "", "mv_ch5", "C", TamSX3("RA_MAT")[1]		, 0, 0, "G", ""				, "SRA"	, "", "", "mv_par05", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "06","Matricula Ate"		 , "", "", "mv_ch6", "C", TamSX3("RA_MAT")[1]		, 0, 0, "G", ""				, "SRA"	, "", "", "mv_par06", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "07","Turno De"			 , "", "", "mv_ch7", "C", TamSX3("RA_TNOTRAB")[1]	, 0, 0, "G", ""				, "SR6"	, "", "", "mv_par07", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "08","Turno Ate"			 , "", "", "mv_ch8", "C", TamSX3("RA_TNOTRAB")[1]	, 0, 0, "G", ""				, "SR6"	, "", "", "mv_par08", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "09","Regra De"			 , "", "", "mv_ch9", "C", TamSX3("RA_REGRA")[1]		, 0, 0, "G", ""				, "SPA"	, "", "", "mv_par09", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "10","Regra Ate"			 , "", "", "mv_cha", "C", TamSX3("RA_REGRA")[1]		, 0, 0, "G", ""				, "SPA"	, "", "", "mv_par10", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "11","Sit. Funcionário"	 , "", "", "mv_chb", "C", 5							, 0, 0, "G", "fSituacao()"	, ""	, "", "", "mv_par11", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "12","Cat. Do Funcionário", "", "", "mv_chc", "C", 15						, 0, 0, "G", "fCategoria()"	, ""	, "", "", "mv_par12", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "13","Periodo De"		 , "", "", "mv_chd", "D", TamSX3("PI_DATA")[1]		, 0, 0, "G", ""				, ""	, "", "", "mv_par13", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})
	PutSx1( cPerg, "14","Periodo Ate"		 , "", "", "mv_che", "D", TamSX3("PI_DATA")[1]		, 0, 0, "G", ""				, ""	, "", "", "mv_par14", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", {}, {}, {})

Return (Nil)
