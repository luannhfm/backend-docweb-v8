#include "totvs.ch"
#include "restful.ch"

//-------------------------------------------------------------------
/*/{Protheus.doc} products
Declaração do ws producs
@author Sergio Salustiano
@since 25/04/2019
@version 1.0
/*/
//-------------------------------------------------------------------
WSRESTFUL productsSTI DESCRIPTION 'endpoint products API' FORMAT "application/json,text/html"
    WSDATA Page                   AS INTEGER OPTIONAL
    WSDATA aQueryString      AS ARRAY    OPTIONAL
    
 	WSMETHOD GET ProdList;
	    DESCRIPTION "Retorna uma lista de produtos";
	    WSSYNTAX "/api/sti/products" ;
        PATH "/api/sti/products" ;
	    PRODUCES APPLICATION_JSON
 	
END WSRESTFUL
//-------------------------------------------------------------------
/*/{Protheus.doc} GET ProdList
Método GET com id ProdList
@author Sergio Salustiano
@since 25/04/2019
@version 1.0
/*/
//-------------------------------------------------------------------
WSMETHOD GET ProdList QUERYPARAM Page WSREST productsSTI
Return getPrdList(self)
//-------------------------------------------------------------------
/*/{Protheus.doc} GET getPrdList
Função para tratamento da requisição GET
@author Sergio Salustiano
@since 25/04/2019
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function getPrdList( oWS )
   Local lRet  as logical
   Local oProd as object
   DEFAULT oWS:Page      := 1  
   lRet        := .T.
   
   oProd := PrdAdapter():new( 'GET' )
   oProd:setPage(oWS:Page)
   oProd:setPageSize(1000)
   oProd:setUrlFilter(oWS:aQueryString)
   oProd:GetListProd()
   //Se tudo ocorreu bem, retorna os dados via Json
   If oProd:lOk
       //oWS:SetResponse(oProd:getJSONResponse())
       oWS:SetResponse(EncodeUTF8(oProd:getJSONResponse(),"cp1252"))
   Else
   //Ou retorna o erro encontrado durante o processamento
       SetRestFault(oProd:GetCode(),oProd:GetMessage())
       lRet := .F.
   EndIf
   //faz a desalocação de objetos e arrays utilizados
   oProd:DeActivate()
   oProd := nil
   
Return lRet
