#include 'protheus.ch'
#include 'parmtype.ch'
#INCLUDE 'rwmake.ch'
#include 'topconn.ch'
#Include "TOTVS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SF06A34X       ºAutor ³ J2A.RICARDO   º Data ³  15/01/2020 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Inclui/cancela titulos cobrança recorrente                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ PROJETO : Cobrança recorrente                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

*/

User Function SF06A34X(_Tipo)

	Local cQuery       	:= ''
	Local aArea        	:= GetArea()
	Local lExec 		:= .F.

	Local oDlg
	Local oChk
	Local oInv
	Local oMark

	Local aButtons 		:= {{"Checked", {|| MarcaDes(ObjMar,"T") }, "Marca / Desmarca Todos", "Seleção" }}
	Local nParamPr		:= GetNewPar("MV_XPRECOR","SGE,RMC")  

	Private cPerg      	:= PADR('SF06A34X',10,space(1))
	Private lInverte 	:= .f.
	Private cMarca      := GetMark()

	Private lTodos    := .T.
	Private lChang    := .T.
	Private lEnd        := .f.
	Private lInibeTela  := .f.
	Private aCpoBro 	:= {}
	Private cArqTemp	:= CriaTrab(Nil,.f.)

	If Select('TRA') > 0
		TRA->(DbCloseArea())
	EndIf

	AjustaSx1(cPerg)

	Pergunte(cPerg,.t.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Campos que serao mostrados no browse.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	aCpoBro := {	{'E1_OK',,OemToAnsi(' '),' '},;
	{'E1_FILIAL',,OemToAnsi('Filial'),'@!'},;
	{'E1_PREFIXO',,OemToAnsi('Prefixo'),'@!'},;
	{'E1_NUM',,OemToAnsi('Numero'),'@!'},;
	{'E1_PARCELA',,OemToAnsi('Parcela'),'@!'},;
	{'E1_TIPO',,OemToAnsi('Tipo'),'@!'},;
	{'E1_NOMCLI',,OemToAnsi('Nome'),'@!'},;
	{'E1_VENCTO',,OemToAnsi('Vencimento'),"@!"},;
	{'E1_SALDO',,OemToAnsi('Saldo'),'@E 999,999,999.99'} }

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta a query com os registros a serem marcados.!³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cQuery := "SELECT E1_OK, E1_FILIAL, E1_PREFIXO, E1_NUM, E1_PARCELA, E1_TIPO, E1_EMISSAO, E1_VENCTO, E1_SALDO, E1_VALOR, E1_CLIENTE, E1_LOJA, E1_NOMCLI"
	cQuery += " FROM " + RetSqlName('SE1') + " E1 "
	cQuery += "LEFT JOIN " + RetSqlName('ZEF') + " EF ON E1_FILIAL = ZEF_FILIAL AND E1_PREFIXO = ZEF_PREFIX AND E1_NUM = ZEF_NUM "
	cQuery += "AND E1_PARCELA = ZEF_PARCEL AND E1_TIPO = ZEF_TIPO "
	cQuery += "WHERE E1.D_E_L_E_T_ <> '*' AND E1_SALDO > 0 AND E1_NUMBOR = ''  " 
	cQuery += "AND E1_FILIAL  >= '" + mv_par01 + "' "
	cQuery += "AND E1_FILIAL  <= '" + mv_par02 + "' "
	cQuery += "AND E1_PREFIXO >= '" + mv_par03 + "' "
	cQuery += "AND E1_PREFIXO <= '" + mv_par04 + "' "
	cQuery += "AND E1_NUM >= '" + mv_par05 + "' "
	cQuery += "AND E1_NUM <= '" + mv_par06 + "' "
	cQuery += "AND E1_PARCELA >= '" + mv_par07 + "' "
	cQuery += "AND E1_PARCELA <= '" + mv_par08 + "' "
	cQuery += "AND E1_CLIENTE >= '" + mv_par09 + "' "
	cQuery += "AND E1_CLIENTE <= '" + mv_par10 + "' "
	cQuery += "AND E1_VENCREA >= '" + Dtos(mv_par11) + "' "
	cQuery += "AND E1_VENCREA <= '" + Dtos(mv_par12) + "' "
	cQuery += "AND E1_PREFIXO IN ('" + strtran (nParamPr, ",", "','") + "') "
	If _Tipo == 1
		cQuery += " AND COALESCE(ZEF_RECORR,'N') <> 'S' "
	Else
		cQuery += " AND COALESCE(ZEF_RECORR,'N') = 'S' "
	EndIf

	cQuery += "ORDER BY E1_PREFIXO, E1_NUM, E1_PARCELA, E1_TIPO "

	cQuery := ChangeQuery(cQuery)

	DbUseArea(.T.,"TOPCONN",TCGenQry(,,cQuery),'TRA',.F.,.T.)

	TCSetField ('TRA' , "E1_VENCTO", "D", 8, 0)
	TCsETfIELD ('TRA' , "E1_SALDO", "N",11,2)

	DbSelectArea('TRA')

	Count to nQtdReg

	If nQtdReg <= 0 
		Alert("Nao existem dados a selecionar ")
		RETURN
	End

	TRA->(DbGoTop())

	Copy to &cArqTemp

	TRA->(DbCloseArea())

	DbUseArea(.t.,,cArqTemp,'TRA',Nil,.f.)
	TRA->(DbGoTop())

	If _Tipo == 1
		_Mens := "Seleção dos Títulos para Inclusão cobrança recorrente "
	Else
		_Mens := "Seleção dos Títulos para Cancelamento de cobrança recorrente "
	EndIf


	DEFINE MSDIALOG oDlg TITLE OemToAnsi(_Mens) From 001,001 To 400,700 Of oMainWnd Pixel
	oMark:=MsSelect():New('TRA','E1_OK',,aCpoBro,@lInverte,@cMarca,{5,5,165,345})
	oMark:oBrowse:lhasMark := .T.

	@ 180,010 CHECKBOX oChk VAR lTodos PROMPT "Marca/Desmarca Todos" SIZE 80,7 COLOR CLR_HBLUE OF oDlg PIXEL ON CLICK U_SIFR03In( oMark,'TRA' ); lTodos := .F.; oChk:oFont := oDlg:oFont
	@ 180,110 CHECKBOX oInv VAR lChang PROMPT "Inverte Seleção" SIZE 80,7 COLOR CLR_HBLUE OF oDlg PIXEL ON CLICK U_SIFR03Cg( oMark,'TRA' ); lChang := .F.; oChk:oFont := oDlg:oFont

	oMark:oBrowse:Refresh()

	DEFINE SBUTTON FROM 180, 280 TYPE 01 ACTION (lExec:=.T.,oDlg:End()) ENABLE Of oDlg
	DEFINE SBUTTON FROM 180, 310 TYPE 02 ACTION (FERASE(cArqTemp  + GetDBExtension()),oDlg:End()) ENABLE Of oDlg

	ACTIVATE MSDIALOG oDlg CENTERED


	TRA->(DbGoTop())

	If lExec
		TRA->(DbGotop())
		ProcRegua(nQtdReg) 
		While TRA->( ! Eof() ) 

			if TRA->(Marked('E1_OK'))

				DbSelectArea('ZEF')
				ZEF->(DbSetOrder(1))
				If !ZEF->(DbSeek(TRA->(E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO))) 
					If ZEF->(RecLock("ZEF",.T.))

						If _Tipo == 1 // inclusão
							ZEF->ZEF_FILIAL := TRA->E1_FILIAL
			                ZEF->ZEF_PREFIX := TRA->E1_PREFIXO
			                ZEF->ZEF_NUM    := TRA->E1_NUM
			                ZEF->ZEF_PARCEL := TRA->E1_PARCELA
			                ZEF->ZEF_TIPO   := TRA->E1_TIPO
			                ZEF->ZEF_CLIENT := TRA->E1_CLIENTE
			                ZEF->ZEF_LOJA   := TRA->E1_LOJA
			                ZEF->ZEF_EMISSA := dDATABASE
			                ZEF->ZEF_RECORR := "S"
							ZEF->ZEF_DTRECO := dDATABASE
						EndIf
						
						ZEF->(MsUnlock())
					EndIf
					TRA->(DbSkip())
					Loop
				EndIf

				If ZEF->(RecLock("ZEF",.F.))

					If _Tipo == 1 // inclusão
						ZEF->ZEF_RECORR := "S"
						ZEF->ZEF_DTRECO := dDATABASE
					Else
						ZEF->ZEF_RECORR := "N"
					EndIf
					ZEF->(MsUnlock())
				EndIf

			EndIF
			IncProc()
			TRA->(DbSkip())
		EndDo

	EndIf

	TRA->(DbCloseArea())

	Ferase(cArqTemp+GetDbExtension())


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Retoma a area anterior ao processamento. !³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	RestArea(aArea)


Return( Nil )

Static Function MarcaDes (cparam)

	cMarcCli := TRA->(E1_PREFIXO+E1_NUM+E1_PARCELA)

	dbSelectArea("TRA")
	TRA->(dbGotop())
	Do While TRA->(!eOF())

		If TRA->(RecLock("TRA", .F.))
			If TRA->E1_OK == cparam .and. TRA->(E1_PREFIXO+E1_NUM+E1_PARCELA) == cMarcCli
				TRA->E1_OK := cparam
			Else
				TRA->E1_OK := " "
			EndIf

			TRA->(MsUnlock())
		EndIf
	EndDo

	oMark:oBrowse:Refresh()

return
/*

ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ AjustaSX1ºAutor ³ Julio Storino       º Data ³  15/12/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Ajusta o SX1 - Arquivo de Perguntas..                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Funcao Principal                                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDATA      ³ ANALISTA ³ MOTIVO                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º          ³          ³                                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/


Static Function AjustaSX1(cPerg)

	Local   nX      := 0
	Local      aRegs   := {}
	_sAlias := Alias()


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria uma array, contendo todos os valores...³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aRegs,{cPerg,'01','Da Filial          ?','Da filial          ?','Da filial          ?','mv_ch1','C', 8,0,0,'G','','mv_par01','','','','',''})
	aAdd(aRegs,{cPerg,'02','Ate filial         ?','Ate filial         ?','Ate filial         ?','mv_ch2','C', 8,0,0,'G','','mv_par02','','','','',''})
	aAdd(aRegs,{cPerg,'03','Do Prefixo         ?','Do Prefixo         ?','Do Prefixo         ?','mv_ch3','C', 9,0,0,'G','','mv_par03','','','','',''})
	aAdd(aRegs,{cPerg,'04','Ate prefixo        ?','Ate prefixo        ?','Ate prefixo        ?','mv_ch4','C', 9,0,0,'G','','mv_par04','','','','',''})
	aAdd(aRegs,{cPerg,'05','Do Titulo          ?','Do Titulo          ?','Do Titulo          ?','mv_ch5','C', 9,0,0,'G','','mv_par05','','','','',''})
	aAdd(aRegs,{cPerg,'06','Ate o Titulo       ?','Ate o Titulo       ?','Ate o Titulo       ?','mv_ch6','C', 9,0,0,'G','','mv_par06','','','','',''})
	aAdd(aRegs,{cPerg,'07','Da Parcela         ?','Da Parcela         ?','Da Parcela         ?','mv_ch7','C', 3,0,0,'G','','mv_par07','','','','',''})
	aAdd(aRegs,{cPerg,'08','Ate parcela        ?','Ate parcela        ?','Ate parcela        ?','mv_ch8','C', 3,0,0,'G','','mv_par08','','','','',''})
	aAdd(aRegs,{cPerg,'09','Do Cliente         ?','Do Cliente         ?','Do Cliente         ?','mv_ch9','C', 14,0,0,'G','','mv_par09','','','','CLI',''})
	aAdd(aRegs,{cPerg,'10','At‚ o Cliente      ?','At‚ o Cliente      ?','At‚ o Cliente      ?','mv_cha','C', 14,0,0,'G','','mv_par10','','','','CLI',''})
	aAdd(aRegs,{cPerg,'11','Do Vencimento      ?','Do Vencimento      ?','Do Vencimento      ?','mv_chb','D', 8,0,0,'G','','mv_par11','','','','',''})
	aAdd(aRegs,{cPerg,'12','At‚ o Vencimento   ?','At‚ o Vencimento   ?','At‚ o Vencimento   ?','mv_chc','D', 8,0,0,'G','','mv_par12','','','','',''})

	DbSelectArea('SX1')
	SX1->(DbSetOrder(1))

	For nX:=1 to Len(aRegs)
		If             ( !SX1->(DbSeek(aRegs[nx][01]+aRegs[nx][02])) )
			If             RecLock('SX1',.T.)
				Replace X1_GRUPO       With aRegs[nx][01]
				Replace X1_ORDEM       With aRegs[nx][02]
				Replace X1_PERGUNTE With aRegs[nx][03]
				Replace X1_PERSPA       With aRegs[nx][04]
				Replace X1_PERENG      With aRegs[nx][05]
				Replace X1_VARIAVL     With aRegs[nx][06]
				Replace X1_TIPO                             With aRegs[nx][07]
				Replace X1_TAMANHO With aRegs[nx][08]
				Replace X1_DECIMAL    With aRegs[nx][09]
				Replace X1_PRESEL        With aRegs[nx][10]
				Replace X1_GSC                              With aRegs[nx][11]
				Replace X1_VALID          With aRegs[nx][12]
				Replace X1_VAR01         With aRegs[nx][13]
				Replace X1_DEF01          With aRegs[nx][14]
				Replace X1_DEF02          With aRegs[nx][15]
				Replace X1_DEF03          With aRegs[nx][16]
				Replace X1_F3                  With aRegs[nx][17]
				Replace X1_CNT01    With aRegs[nx][18]
				MsUnlock('SX1')
			Else
				Help('',1,'')
			EndIf
		Endif
	Next nX

Return
