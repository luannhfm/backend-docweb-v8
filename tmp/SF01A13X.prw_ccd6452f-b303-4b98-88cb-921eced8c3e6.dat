#Include "Protheus.ch"
#Include "parmtype.ch"
#INCLUDE "FWMVCDEF.CH"

#DEFINE STR0007 "Análise das solicitações de baixa e transferência de Ativo"
#DEFINE STR0008 "Controle de solicitações desativado, verifique parâmetro 'MV_ATFSOLD'." 
#DEFINE STR0011 "Aprovada"
#DEFINE STR0012 "Rejeitada"
#DEFINE STR0013 "Aguarde! Efetivando operação..."
#DEFINE STR0015 "Pedido de venda bloqueado, trasferência interrompida."
#DEFINE STR0016 "Pedido"
#DEFINE STR0017 "Pendente"
#DEFINE STR0018 "Pesquisar"
#DEFINE STR0019 "Visualizar"
#DEFINE STR0020 "Aprovar"
#DEFINE STR0021 "Rejeitar"
#DEFINE STR0022 "Legenda"
#DEFINE STR0023 "Produto: "
#DEFINE STR0024 " não cadastrado na filial de origem"
#DEFINE STR0025 " não cadastrado na filial de destino"
#DEFINE STR0026 "Solicitação já está aprovada/rejeitada. A operação não poderá ser efetuada"
#DEFINE STR0029 "Excluido pelo sistema"

Static bSx3Spc   := {|cCpo| Space(GetSx3Cache(cCpo,"X3_TAMANHO")) }
Static bSx3Tam   := {|cCpo| GetSx3Cache(cCpo,"X3_TAMANHO") }
Static bSx3Desc  := {|cCpo| GetSx3Cache(cCpo,"X3_TITULO" ) }
Static bSx3Tipo  := {|cCpo| GetSx3Cache(cCpo,"X3_TIPO"   ) }
Static bSx3Dec   := {|cCpo| GetSx3Cache(cCpo,"X3_DECIMAL") }
Static bSx3Pic   := {|cCpo| GetSx3Cache(cCpo,"X3_PICTURE") }
Static bSx3Box   := {|cCpo| GetSx3Cache(cCpo,"X3_CBOX"   ) }

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ SF01A13X ³ Autor ³ Carlos Ryve Gandini   ³ Data ³ 19/09/19 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SF01A13X                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ ATF                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
/*/
@history 25/11/2019, Franklin de Brito de Oliveira, Tratamento para perfil que considera todas as filiais
@history 26/02/2020, Franklin Oliveira, Correção no Visualizar da rotina de Análise das solicitações de baixa e transferência de Ativo
@history 27/03/2020, Franklin Oliveira, Correção no filtro da rotina de Análise das solicitações de baixa e transferência de Ativo.
@history 28/04/2020, Franklin Oliveira, Correção no filtro da rotina para carregar filtros de usuário.
@history 29/10/2020, Franklin de Brito de Oliveira, Correção no filtro para campos do tipo data.
/*/
Function u_SF01A13X()

Private aRotina   := MenuDef()

If SuperGetMv( "MV_ATFSOLD", .F., "2" ) == "2"
	Help(" ",1,"AFA126SOLD",,STR0008,1,0) //"Controle de solicitações desativado, verifique parâmetro 'MV_ATFSOLD'." 
	Return Nil
EndIf

lCtbInTran := CtbInTran( 1, .F. )

dbSelectArea("SE1")
SE1->(dbSetOrder(1))

Show()

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Carlos Ryve Gandini   ³ Data ³19/09/19  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MenuDef()

Local aRotina := {}

ADD OPTION aRotina Title STR0018 Action 'PesqBrw'   OPERATION 1 ACCESS 0 //"Pesquisar"
//ADD OPTION aRotina Title STR0019 Action 'VIEWDEF.SF01A13X'	OPERATION 2 ACCESS 0 //"Visualizar"
ADD OPTION aRotina Title STR0019 Action 'STATICCALL(SF01A13X,fVisSNM)'	OPERATION 2 ACCESS 0 //"Visualizar"
ADD OPTION aRotina Title STR0020 Action 'STATICCALL(SF01A13X,fAprovar)' OPERATION 4 ACCESS 0 //"Aprovar"
ADD OPTION aRotina Title STR0021 Action 'STATICCALL(SF01A13X,fRejeitar)' OPERATION 4 ACCESS 0 //"Rejeitar
ADD OPTION aRotina Title STR0022 Action 'ATFA126Leg' OPERATION 7 ACCESS 0 //"Legenda"

Return aRotina


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Method    ³Init      ³ Autor ³ Carlos Ryve Gandini   ³ Data ³01/11/2016³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Method Responsavel pela exibicao da interface da classe     ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Show()

	Local oSize 		:= FwDefSize():New( .F. ) 
	Local aStru      	:= {}
	Local aFieFilter	:= {}
	Local cQry 			:= ""
	Local nI 			:= 0
	Local oFilter
	
	Private cCadastro	:= "Solicitação de baixa/transferência"
	
	_SetOwnerPrvt( "oDlg" , Nil )
	_SetOwnerPrvt( "oBrowse", Nil )
	_SetOwnerPrvt( "_cAlias", Nil )

	oSize:lLateral := .F. // Calculo lado a lado 
	oSize:lProp    := .T. // Proporcional             
	oSize:aMargins := { 3, 3, 0, 0 } // Espaco ao lado dos objetos 0, entre eles 3 

	oSize:AddObject( "ALL",100, 100, .T., .T. )

	oSize:Process() // Dispara os calculos

	oDlg := MSDialog():New(oSize:aWindSize[1],;
	                        oSize:aWindSize[2],;
	                        oSize:aWindSize[3],;
	                        oSize:aWindSize[4],STR0007,,,,,,,,,.T.,,,,)
	oDlg:lEscClose := .F. 
	oDlg:lMaximized := .T.

	cQry := LoadQuery()

	oBrowse := FWMBrowse():New()
	oBrowse:SetOwner( oDlg )
	oBrowse:SetDataQuery(.T.)
	oBrowse:SetAlias(_cAlias)
	oBrowse:SetQuery(cQry)
	oBrowse:SetLineHeight( 17 )
	oBrowse:SetDescription(STR0007)

	oBrowse:AddLegend( "NM_SITSOL == '2'", "BR_VERDE"    ,STR0011 )
	oBrowse:AddLegend( "NM_SITSOL == '3'", "BR_VERMELHO" , STR0012 )
	oBrowse:AddLegend( "NM_SITSOl == '1'", "BR_AMARELO"  , STR0017 )

	TCSetField( _cAlias,'NM_DATSOL','D', 8, 0)
	TCSetField( _cAlias,'NM_DTAPVRE','D', 8, 0)
	TCSetField( _cAlias,'NM_DTBAIXA','D', 8, 0)
	
	aStru := ( _cAlias )->( dbStruct() )
	aColunas := {}

	For nI := 1 To Len( aStru )
		If !aStru[nI][1] $ "NM_OK,RECNO"
			oColumn := FWBrwColumn():New()
			oColumn:SetType   ( eVal( bSx3Tipo, aStru[nI][1] ) )
			oColumn:SetTitle  ( eVal( bSx3Desc, aStru[nI][1] ) )
			oColumn:SetSize   ( eVal( bSx3Tam , aStru[nI][1] ) )
			oColumn:SetDecimal( eVal( bSx3Dec , aStru[nI][1] ) )
			oColumn:SetPicture( eVal( bSx3Pic , aStru[nI][1] ) )
			//If eVal( bSx3Tipo, aStru[nI][1] ) == "D"
			//	oColumn:SetData(&('{ || DToC(SToD(' + aStru[nI][1] + ')) }'))
			//Else
				oColumn:SetData(&('{ || ' + aStru[nI][1] + ' }'))
			//EndIf
			aAdd(aColunas,oColumn)
			//Campos que irão compor a tela de filtro	
			Aadd(aFieFilter,{;
				aStru[nI][1],;
				eVal( bSx3Desc, aStru[nI][1] ),;
				eVal( bSx3Tipo, aStru[nI][1] ),;
				eVal( bSx3Tam , aStru[nI][1] ),;
				eVal( bSx3Dec , aStru[nI][1] ),;
				eVal( bSx3Pic , aStru[nI][1] );
				})
		EndIf  
	Next nI	

	oBrowse:SetColumns(aColunas)
	oBrowse:SetFieldFilter(aFieFilter)
	oBrowse:SetUseFilter()
	oBrowse:SetProfileID(FunName())
	oBrowse:Activate()
	//Carrega os filtros gravados para o usuário
	//oBrowse:FWFilter():LoadFilter()
	
	oDlg:Activate(,,,.F.,{||.T.},,{||.T.} )

	oBrowse:DeActivate()

	FreeObj( oBrowse )

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±³Method    ³LoadQuery ³ Autor ³ Carlos Ryve Gandini   ³ Data ³01/11/2016  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri!&o ³Method responsavel pela geracao dos dados.                  ³±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function LoadQuery(lChange)

	Local aArea := GetArea()
	Local cRet    := ""
	Local cWhere := ""
	PARAMTYPE 0 VAR lChange AS LOGICAL OPTIONAL DEFAULT .F.

	cWhere := fSM0()
	cWhere := "%" + cWhere + "%"
	
	_cAlias := GetNextAlias()
	cTrbQry := GetNextAlias()

	BeginSql Alias cTrbQry
		SELECT
			 NM_FILIAL
			,NM_FILDEST
			,NM_CODIGO
			,NM_DATSOL
			,NM_HORSOL
			,NM_CBASE
			,NM_ITEM
			,NM_TIPO
			,NM_CDHSOL
			,NM_CDHREJ
			,NM_SITSOL
			,NM_USRSOL
			,NM_USRAPV
			,NM_TIPOSOL
			,NM_DTAPVRE
			,NM_HRAPVRE
			,NM_DTBAIXA
			,NM_GRUPO
			,NM_MOTBX
			,NM_QTDBX
			,NM_PERCBX
			,NM_VLRBAIX
			,NM_VLVENDA
			,NM_CCUSTO
			,NM_LOCAL
			,NM_CCONTAB
			,NM_CCORREC
			,NM_CDEPREC
			,NM_CDDEPR
			,NM_CDESP
			,NM_CUSTBEM
			,R_E_C_N_O_ RECNO
		FROM 
			%TABLE:SNM% SNM
		WHERE
			SNM.%NotDel%
			AND ( SNM.NM_FILIAL IN %Exp:cWhere%
			OR SNM.NM_FILDEST IN %Exp:cWhere% )
			
	EndSql

	If lChange
		oBrowse:SetAlias(_cAlias)
		oBrowse:SetQuery(GetLastQuery()[2])
		oBrowse:Refresh()
		oBrowse:GoTop()
		cRet := ""
	Else
		cRet := GetLastQuery()[2]	
	EndIf
	
	(cTrbQry)->( dbCloseArea() )
	
	RestArea(aArea)

Return cRet

/*
	Method   : fAprovar
	Autor    : Carlos Ryve Gandini
	Data/Time: 19/09/19 às 10:35:24
	Descricao: Responsavel por realizar a chamada padrao da aprovacao
	Sintaxe  : <Vide Parametros Formais>
*/
Static Function fAprovar()

Local aArea    := GetArea()
Local cBkpFil := cFilAnt
Local cSI3Filtro := SI3->(dbFilter())

	_SetOwnerPrvt( "__cFilAnt" , cBkpFil )
	
	SNM->( dbSelectArea( "SNM" ) )
	SNM->( dbGoto( (_cAlias)->RECNO ) )
	
	GPEGETEMPR( cEmpAnt+SNM->NM_FILIAL )	

	If !Empty(cSI3Filtro)
		SI3->(dbClearFilter())
	EndIf

	ATFA126Apr( , SNM->(Recno()), 3 )
	
	GPEGETEMPR( cEmpAnt+cBkpFil )	

	If !Empty(cSI3Filtro)
		SI3->(DbSetfilter({||&cSI3Filtro},cSI3Filtro))
	EndIf

	RestArea( aArea )
	oBrowse:Refresh()
	oBrowse:GoTop()

Return

/*
	Method   : fRejeitar
	Autor    : Carlos Ryve Gandini
	Data/Time: 19/09/19 às 11:02:57
	Descricao: Reponsavel por realizar a chamada padrao de rejeicao
	Sintaxe  : <Vide Parametros Formais>
*/
Static Function fRejeitar()

Local aArea    := GetArea()
Local cBkpFil := cFilAnt 
Local cSI3Filtro := SI3->(dbFilter())

	_SetOwnerPrvt( "__cFilAnt" , cBkpFil )

	SNM->( dbSelectArea( "SNM" ) )
	SNM->( dbGoto( (_cAlias)->RECNO ) )

	GPEGETEMPR( cEmpAnt+SNM->NM_FILIAL )	

	If !Empty(cSI3Filtro)
		SI3->(dbClearFilter())
	EndIf

	ATFA126Apr( , SNM->(Recno()), 4 )
	
	GPEGETEMPR( cEmpAnt+cBkpFil )	

	If !Empty(cSI3Filtro)
		SI3->(DbSetfilter({||&cSI3Filtro},cSI3Filtro))
	EndIf

	RestArea( aArea )
	oBrowse:Refresh()
	oBrowse:GoTop()

Return

/*
	Class    : 
	Method   : FIEMTSM0
	Autor    : Carlos Ryve Gandini
	Data/Time: 09/09/19 Ã s 16:21:23
	Descricao: Retorna as Filiais que o usuario tem acesso, realizando filtro na funcao FWLoadSM0.
	Sintaxe  : <Vide Parametros Formais>
*/

Static Function fSM0()

	Local lIsAdmin := FWIsAdmin( __cUserID ) //Verifica se o usuário é admin ou pertence ao grupo de administradores
	Local cUsrRules := FWUsrGrpRule( __cUserID ) //0 - Nao Encontrou Regra, 1 - Prioriza, 2 - Desconsidera, 3 - Soma
	Local aGrpUser := FWSFUsrGrp( __cUserID ) //Carrega o acesso dos grupos do usuario
	Local aLoadSM0  := FWLoadSM0()

	Local nB, nC, nD := 0	
	
	Local aRetSM0   := {}
	Local aTmp      := {}
	Local aUsrFil   := {}

	Local cStr      := ""
	Local cRet := ""

	
	If lIsAdmin

		For nB := 1 To len( aLoadSM0 )

			cStr += aLoadSM0[nB][2] + ";" //Filial 

		Next nB
	
	Else

		If cUsrRules $ "3|1"

			For nB := 1 To Len(aGrpUser)

				aTmp := FWGrpEmp( aGrpUser[nB] )
				For nC := 1 To Len( aTmp )

					If ( Subs( aTmp[nC] , 3, 4 ) == Subs( cFilAnt, 1, 4 ) ) .And. !( Subs( aTmp[nC] , 3 ) $ cStr )
						If !( Subs( aTmp[nC] , 3 ) $ cStr )
							cStr += Subs( aTmp[nC] , 3 ) + ";"
						EndIf
					ElseIf AllTrim(aTmp[nC]) == "@@@@"//Usuário com a opção "Todas as empresas" marcado no cadastro de usuários
						For nD := 1 To len( aLoadSM0 )
							If !( aLoadSM0[nD][2] $ cStr )
								cStr += aLoadSM0[nD][2] + ";"
							EndIf
						Next nD
					EndIf

				Next nC	

			Next nB

		EndIf

		If cUsrRules $ "3|2" .And. Len( aGrpUser ) == 0


			PswSeek( __cUserID, .T. )
			aUsrFil := PswRet(2)[1,6] // Retorna os acessos do usuario

			If  ValType(aUsrFil)== "A" .And. aUsrFil[1] == "@@@@"

				For nB := 1 To len( aLoadSM0 )

						cStr += aLoadSM0[nB][2] + ";" //Filial 

				Next nB

			EndIf

			cStr += aUsrFil //Verificar 

		EndIf	

		If cUsrRules == "2" .Or. Len( aGrpUser ) == 0

			For nB := 1 To len( aUsrFil )

				If Subs(aUsrFil[nB],1 , 4) == Subs(cFilAnt, 1, 4)
					cStr += aUsrFil[nB] + ";"
				EndIf

			Next nB

		Else

			For nB := 1 To Len( aUsrFil )

				For nC := 1 To Len( aUsrFil[nB] )

					If Subs(aUsrFil[nB][nC],1,4) == Subs(cFilAnt,1,4)
						cStr += aUsrFil[nB][nC] + ";"
					EndIf

				Next nC 

			Next nB

		EndIf

	EndIf

	cStr := Subs( cStr, 1, Rat(";", cStr)-1 )
	cRet := FormatIn( cStr , ";" )

Return cRet

Static Function fVisSNM()
Local aArea		:= GetArea()
Local cOldFil	:= cFilAnt
	
	SNM->( DbGoTo((_cAlias)->RECNO) )
	cFilAnt := SNM->NM_Filial
	AxVisual("SNM")
	cFilAnt := cFilAnt
	
	RestArea(aArea)
	oBrowse:Refresh()
	oBrowse:GoTop()
	
Return Nil

Static Function GPEGetEmpr(cEmp)
Local lIsPyme := __lPyme

DEFAULT cEmp := cEmpAnt

cNumEmp := cEmp

If UnCheckStation(cNumEmp) .or. UnCheckStation(cEmpAnt+cFilAnt)	//se for empresa teste forca verificacao de licenca
	__lLogOff := .T.
	__nOldModulo:=999999
EndIf

If SubStr(cEmpAnt,1,2) != SubStr(cNumEmp,1,2)
	cArqTab := ""
	cEmpAnt := Substr(cNumEmp,1,2)
	cFilAnt := Substr(cNumEmp,3,FWGETTAMFILIAL)
	DbCloseAll()
	OpenSm0(cNumEmp)
	OpenFile(cNumEmp)
	If lIsPyme != __lPyme
		CursorWait()
		aMenu:={}
		MsgRun(Space(15)+"Aguarde.....O novo ambiente será inicializado!",,{|| AmbInit()})
		CursorArrow()
	EndIf
Else
	Connect()
	CheckAut(cNumEmp)
	ResetCtb()
EndIf

//Calculo das Data Validas a serem usadas no sistema
aDataIni := DataInicio()
aDataFim := DataFinal()
aTabela22:= DataTabela()

DbSelectArea("SM0")
DbSeek(cNumEmp)
cEmpAnt := SUBSTR(cNumEmp,1,2)
cFilAnt := SUBSTR(cNumEmp,3,FWGETTAMFILIAL)

FWMonitorMsg( "Emp :"+cEmpAnt+"/"+cFIlAnt+" Logged :"+Padr(Subs(cUsuario,7,15),15)+Padr(' SIGA'+cModulo,9)+' Obj :Main Window' )

Return nil
