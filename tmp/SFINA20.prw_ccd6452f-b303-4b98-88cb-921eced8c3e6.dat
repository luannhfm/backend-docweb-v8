#Include "PROTHEUS.CH"

#define COL_SELECAO 01
#define COL_TITULO 02
#define COL_TIPO 03
#define COL_PREFIXO 04
#define COL_PARCELA 05
#define COL_VENCIMENTO 06
#define COL_VALOR 07
#define COL_DECRECIMO 08
#define COL_SALDO 09
#define COL_JUROS 10
#define COL_MULTA 11
#define COL_JUROS_E_MULTA 12
#define COL_DIAS_DE_ATRASO 13
#define COL_PERCENT_DE_DESCONTO 14
#define COL_VALOR_DESCONTO_SOBRE_JUROS 15
#define COL_VALOR_A_RECEBER 16
#define COL_PERCE_DESCONTO_SOBRE_TITULO 17
#define COL_VALOR_DESCONTO_SOBRE_TITULO 18
#define COL_CHAVE_BUSCA_TITULO 19
#define COL_CHAVE_BUSCA_CLIENTE 20
#define COL_PERCENTUAL_DE_JUROS 21
#define COL_RECNO 22
#define COL_DATA_BAIXA_PARCIAL 23
#define COL_DATA_VENCIMENTO 24
#define COL_VALOR_DECRECIMO 25
#define COL_SALDO_DECRESCIMO 26

/*/{Protheus.doc} SFINA20
Processo de Renegociação de Titulos a Receber
@type function
@author Do.It Sistemas
@since 27/03/14
/*/ 
User Function SFINA20()

	Local oDlg, oPn1, oPn2, oPn3, nX
	Local cUni			:= ""
	Local aCol			:= {}
	Local oFnt1			:= TFont():New("Arial Narrow",,018,,.T.,,,,,.F.,.F.)
	Local oBMP			:= LoadBitmap(GetResources(),"")
	Local aArea			:= GetArea()
	Local cTit			:= "RENEGOCIAÇÃO DE TITULOS A RECEBER"
	Private dVenRea		:= CtoD('')
	Private cNom		:= ""
	Private aRow		:= {}
	Private dDat		:= CtoD("//")
	Private nPer		:= 0
	Private nQtd		:= 0
	Private nSaldo		:= 0
	Private nDes		:= 0
	Private nDesTit     := 0
	Private nValDT      := 0
	Private nJur		:= 0
	Private nMul		:= 0
	Private nRec		:= 0
	Private oValDT      := Nil
	Private oBrw		:= Nil
	Private oQtd		:= Nil
	Private oVal		:= Nil
	Private oDes		:= Nil
	Private oDesTit     := Nil 
	Private oJur		:= Nil
	Private oMul		:= Nil
	Private oRec		:= Nil
	PRIVATE cNat		:= Space(10)     
	Private cTexto    	:= ""
	Private cCadastro	:= "Renegociação"
	Private nNumRes		:= GetSX8Len()
	Private nValCruz	:= 0
	Private aHeader	    := {}
	Private aCols		:= {}
	Private aMark		:= {}
	Private cCondicao	:= Space(3)
	Private cPrefix		:= Space(3)
	Private cTipo		:= Criavar ("E1_TIPOFAT")
	Private cFatura		:= ""
	Private cFatAnt		:= ""
	Private cCond		:= Space(3)
	Private nMoedFat	:= 1
	
	Private lUsaGE		:= Upper(AllTrim(FunName())) == "ACAA710"
	Private lOpcAuto	:= .F.
	Private aAutoCab	:= {}
	Private aAutoItens	:= {}
	Private nOpcAuto	:= 0
	Private cAutoFil	:= ""
	Private cNumLiqCan	:= ""
	Private dDCondA   := GetNewPar("MV_XPCDATE")
	Private nPerDesc  := GetNewPar("MV_XPCPERD")
	
	DbSelectArea("SE1")
	If FieldPos("E1_XCHVREN") == 0
		MsgStop("Campo 'E1_XCHVREN' não existente")
		Return
	Endif
		
	SA1->(DbSetOrder(1))
	SA1->(DbSeek(FWxFilial("SA1")+SE1->(E1_CLIENTE+E1_LOJA)))
	
	dDat := dDataBase
	cNom := RTrim( SA1->A1_NOME )
	cUni := AllTrim(cFILANT)+" - "+AllTrim(SM0->M0_NOME)+" - "+AllTrim(SM0->M0_FILIAL)
	
	DEFINE MSDIALOG oDlg TITLE cTit FROM 000, 000  TO 576, 1024 COLORS 0, 16777215 PIXEL
	
	@ 000, 000 MSPANEL oPn1 PROMPT AllTrim(cUni) SIZE 0, 020 OF oDlg COLORS 0, 16777215 FONT oFnt1 CENTERED
	@ 000, 000 MSPANEL oPn2 SIZE 0, 180 OF oDlg
	@ 000, 000 MSPANEL oPn3 PROMPT AllTrim(cNom) SIZE 0, 020 OF oDlg COLORS 0, 16777215 FONT oFnt1 CENTERED
	oPn1:Align := CONTROL_ALIGN_TOP
	oPn2:Align := CONTROL_ALIGN_TOP
	oPn3:Align := CONTROL_ALIGN_TOP
	//Linha 1
	@ 232, 010 SAY "Data Base:"  		 SIZE 060, 007 OF oDlg COLORS 16711680, 16777215 PIXEL
	@ 230, 040 MSGET dDat 				 SIZE 060, 010 OF oDlg COLORS 0, 16777215 VALID IIF(dDat >= DDATABASE,(fRecalc(dDat),.T.),.F.) HASBUTTON PIXEL

	@ 232, 125 SAY "Desc/Tit %:"         SIZE 040, 007 OF oDlg COLORS 16711680, 16777215 PIXEL
	@ 230, 160 MSGET oDesTit VAR nDesTit SIZE 060, 010 OF oDlg PICTURE "999.9999" COLORS 0, 16777215 VALID fRecalc(dDat) HASBUTTON PIXEL

	@ 232, 230 SAY "Desc/JM %:" 		 SIZE 040, 007 OF oDlg COLORS 16711680, 16777215 PIXEL
	@ 230, 270 MSGET nPer  				 SIZE 060, 010 OF oDlg PICTURE "999.9999" COLORS 0, 16777215 VALID fRecalc(dDat) HASBUTTON PIXEL
	
	@ 232, 340 SAY "Quant.:" 			 SIZE 030, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 230, 360 MSGET oQtd VAR nQtd 	     SIZE 030, 010 OF oDlg PICTURE "99999999" COLORS 0, 16777215 READONLY PIXEL
	
	//Linha 2
	@ 252, 010 SAY "Saldo:" 			 SIZE 040, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 250, 040 MSGET oVal VAR nSaldo 	 SIZE 060, 010 OF oDlg PICTURE "999,999,999.99" COLORS 0, 16777215 READONLY PIXEL
	
	@ 252, 125 SAY "Juros:" 			 SIZE 040, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 250, 160 MSGET oJur VAR nJur 	     SIZE 060, 010 OF oDlg PICTURE "999,999,999.99" COLORS 0, 16777215 READONLY PIXEL
	
	@ 252, 230 SAY "Multa:" 			 SIZE 040, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 250, 270 MSGET oMul VAR nMul 	     SIZE 060, 010 OF oDlg PICTURE "999,999,999.99" COLORS 0, 16777215 READONLY PIXEL
	
	//Linha 3
	@ 272, 010 SAY "Desc/Tit R$:"        SIZE 040, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 270, 040 MSGET oValDT  VAR nValDT  SIZE 060, 010 OF oDlg PICTURE "999,999,999.99" COLORS 0, 16777215 READONLY PIXEL
	
	@ 272, 125 SAY "Desc J/M:"		 	 SIZE 040, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 270, 160 MSGET oDes VAR nDes 	     SIZE 060, 010 OF oDlg PICTURE "999,999,999.99" COLORS 0, 16777215 READONLY PIXEL
	
	@ 272, 230 SAY "A Receber:" 		 SIZE 040, 007 OF oDlg COLORS 0, 16777215 PIXEL
	@ 270, 270 MSGET oRec VAR nRec 	     SIZE 060, 010 OF oDlg PICTURE "999,999,999.99" COLORS 0, 16777215 READONLY PIXEL
	
	@ 230, 405 BUTTON "&Marcar Todos"	 SIZE 045, 012 OF oDlg ACTION {|| aEval(aRow, {|e| e[1] := .T.}), nPer := 0, fRecalc(dDat)} PIXEL
	@ 230, 460 BUTTON "&Inverter" 		 SIZE 045, 012 OF oDlg ACTION {|| aEval(aRow, {|e| e[1] := ! e[1]}), nPer := 0, fRecalc(dDat)} PIXEL
	@ 250, 345 BUTTON "Visual. &Cliente" SIZE 045, 012 OF oDlg ACTION fVisual({"SA1",aRow[oBrw:nAt, COL_CHAVE_BUSCA_CLIENTE]}) PIXEL
	@ 250, 405 BUTTON "Visual. &Titulo"  SIZE 045, 012 OF oDlg ACTION fVisual({"SE1",aRow[oBrw:nAt, COL_CHAVE_BUSCA_TITULO]}) PIXEL
	@ 250, 460 BUTTON "Salvar. &Log"	 SIZE 045, 012 OF oDlg ACTION SF20LOG()				PIXEL WHEN ! Empty(cTexto)
	@ 270, 345 BUTTON "Im&primir" 		 SIZE 045, 012 OF oDlg ACTION U_DTFINR02(aRow)	PIXEL
	@ 270, 405 BUTTON "&Efetivar" 		 SIZE 045, 012 OF oDlg ACTION DTFIN02EF(aRow)		PIXEL WHEN ( nRec > 0 )
	@ 270, 460 BUTTON "&Sair" 			 SIZE 045, 012 OF oDlg ACTION oDlg:End()			PIXEL
	
	oBrw := TWBrowse():New(0,0,0,0,,,,oPn2,,,,,,,,,,,,,,.T.)
	oBrw:BHeaderClick := {|o,c| oX:=o, nX:=c, TWBOrder(oX,nX)}
	oBrw:bLDblClick   := {|o,c| aRow[oBrw:nAt,1] := ! aRow[oBrw:nAt,1], fRecalc(dDat) , oRec:SetFocus() , oBrw:SetFocus() }
	oBrw:bRClicked    := {|| lEditCell(@aRow,oBrw,"@E 999.99", COL_PERCENT_DE_DESCONTO), RecalcLin()}
	oBrw:cToolTip     := "Click on header for sorting order"
	oBrw:Align        := CONTROL_ALIGN_ALLCLIENT
	
	//Header Excel
	Aadd(aCol, {"X"					, "", ""					, 05, 0, ".F.", "", "C", "", ""})		//[01] Selecao
	Aadd(aCol, {"Titulo"			, "", "@!"					, 20, 0, ".F.", "", "C", "", ""})		//[02] Titulo
	Aadd(aCol, {"Tipo"				, "", "@!"					, 10, 0, ".F.", "", "C", "", ""})		//[03] Tipo
	Aadd(aCol, {"Prefixo"			, "", "@!"					, 20, 0, ".F.", "", "C", "", ""})		//[04] Prefixo
	Aadd(aCol, {"Parcela"			, "", "@!"					, 20, 0, ".F.", "", "C", "", ""})		//[05] Parcela
	Aadd(aCol, {"Vencimento"		, "", "@!"					, 25, 0, ".F.", "", "D", "", ""})		//[06] Vencimento
	Aadd(aCol, {"Valor"        		, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[07] Valor
	Aadd(aCol, {"Decrescimo"        , "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[08] Decrescimo
	Aadd(aCol, {"Saldo"				, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[09] Saldo
	Aadd(aCol, {"Juros"				, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[10] Juros
	Aadd(aCol, {"Multa"				, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[11] Multa
	Aadd(aCol, {"Juros + Multa"		, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[12] Juros + Multa
	Aadd(aCol, {"Dias Atraso"		, "", "9999"				, 04, 0, ".F.", "", "N", "", ""})		//[13] Dias Atraso	
	Aadd(aCol, {"% Desc. J/M"		, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[14] % de Desconto
	Aadd(aCol, {"Vlr. Desc. J/M"	, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[15] Valor de Desconto
	Aadd(aCol, {"Vlr. a Receber"	, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[16] A Receber
	Aadd(aCol, {"% Desc. Tit."		, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[17] %Desc/Tit.
	Aadd(aCol, {"Vlr. Desc. Tit."	, "", "@E 999,999,999.99"	, 15, 2, ".F.", "", "N", "", ""})		//[18] Desc. Tit.
	
	oBrw:AddColumn(TCColumn():New(aCol[COL_SELECAO, 1],	{|| oBMP:cName:=iif(aRow[oBrw:nAt, COL_SELECAO], "LBOK", "LBNO")}, , , , , aCol[COL_SELECAO,4], .T., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_TITULO, 1], {|| aRow[oBrw:nAt, COL_TITULO] }, aCol[COL_TITULO,3], , , , aCol[COL_TITULO,4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_TIPO, 1], {|| aRow[oBrw:nAt, COL_TIPO]}, aCol[COL_TIPO, 3], , ,	, aCol[COL_TIPO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_PREFIXO, 1], {|| aRow[oBrw:nAt, COL_PREFIXO] }, aCol[COL_PREFIXO, 3], , , , aCol[COL_PREFIXO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_PARCELA, 1], {|| aRow[oBrw:nAt, COL_PARCELA] }, aCol[COL_PARCELA, 3], , , , aCol[COL_PARCELA, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_VENCIMENTO, 1], {|| aRow[oBrw:nAt, COL_VENCIMENTO] }, aCol[COL_VENCIMENTO, 3], , , , aCol[COL_VENCIMENTO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_VALOR, 1], {|| aRow[oBrw:nAt, COL_VALOR] }, aCol[COL_VALOR, 3], , , , aCol[COL_VALOR, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_DECRECIMO, 1], {|| aRow[oBrw:nAt, COL_DECRECIMO] }, aCol[COL_DECRECIMO, 3], , , , aCol[COL_DECRECIMO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_SALDO, 1], {|| aRow[oBrw:nAt, COL_SALDO] }, aCol[COL_SALDO, 3], , , , aCol[COL_SALDO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_JUROS, 1], {|| aRow[oBrw:nAt, COL_JUROS] }, aCol[COL_JUROS, 3], , , , aCol[COL_JUROS, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_MULTA, 1], {|| aRow[oBrw:nAt, COL_MULTA] }, aCol[COL_MULTA, 3], , , , aCol[COL_MULTA, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_JUROS_E_MULTA, 1], {|| aRow[oBrw:nAt, COL_JUROS_E_MULTA] }, aCol[COL_JUROS_E_MULTA, 3], , , , aCol[COL_JUROS_E_MULTA, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_DIAS_DE_ATRASO, 1], {|| aRow[oBrw:nAt, COL_DIAS_DE_ATRASO] }, aCol[COL_DIAS_DE_ATRASO, 3], , , , aCol[COL_DIAS_DE_ATRASO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_PERCENT_DE_DESCONTO, 1], {|| aRow[oBrw:nAt, COL_PERCENT_DE_DESCONTO] }, aCol[COL_PERCENT_DE_DESCONTO, 3], , , , aCol[COL_PERCENT_DE_DESCONTO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_VALOR_DESCONTO_SOBRE_JUROS, 1], {|| aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_JUROS] }, aCol[COL_VALOR_DESCONTO_SOBRE_JUROS, 3], , , , aCol[COL_VALOR_DESCONTO_SOBRE_JUROS, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_VALOR_A_RECEBER, 1],	{|| aRow[oBrw:nAt, COL_VALOR_A_RECEBER] }, aCol[COL_VALOR_A_RECEBER, 3], , , , aCol[COL_VALOR_A_RECEBER, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_PERCE_DESCONTO_SOBRE_TITULO, 1], {|| aRow[oBrw:nAt, COL_PERCE_DESCONTO_SOBRE_TITULO] }, aCol[COL_PERCE_DESCONTO_SOBRE_TITULO, 3], , , , aCol[COL_PERCE_DESCONTO_SOBRE_TITULO, 4], .F., .F., , , , .F., ))
	oBrw:AddColumn(TCColumn():New(aCol[COL_VALOR_DESCONTO_SOBRE_TITULO, 1], {|| aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_TITULO] }, aCol[COL_VALOR_DESCONTO_SOBRE_TITULO, 3], , , , aCol[COL_VALOR_DESCONTO_SOBRE_TITULO, 4], .F., .F., , , , .F., ))
	
	GetRows(@aRow)
	
	fRecalc()
	
	ACTIVATE MSDIALOG oDlg CENTERED
	
	RestArea(aArea)

Return(Nil)

/*/{Protheus.doc} GetRows
Obter Titulos em atraso em carteira do cliente
@type function
@author Do.It Sistemas
@since 17/10/2016
@param aRow, array, array das linhas
@return array, Linhas para preenchimento da grid
@history 30/07/2019, Franklin de Brito de Oliveira, correção na variavel nVlrDesc.
/*/
Static Function GetRows(aRow)

	Local cQry	:= ""
	Local cKey	:= ""
	Local cKeyC	:= ""
	Local cQryIn:= ( MVABATIM + '|' + MVPROVIS + '|' + MVRECANT + '|' + MV_CRNEG )
	local nValorAtual := 0
	
	cQry := CRLF+"SELECT * "
	cQry += CRLF+"FROM " + RetSqlName("SE1") + " "
	cQry += CRLF+"WHERE E1_FILIAL = '" + cFILANT + "' AND "
	cQry += CRLF+"E1_CLIENTE = '" + SE1->E1_CLIENTE + "' AND "
	cQry += CRLF+"E1_LOJA = '" + SE1->E1_LOJA + "' AND "
	cQry += CRLF+"E1_SALDO > 0 AND "
	cQry += CRLF+"E1_TIPO NOT IN "+FormatIn( cQryIn ,'|')+" AND "
	cQry += CRLF+"D_E_L_E_T_ = ' ' "
	
	cQry += CRLF+"ORDER BY E1_FILIAL, E1_PREFIXO, E1_NUM, E1_PARCELA"
	
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),"SE1TMP",.T.,.F.)
	
	aRow := {}
	
	While SE1TMP->(!Eof())		
		cKey	:= SE1TMP->(E1_FILIAL + E1_PREFIXO + E1_NUM + E1_PARCELA + E1_TIPO)
		cKeyC	:= FWxFilial("SA1") + SE1TMP->(E1_CLIENTE + E1_LOJA)
		
		if Empty(SE1TMP->E1_BAIXA)
			if (SE1TMP->E1_VALOR-SE1TMP->E1_DECRESC)==SE1TMP->E1_SALDO
				nValorAtual := SE1TMP->E1_SALDO
			else
				nValorAtual := SE1TMP->E1_VALOR-SE1TMP->E1_DECRESC
			endif
		else
			nValorAtual := SE1TMP->E1_SALDO
		endif

		aAdd(aRow, {;
						.F.,;												//[01] Selecao
						SE1TMP->E1_NUM,;									//[02] Titulo
						SE1TMP->E1_TIPO,;									//[03] Tipo
						SE1TMP->E1_PREFIXO,;								//[04] Prefixo
						SE1TMP->E1_PARCELA,;								//[05] Parcela
						STOD(SE1TMP->E1_VENCTO),;							//[06] Vencimento
						SE1TMP->E1_VALOR,;									//[07] Valor
						SE1TMP->E1_DECRESC,;								//[08] Decrescimo
						nValorAtual,;										//[09] Saldo
						0,;													//[10] Juros
						0,;													//[11] Multa
						0,;													//[12] Juros + Multa
						dDataBase - StoD(SE1TMP->E1_VENCTO),;				//[13] Dias Atraso
						000,;												//[14] % de Desconto
						0,;													//[15] Valor de Desconto
						0,;													//[16] A Receber
						0,;													//[17]  
						0,;													//[18]
						cKey,;												//[19] Chave de busca financeiro
						cKeyC,;												//[20] Chave de busca cliente
						SE1TMP->E1_PORCJUR,;								//[21] Percentual de juros
						SE1TMP->R_E_C_N_O_ ,;								//[22] R_E_C_N_O_
						StoD(SE1TMP->E1_BAIXA),;							//[23] Data Baixa Parcial
						StoD(SE1TMP->E1_VENCTO),;							//[24] Data Vencimeto 
						0,;													//[25] Valor de desconto
						SE1TMP->E1_SDDECRE;									//[26] Saldo Decrescimo
					})	
		SE1TMP->( dbSkip() )
	EndDo

	SE1TMP->(DbCloseArea())

Return(aRow)

/*/{Protheus.doc} fRecalc
Recalcula os valores 
@type function
@author Do.It Sistemas
@since 14/10/2016
@param dDtBase, date, data de referência
/*/
Static Function fRecalc(dDtBase,lZPer)

	Local nX		:= 0
	local nK := 0
	Local nAtraso	:= 0
	Local nPerJur	:= 0
	Local nMultas	:= 0
	Local nPerMul	:= GETMV("MV_LJMULTA",.F.,0)
	Local lDescTit  := .F. 
	Local aDescTit  := {}
	DEFAULT lZPer   := .F.
	DEFAULT dDtBase := dDatabase
	
	Store 0 To nQtd , nSaldo ,nDes , nJur , nMul , nRec, nValDT

	For nX := 1 To Len(aRow)
		If !aRow[nX, COL_SELECAO]
			Loop
		EndIf

		nAtraso :=  (dDtBase - aRow[nX, COL_VENCIMENTO])

		If nAtraso > 0
			nAtraso := (dDtBase - aRow[nX, COL_VENCIMENTO])
			nPerJur := aRow[nX, COL_PERCENTUAL_DE_JUROS] * nAtraso
			If Empty(aRow[nX, COL_DATA_BAIXA_PARCIAL])
				nMultas := Round(aRow[nX, COL_SALDO] * (nPerMul/100),2)
			Else
				nMultas := 0	
			EndIf
		Else
			nMultas := 0
			nPerJur := 0
		Endif
		
		//Ajusta Linhas
		aRow[nX, COL_JUROS]  := Round((aRow[nX, COL_SALDO] * nPerJur)/100, 2)
		aRow[nX, COL_MULTA]  := nMultas
		aRow[nX, COL_JUROS_E_MULTA]	:= aRow[nX, COL_JUROS] + aRow[nX, COL_MULTA]
		aRow[nX, COL_DIAS_DE_ATRASO] := nAtraso
		aRow[nX, COL_VALOR_A_RECEBER] := aRow[nX, COL_SALDO] + aRow[nX, COL_JUROS_E_MULTA] - aRow[nX, COL_VALOR_DECRECIMO]
		
		//Desc/JM %
		If nPer > 0
			aRow[nX, COL_PERCENT_DE_DESCONTO] := nPer
			aRow[nX, COL_VALOR_DESCONTO_SOBRE_JUROS] := Round((aRow[nX, COL_JUROS_E_MULTA] * nPer)/100, 2)
			aRow[nX, COL_VALOR_A_RECEBER] := aRow[nX, COL_VALOR_A_RECEBER] - aRow[nX, COL_VALOR_DESCONTO_SOBRE_JUROS]
		ElseIf nPer == 0
			aRow[nX, COL_PERCENT_DE_DESCONTO] := nPer
			aRow[nX, COL_VALOR_DESCONTO_SOBRE_JUROS] := 0
			aRow[nX, COL_VALOR_A_RECEBER] := aRow[nX, COL_VALOR_A_RECEBER] - aRow[nX, COL_VALOR_DESCONTO_SOBRE_JUROS]
		EndIf
		
		//Desc/Tit %
		If nDesTit > 0 	
			If aRow[nX, COL_VENCIMENTO] <= dDCondA .And. nDesTit <= nPerDesc
				nValReal := Round((aRow[nX, COL_SALDO] * nDesTit)/100, 2)
				aRow[nX, COL_VALOR_A_RECEBER] -= nValReal									
				aRow[nX, COL_PERCE_DESCONTO_SOBRE_TITULO] := nDesTit
				aRow[nX, COL_VALOR_DESCONTO_SOBRE_TITULO] := nValReal
				lDescTit    := .T.
				aAdd(aDescTit,{aRow[nX, COL_SALDO]})
			ElseIf nDesTit > nPerDesc	 
				aRow[nX, COL_PERCE_DESCONTO_SOBRE_TITULO] := 0		
				aRow[nX, COL_VALOR_DESCONTO_SOBRE_TITULO] := 0				
			EndIf
		ElseIf nDesTit == 0
			aRow[nX, COL_PERCE_DESCONTO_SOBRE_TITULO] := 0		
			aRow[nX, COL_VALOR_DESCONTO_SOBRE_TITULO] := 0
		EndIf
		
		nQtd += 1

		//Ajusta Totais
		nSaldo += aRow[nX, COL_SALDO]
		nJur += aRow[nX, COL_JUROS]
		nMul += aRow[nX, COL_MULTA]
		nDes += aRow[nX, COL_VALOR_DESCONTO_SOBRE_JUROS]
		nRec += aRow[nX, COL_VALOR_A_RECEBER]
	Next nX
	
	If nDesTit > 0 .And. nDesTit <= nPerDesc .And. lDescTit
		nValReal := 0		
		For nK := 1 To Len(aDescTit)
			nValReal += Round((aDescTit[nK][1] * nDesTit)/100, 2) 	
		Next nK
		nValDT += nValReal	
	ElseIf !lDescTit
		nDesTit := 0			 
	EndIf

	oBrw:SetArray(aRow)
	oBrw:Refresh()
	oQtd:Refresh()
	oVal:Refresh()
	oDes:Refresh()
	oJur:Refresh()
	oMul:Refresh()
	oRec:Refresh()
	
Return Nil

/*/{Protheus.doc} fVisual
Visualizar o titulo
@type function
@author Do.It Sistemas
@since 17/10/2016
@param aKey, array, chave do registro
/*/
Static Function fVisual(aKey)

	Local aArea := GetArea()
	
	If aKey[1] == "SA1"
		dbSelectArea("SA1")
		SA1->(dbSetOrder(1))
		If dbSeek(aKey[2])
			AxVisual("SA1", SA1->(RECNO()), 2)
		EndIf
	Else
		dbSelectArea("SE1")
		SE1->(DbSetOrder(1))
		If SE1->(DbSeek(aKey[2]))
			AxVisual("SE1", SE1->(RECNO()), 2)
		Endif
	Endif
	
	RestArea(aArea)
	
Return(Nil)

/*/{Protheus.doc} TWBOrder
Ordenar colunas
@type function
@author Do.It Sistemas
@since 17/10/2016
@param o, object, Descrição do parâmetro
@param n, numeric, Descrição do parâmetro
/*/
Static Function TWBOrder(o,n)

	Local cX := iif(Empty(o:aheaders), o:aColumns[n]:cHeading, o:aheaders[n])
	iif(Empty(o:Cargo), o:Cargo:={0,0}, Nil)
	If o:Cargo[2] == 0 .Or. o:Cargo[1] != n
		ASORT(o:aArray,,,{|x,y| x[n] < y[n]})
		o:Cargo := {n,1}
	Else
		ASORT(o:aArray,,,{|y,x| x[n] < y[n]})
		o:Cargo := {n,0}
	Endif
	o:cToolTip:="Rows: ("+AllTrim(Transform(Len(o:aArray),"@E 999,999,999"))+") Order: "+AllTrim(cX)+" by "+iif(o:cargo[2]==0, "Desc.", "Asc.")
	o:Refresh()
	
Return(Nil)

/*/{Protheus.doc} DTFIN02EF
Efetiva negociação
@type function
@author Do.It Sistemas
@since 17/10/2016
@param aDados, array, dados da negociação
/*/
Static Function DTFIN02EF(aDados)

	Default aDados := {}
	
	If MsgYesNo("Deseja realmente efetivar esta operação?")
		BeginTran()
			MsgRun("Executando Liquidação do(s) Título(s) e Gerando novas parcelas...","Liquidação de Títulos",{||DTFIN02GR(aDados)})
		EndTran()
	Else
		Return
	EndIf
		
	GetRows(@aRow)
	fRecalc(dDat)

Return(Nil)

/*/{Protheus.doc} RecalcLin
Recalcula a linha
@type function
@author Do.It Sistemas
@since 17/10/2016
/*/
Static Function RecalcLin()

	Local nX		:= 0
	
	nValReal        := aRow[oBrw:nAt, COL_SALDO]
	
	If aRow[oBrw:nAt,1]
		//Valor de Desconto
		aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_JUROS] := Round((aRow[oBrw:nAt, COL_JUROS_E_MULTA] * aRow[oBrw:nAt, COL_PERCENT_DE_DESCONTO])/100, 2)
		
		//Desc. Tit.
		If aRow[oBrw:nAt, COL_VENCIMENTO] <= dDCondA
			aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_TITULO] := Round((aRow[oBrw:nAt, COL_SALDO] * aRow[oBrw:nAt, COL_PERCE_DESCONTO_SOBRE_TITULO])/100, 2)
		else
			aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_TITULO] := 0
		endif
		//A Receber
		aRow[oBrw:nAt, COL_VALOR_A_RECEBER] := (aRow[oBrw:nAt, COL_SALDO] + aRow[oBrw:nAt, COL_JUROS_E_MULTA]) - ;
			(aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_JUROS] + aRow[oBrw:nAt, COL_VALOR_DESCONTO_SOBRE_TITULO] + aRow[oBrw:nAt, COL_VALOR_DECRECIMO])
		
	EndIf
	
	nQtd := nSaldo := nJur := nMul := nRec := nDes := 0
	
	For nX := 1 To Len(aRow)
		If aRow[nX, 1]
			nQtd++
			nDes += aRow[nX, COL_VALOR_DESCONTO_SOBRE_JUROS]
			nSaldo += aRow[nX, COL_SALDO]
			nJur += aRow[nX, COL_JUROS]
			nMul += aRow[nX, COL_MULTA]
			nRec += aRow[nX, COL_VALOR_A_RECEBER]
		EndIf
	Next nX
	
	oBrw:SetArray(aRow)
	oBrw:Refresh()
	oQtd:Refresh()
	oVal:Refresh()
	oDes:Refresh()
	oJur:Refresh()
	oMul:Refresh()
	oRec:Refresh()
	
Return(Nil)

/*/{Protheus.doc} DTFIN02GR
Grava a negociação
@type function
@author Do.It Sistemas
@since 17/10/2016
@param aDados, array, dados da negociação
/*/
Static Function DTFIN02GR(aDados)

	Local aArea				:= GetArea()
	Local oButtonFe			:= Nil 
	Local oButtonOk 		:= Nil 
	Local oCondL 			:= Nil  
	Local oGetCond			:= Nil 
	Local cKey       		:= ""
	Local nOpc				:= 0
	Local cTxtBx			:= ""
	Local cTxtCli			:= ""
	Local cTxtMov			:= ""
	Local cTxtTit			:= ""
	Local nX				:= 0
	Local nI				:= 0
	Local i				:= 0
	Local aFields			:= {"E1_PREFIXO","E1_TIPO","E1_NATUREZ","E1_NUM","E1_PARCELA","E1_CLIENTE","E1_LOJA","A1_NOME","E1_VENCTO","E1_VALOR"}
	Local aBaixar			:= {}
	Local aItens			:= {}
	Local cNumLiq			:= ''
	Local lRet				:= .T.
	Local aLiqAnt			:= {}
 	Local oFnt			  := TFont():New("Arial Narrow",,018,,.T.,,,,,.F.,.F.)

	Private oDlgParc 		:= Nil  
	Private oMSNewGe1		:= Nil 
	Private cNatureza		:= SuperGetMv("MV_XNATREN",.T.,"1000000000") // Natureza da Renegociação. Para alterar o conteúdo, basta criar o parâmetro
	Private cCli			:= SE1->E1_CLIENTE
	Private cLoja			:= SE1->E1_LOJA
	Private aParcelas		:= {}
	Private aHeader		    := {}
	Private aCols			:= {}
	Private nMoeda			:= 1
	
	_SetOwnerPrvt( "nDecresc", 0 )

	cTexto := "" //LOG
	
	/* Jose Leite - CSI - 20-03-15
		OBS: Realiza verificacao se algum titulo que esta sendo negociado, esta no SPC/SERASA.
		Solicitante: Jorge Ascencio
	*/
	
	For i := 1 to Len(aDados)
		If !aDados[i,1] // ignora desmarcados
			Loop
		Else
			DbSelectArea("SE1")
			DbGoTo(aDados[i, COL_RECNO])
			If( SE1->(Recno()) == aDados[i, COL_RECNO] )	
				_cTitSpc := AllTrim(SE1->E1_FILIAL) +"|"+ AllTrim(SE1->E1_PREFIXO) + "|" + AllTrim(SE1->E1_NUM) + "|" + AllTrim(SE1->E1_PARCELA) + "|" + AllTrim(SE1->E1_TIPO)
				If SE1->E1_XSPC == 'S' .AND. SE1->E1_XCOBJ == 'S' 
					Alert("O Título "+ _cTitSpc +" são de SPC/SERASA e Cobrança Judicial, logo, não é possível realizar a negociação, favor verificar!")
					Return( Nil )
				ElseIf SE1->E1_XSPC == 'S'
					Alert("O Título "+ _cTitSpc +" é de SPC/SERASA, logo, não é possível realizar a negociação, favor verificar!")
					Return( Nil )
				ElseIf SE1->E1_XCOBJ == 'S'
					Alert("O Título "+ _cTitSpc +" é de Cobrança Judicial, logo, não é possível realizar a negociação, favor verificar!")
					Return( Nil )
				EndIf

				/*
					Nome      : Carlos Ryve
					Data/Time : 27/11/19 as 11:00
					Projeto   : Sustentacao
					Descrição : Tratativa para que considere o valor de descrescimo do titulo
											**Sempre devera ser considerado este valor**
				*/
				nDecresc += SE1->E1_SDDECRE
				//nRec -= SE1->E1_SDDECRE

			EndIf
		EndIf
	Next

	DbSelectArea("SX3")
	SX3->(DbSetOrder(2))
	For nX := 1 to Len(aFields)
		If SX3->(DbSeek(aFields[nX]))
			Aadd(aHeader, {	AllTrim(X3Titulo()),SX3->X3_CAMPO,SX3->X3_PICTURE,SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,;
			SX3->X3_USADO,SX3->X3_TIPO,SX3->X3_ARQUIVO,SX3->X3_CONTEXT,SX3->X3_RELACAO})
		Endif
	Next nX
	
	aCols := Array(1,Len(aHeader) + 1)
	aCols[1,Len(aHeader) + 1] := .F.
	For nX := 1 to Len(aHeader)
		aCols[1,nX] :=  CriaVar(aHeader[nX,2],.T.)
	Next nX
	
	DEFINE MSDIALOG oDlgParc TITLE "Condição de Pagamento - Renegociação" FROM 000, 000  TO 335, 755 COLORS 0, 16777215 PIXEL
	
		cTxtDecr := ""
		If nDecresc > 0
			cTxtDecr := "Descréscimo aplicado" + Transform( nDecresc, GetSx3Cache("E1_DECRESC","X3_PICTURE"))
		EndIf
		@ 000, 000 MSPANEL oPn1 PROMPT cTxtDecr SIZE 0, 030 OF oDlgParc COLORS CLR_RED FONT oFnt CENTERED
		oPn1:Align := CONTROL_ALIGN_TOP

	@ 015, 011 SAY oCondL PROMPT "Cond. Pagto:"	SIZE 035, 007 OF oPn1 COLORS 0, 16777215 PIXEL
	@ 013, 046 MSGET oGetCond VAR cCondicao		SIZE 020, 010 OF oPn1 PICTURE "@!" VALID IIf( Empty(cCondicao) , .T. ,(ExistCpo("SE4",cCondicao) .And. SE4->E4_TIPO != "9") .And. F20Cond(cCondicao,nRec)) COLORS 0, 16777215 F3 "SE4" PIXEL


	oMSNewGe1 := MsNewGetDados():New( 029, 007, 144, 369, 0, "AllwaysTrue", "AllwaysTrue", "", "",, 999, "AllwaysTrue", "", "AllwaysTrue", oDlgParc, aHeader, aCols)
	
	@ 149, 287 BUTTON oButtonOk PROMPT "Confirmar"	SIZE 037, 012 OF oDlgParc ACTION (oDlgParc:End(), nOpc := 1) PIXEL
	@ 149, 329 BUTTON oButtonFe PROMPT "Fechar"		SIZE 037, 012 OF oDlgParc ACTION (oDlgParc:End(), nOpc := 2) PIXEL
	
	ACTIVATE MSDIALOG oDlgParc CENTERED
	
	If nOpc == 1
		
		cNumLiq := GetSXENum('Z05', 'Z05_CODIGO')

		For nI := 1 to Len(aCols)

			aAdd(aItens, {'E1_NUM'		, aCols[nI][04]	,Nil})
			aAdd(aItens, {'E1_PREFIXO'	, aCols[nI][01]	,Nil})
			aAdd(aItens, {'E1_TIPO'		, aCols[nI][02]	,Nil})
			aAdd(aItens, {'E1_NATUREZ'	, cNatureza		,Nil})
			aAdd(aItens, {'E1_CLIENTE'	, SE1->E1_CLIENTE,Nil})
			aAdd(aItens, {'E1_LOJA'		, SE1->E1_LOJA	,Nil})
			aAdd(aItens, {'E1_EMISSAO'	, dDataBase		,Nil})
			aAdd(aItens, {'E1_VENCTO'	, aCols[nI][09]	,Nil})
			aAdd(aItens, {'E1_PARCELA'	, aCols[nI][05]	,Nil})
			aAdd(aItens, {'E1_VLCRUZ'	, aCols[nI][10]	,Nil})
			aAdd(aItens, {'E1_VALOR'	, aCols[nI][10]	,Nil})
			aAdd(aItens, {'E1_ACRESC'	, 0				,Nil})
			aAdd(aItens, {'E1_DECRESC'	, 0				,Nil})
			aAdd(aItens, {'E1_NUMLIQ' 	, " "			,Nil})
			aAdd(aItens, {'E1_XNLIQ'  	, cNumLiq		,Nil})
			aAdd(aItens, {'CBCOAUTO'  	, ''			,Nil})
			aAdd(aItens, {'CAGEAUTO'  	, ''			,Nil})
			aAdd(aItens, {'CCTAAUTO'  	, ''			,Nil})
			
			aAdd(aAutoItens, aItens)

			aItens := {}
			
		Next

		dbSelectArea('SE1')
		SE1->(dbSetOrder(1))

		For nI := 1 to Len(aRow)

			If aRow[nI, COL_SELECAO]
				dbGoTo(aRow[nI, COL_RECNO])
				aAdd(aLiqAnt, SE1->E1_XNLIQ)
				RecLock("SE1", .F.)
					SE1->E1_XNLIQ := cNumLiq
					SE1->E1_XCHVREN := FWxFilial("SE1") + aCols[1, 1] + aCols[1, 4] + aCols[1, 2]
					SE1->(MsUnLock())
				aAdd(aBaixar, {;
								{"E1_FILIAL",       xFilial('SE1'), 			Nil},;
								{"E1_PREFIXO",      aRow[nI, COL_PREFIXO],		Nil},;
								{"E1_NUM",          aRow[nI, COL_TITULO],		Nil},;
								{"E1_PARCELA",      aRow[nI, COL_PARCELA],		Nil},;
								{"E1_TIPO",         aRow[nI, COL_TIPO],			Nil},;
								{"E1_CLIENTE",      SE1->E1_CLIENTE, 			Nil},;
								{"E1_LOJA",         SE1->E1_LOJA,    			Nil},;
								{'E1_XNLIQ',        cNumLiq,        			Nil},;
								{'E1_DECRESC',      aRow[nI, COL_DECRECIMO],	Nil},;
								{"AUTDESCONT",      aRow[nI, COL_VALOR_DESCONTO_SOBRE_JUROS]+aRow[nI, COL_VALOR_DESCONTO_SOBRE_TITULO],	Nil},;
								{"AUTJUROS",        aRow[nI, COL_JUROS],  		Nil},;
								{"AUTMULTA",        aRow[nI, COL_MULTA],	  	Nil},;
								{"AUTMOTBX",        'REN',             			Nil},;
								{"AUTBANCO",        '',                			Nil},;
								{"AUTAGENCIA",      '',                			Nil},;
								{"AUTCONTA",        '',                			Nil},;
								{"AUTDTBAIXA",      dDataBase,         			Nil},;
								{"AUTDTCREDITO",	dDataBase,         			Nil},;
								{"AUTHIST",         '',                			Nil},;
								{"AUTVALREC",       aRow[nI, COL_VALOR_A_RECEBER], Nil};
							})

			EndIf

		Next

		cKey := xFilial('SE1') + aCols[01, 01] + aCols[01, 04] + aCols[01, 05] + 'REN'
		lRet := u_SFFNBX1A(aAutoItens, 3, aBaixar, 3, 'SFINA20', aLiqAnt)		

		While GetSX8Len() > nNumRes

			If lRet
				ConfirmSx8()
			Else
				RollbackSx8()
			EndIf

		End

		If lRet
			U_DTFINR03(cKey, aDados)
		EndIf

	EndIf
	
	cTexto := cTxtBx + cTxtCli + cTxtMov + cTxtTit

	RestArea(aArea)

Return

/*/{Protheus.doc} F20Cond
Condição
@type function
@author Do.It Sistemas
@since 17/10/2016
@param cCondicao, character, Descrição do parâmetro
@param nRec, numeric, Descrição do parâmetro
/*/
Static Function F20Cond(cCondicao,nRec)

	Local cNum := F20Num()
	local nI := 0
	
	aParcelas := Condicao(nRec, cCondicao, , dDat)
	aCols := {}
	
	For nI := 1 To Len(aParcelas)	
		Aadd(aCols, {"REN", "REN", cNatureza, cNum, StrZero(nI, TamSX3("E1_PARCELA")[1]), cCli, cLoja, cNom, aParcelas[nI , 1], aParcelas[nI, 2], .F.})
	Next nI
	
	oMSNewGe1:aCols := aClone(aCols)
	oMSNewGe1:oBrowse:Refresh(.T.)
	
Return(.T.)

/*/{Protheus.doc} F20Num
Recupera o próximo numero de titulo do tipo REN
@type function
@author Do.It Sistemas
@since 17/10/2016
/*/
Static Function F20Num()

	Local cRet	:= ""
	Local cQry	:= ""
	
	cQry := " SELECT MAX(E1_NUM) E1_NUM"
	cQry += " FROM " + RetSqlName("SE1")
	cQry += " WHERE E1_FILIAL = '" + FWxFilial("SE1") + "' AND E1_TIPO = 'REN' AND D_E_L_E_T_ = ' ' "

	cQry := ChangeQuery(cQry)

	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),"TRBSE1",.F.,.T.)

	If TRBSE1->(!Eof())

		cRet := Soma1(TRBSE1->E1_NUM)

	Else

		cRet := StrZero(1,tamSX3("E1_NUM")[1])

	EndIf

	dbSelectArea("TRBSE1")

	TRBSE1->(dbCloseArea())

Return(cRet)

/*/{Protheus.doc} SF20LOG
Salva o log
@type function
@author Do.It Sistemas
@since 17/10/2016
/*/

Static Function SF20LOG()

	Local cFile  := ""
	Local cMask  := "Arquivo Texto (*.TXT) |*.txt|"
	Local oMemo	 := Nil     

	cTexto := "Log" + CRLF + Replicate("=", 20) + CRLF + cTexto
	DEFINE FONT oFont NAME "Mono AS" SIZE 8,13
	DEFINE MSDIALOG oDlg TITLE "[ LOG ]" From 3,0 to 340,417 PIXEL
	@ 5,5 GET oMemo VAR cTexto MEMO SIZE 200,145 OF oDlg PIXEL
	oMemo:bRClicked := {||AllwaysTrue()}
	oMemo:oFont:=oFont
	DEFINE SBUTTON  FROM 153,175 TYPE 1 ACTION oDlg:End() ENABLE OF oDlg PIXEL 
	DEFINE SBUTTON  FROM 153,145 TYPE 13 ACTION (cFile:=cGetFile(cMask,""), iif(Empty(cFile),.T.,MemoWrite(cFile,cTexto))) ENABLE OF oDlg PIXEL //"Salvar"

	ACTIVATE MSDIALOG oDlg CENTER

Return(Nil)


/*/{Protheus.doc} fGravaZZU
Funcao resposavel por realizar a gravacao dos dados de renegociacao - SGE
@type function
@author Jose Leite de Barros Neto
@since 	12/12/2016
/*/
Static Function fGravaZZU()
	
	Local _cE1Filial	:= SE1->E1_FILIAL
	Local _cE1Prefix	:= SE1->E1_PREFIXO
	Local _cE1Numero	:= SE1->E1_NUM
	Local _cE1Parcel	:= SE1->E1_PARCELA
	Local _cE1Tipo		:= SE1->E1_TIPO
	Local _cE5Seq		:= ""
	Local _cE5MotBx		:= ""
	Local _cE1ChvRen	:= FWxFilial("SE1")+aCols[1,1]+aCols[1,4]+aCols[1,2]
	Local _nChvE5		:= 0
	
	DbSelectArea('SE5') //E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO
	SE5->(DbSetOrder(7))
	SE5->(DbGoTop())
	While SE5->(DbSeek( _cE1Filial + _cE1Prefix + _cE1Numero + _cE1Parcel + _cE1Tipo ))
		if _nChvE5 == SE5->(RECNO())
			Exit
		EndIf
		_nChvE5 := SE5->(RECNO())
		SE5->(DbSkip())
	EndDo
	SE5->(DbGoTo(_nChvE5))
	_cE5Seq		:= SE5->E5_SEQ
	_cE5MotBx	:= SE5->E5_MOTBX
	
	DbSelectArea('SE1') //E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO
	SE1->(DbSetOrder(1))
	SE1->(DbGoTop())
	If SE1->(DbSeek( _cE1Filial + _cE1Prefix + _cE1Numero + _cE1Parcel + _cE1Tipo ))
		DbSelectArea('ZZU')
		ZZU->( DbSetOrder(1) ) //ZZU_FILIAL + ZZU_PREFIXO + ZZU_NUMERO + ZZU_PARCELA + ZZU_TIPO
		ZZU->( DbGoTop() )
		If RecLock('ZZU',.T.)
			ZZU->ZZU_FILIAL	:= _cE1Filial 
			ZZU->ZZU_PROBX 	:= '1'
			ZZU->ZZU_PREFIX	:= _cE1Prefix
			ZZU->ZZU_NUMERO	:= _cE1Numero
			ZZU->ZZU_PARCEL	:= _cE1Parcel
			ZZU->ZZU_TIPO	:= _cE1Tipo
			ZZU->ZZU_SEQBX	:= _cE5Seq
			ZZU->ZZU_MOTBX	:= _cE5MotBx
			If _cE5MotBx = 'REN'
				ZZU->ZZU_CHVREN	:= _cE1ChvRen
			EndIf
			ZZU->( MsUnlock() )
		EndIf
		ZZU->( DbCloseArea() )
	EndIf
Return 
