#Include "Protheus.ch"

/*/{Protheus.doc} SF0103X
Funcao para impressao do Relatório de Bens Duráveis Adquiridos - Bens Duráveis Customizados.
	
@author 	José Leite de Barros Neto
@since 		28/10/2013
@version 	1.0		

@return Nil, Nulo

@author 	Walmir Gonçalves da Silva Junior
@since 		23/05/2016
@version 	2.0		

@return Nil, Nulo
/*/

User Function SF0103X()

	Private cPerg 		:= "SF0103X"
	Private cCadastro	:= "Impressão de Relatório de Bens Duráveis Adquiridos"
	Private aSays		:= {}
	Private aButtons	:= {}
	Private nOpca 		:= 0
	Private oPrint
	//Private nCont		:= 0
	Private nContLoc	:= 0

	// Funcao para criacao das perguntas.
	fCriaSx1()

	// Forca o usuario a preencher as perguntas.
	If .Not. Pergunte(cPerg,.t.)
		Return
	EndIf

	AADD(aSays,"Este programa irá realizar a impressão dos Termos," )
	AADD(aSays,"de responsabilidade Ativo Fixo." )

	AADD(aButtons, { 5,.T.,{|| Pergunte(cPerg,.T. )}})
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,FechaBatch()}})
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )

	If nOpca == 1

		If ApMsgYesNo("Confirma impressão do Termo ?","Confirmar")
			Processa({|| fimprime()})
		EndIf
	
	EndIf

Return( Nil )

/** {Protheus.doc} fImprime
Funcao para impressao do relatorio

@param: 	<Nil>
@author 	José Leite de Barros Neto
@since 	28/10/2013
@Uso: 		SFIEMT
*/	
Static Function fImprime()

	Local _cQuery	:= ""
	Local _cCodResp	:= ""
	Local _cDescLoc	:= ""
	Local _lPrimeiro	:= .T.
	Local _cWhere	:= ""
	Local nVlrTotal	:= 0
//	Local nVlrResid	:= 0
	
	Private oCour07N 	:= TFont():New("Courier New",07,07,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour08N 	:= TFont():New("Courier New",08,08,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour09N 	:= TFont():New("Courier New",09,09,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour10N 	:= TFont():New("Courier New",10,10,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour12N 	:= TFont():New("Courier New",12,12,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oCour14N 	:= TFont():New("Courier New",14,14,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oFont8		:= TFont():New("Arial",08,08,.T.,.F.,5,.T.,5,.T.,.F.)
	Private oArial08N	:= TFont():New("Arial",08,08,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial10N	:= TFont():New("Arial",10,10,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial12N	:= TFont():New("Arial",10,12,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial14N	:= TFont():New("Arial",13,14,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial16N	:= TFont():New("Arial",14,16,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial20N	:= TFont():New("Arial",18,20,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oArial21N	:= TFont():New("Arial",19,21,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime08N	:= TFont():New("Time New Roman",08,08,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime09N	:= TFont():New("Time New Roman",09,09,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime10N	:= TFont():New("Time New Roman",10,10,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime12N	:= TFont():New("Time New Roman",12,12,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime14N	:= TFont():New("Time New Roman",14,14,.T.,.T.,5,.T.,5,.T.,.F.)
	Private oTime16N	:= TFont():New("Time New Roman",16,16,.T.,.T.,5,.T.,5,.T.,.F.)
	Private nRowIni 	:= 010
	Private nColIni 	:= 050
	Private nColFim 	:= 2300
	Private nRowFim 	:= 3250
	Private nRowAtu 	:= 0
	Private _cAlias	:= ""

	nRowAtu := nRowIni
	
	If .Not. Empty(AllTrim(mv_par09))
		_cWhere := "	AND ZEA_DESC LIKE '%" + AllTrim(MV_PAR09) + "%' "
		_cWhere := "%" + _cWhere + "%"
	Else
		_cWhere := "	AND 1=1 "
		_cWhere := "%" + _cWhere + "%"
	EndIf

	_cAlias := GetNextAlias()

	BeginSql Alias _cAlias
	
		Column ZEA_DTAQUI		as Date
		Column TOTAL 			as Numeric(14,2)
		Column RESIDUAL 		as Numeric(14,2)

		SELECT ZEA_CODIGO, 
			ZEA_CODRES, 
			ZEA_DESC, 
			ZEA_LOCAL, 
			ZEA_DTAQUI, 
			ZEA_PRCAQS,
			RD0_NOME, 
			RD0_TIPO
			
		FROM %Table:ZEA% ZEA
	 
		INNER JOIN %Table:RD0% RD0 ON  RD0_FILIAL	= %xFilial:RD0% AND RD0_CODIGO = ZEA_CODRES AND RD0.%NotDel%
		
		WHERE 	ZEA_FILORI = %Exp:cFilAnt%
				AND ZEA_DTAQUI BETWEEN %Exp:MV_PAR07% AND %Exp:MV_PAR08%
				AND ZEA_CODRES BETWEEN %Exp:MV_PAR01% AND %Exp:MV_PAR02%
				AND ZEA_CODIGO BETWEEN %Exp:MV_PAR03% AND %Exp:MV_PAR04%
				AND ZEA_LOCAL BETWEEN %Exp:MV_PAR05% AND %Exp:MV_PAR06%
				AND ZEA_SITBEM = 'A'
				AND ZEA.%NotDel%
	      		
	      		%Exp:_cWhere%
	      		
		ORDER BY ZEA_CODRES, ZEA_LOCAL, ZEA_CODIGO

	EndSql
	
	MemoWrite("c:/temp/SF0103X.sql",  GetLastQuery()[2])

	While .Not. (_cAlias)->(Eof())
		
		If _lPrimeiro
	
			oPrint := TMSPrinter():New( "Relatório de Bens Duráveis Adquiridos" )
			oPrint:SetPortrait()
			_lPrimeiro := .F.
		
		EndIf
	
		_cCodResp	:= (_cAlias)->ZEA_CODRES
		_cLocal	:= (_cAlias)->ZEA_LOCAL
		
		fForm()
		
		While .Not. (_cAlias)->(Eof()) .And. (_cAlias)->ZEA_CODRES == _cCodResp

			If (_cAlias)->ZEA_LOCAL == _cLocal
			
				nContLoc++
				
				nVlrTotal += (_cAlias)->ZEA_PRCAQS
				//wjr* nVlrResid += (_cAlias)->RESIDUAL
			
			EndIf
						
			If nRowAtu > (nRowFim-0250) .Or. (_cAlias)->ZEA_LOCAL <> _cLocal
			
				If (_cAlias)->ZEA_LOCAL <> _cLocal
					
					oPrint:Say(nRowFim-0220,nColIni+0010,"Quantidade de Bens por Local: "+cValtoChar(nContLoc),oArial08N) 
					nContLoc	:= 0
					
					oPrint:Say(nRowFim-0220,nColIni+1740,Transform( nVlrTotal, "@E 999,999,999.99" ),oArial08N) 
					nVlrTotal	:= 0
				
					//oPrint:Say(nRowFim-0220,nColIni+2020,Transform( nVlrResid, "@E 999,999,999.99" ),oArial08N) 
					//nVlrResid	:= 0
					
					/* Inutilizo linhas em branco */	
					While nRowAtu < (nRowFim-0250)		
						
						InutLinha()
						
					EndDo	
				
					_cLocal	:= (_cAlias)->ZEA_LOCAL
				
					If (_cAlias)->ZEA_LOCAL == _cLocal
				
						nContLoc++
						
						nVlrTotal += (_cAlias)->ZEA_PRCAQS
						//wjr* nVlrResid += (_cAlias)->RESIDUAL
					
					EndIf
				
				EndIf
				
				oPrint:EndPage()
				
				fForm()
				
			EndIf
			
			oPrint:Say(nRowAtu,nColIni+0010, AllTrim((_cAlias)->ZEA_CODIGO  )	,oCour08N)
			oPrint:Say(nRowAtu,nColIni+0300, AllTrim((_cAlias)->ZEA_DESC 	)	,oCour08N)
			oPrint:Say(nRowAtu,nColIni+1490, DToC((_cAlias)->ZEA_DTAQUI)		,oCour08N)
			oPrint:Say(nRowAtu,nColIni+1740,Transform( (_cAlias)->ZEA_PRCAQS, "@E 999,999,999.99" ),oCour08N)
			
			nRowAtu += 0050
		
			(_cAlias)->(DbSkip())
		End
	
		/* Inutilizo linhas em branco */
		While nRowAtu < (nRowFim-0250)	
			
			InutLinha()
			
		EndDo	
	
		If (_cAlias)->ZEA_CODRES <> _cCodResp
		
			oPrint:Say(nRowFim-0230,nColIni+0010,"Quantidade de Bens do Responsável: "+cValtoChar(nContLoc),oArial08N)
			nContLoc	:= 0
			
			oPrint:Say(nRowFim-0230,nColIni+1740,Transform( nVlrTotal, "@E 999,999,999.99" ),oArial08N)
			nVlrTotal	:= 0
			
			//oPrint:Say(nRowFim-0230,nColIni+2020,Transform( nVlrResid, "@E 999,999,999.99" ),oArial08N)
			//nVlrResid	:= 0

			nRowAtu += 0150
			
		EndIf
	
		oPrint:EndPage()
	
	End

	(_cAlias)->(DbCloseArea())

	If .Not. _lPrimeiro
		oPrint:EndPage()
		oPrint:Preview()     // Visualiza antes de imprimir
	EndIf

Return( Nil )

/** {Protheus.doc} fImprime
Funcao para montagem do formulario

@param: 	<Nil>
@author 	José Leite de Barros Neto
@since 	28/10/2013
@Uso: 		SFIEMT
*/
Static Function fForm()

	oPrint:StartPage()
	
	CabPagina(oPrint)
	
	oPrint:Box(nRowIni,nColIni,nRowFim-0250,nColFim)
	oPrint:Say(nRowIni+0210,nColIni+0010, "Eu, " + AllTrim( (_cAlias)->RD0_NOME ) + ", declaro pelo presente relatório, que estou ciente das minhas responsabilidades sobre os bens ", oCour08N)
	oPrint:Say(nRowIni+0240,nColIni+0010, "relacionados neste documento, cujas especificações foram devidamente conferidas e os mesmos encontram-se em condições de uso. Estou ciente ", oCour08N)
	oPrint:Say(nRowIni+0270,nColIni+0010, "também que procedimentos relacionados à estes bens deverão obedecer a Instrução de Trabalho correspondente.",oCour08N)
	
	_cDescLoc := AllTrim( Posicione("SNL",1,xFilial("SNL")+(_cAlias)->ZEA_LOCAL,"NL_DESCRIC") )
	
	oPrint:Say(nRowIni+0350,nColIni+0010,"Localização: " + (_cAlias)->ZEA_LOCAL + " - " + _cDescLoc ,oCour08N)
	
	oPrint:Line(nRowIni+0440,nColIni,nRowIni+0440,nColFim)
	oPrint:Say(nRowIni+0405,nColIni+0040,"Código do Bem"	,oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+0600,"Descrição"		,oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+1500,"Dt de Aquis."		,oArial08N)
	oPrint:Say(nRowIni+0405,nColIni+1780,"Valor Total"		,oArial08N)

	_nFinal := (nRowFim-0220) 

	For _nZ := nRowIni+440 To _nFinal Step 50
		oPrint:Line(_nZ,nColIni,_nZ,nColFim)
	Next _nZ

	oPrint:Line(nRowIni+0400,nColIni+0290,nRowFim-0250,nColIni+0290)
	oPrint:Line(nRowIni+0400,nColIni+1450,nRowFim-0250,nColIni+1450)
	oPrint:Line(nRowIni+0400,nColIni+1690,nRowFim-0250,nColIni+1690)


	oPrint:Box(nRowFim-0150,nColIni,nRowFim+0045,(nColFim/2)-0010)
	oPrint:Say(nRowFim-0130,nColIni+0010,"Responsável pela Entrega",oArial10N)
	oPrint:Say(nRowFim-0020,ncolIni+0010,"Em:____/____/____   Assinatura:________________________________________",oArial08N)


	oPrint:Box(nRowFim-0150,(nColFim/2)+0010,nRowFim+0045,nColFim)
	oPrint:Say(nRowFim-0130,(nColFim/2)+0020,"Nome: " + (_cAlias)->RD0_NOME,oArial10N)
	oPrint:Say(nRowFim-0020,(nColFim/2)+0020,"Em:____/____/____   Assinatura:______________________________________",oArial08N)
	
	nRowAtu := nRowIni+0450

Return( Nil )

/*/{Protheus.doc} CabPagina
	Função para impressão do cabeçalho da página

@author Franklin de Brito de Oliveira
@since 26/06/2015
@param oPrinter, objeto, Objeto de impressão

--------------------------------------------------
@author Walmir Junior
@since 23/05/2016
@version 1.1
@param oPrinter, objeto, Objeto de impressão

Adequação ao TMSPrinter.

@return Nil

/*/
Static Function CabPagina(oPrinter)
Local oFont11		:= TFont():New('Arial',,11,.T.)

oPrinter:Box(nRowIni, nColIni, nRowIni+200, nColIni+300)
oPrinter:SayBitmap(nRowIni+5, nColIni+5, "lgrl01.bmp", 290, 190 )

oPrinter:Box(nRowIni, nColIni+300, nRowIni+200, nColFim)
oPrinter:Say(nRowIni+50,	nRowIni+1200, "RELATÓRIO DE BENS DURÁVEIS ADQUIRIDOS", oArial14N, 800, 0, , 2)

Return (Nil)

/** {Protheus.doc} fCriaSx1
Funcao para criacao das perguntas

@param: 	<Nil>
@author 	Jose Leite de Barros Neto
@since 	28/10/2013
@Uso: 		SFIEMT
*/
Static Function fCriaSx1()

	//???????????????????????????????
	//?MV_PAR01  Responsavel de     ?
	//?MV_PAR02  Responsavel ate    ?
	//?MV_PAR03  Codigo do Bem de   ?
	//?MV_PAR04  Codigo do Bem ate  ?
	//?MV_PAR05  Local do bem de    ?
	//?MV_PAR06  Local do bem ate   ?
	//?MV_PAR07  Data de			?
	//?MV_PAR08  Data até			?
	//?MV_PAR09  Descricao Sintetica?
	//???????????????????????????????

	u_SFPUTSX1( cPerg, "01","Responsavel de "		,"","","mv_ch1" ,"C",TamSX3("RD0_CODIGO")[1]	,0,0,"G","","RD0"	,"","","mv_par01","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "02","Responsavel ate"		,"","","mv_ch2" ,"C",TamSX3("RD0_CODIGO")[1]	,0,0,"G","","RD0"	,"","","mv_par02","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "03","Codigo Bem de	"		,"","","mv_ch3" ,"C",TamSX3("ZEA_CODIGO")[1]	,0,0,"G","","ZEA"	,"","","mv_par03","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "04","Codigo Bem ate	"		,"","","mv_ch4" ,"C",TamSX3("ZEA_CODIGO")[1]	,0,0,"G","","ZEA"	,"","","mv_par04","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "05","Local de       "		,"","","mv_ch5" ,"C",TamSX3("ZEA_LOCAL")[1]		,0,0,"G","","SNL"	,"","","mv_par05","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "06","Local ate      "		,"","","mv_ch6" ,"C",TamSX3("ZEA_LOCAL")[1]		,0,0,"G","","SNL"	,"","","mv_par06","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "07","Data de		"		,"","","mv_ch7" ,"D",TamSX3("ZEA_DTAQUI")[1]	,0,0,"G","",""		,"","","mv_par07","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "08","Data ate		"		,"","","mv_ch8" ,"D",TamSX3("ZEA_DTAQUI")[1]	,0,0,"G","",""		,"","","mv_par08","","","","","","","","","","","","","","","","",{},{},{})
	u_SFPUTSX1( cPerg, "09","Descrição Sintética"	,"","","mv_ch9" ,"C",0050						,0,0,"G","",""		,"","","mv_par09","","","","","","","","","","","","","","","","",{},{},{})	
	
Return( Nil )


/*/{Protheus.doc} InutLinha
Função para inutilizar linhas não preenchidas

@author franklin.oliveira
@since 01/09/2015
@version 1.0
/*/
Static Function InutLinha()

	oPrint:Say(nRowAtu, nColIni+0030, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+0320, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+1505, Replicate("-", 5), oCour08N)
	oPrint:Say(nRowAtu, nColIni+1800, Replicate("-", 5), oCour08N)
	
	nRowAtu += 0050
	
Return (Nil)
