#INCLUDE "RWMAKE.CH"
#INCLUDE "PROTHEUS.CH"

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  袖ICOMA45  態utor  彪laudinei Ferreira  � Data �  06/11/11   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     處rowse de Prestacao de Contas							      滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       蛀specifico CNI (Controle de Viagens)                        滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/

User Function SICOMA45()

Private cCadastro:= "Presta誽o de Contas"
Private aRotina	:= MenuDef()
Private lUsrAprv:= ''
Private cTpUsr	:= '' 

aCores:={{'ZAA_STATUS=="1"'	,'BR_LARANJA'},;  //Acerto de Viagem em Aberto
		 {'ZAA_STATUS=="2"'	,'BR_CINZA'	 },;  //Aguardando Aprova誽o do Gestor
         {'ZAA_STATUS=="3"'	,'LIGHTBLU'	 },;  //Reprovada pelo Gestor
		 {'ZAA_STATUS=="4"'	,'BR_PINK'	 },;  //Enviada para Financeiro
		 {'ZAA_STATUS=="5"'	,'BR_AZUL'	 },;  //Reprovado pelo Financeiro
		 {'ZAA_STATUS=="7"'	,'BR_AMARELO'},;  //Solicitacao Cancelada
		 {'ZAA_STATUS=="6"'	,'DISABLE'	 }}   //Finalizada
		 
//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
//覓erifica se usuario possui cadastro de Aprovador�
//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
Private lUsrApPC:=IIF(!Empty(Posicione('SAK',2,xFilial('SAK')+__cUserID,"AK_USER")),.T.,.F.)

lUsrAprv:=IIF(!Empty(Posicione('SAK',2,xFilial('SAK')+__cUserID,"AK_USER")),.T.,.F.)

//矬闡闡闡闡闡闡闡闡闡闡闡闡�
//覓erifica tipo do usuario �
//斂闡闡闡闡闡闡闡闡闡闡闡闡�
cTpUsr	:= Posicione('ZA8',2,xFilial('ZA8')+__cUserID,"ZA8_TIPO")

MBrowse(6,1,22,75,"ZAA",,,,,,aCores)

Return

/*/
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控矬闡闡闡闡鐃闡闡闡闡闡薩闡闡闡薩闡闡闡闡闡闡闡闡闡闡闡薩闡闡鐃闡闡闡闡闡膨�
控袈rograma  蛉enuDef   � Autor � TOTVS     			� Data �16/10/2012陰�
控藥闡闡闡闡霰闡闡闡闡闡謐闡闡闡謐闡闡闡闡闡闡闡闡闡闡闡謐闡闡鐘闡闡闡闡闡敢�
控蛇escri��o � Utilizacao de menu Funcional                               陰�
控藥闡闡闡闡霰闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡敢�
控袒etorno   莧rray com opcoes da rotina.                                 陰�
控斂闡闡闡闡鐘闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡棱�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
/*/

Static Function MenuDef()

Private aRotina	:= {}

//矬闡闡闡闡闡闡闡闡闡闡�
//� Inicializa aRotina  �
//斂闡闡闡闡闡闡闡闡闡闡�
aAdd(aRotina,{"Pesquisar", 			"AxPesqui"   	, 0 , 1, 0, .F.}) 	//"Pesquisar"
aAdd(aRotina,{"Visualiza",			"U_A45MntSV"	, 0 , 2, 0, nil}) 	//"Visualiza"
aAdd(aRotina,{"Lan蓷r Despesas",	"U_A45MntSV"	, 0 , 3, 0, nil}) 	//"Acerto de Viagem"
aAdd(aRotina,{"Finalizar",			"U_A45Final"	, 0 , 4, 0, nil}) 	//"Finalizar"
aAdd(aRotina,{"Legenda", 			"U_A45Legenda"	, 0 , 2, 0, .F.})	//"Legenda"

Return(aRotina)

/*/
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控
控矬闡闡闡闡鐃闡闡闡闡闡薩闡闡闡薩闡闡闡闡闡闡闡闡闡闡闡薩闡闡鐃闡闡闡闡闡醴控
控蚶un��o    莧45Legend 莧utor  � Claudinei Ferreira    � Data �16.10.2012 陰�
控藥闡闡闡闡霰闡闡闡闡闡謐闡闡闡謐闡闡闡闡闡闡闡闡闡闡闡謐闡闡鐘闡闡闡闡闡譬控
控�          蛇emonstra a legenda das cores da mbrowse                     陰�
控藥闡闡闡闡霰闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡譬控
控袈arametros術enhum                                                       陰�
控藥闡闡闡闡霰闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡譬控
控袒etorno   術enhum                                                       陰�
控藥闡闡闡闡霰闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡譬控
控蛇escri��o 蛀sta rotina monta uma dialog com a descricao das cores da    陰�
控�          蛉browse.                                                     陰�
控藥闡闡闡闡霰闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡譬控
控袋so       � CNI-Solicitacao de Viagens e Fundo Fixo                     陰�
控斂闡闡闡闡鐘闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁控
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔
/*/

User Function A45Legend()

Local aCores := {}

aCores := {{'BR_LARANJA',	"Acerto de Viagem em aberto"},;    
           {'BR_CINZA',		"Aguardando Aprova誽o do Gestor"},;
	       {'LIGHTBLU',		"Reprovada pelo Gestor"},;
	       {'BR_PINK' ,     "Enviada para Financeiro"},;
	       {'BR_AZUL' ,     "Reprovado pelo Financeiro"},;
	       {'BR_AMARELO' ,   "Solicita誽o Cancelada"},;
	       {'DISABLE' ,     "Finalizada"}}

BrwLegenda("","Presta誽o de Contas",aCores)

Return                                                                           

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45MntSV  態utor  彪laudinei Ferreira  � Data �  01/12/11   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     袒otina para manutencao na Prestacao de Contas				  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       蛀specifico CNI (Controle de Viagens)                        滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/

User Function A45MntSV(cAlias, nReg, nOpc)

Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local aInfo     := {}
Local lMemory   := .F.
Local aNoFields := {}
Local nOpcx		:= 4 //Altera
Local nOpcI		:= 3 //Inclui
Local aButtons  := {}

If lUsrApPC .or. cTpUsr=='4'
  Aadd(aButtons, {'PMSAPONT'    ,{||oGetPCD:oBrowse:lDisablePaint:=.F.,A45AprovPC()} ,"Aprovar"})
  Aadd(aButtons, {'SDUSOFTSEEK',{||oGetPCD:oBrowse:lDisablePaint:=.F.,A45ReprvPC()} ,"Reprovar"})
Endif

//Acerto de Viagem em Aberto/Despesas Reprovadas/Reprovado pelo Financeiro
If !ZAA->ZAA_STATUS $ '1/3/5' .and. nOpc = 3
	MsgInfo("O Status desta Presta誽o de Contas n緌 permite altera踥es.","Aviso")
Else
	If ZAA->ZAA_TPSOL $ '1/2'
		//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
		//� Calculo automatico de dimensoes de objetos �
		//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .T., .T. } )
		AAdd( aObjects, { 100, 090, .T., .F. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}} )
		
		DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL STYLE nOR( WS_VISIBLE ,DS_MODALFRAME )
		
		//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
		//� Salva a integridade dos campos de Bancos de Dados    �
		//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
		dbSelectArea("ZAA")
		dbSetOrder(1)
		
		//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡�
		//� Criar uma nova instancia de variaveis private       �
		//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡�
		RegToMemory( "ZAA", .F., .F. )
		
		//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
		//� Filtros para montagem do aCols                       �
		//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
		cSeek  := xFilial("ZAB")+ZAA->ZAA_NUM
		bWhile := "ZAB_FILIAL+ZAB_NUM"
		
		FillGetDados(nOpcx,"ZAB",1,cSeek,{|| &bWhile },,aNoFields,,,,,,,,)
		aCols[1][1] := If(Empty(aCols[1][1]),"001",aCols[1][1])
		
		oGetPC	:= MSMGet():New( "ZAA", nReg, nOpcx, , , , , aPosObj[1],,/*nOpcx*/,,,/*"A415VldTOk"*/)
		
		If nOpc = 2
			oGetPCD	:= MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],2,,,,.F.,,,.F.,,,,,)
		Else
			oGetPCD	:= MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcx,"U_A45LinOk", /*"U_A43udoOk"*/, "+ZAB_ITEM",.T.,,,.T.,,"U_A45FieldOK","U_A45ADel", ,/*"U_A43DelOK"*/)
		Endif
		
		M->ZAA_DTEMIS:=If(Empty(DTOC(ZAA->ZAA_DTEMIS)),DDataBase,ZAA->ZAA_DTEMIS)
		
		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpcx := 1,If(oGetPCD:TudoOk(),oDlg:End(),nOpcx := 0)},{||oDlg:End()},,aButtons) CENTERED
		
		If nOpcx == 1 .AND. nOpc == 3
			U_A45Inclui()
		Endif
	Else
		MsgInfo("Para Solicita誽o de Ajuda de Custo, n緌 haver� Presta誽o de Contas.","Aviso")
	Endif
Endif

Return


/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  袖ITpUsr   態utor  彪laudinei Ferreira  � Data �  01/12/11   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     覓erifica o tipo de usuario para habilitar campo ZAA_VLRHSP  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       蛀specifico CNI (Controle de Viagens)                        滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/
  
User Function SITpUsr()

Local lRet	:= .F.

lAprv	:= GrpGestPC()

If (Empty(cTpUsr) .Or. cTpUsr=='3') .AND. !lAprv
	lRet:=.T.
Endif


Return(lRet)         

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  蛄rpGestPC 態utor  彪laudinei Ferreira  � Data �  22/11/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     蛄rupo de Gestores para aprovacao					    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/

Static Function GrpGestPC()

Local cUO		:= ZAA->ZAA_CC
Local cCR		:= ZAA->ZAA_ITEM
Local cTpVg		:= ZAA->ZAA_TPVIAG
Local cGrpAp	:= ''
Local aAprv		:= {}
Local lRet		:= .F. 

DbSelectArea('ZA5')
ZA5->(DbSetOrder(1))
ZA5->(DbSeek(xFilial("ZA5")+cUO+cCR+cTpVg))
cGrpAp:=ZA5->ZA5_GRPAPR

DbSelectArea('SAL')
SAL->(DbSetOrder(1))
SAL->(DbSeek(xFilial('ZA5')+cGrpAp))
SAL->(dbEval({|| AADD(aAprv,{AL_USER,U_MailUser(AL_USER)})},, {|| AL_FILIAL+AL_COD == xFilial('ZA5')+cGrpAp }))

lRet := Ascan(aAprv,{|x| x[2] == __cUserID}) = 0

Return (lRet)

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45FieldOK態utor  彪laudinei Ferreira  � Data �  22/11/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     覓alidacao conforme o GET editado					    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/

User Function A45FieldOK

Local lRet		:= .T.
Local cDtInicial:= ZAA->ZAA_DTINI
Local cDtFinal	:= ZAA->ZAA_DTFIM
Local nPMoe    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_MOED"})

Do Case
	Case "ZAB_DATA" $ Alltrim(ReadVar())
		If &(ReadVar()) > cDtFinal .OR. &(ReadVar()) < cDtInicial
			MsgStop("A data informada deve corresponder a Dt.Inicial/Dt.Final da Solicita誽o","Data Inv嫮ida")
			lRet:= .F.
		Endif
	Case "ZAB_TAXA" $ Alltrim(ReadVar())
		If &(ReadVar()) > 0 .AND. aCols[n][nPMoe]  == '1'
			MsgStop("A Taxa deve ser informada somente quando a MOEDA utilizada � diferente de 1=REAL!","Aten誽o")
			lRet:= .F.
		Endif
EndCase
	
Return(lRet)   

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45LinOk  態utor  彪laudinei Ferreira  � Data �  22/11/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     覓alidar linha do aCols							    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/

User Function A45LinOk

Local lRet		:= .T.
Local cDtInicial:= ZAA->ZAA_DTINI
Local cDtFinal	:= ZAA->ZAA_DTFIM
Local nPData 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_DATA"})
Local nPVlr   	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_VALOR"})
Local nPMoe    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_MOED"})
Local nPTx    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_TAXA"})
Local nVlTotDesp:= 0

If aCols[n][nPData] > cDtFinal .OR. aCols[n][nPData] < cDtInicial
	MsgStop("A data informada deve corresponder a Dt.Inicial/Dt.Final da Solicita誽o","Data Inv嫮ida")
	lRet:= .F.
Endif

If !aCols[n][nPMoe] == '1' .AND. aCols[n][nPTx] = 0
	MsgStop("Ao utilizar a MOEDA diferente de REAL deve ser informado a Taxa !","Aten誽o")
	lRet:= .F.
Endif

Return(lRet)   

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45ADel   態utor  彪laudinei Ferreira  � Data �  22/11/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     覓alidar linha do aCols							    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/

User Function A45ADel

Local lRet		:= .T.
Local nPVlr   	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_VALOR"})
Local nPMoe    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_MOED"})
Local nPTx    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_TAXA"})
Local nVlTotDesp:= M->ZAA_VLTDES

Return(lRet)   

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45Inclui 態utor  彪laudinei Ferreira  � Data �  02/11/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     蛆nclusao de Itens da Presatacao de Contas			    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/
User Function A45Inclui()

Local nPItem 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_ITEM"})
Local nPData 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_DATA"})
Local nPDesp 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_DESPES"})
Local nPQtd  	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_QUANT"})
Local nPVlr   	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_VALOR"})
Local nPMoe    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_MOED"})
Local nPTx    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_TAXA"})
Local nPObs    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_OBS"})
Local nPCC    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_CC"})
Local nPConta  	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_CONTA"})
Local nPItemCT 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_ITEMCT"})
Local nPClas   	:= aScan(aHeader,{|x| AllTrim(x[2]) == "ZAB_CLASSE"})
Local lFindPCta	:= .F.
Local nVlTot	:= 0
Local lGeraFin	:= .F.
Local nDifPC	:= 0
Local cNrSol	:= ZAA->ZAA_NUM
Local cEmail	:= ''

Begin Transaction

dbSelectArea("ZAB")
ZAB->(DbSetOrder(1))

For nX:=1 to Len(aCols)
	
	lFindPCta:= DbSeek(xFilial("ZAB")+ZAA->ZAA_NUM+aCols[nX][nPItem])
	
	If !lFindPCta
		RecLock("ZAB",.T.)
	Else
		RecLock("ZAB",.F.)
	Endif
	
	If !aCols[nX][Len(aCols[n])]
		
		ZAB->ZAB_FILIAL	:= xFilial("ZAA")
		ZAB->ZAB_NUM   	:= ZAA->ZAA_NUM
		ZAB->ZAB_ITEM  	:= aCols[nX][nPItem]
		ZAB->ZAB_DATA  	:= aCols[nX][nPData]
		ZAB->ZAB_DESPES	:= aCols[nX][nPDesp]
		ZAB->ZAB_QUANT 	:= aCols[nX][nPQtd]
		ZAB->ZAB_VALOR  := aCols[nX][nPVlr]
		ZAB->ZAB_MOED  	:= aCols[nX][nPMoe]
		ZAB->ZAB_TAXA  	:= aCols[nX][nPTx]
		ZAB->ZAB_OBS   	:= aCols[nX][nPObs]
		ZAB->ZAB_CC    	:= aCols[nX][nPCC]
		ZAB->ZAB_CONTA 	:= aCols[nX][nPConta]
		ZAB->ZAB_ITEMCT	:= aCols[nX][nPItemCT]
		ZAB->ZAB_CLASSE	:= aCols[nX][nPClas]
		
		nVlTot+=	aCols[nX][nPVlr]
		
	ElseIf aCols[nX][Len(aCols[n])] .and. lFindPCta
		dbDelete()
	Endif
	ZAB->(MsUnlock())
	
Next nX

DbSelectArea("ZAA")
RecLock("ZAA",.F.)
Replace ZAA->ZAA_VLTDES 	With nVlTot
Replace ZAA->ZAA_VLRHSP 	With M->ZAA_VLRHSP
Replace ZAA->ZAA_DTEMIS 	With M->ZAA_DTEMIS
Replace ZAA->ZAA_BANCO 		With M->ZAA_BANCO
Replace ZAA->ZAA_AGENCIA 	With M->ZAA_AGENCIA
Replace ZAA->ZAA_CONTA 		With M->ZAA_CONTA
Replace ZAA->ZAA_STATUS 	With '1'
ZAA->(MsUnlock())
End Transaction

If MsgYesNo("Confirma envio da Presta誽o de Contas para aprova誽o do Gestor ?","Aten誽o")
	//Localiza Gestores
	aAprv:=u_GrpGestor()
	
	For nX:=1 to Len(aAprv)
		cEmail:= IIf(Empty(cEmail),AllTrim(aAprv[nX][2]),cEmail+ ";" + AllTrim(aAprv[nX][2]))
	Next
	
	//Envia e-mail para Aprovacao do Gestor
	cMensagem:= U_Geramail(cNrSol,ZAA->ZAA_OBJETI)
	FSSendMail( cEmail, "Aprova誽o da Presta誽o de Contas: "+cNrSol, cMensagem )
	
	dbSelectArea("ZAA")
	RecLock("ZAA",.F.)
	Replace ZAA_STATUS With '2' //Aguardando Aprovacao do Gestor
	ZAA->(MsUnlock())
Endif

Return

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45AprovPC態utor  彪laudinei Ferreira  � Data �  02/12/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     莧provacao do Gestor na Prestacao de Contas		    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/
Static Function A45AprovPC

Local cCodUsr
Local Email	 :=''
Local aFinPC := {}
Local cTitulo:= ''
Local cStatus:= ''
Local cPrefNDF	:= GetMv("SI_XPRC",.F.,"PRC")
Local cPrefDP	:= GetMv("SI_XDP",.F.,"DP")
Local cTpTitulo	:= GetMv("SI_XTPTITV",.F.,"DP")

//Contabilizacao
Local cArquivo := ''
Local nTotal   := 0
Local nHdlPrv
Private lMsErroAuto := .F.
Private cLote

Begin Transaction
If ZAA_STATUS $ '2/4' //Aguardando Aprovacao do Gestor/Enviada para Financeiro
	cNrSol:=ZAA->ZAA_NUM
	cMensagem:= U_Geramail(cNrSol,ZAA->ZAA_OBJETI)
	
	//Verifica usuario que incluiu Solicitacao para envio do Email
	cCodUsr	 := Posicione("ZA6",1,xFilial("ZA6")+ZAA->ZAA_NUM+ZAA->ZAA_FORNEC+ZAA->ZAA_LOJA,"ZA6_USRINC")
	cEmail	 := U_MailUser(cCodUsr)
	
	If cTpUsr == '4' .And. ZAA_STATUS == '4'//ADM PC (Aprovador de Prestacao de Contas)
		cStatus:='6' //Finalizada
		cTitulo	 := "Prest.Contas - Finalizada: "
		
		nDifPC:= ZAA->ZAA_ADIANT - ZAA->ZAA_VLTDES
		cParcela := "001"									// Parcela do Titulo
		
		If  nDifPC > 0
			lGeraFin := .T.
			cPrefixo := cPrefNDF								// Prefixo do Titulo
			cTipo    := 'NDF'									// Tipo do Titulo
			nValor   := nDifPC									// Valor do titulo
			cHist    := "Saldo de Adiantamento"					// Historico
			
			//Grava campos para atender contabiliza誽o de Despesas
			DbSelectArea("ZAA")
			RecLock("ZAA",.F.)
			Replace ZAA->ZAA_CTBPRF	With cPrefixo
			Replace ZAA->ZAA_CTBCR	With nValor
			Replace ZAA->ZAA_CTBPAR	With cParcela
			ZAA->(MsUnlock())
		Else
			lGeraFin := .T.
			cPrefixo := cPrefDP								  // Prefixo do Titulo
			cTipo    := cTpTitulo							  // Tipo do Titulo
			nValor   := -1*(nDifPC)							  // Valor do titulo
			cHist    := "Adiantamento de Despesas"			  // Historico
			
			//Grava campos para atender contabiliza誽o de Despesas
			DbSelectArea("ZAA")
			RecLock("ZAA",.F.)
			Replace ZAA->ZAA_CTBPRF	With cPrefixo
			Replace ZAA->ZAA_CTBFOR	With nValor
			Replace ZAA->ZAA_CTBPAR	With cParcela
			ZAA->(MsUnlock())
		Endif
				
		If lGeraFin
			cNum     := cNrSol									// Numero do Titulo
			cFornece := ZAA->ZAA_FORNEC							// Codigo do FORNECEDOR
			cLoja    := ZAA->ZAA_LOJA							// Loja do FORNECEDOR
			dEmissao := ddataBase								// Data de emissao
			dVencto  := DDatabase+1								// Data do vencimento
			dVencRea := DDatabase+1								// Vencimento Real
			
   			If ZAA->ZAA_TPSOL	== '3' //AJC  
             	//cNaturez := '10009003'
             	//cNaturez := '2070201'        
             	cNaturez := Alltrim(GetMv("MV_XNATAJC"))     	
             Elseif ZAA->ZAA_TPSOL 	== '2' //DIA
             	//cNaturez := '10009001'
             	//cNaturez := '2070201'             	
             	cNaturez := Alltrim(GetMv("MV_XNATDIA"))
             Elseif ZAA->ZAA_TPSOL 	== '1' //FFX
             	//cNaturez := '10009001'
             	//cNaturez := '2070201'
             	cNaturez := Alltrim(GetMv("MV_XNATFFX"))
             Endif
                
			cContaD  := ZAA->ZAA_CONTA      					// Conta Debito
			cCCustoD := ZAA->ZAA_CC								// Centro de Custo de Debito
			cItemD   := ZAA->ZAA_ITEM							// Item Contabil de Debito
			nMoeda	:= ZAA->ZAA_MOEDA							// Moeda
			citem    := ZAA->ZAA_ITEM                          // Item Contabil
			cClasVlr := ZA6->ZA6_CLASSE		// Classe de Valor
			cBanco	:= ZAA->ZAA_BANCO						    // Banco
			cAgencia := ZAA->ZAA_AGENCI                        // Agencia
			cConta	:= ZAA->ZAA_NUMCON                        // Conta
			cDvAg	 := ZA6->ZA6_XDVAGE		// Digito Agencia
			cDvCta	 := ZA6->ZA6_XDVCTA		// Dv Conta


			
			If nValor <> 0
			
				aColsSE2 := {}
				
				aAdd(aColsSE2,{"E2_FILIAL"		,xFilial("SE2")	,Nil}) // Codigo da Filial
				aAdd(aColsSE2,{"E2_PREFIXO"		,cPrefixo		,Nil}) // Prefixo do Titulo
				aAdd(aColsSE2,{"E2_NUM"			,cNum			,Nil}) // Numero do Titulo
				aAdd(aColsSE2,{"E2_PARCELA"		,cParcela		,Nil}) // Parcela do pedido
				aAdd(aColsSE2,{"E2_TIPO"		,cTipo			,Nil}) // Tipo do Titulo
				aAdd(aColsSE2,{"E2_NATUREZ"		,cNaturez	    ,Nil}) // Natureza
				aAdd(aColsSE2,{"E2_FORNECE"		,cFornece		,Nil}) // Codigo do FORNECEDOR
				aAdd(aColsSE2,{"E2_LOJA"		,cLoja			,Nil}) // Loja do FORNECEDOR
				aAdd(aColsSE2,{"E2_EMISSAO"		,dEmissao		,Nil}) // Data de emissao
				aAdd(aColsSE2,{"E2_VENCTO"		,dVencto		,Nil}) // Data do vencimento
				aAdd(aColsSE2,{"E2_VENCREA"		,dVencRea		,Nil}) // Vencimento Real
				aAdd(aColsSE2,{"E2_MOEDA"		,Val(nMoeda)	,Nil}) // Moeda
				aAdd(aColsSE2,{"E2_VALOR"		,nValor			,Nil}) // Valor do titulo
				aAdd(aColsSE2,{"E2_SALDO"		,nValor			,Nil}) // Saldo do titulo
				aAdd(aColsSE2,{"E2_CONTAD" 		,cContaD   		,Nil}) // Conta de Debito
				aAdd(aColsSE2,{"E2_CCD" 		,cCCustoD  		,Nil}) // Centro de Custo de Debito
				aAdd(aColsSE2,{"E2_ITEMD" 		,cItemD  		,Nil}) // Item Contabil de Debito
				aAdd(aColsSE2,{"E2_XBANCO"		,cBanco			,Nil}) // Banco
				aAdd(aColsSE2,{"E2_XAGENC"		,cAgencia		,Nil}) // Agencia
				aAdd(aColsSE2,{"E2_XDVAGE"  	,cDvAg  	,Nil}) // DV Agencia						
				aAdd(aColsSE2,{"E2_XNUMCON"		,cConta			,Nil}) // Numero da Conta
				aAdd(aColsSE2,{"E2_XDVCTA"  	,cDvCta   	,Nil}) // DV Numero da Conta
				aAdd(aColsSE2,{"E2_CCD	"		,cCCustoD		,Nil}) // UO
				aAdd(aColsSE2,{"E2_CLVLDB"   	,cClasVlr   	,Nil}) // Classe de Valor
				aAdd(aColsSE2,{"E2_ITEMD"		,cItem			,Nil}) // Item Contabil
				aAdd(aColsSE2,{"E2_HIST"		,cHist			,Nil}) // Historico
				aAdd(aColsSE2,{"E2_LA"			,'S'			,Nil}) // Historico
				
				MSExecAuto({|x,y,z| FINA050(x,y,z)},aColsSE2,3)
				
				If lMsErroAuto
					DisarmTransaction()
					MostraErro()
				Else
					lMsErroAuto := .F.
				Endif                 
			EndIf
		Endif
	Elseif /*cTpUsr == '2' .And. ZAA_STATUS == '2'*/lUsrAprv
		cStatus:='4' //Enviada para Financeiro
		cTitulo	 := "Prest.Contas - Env.p/ Financeiro: "
		
		//Enviar E-mail para financeiro
		cTp:= '4'
		cEmail:= ''
		
		BEGINSQL ALIAS "TRBAPPC"
			
			SELECT
			ZA8_EMAIL
			FROM  %table:ZA8% ZA8
			WHERE  ZA8.%notDel%
			AND ZA8_FILIAL  = %exp:xFilial("ZA8")%
			AND ZA8_TIPO = %exp:cTp%
			
		ENDSQL
		
		TRBAPPC->(dbEval({|| AADD(aFinPC,{ZA8_EMAIL})},, {|| !EOF() }))
		TRBAPPC->(DbCloseArea())
		
		For nX:=1 to Len(aFinPC)
			cEmail:= IIf(Empty(cEmail),AllTrim(aFinPC[nX][1]),cEmail+ ";" + AllTrim(aFinPC[nX][1]))
		Next
  		
  		FSSendMail( cEmail, cTitulo+cNrSol, cMensagem )
		MsgInfo("Aprova誽o processada com sucesso","Processo conclu獮o")  //==> LCM(Alterado em 18/07/13)

    Else //==> LCM(Alterado em 18/07/13)
		MsgInfo("Favor Solicitar Aprova誽o do Gestor.","Aprova誽o n緌 processada")  //==> LCM(Alterado em 18/07/13)

	Endif 
	
	If  cStatus<> '' //==> LCM(Alterado em 18/07/13)

		DbSelectArea("ZAA")
		RecLock("ZAA",.F.)   
		Replace ZAA->ZAA_STATUS 	With cStatus
		ZAA->(MsUnlock())

    Endif //==> LCM(Alterado em 18/07/13)
   
	//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
	//彪aso a Solicitacao estiver aprovada, devera iniciar o Processo de Contabilizacao�
	//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
	If cStatus == '6' .and. !lMsErroAuto
		DbSelectArea("ZA6")
		ZA6->(DbSetOrder(1))
		DbSeek(xFilial("ZA6")+ZAA->(ZAA_NUM+ZAA_FORNEC+ZAA_LOJA))
		
		RecLock("ZA6",.F.)
		Replace ZA6->ZA6_STATUS 	With cStatus
		ZA6->(MsUnlock())
		
		//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
		//� Inicializa Lancamento Contabil                                   �
		//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
		cPadrao:="SI1"
		lPadrao:=VerPadrao(cPadrao)
		
		If lPadrao
			cLote    := '008850'
			
			nHdlPrv := HeadProva( cLote,;
			"SICOMA45" /*cPrograma*/,;
			Substr(cUsuario,7,6),;
			@cArquivo )
			lHead := .T.
			/*
			DbSelectArea("ZAB")
			ZAB->(DBSetOrder(1))
			ZAB->(DbSeek(xFilial("ZAB")+ZAA_NUM))
			*/
			//Posicina SE2 para utilizacao na LP
			DBSelectArea('SE2')
			SE2->(DbSetOrder(1))
			SE2->(DBSeek(xFilial('SE2')+ZAA->ZAA_CTBPRF+ZAA->ZAA_NUM+' '+ZAA->ZAA_CTBPAR))
			
			//Posicina SA2 para utilizacao na LP
			DBSelectArea('SA2')
			SA2->(DbSetOrder(1))
			SA2->(DBSeek(xFilial('SA2')+ZAA->ZAA_FORNEC+ZAA->ZAA_LOJA))
			
			DbSelectArea("ZAB")
			ZAB->(DBSetOrder(1))
			ZAB->(DbSeek(xFilial("ZAB")+ZAA_NUM))
			
			While ZAB->(!Eof()) .AND. ZAB->(ZAB_FILIAL+ZAB_NUM) = ZAA->(ZAA_FILIAL+ZAA_NUM)
				
				//矬闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡醴
				//� Prepara Lancamento Contabil                                      �
				//斂闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡闡囁
				//Contabiliza pela variavel VALOR. Nao necessita de controle de flag.
				
				nTotal += DetProva( nHdlPrv,;
				cPadrao,;
				"SICOMA45" /*cPrograma*/,;
				cLote,;
				/*nLinha*/,;
				/*lExecuta*/,;
				/*cCriterio*/,;
				/*lRateio*/,;
				/*cChaveBusca*/,;
				/*aCT5*/,;
				/*lPosiciona*/,;
				/*@aFlagCTB*/,;
				/*aTabRecOri*/,;
				/*aDadosProva*/ )
				
				If !ZAA->ZAA_LAFOR == 'S'
					RecLock("ZAA",.F.)
					Replace ZAA->ZAA_LAFOR 	With 'S'
					ZAA->(MsUnlock())
				Endif
				
				ZAB->(dbSkip())
			Enddo
			
			If nTotal > 0
				RodaProva(nHdlPrv,nTotal)
				lLancOk := cA100Incl(cArquivo,nHdlPrv,3,cLote,.F.,.F.)   // Nao aparece a contabilizacao on-line para usu嫫io
			EndIf
		EndIf
		FSSendMail( cEmail, cTitulo+cNrSol, cMensagem )
		
		MsgInfo("Aprova誽o processada com sucesso","Processo conclu獮o")  //==> LCM(Alterado em 18/07/13)
	
	Elseif cStatus == '6' .and. lMsErroAuto
		MsgStop("Processo de Finaliza誽o n緌 pode ser concluido, houve falha ao gerar T癃ulo no Financeiro.","Aten誽o")
	Endif
	//MsgInfo("Aprova誽o processada com sucesso","Processo conclu獮o")  ==> LCM(Alterado em 18/07/13)
Else
	MsgStop("O status da Presta誽o de Contas, n緌 permite Aprova誽o.","Aten誽o")
Endif
End Transaction
	
Return

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45ReprvPC態utor  彪laudinei Ferreira  � Data �  02/12/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     莧provacao do Gestor na Prestacao de Contas		    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       � Especifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�"
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/
Static Function A45ReprvPC
Local cCodUsr
Local Email	 := ''
Local cTitulo:= ''
Local cStatus:= ''

If ZAA_STATUS $ '2/4' //Aguardando Aprovacao do Gestor/Enviada para Financeiro
	cNrSol:=ZAA->ZAA_NUM
	
	//Verifica usuario que incluiu Solicitacao para envio do Email
	cCodUsr	 := Posicione("ZA6",1,xFilial("ZA6")+ZAA->ZAA_NUM+ZAA->ZAA_FORNEC+ZAA->ZAA_LOJA,"ZA6_USRINC")
	cEmail	 := U_MailUser(cCodUsr)
	
	
	If cTpUsr == '4' //ADM PC (Aprovador de Prestacao de Contas)
		cStatus:='5' //Reprovado pelo Financeiro
		cTitulo	 := "Prest.Contas - Repr.Financeiro: "
	Elseif lUsrAprv
		cStatus:='3' //Reprovado pelo Gestor
		cTitulo	 := "Prest.Contas - Reprovado pelo Gestor: "
	Endif
	
	DbSelectArea("ZAA")
	RecLock("ZAA",.F.)
	Replace ZAA->ZAA_STATUS 	With cStatus
	ZAA->(MsUnlock())
	
	cMensagem:= U_Geramail(cNrSol,ZAA->ZAA_OBJETI)
	FSSendMail( cEmail, cTitulo+cNrSol, cMensagem )
	
	MsgInfo("Reprova誽o processada com sucesso","Processo conclu獮o")
Else
	MsgStop("O status da Presta誽o de Contas, n緌 permite Reprova誽o.","Aten誽o")
Endif

Return

/*
嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈嗈�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�
控奼迋迋迋迋迕迋迋迋迋迋冞迋迋迋敊迋迋迋迋迋迋迋迋迋豖迋迋迋敊迋迋迋迋迋迋跼�
控摺rograma  莧45Final  態utor  彪laudinei Ferreira  � Data �  02/12/12   滷�
控昅迋迋迋迋阹迋迋迋迋迋庋迋迋迋玵迋迋迋迋迋迋迋迋迋虮迋迋迋玵迋迋迋迋迋迋僚�
控慣esc.     蚶inaliza Prestacao de Contas						    	  滷�
控昅迋迋迋迋阹迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋僚�
控摻so       蛀specifico CNI 		                                      滷�
控￢迋迋迋迋迍迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋迋摹�
控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控控�"
葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔葔�
*/
User Function A45Final

Local cTpSol := ZAA->ZAA_TPSOL
Local cStatus:= '6'

If cTpSol == '3'
	//Finaliza Prestacao de Contas
	DbSelectArea("ZAA")
	RecLock("ZAA",.F.)
	Replace ZAA->ZAA_STATUS 	With cStatus
	ZAA->(MsUnlock())
	
	//Finaliza Solicitacao
	DbSelectArea("ZA6")
	ZA6->(DbSetOrder(1))
	DbSeek(xFilial("ZA6")+ZAA->(ZAA_NUM+ZAA_FORNEC+ZAA_LOJA))
	
	RecLock("ZA6",.F.)
	Replace ZA6->ZA6_STATUS 	With cStatus
	ZA6->(MsUnlock())
Else
	MsgStop("� permitido finalizar a Presta誽o somente da Solicita踥es do tipo Ajuda de Custo.","Opera誽o n緌 Permitida")
Endif

Return