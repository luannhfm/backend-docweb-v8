#Include 'Protheus.ch'
#Include 'fwmvcdef.ch'
#Include 'Topconn.ch'

/*/{Protheus.doc} SF07A02S
Cadastro de Rateio Corporativo

@author 	SERGIO RICARDO LEITE SALUSTIANO
@version 	1.0
@since 		22/08/2014

@return Nil
/*/
User Function SF07A02S()
	Local oBrowse
	Private _ccRat := GETMV("DT_CCRCORP")
	Private _cPeriodo := GETMV("MV_FOLMES")

	Private aRotina := MenuDef()

	//Instancio a classe FWMBrowse
	oBrowse := FWMBrowse():New()

	//Setando o Alias a ser utilizado
	oBrowse:SetAlias( 'ZDC' )

	//Descrição do Cabeçalho
	oBrowse:SetDescription('Rateio Corporativo')


	oBrowse:Activate()

Return( Nil )

/** {Protheus.doc} MenuDef
Funcao para Montar o Menu

@author: 	SERGIO SALUSTIANO
@since: 	22/08/2014
@Uso: 		SFIEMT
*/
Static Function MenuDef()

	Local aRotina := {}

	aAdd( aRotina, { 'Pesquisar' , 'PesqBrw'        , 0, 1, 0, .T. } )
	aAdd( aRotina, { 'Visualizar', 'ViewDef.SF07A02S', 0, 2, 0, Nil } )
	aAdd( aRotina, { 'Incluir'   , 'ViewDef.SF07A02S', 0, 3, 0, Nil } )
	aAdd( aRotina, { 'Alterar'   , 'ViewDef.SF07A02S', 0, 4, 0, Nil } )
	aAdd( aRotina, { 'Excluir'   , 'ViewDef.SF07A02S', 0, 5, 0, Nil } )
	aAdd( aRotina, { 'Imprimir'  , 'ViewDef.SF07A02S', 0, 8, 0, Nil } )
	aAdd( aRotina, { 'Copiar'    , 'ViewDef.SF07A02S', 0, 9, 0, Nil } )

Return( aRotina )

/** {Protheus.doc} ModelDef
Funcao para Montar o Modelo de Dados

@author: 	SERGIO SALUSTIANO
@since: 	22/08/2014
@Uso: 		SFIEMT
*/
Static Function ModelDef()

	Local oModel
	Local oStruZDCMASTER := FWFormStruct( 1, 'ZDC', { |X|  AllTrim(X) $ 'ZDC_MAT, ZDC_MESANO,ZDC_HORA,ZDC_NOME' } )
	Local oStruZDCDETAIL := FWFormStruct( 1, 'ZDC', { |X| .Not. (AllTrim(X) $ 'ZDC_MAT, ZDC_MESANO,ZDC_HORA,ZDC_NOME') } )

	oStruZDCDETAIL:AddTrigger( "ZDC_HORATR", "ZDC_PERC"    , { || .t. }, { | x |CALPERC( ) } )

	oModel := MPFormModel():New( 'SF0702SM' )

	oStruZDCDETAIL:SetProperty( "ZDC_ITEM", MODEL_FIELD_VALID  , {| oGrid | ValItem( oGrid ) } )

	oModel:AddFields( 'ZDCMASTER'	,				, oStruZDCMASTER )
	oModel:AddGrid('ZDCDETAIL'		, 'ZDCMASTER'	, oStruZDCDETAIL )

	//oModel:SetRelation( 'ZDCDETAIL', { { 'ZDC_FILIAL', 'xFilial( "ZDC" )' }, {'ZDC_MAT', 'ZDC_MAT' }}, ZDC->( IndexKey( 1 ) ) )
	
	oModel:SetRelation( 'ZDCDETAIL', { { 'ZDC_FILIAL', 'xFilial( "ZDC" )' }, {'ZDC_MAT', 'ZDC_MAT' }, {'ZDC_MESANO','ZDC_MESANO'}}, ZDC->( IndexKey( 1 ) ) )

	oModel:GetModel( 'ZDCDETAIL' ):SetUniqueLine( { "ZDC_ENTIDA" , "ZDC_CC", "ZDC_ITEM"} )

	oModel:GetModel( 'ZDCDETAIL' ):SetOptional( .T. )

	oModel:SetDescription( 'Rateio Corporativo' )

	oModel:GetModel( 'ZDCMASTER' ):SetDescription( 'Rateio Corporativo' )
	oModel:GetModel( 'ZDCDETAIL' ):SetDescription( 'Rateio Corporativo' )

	oModel:SetPrimaryKey( { "ZDC_FILIAL", "ZDC_MAT", "ZDC_MESANO" } )

	//oStruZDCMASTER:SetProperty('ZDC_MAT'       ,MODEL_FIELD_INIT,{||SRA->RA_MAT})
	oStruZDCMASTER:SetProperty('ZDC_MESANO',MODEL_FIELD_INIT,{||_cPeriodo})
	//oStruZDCMASTER:SetProperty('ZDC_NOME'    ,MODEL_FIELD_INIT,{||SRA->RA_NOME})
	//oStruZDCMASTER:SetProperty('ZDC_HORA'    ,MODEL_FIELD_INIT ,{||SRA->RA_HRSMES})*/

	oModel:AddCalc( 'COMP015CALC1', 'ZDCMASTER', 'ZDCDETAIL', 'ZDC_PERC', 'ZDC__PERC2', 'SUM', , ,'Total % ' )

Return( oModel )

/** {Protheus.doc} ViewDef
Funcao para Montar a Interface

@author: 	SERGIO SALUSTIANO
@since: 	22/08/2014
@Uso: 		SFIEMT
*/
Static Function ViewDef()

	Local oView
	Local oModel  := FWLoadModel( 'SF07A02S' )

	Local oStruZDCMASTER := FWFormStruct( 2, 'ZDC', { |X|  AllTrim(X) $ 'ZDC_MAT, ZDC_MESANO,ZDC_HORAS,ZDC_NOME' } )
	Local oStruZDCDETAIL := FWFormStruct( 2, 'ZDC', { |X| .Not. (AllTrim(X) $ 'ZDC_MAT, ZDC_MESANO,ZDC_HORAS,ZDC_NOME') } )

	oView := FWFormView():New()

	oView:SetModel( oModel )

	oView:AddField( 'VZDCMASTER', oStruZDCMASTER, 'ZDCMASTER' )
	oView:AddGrid( 'VZDCDETAIL', oStruZDCDETAIL, 'ZDCDETAIL' )
	oCalc1 := FWCalcStruct( oModel:GetModel( 'COMP015CALC1') )
	oView:AddField( 'VIEW_CALC', oCalc1, 'COMP015CALC1' )
	oView:AddIncrementField( 'VZDCDETAIL', 'ZDC_COD' )
	oView:CreateHorizontalBox( 'CABECALHO', 15 )
	oView:CreateHorizontalBox( 'DETALHE', 75 )
	oView:CreateHorizontalBox ('CALCULO' , 10)

	oView:SetOwnerView( 'VZDCMASTER', 'CABECALHO' )
	oView:SetOwnerView( 'VZDCDETAIL', 'DETALHE' )
	oView:SetOwnerView('VIEW_CALC','CALCULO')

	oView:EnableTitleView( 'VZDCMASTER' )
	oView:EnableTitleView( 'VZDCDETAIL' )
	oView:EnableTitleView('VIEW_CALC','TOTAIS')

	oView:SetCloseOnOk( {|| .t.} )

Return( oView )

Static Function CalPerc(oFields)

	Local lRetorno       := .T.
	Local aAreaAtu      := GetArea()
	Local oModel 		  := FwModelActive()
	Local oGZDCM	      := oModel:GetModel('ZDCMASTER')
	Local oGZDCD		  := oModel:GetModel('ZDCDETAIL')
	Local nHORA          := oGZDCM:GetValue('ZDC_HORA')
	Local nHORATR	  := oGZDCD:GetValue('ZDC_HORATR')
	Local nPerc            := 0

	nPerc := (nHORATR * 100)/nHORA

	oGZDCD:SetValue( "ZDC_PERC"  ,nPerc )

Return(nPerc)

/*/{Protheus.doc} ValItem
//TODO Descrição auto-gerada.
@author sergio.salustiano
@since 27/11/2018
@version 6
@param oGrid, object, descricao
@type function
/*/
Static Function ValItem(oGrid)
	Local lRet       := .T.
	Local aAreaAtu      := GetArea()
	Local oModel 		  := FwModelActive()
	Local oGZDCM	      := oModel:GetModel('ZDCMASTER')
	Local oGZDCD		  := oModel:GetModel('ZDCDETAIL')
	Local cItem            := oGZDCD:GetValue('ZDC_ITEM')
	Local cCC		          := oGZDCD:GetValue('ZDC_CC')
	Local cMesAno       := oGZDCM:GetValue('ZDC_MESANO')
	Local cQry              := " "
	
	cQry :=  "SELECT CTA_CUSTO, CTA_ITEM "
	cQry += "FROM "      + RETSQLNAME("CTA") + " CTA "
	cQry += "WHERE CTA_CUSTO = '" + cCC + "' "
	cQry += "AND CTA_ITEM = '" +cItem + "' "
	cQry += "AND D_E_L_E_T_ <> '*'"
	TCQUERY cQry NEW ALIAS "TRA"

	DBSelectArea('CTD')
	DBSetOrder(1)

	//If(DBSeek(xFilial()+cItem))
	If(DBSeek(xFilial()+cItem) .OR. VAZIO())

		If(SUBSTR(cMesAno,3,2) <> SUBSTR(cItem,1,2)) .AND. !VAZIO()
			Help(, ,"AJUDA",  ,"Item Contabil nao pertence ao ano de " + SUBSTR(cMesAno,1,4),1,0)
			lRet       := .F.

		ElseIf(CTD->CTD_BLOQ == '1')  .AND. !VAZIO()
			Help(, ,"AJUDA",  ,"Item Contabil " + cItem +  "Bloqueado",1,0)
			lRet       := .F.

		ElseIf(CTD->CTD_CLASSE == '1') .AND. !VAZIO()
			Help(, ,"AJUDA",  ,"Item Contabil " + cItem + "Sintetico",1,0)
			lRet       := .F.
		ElseIf TRA->( Eof() ) .AND. !VAZIO()
			Alert( "Não há amarraçao entre o Centro de Custo e o Item Contabil!" )
			lRet       := .F.
	Else
			lRet       := .T.
		EndIf
		
		
	Else
		Help(, ,"AJUDA",  ,"Item Contabil não Cadastrado",1,0)
		lRet       := .F.
	EndIf
	TRA->(DbCloseArea())

Return(lRet)

/*/{Protheus.doc} SF0702SM
//TODO Descrição auto-gerada.
@author sergio.salustiano
@since 27/11/2018
@version 6
@param oModel, object, descricao
@type function
/*/
User Function SF0702SM(oModel)
	Local aParam  := PARAMIXB
	Local aButtons 	:= {}
	//Local aParam 	:= PARAMIXB
	Local cIdModel	:= ''
	Local cIdPonto	:= ''
	Local cCodVen	:= ''
	Local nOper     := 0
	Local oGZDCM, oGZDCD, oTeste
	Local oObj
	Local nPerc := 0
	Local nTeste

	Local xRet		:= .T.

	If aParam <> NIL
		oObj          := aParam[1]
		cIdPonto    := aParam[2]
		cIdModel    := aParam[3]

		oGZDCM	      := oObj:GetModel('ZDCMASTER')
		oGZDCD		  := oObj:GetModel('ZDCDETAIL')
		oTeste           := oObj:GetModel('COMP015CALC1')

	EndIf

	Do Case
		Case cIdPonto == "MODELPOS"				     //Na validacao total do modelo
		xRet := .T.
		Case cIdPonto == "FORMPOS"					//Na validação total do formulário
		If(oTeste:GetValue("COMP015CALC1",'ZDC__PERC2') > 100)
			Help(, ,"AJUDA",  ,"A Quantidade de horas trabalhadas nao pode ser superior ao de horas contratadas",1,0)
			xRet := .F.
		ElseIf(oTeste:GetValue("COMP015CALC1",'ZDC__PERC2') < 100)
			Help(, ,"AJUDA",  ,"A Quantidade de horas trabalhadas nao pode ser inferior ao de horas contratadas",1,0)
			xRet := .F.
		Else
			xRet := .T.
		EndIf
		// oModel:GetValue("CALC",'ADZ__TOTPRD')
		Case cIdPonto == "FORMLINEPRE"				//Antes da alteração da linha do formulário FWFORMGRID
		xRet := .T.
		Case cIdPonto == "FORMLINEPOS"				//Na validação total da linha do formulario FWFORMGRID
		If(oObj:GetValue('ZDC_PERC') > 100)
			Help(, ,"AJUDA",  ,"A Quantidade de horas trabalhadas nao pode ser superior ao de horas contratadas",1,0)
			xRet := .F.
		ElseIf(oObj:GetValue('ZDC_PERC') == 0)
			Help(, ,"AJUDA",  ,"A Quantidade de horas trabalhadas nao pode ser 0",1,0)
			xRet := .F.
		Else
			xRet := .T.
		EndIf
		Case cIdPonto == "MODELCOMMITTTS"			//Após a gravação total do modelo e dentro da transacao
		xRet := Nil
		Case cIdPonto == "MODELCOMMITNTTS"			//Após a gravação total do modelo e fora da gravação
		xRet := Nil
		Case cIdPonto == "FORMCOMMITTTSPRE"		 //Antes da gravação da tabela do formulário
		xRet := .T.
		Case cIdPonto == "FORMCOMMITTTSPOS"		 //Após a gravação da tabela do formulário
		xRet := Nil
		Case cIdPonto == "MODELCANCEL"			//Na ação do botão Cancelar
		xRet := .T.
		Case cIdPonto == "MODELVLDACTIVE"		//Na ativação do modelo
		nOper := oObj:GetOperation()
		If(nOper = 4) .OR. (nOper = 5)
			If  ZDC->ZDC_MESANO <> _cPeriodo
				Help(, , 'Help', , 'Não é permitida a alteração ou inclusão de registro fora do periodo', 1, 0)
				xRet := .F.
			Else
				xRet := .T.
			EndIf
		Else
			xRet := .T.
		EndIf

		Case cIdPonto == "MODELPRE"				 //Antes da alteracao de qualquer campo
		xRet := .T.
		Case cIdPonto == "FORMPRE"					//Antes da alteracao de qualquer campo de formulário
		xRet := .T.
		Case cIdPonto == "FORMCANCEL"				//No cancelamento do botão
		xRet := .T.
		Case cIdPonto == "BUTTONBAR"				//Para inclusão de botões na ControlBar
		xRet := aButtons
	EndCase

	Return xRet

Return(Nil)
	
	


