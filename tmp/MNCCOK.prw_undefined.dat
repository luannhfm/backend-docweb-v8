#INCLUDE "TOTVS.CH"

/*/{Protheus.doc} User Function MNCCOK
    (Valida as informacoes de acordo com a configuracao da conta contabil)
    @type  Function
    @author Joao Tavares Silva Junior
    @since 12/05/2021
    @version 12.1.27
    @param param_name, param_type, param_descr
    @return return_var, return_type, return_description
    @example
    (examples)
    @see (links_or_references)
    /*/
User Function MNCCOK(param_name)

Local lRet	    := .T.
Local aArea	    := GetArea()
Local aAreaSED  := SED->(GetArea())
Local cAlTMP    := GetNextAlias()
Local cCCusto   := ""
Local cItem     := ""
Local nX        := 0       
	 
For nX :=1 to Len(Acols)
    IF !Acols[nX][Len(Aheader)+1]
        dbSelectarea("SED")
        If dbSeek(xFilial("SED")+cNatur)

            dbSelectArea("CT1")
            If dbSeek(xFilial("CT1")+SED->ED_CONTA)

                cConta := cCcusto := aCols[nX][ aScan(aHeader, { |x| AllTrim(x[2]) == "EZ_CONTA" }) ]
                IF SED->ED_CONTA <> cConta
                    Alert("A conta ( "+cConta+" )informada nao pertence a natureza "+cNatur+"  Utilize a Conta:"+SED->ED_CONTA+". Linha:"+StrZero(nX,2)+" ")  
                    lRet := .F.  
                    Exit
                EndIf

                cCcusto := aCols[nX][ aScan(aHeader, { |x| AllTrim(x[2]) == "EZ_CCUSTO" }) ]
                If CT1->CT1_CCOBRG == "1" .and. Empty(cCcusto)
                    Alert("Obrigatrio Informar o centro de custo. Linha:"+StrZero(nX,2)+" ") 
                    lRet := .F.  
                    Exit
                EndIf    

                cItem   := aCols[nX][ aScan(aHeader, { |x| AllTrim(x[2]) == "EZ_ITEMCTA" }) ]
                If CT1->CT1_ITOBRG == "1" .and. Empty(cItem)
                    Alert("Obrigatrio Informar o Item Contabil. Linha:"+StrZero(nX,2)+" ") 
                    lRet := .F.  
                    Exit
                EndIf 
                
                cClvl   := aCols[nX][ aScan(aHeader, { |x| AllTrim(x[2]) == "EZ_CLVL" }) ]
                If CT1->CT1_CLOBRG == "1" .and. Empty(cClvl)
                    Alert("Obrigatrio Informar a Classe de Valor. Linha:"+StrZero(nX,2)+" ") 
                    lRet := .F.  
                    Exit
                EndIf 
                
                If lRet 
                    BeginSql Alias cAlTMP
                        SELECT
                            CTA_ITEM
                            FROM %Table:CTA%
                            WHERE 
                                CTA_FILIAL = %Exp:xFilial("CTA")%
                                AND CTA_CUSTO = %Exp:cCcusto%
                                AND CTA_ITEM = %Exp:cItem%
                                AND %NOTDEL%
                            EndSql
                        (cAlTMP)->(dbGoTop())
                        
                    If (cAlTMP)->(eof())
                        lRet := .F.
                        Alert("Não existe amarração entre centro de custo e item contabil!, Linha:"+StrZero(nX,2)+"")
                    EndIf
                    (cAlTMP)->(dbCloseArea())
                EndIf
            Else
                Alert("Não existe esta Conta cadastrada, "+SED->ED_CONTA+"")
                lRet := .F.  	
            EndIf

        Else
            Alert("Não existe esta Natureza cadastrada, "+cNatur+"")
            lRet := .F.  		
        EndIf
    EndIF    
Next
RestArea(aAreaSED)
RestArea(aArea)

Return lRet
