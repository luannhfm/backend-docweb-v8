#Include 'Protheus.ch'
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "PARMTYPE.CH"
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"

/*
--------------------------------------------------------------------------------
{Protheus.doc} <SS7335X>
   35 - FIEMT - Especificacao de Relatório de Percentual De Descontos Por Cliente

 PARAMETOS:
    NDA 

@author<Jonas Nascimento>
@since<02/07/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
User Function SS7335X()
	Local _oReport			:= Nil     
	Private _lCancel			:= .f.  
	Private _cPerg 			:= ""
	Private _cAlias			:= GetNextAlias() 

	_cPerg	:= FunName()			//-- Define o Grupo de Perguntas   
	//+------------------------------------------------------------------+
	//|   Interface de impressao                                         |
	//+------------------------------------------------------------------+
	_oReport := ReportDef()
	If !_lCancel
		_oReport:PrintDialog()
	Endif
		    
Return

/*
--------------------------------------------------------------------------------
{Protheus.doc} <ReportDef>
 Rotina que monta e prepara a Impressão do Relatorio. 
 
@author<Jonas Nascimento>
@since<02/07/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function ReportDef()
	Local _cTitulo		:= "35 - Percentual de Desconto Por Cliente"
	Local _cSubTit		:= ""  
	Local _oReport		:= Nil
	//--
	Local _oSecCli		:= Nil //Seção dados do cliente.
	Local _oSecCri		:= Nil //Seção critério
	Local _oSecPer		:= Nil //Seção Percentual máximo

	//+------------------------------------------------------------------+
	//| Carrega as perguntas relativas aos parametros de Impressao       |
	//|     Mv_par01 - Cliente DE ?                                       |
	//|     Mv_par02 - Cliente ATE ?                                      |
	//|     Mv_par03 - Polo de Venda DE ?                          |
	//|     Mv_par04 - Polo de Venda ATE ?                         |
	//+------------------------------------------------------------------+
	//xParPerg(_cPerg)
	CriaSX1(_cPerg)      
	//+------------------------------------------------------------------+
	//|  Monta tela de paramentos para usuario, se cancelar sair         |
	//+------------------------------------------------------------------+
	If !Pergunte(_cPerg,.t.)  
		_lCancel := .T. 
	   Return
	Endif 
	
	FWMsgRun(, {|| fGet335X() }, "Processando a Consulta de Desconto Por Cliente!", "Aguarde...")

	//+------------------------------------------------------------------+
	//|    Construcao do Objeto de Impressao do Relatorio                |
	//+------------------------------------------------------------------+
	//                    New(cReport,cTitle,uParam,bAction,cDescription,lLandscape,uTotalText,lTotalInLine,cPageTText,lPageTInLine,lTPageBreak,nColSpace)
	_oReport := TReport():New(_cPerg,_cTitulo,_cPerg,{|_oReport|  ReportPrint(_oReport) },_cSubTit,.t.)
	//_oReport:SetLandScape() 			//-- Modo Paisagem 
	_oReport:SetPortrait() 			//-- Modo Retrato 

	//+------------------------------------------------------------------+
	//|    *****      S e c a o  -  1      *****                         |
	//+------------------------------------------------------------------+
	_oSecCli := TRSection():New(_oReport,"Cliente",{"SA1"} )
	TRCell():New(_oSecCli,"ZCE_POLO"		,"ZCE" 	,"Cod Polo"		,PesqPict("ZCE","ZCE_POLO") 	,TamSX3("ZCE_POLO")[1]	,.F.) 
	TRCell():New(_oSecCli,"ZCD_DESCRI"		,"ZCD" 	,"Polo"			,PesqPict("ZCD","ZCD_DESCRI") 	,TamSX3("ZCD_DESCRI")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1_CGC"			,"SA1" 	,"CNPJ"			,PesqPict("SA1","A1_CGC") 		,TamSX3("A1_CGC")[1]		,.F.) 
	TRCell():New(_oSecCli,"A1_COD"			,"SA1" 	,"Cod Cliente"	,PesqPict("SA1","A1_COD") 		,TamSX3("A1_COD")[1]		,.F.) 
	TRCell():New(_oSecCli,"A1_LOJA"			,"SA1" 	,"Loj Cliente"	,PesqPict("SA1","A1_LOJA") 		,TamSX3("A1_LOJA")[1]	,.F.)
	TRCell():New(_oSecCli,"A1_NOME"			,"SA1" 	,"Razão Social"	,PesqPict("SA1","A1_NOME") 		,TamSX3("A1_NOME")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1_END"			,"SA1" 	,"Endereço"		,PesqPict("SA1","A1_END") 		,TamSX3("A1_END")[1]		,.F.) 
	TRCell():New(_oSecCli,"A1_BAIRRO"		,"SA1" 	,"Bairro"			,PesqPict("SA1","A1_BAIRRO") 	,TamSX3("A1_BAIRRO")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1_MUN"			,"SA1" 	,"Cidade"			,PesqPict("SA1","A1_MUN") 		,TamSX3("A1_MUN")[1]		,.F.) 
	TRCell():New(_oSecCli,"A1_TEL"			,"SA1" 	,"Telefone"		,PesqPict("SA1","A1_TEL") 		,TamSX3("A1_TEL")[1]		,.F.)
	TRCell():New(_oSecCli,"A1_CONTATO"		,"SA1" 	,"Contato"			,PesqPict("SA1","A1_CONTATO") 	,TamSX3("A1_CONTATO")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1_XCNAEIN"		,"SA1" 	,"CNAE Indústria"	,PesqPict("SA1","A1_XCNAEIN") 	,TamSX3("A1_XCNAEIN")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1_XFPAS"		,"SA1" 	,"FPAS"			,PesqPict("SA1","A1_XFPAS")		,TamSX3("A1_XFPAS")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1_SIMPNAC"		,"SA1" 	,"Simples"			,PesqPict("SA1","A1_SIMPNAC") 	,TamSX3("A1_SIMPNAC")[1]	,.F.) 
	TRCell():New(_oSecCli,"A1DESC"			,"" 		,"% Max Desc"		,"@E 999.99" 						,7							,.F.) 

Return _oReport

/*
+--------------------------------------------------------------------------+
 {Protheus.doc}<ReportPrint>
   Rotina de Impressão do Corpo do Relatorio. 

@author<Jonas Nascimento>
@since<02/07/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
+--------------------------------------------------------------------------+
*/
Static Function ReportPrint(_oReport)
	Local _oSecCli		:= _oReport:Section(1)
	Local _nRecs			:= 0 
	Local _nPercent		:= 0.00
	Local _cDescPolo		:= ""
	Local _cCNPJ			:= ""
	//-- Inicia o Objeto de Impressão 
	_oSecCli:Init()
	//-- Seta a Margem a partir da posição 1
	_oReport:SetLeftMargin(2)

	//+------------------------------------------------------------------+
	//| Posiciona no inicio o Arquivo Resultado da Consulta Sql          | 
	//+------------------------------------------------------------------+
	dbSelectArea(_cAlias)  
	(_cAlias)->(dbgotop())    
	//-- Conta o numero do Registro da Tabela Temporaria
	(_cAlias)->(dbEval({|| _nRecs++ }))
	_oReport:SetMeter(_nRecs)
	//-- 
	dbSelectArea(_cAlias)  
	(_cAlias)->(dbgotop())
	
	//+------------------------------------------------------------------+
	//| Inicia Laco para impressao do Relatorio                          |
	//+------------------------------------------------------------------+
	Do While (_cAlias)->(!eof())   
		_oReport:IncMeter()    
		_cDescPolo		:= (_cAlias)->ZCD_DESCRI
		_cCNPJ			:= Transform(Alltrim((_cAlias)->A1_CGC),Iif(Len(AllTrim((_cAlias)->A1_CGC))==11,"@R 999.999.999-99","@R 99.999.999/9999-99"))
		_nPercent		:= fPutDes2((_cAlias)->A1_COD,(_cAlias)->A1_LOJA)

		//+------------------------------------------------------------------+
		//|  Imprime a IDENTIFICAÇÃO DO VENDEDOR                             |
		//+------------------------------------------------------------------+
		_oSecCli:Cell( "ZCE_POLO"		):SetBlock({|| (_cAlias)->ZCE_POLO		}) 
		_oSecCli:Cell( "ZCD_DESCRI"		):SetBlock({|| _cDescPolo				}) 
		_oSecCli:Cell( "A1_CGC"			):SetBlock({|| _cCNPJ					}) 
		_oSecCli:Cell( "A1_COD"			):SetBlock({|| (_cAlias)->A1_COD		}) 
		_oSecCli:Cell( "A1_LOJA"			):SetBlock({|| (_cAlias)->A1_LOJA		})
		_oSecCli:Cell( "A1_NOME"			):SetBlock({|| (_cAlias)->A1_NOME		}) 
		_oSecCli:Cell( "A1_END"			):SetBlock({|| (_cAlias)->A1_END		}) 
		_oSecCli:Cell( "A1_BAIRRO"		):SetBlock({|| (_cAlias)->A1_BAIRRO	}) 
		_oSecCli:Cell( "A1_MUN"			):SetBlock({|| (_cAlias)->A1_MUN		}) 
		_oSecCli:Cell( "A1_TEL"			):SetBlock({|| (_cAlias)->A1_TEL		})
		_oSecCli:Cell( "A1_CONTATO"		):SetBlock({|| (_cAlias)->A1_CONTATO	}) 
		_oSecCli:Cell( "A1_XCNAEIN"		):SetBlock({|| (_cAlias)->A1_XCNAEIN	}) 
		_oSecCli:Cell( "A1_XFPAS"		):SetBlock({|| (_cAlias)->A1_XFPAS		}) 
		_oSecCli:Cell( "A1_SIMPNAC"		):SetBlock({|| (_cAlias)->A1_SIMPNAC	}) 
		_oSecCli:Cell( "A1DESC"			):SetBlock({|| _nPercent	}) 
		_oSecCli:PrintLine()		//-- Imprime e alinha   
		(_cAlias)->(dbskip()) 	
	Enddo 

	//+------------------------------------------------------------------+
	//|     Finaliza todas as sessões por definitivo                     |
	//+------------------------------------------------------------------+
	_oSecCli:Finish()
	//+------------------------------------------------------------------+
	//|     Fecha o Arquivo de Trabalho                                  |
	//+------------------------------------------------------------------+
	(_cAlias)->(dbCloseArea())
	//+------------------------------------------------------------------+
	//|     Finaliza as sessoes                                          |
	//+------------------------------------------------------------------+
Return

/*
+--------------------------------------------------------------------------+
{Protheus.doc}<fGet335X>
   Rotina que cria a consulta SQL para garimpo das informações de 
   Desconto por Cliente para gerar o Relatorio. 

@author<Jonas Nascimento>
@since<02/07/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
+--------------------------------------------------------------------------+
*/
Static Function fGet335X()
	Local _cSql := ""

	_cSql := "Select ZCE.ZCE_POLO, ZCD.ZCD_DESCRI, "+CRLF
	_cSql += "SA1.A1_CGC, SA1.A1_COD, SA1.A1_LOJA, SA1.A1_NOME, SA1.A1_END, SA1.A1_BAIRRO, "+CRLF 
	_cSql += "SA1.A1_MUN,SA1.A1_TEL, SA1.A1_CONTATO, SA1.A1_XCNAEIN, SA1.A1_XFPAS, SA1.A1_SIMPNAC "+CRLF
	_cSql += "From "+RetSqlName("ZCE")+" ZCE "+CRLF
	_cSql += "Inner Join "+RetSqlName("SA1")+" SA1 On SA1.D_E_L_E_T_ = ' ' "+CRLF 
	_cSql += "                      And SA1.A1_COD BetWeen '"+Mv_par01+"' And '"+Mv_par02+"' "+CRLF 
	_cSql += "                      And SA1.A1_COD_MUN = ZCE.ZCE_CODMUN "+CRLF
	_cSql += "Inner Join "+RetSqlName("ZCD")+" ZCD On ZCD.D_E_L_E_T_ = ' ' "+CRLF 
	_cSql += "                      And ZCD.ZCD_CODIGO = ZCE.ZCE_POLO "+CRLF
	_cSql += "Where ZCE.D_E_L_E_T_ = ' ' And ZCE.ZCE_POLO BetWeen '"+Mv_par03+"' And '"+Mv_par04+"' "+CRLF 
	_cSql += "Order by ZCE.ZCE_POLO, ZCE.ZCE_CODMUN, SA1.A1_COD, SA1.A1_LOJA "+CRLF
	//+------------------------------------------------------------------+
	//| Grava o Resultado da Query para consulta                         |
	//+------------------------------------------------------------------+a
	MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cSql)
	If Select(_cAlias)>0
		(_cAlias)->(DbCloseArea())
	Endif
	DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cSql),_cAlias,.t.,.t.)

Return .T.

/*
--------------------------------------------------------------------------------
{Protheus.doc} <xParPerg>
 Cria as perguntas.	  

@author<Jonas Nascimento>
@since<02/07/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function xParPerg()	
	Local _aPerg := {}
	
	//-- Mv_par01 =     Cliente DE ?
	aAdd(_aPerg, {"Cliente DE ?","Cliente DE ?","Cliente DE ?","MV_CH1","C",TamSX3("A1_COD")[1],0,0,"G","",;
						"MV_PAR01","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"SA1","","","","",{"Cliente"},{"Cliente"},{"Cliente"}})
	
	//-- Mv_par02 =     Cliente DE ?
	aAdd(_aPerg, {"Cliente ATE ?","Cliente ATE ?","Cliente ATE ?","MV_CH2","C",TamSX3("A1_COD")[1],0,0,"G","",;
						"MV_PAR02","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"SA1","","","","",{"Cliente"},{"Cliente"},{"Cliente"}})
	
	//-- Mv_par09 =     Polo de Venda DE ?
	aAdd(_aPerg, {"Polo de Venda DE ?","Polo de Venda DE ?","Polo de Venda DE ?","MV_CH3","C",TamSX3("ZCD_CODIGO")[1],0,0,"G","",;
						"MV_PAR03","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"ZCD","","","","",{"Polo de Venda"},{"Polo de Venda"},{"Polo de Venda"}})
	
	//-- Mv_par10 =     Polo de Venda DE ?
	aAdd(_aPerg, {"Polo de Venda ATE ?","Polo de Venda ATE ?","Polo de Venda ATE ?","MV_CH4","C",TamSX3("ZCD_CODIGO")[1],0,0,"G","",;
						"MV_PAR04","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"","","","","",;
						"ZCD","","","","",{"Polo de Venda"},{"Polo de Venda"},{"Polo de Venda"}})
						
	u_SFAJUSX1(_cPerg,_aPerg)
	 
Return





/*
--------------------------------------------------------------------------------
{Protheus.doc} <fPutDesc> - J2A/ Jonas Nascimento.
 Calcula o Percentual do desconto concedido dentro da regra de desconto conforme
 determina a portaria 009/2012 
 
    campo:	ADZ_PRODUT
    Regra:	u_fPutDes2(M->ADZ_PRODUT,M->ADY_CLIENT,M->ADY_LOJENT)                                               
    Domin:	ADZ_DESCON
 
@since<02/07/2015>
@version<1.00>
@receive
<   _cCodProd (c) - Codigo do Produto
     _cCodCli (c) - Codigo do Cliente 
     _cLojCli (c) - Codigo da loja do Cliente 
>
@return
<   _nPerDesc (n) - (%)Percentual de Desconto que o cliente tem direito
>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function fPutDes2(_cCodCli,_cLojCli)
	Local _aArea		:= GetArea() 
	Local _nPerDesc	:= 0.00	//-- Percentual de desconto a ser concedido
	Local _nPeso 		:= 0.00 

	//+------------------------------------------------------------------+
	//| Monta PESO para acesso ao desconto conforme condições do cliente |
	//+------------------------------------------------------------------+
	dbSelectArea("SA1")
	SA1->(dbSetOrder(1))
	If (SA1->(dbSeek(FwxFilial("SA1")+_cCodCli+_cLojCli)))
		//+------------------------------------------------------------------+
		//| Identifica se o cliente tem tratativa de INDUSTRIA               |
		//+------------------------------------------------------------------+
		If SA1->A1_XTRATIN == "S"  
			//+------------------------------------------------------------------+
			//| Verifica se é CONTRIBUINTE SESI/SENAI [XFPAS == S]               |
			//+------------------------------------------------------------------+
			If SA1->A1_XFPAS == "S"
				_nPeso += 0.50 
			Endif 
			//+------------------------------------------------------------------+
			//| REGRAS PARA SEGUNDA FAIXA; QUANTO AO VINCULO e CONTRIBUIÇÃO      |
			//| SINDICAL/CONFEDERATICA, Verifica:                                |
			//| Se:                                                              |
			//|   É SINDICALIZADA [A1_XCODSIN - Cod. Sind] <> ZERO e;            |
			//| Se:                                                              |
			//|   Esta ADIMPLENTE com a contribuição sindical [A1_XCNTSIN -      | 
			//|   Contribuicao sindical Adimplente = [S]im] e;                   |
			//| Se:                                                              |
			//|   Esta ADIMPLENTE com a contrib. CONFEDERATIVA [A1_XCNTCON -     | 
			//|   Contribuicao Conf. Adimpl = [S]im]                             |
			//+------------------------------------------------------------------+
			If !Empty(Alltrim(SA1->A1_XCODSIN)) .and. SA1->A1_XCNTSIN == "S" .and. (SA1->A1_XCNTCON == "S" )
				_nPeso += 0.50
			Endif 
			//+------------------------------------------------------------------+
			//| Construi o % de desconto a ser concedido, conforme regras.       |
			//+------------------------------------------------------------------+
			_nPerDesc	 := _nPeso * 100
		Endif
	Endif 

	RestArea(_aArea)
	
Return _nPerDesc

/*/{Protheus.doc} CriaSx1
	Função para criar as perguntas/parâmetros de relatório
	
@author Franklin B. Oliveira
@since 26/04/2018
@param cPerg, characters, grupo de perguntas 
@type function
/*/
Static Function CriaSx1(cPerg)

	Local nI		:= 0
	Local nJ		:= 0
	Local lSX1		:= .F.
	Local aSaveArea	:= GetArea()
	Local aPergs	:= {}
	Local aEstrut	:= {}
	Local aHelpEng	:= {}
	Local aHelpSpa	:= {}
	Local aHelpPor	:= {}
	
	//				X1_GRUPO   X1_ORDEM   X1_PERGUNT X1_PERSPA X1_PERENG  X1_VARIAVL X1_TIPO    X1_TAMANHO X1_DECIMAL X1_PRESEL
	//				X1_GSC     X1_VALID   X1_VAR01   X1_DEF01  X1_DEFSPA1 X1_DEFENG1 X1_CNT01   X1_VAR02   X1_DEF02
	//				X1_DEFSPA2 X1_DEFENG2 X1_CNT02   X1_VAR03  X1_DEF03   X1_fDEFSPA3 X1_DEFENG3 X1_CNT03   X1_VAR04   X1_DEF04
	// 				X1_DEFSPA4 X1_DEFENG4 X1_CNT04   X1_VAR05  X1_DEF05   X1_DEFSPA5 X1_DEFENG5 X1_CNT05   X1_F3      X1_GRPSXG X1_PYME
	
	aEstrut := { "X1_GRUPO","X1_ORDEM"  ,"X1_PERGUNT","X1_PERSPA" ,"X1_PERENG" ,"X1_VARIAVL","X1_TIPO" ,"X1_TAMANHO","X1_DECIMAL","X1_PRESEL" ,;
	"X1_GSC"    ,"X1_VALID","X1_VAR01"  ,"X1_DEF01"  ,"X1_DEFSPA1","X1_DEFENG1","X1_CNT01","X1_VAR02"  ,"X1_DEF02"  ,"X1_DEFSPA2",;
	"X1_DEFENG2","X1_CNT02","X1_VAR03"  ,"X1_DEF03"  ,"X1_DEFSPA3","X1_DEFENG3","X1_CNT03","X1_VAR04"  ,"X1_DEF04"  ,"X1_DEFSPA4",;
	"X1_DEFENG4","X1_CNT04","X1_VAR05"  ,"X1_DEF05"  ,"X1_DEFSPA5","X1_DEFENG5","X1_CNT05","X1_F3"     ,"X1_GRPSXG" ,"X1_PYME"}
	
	//-- Mv_par01 =     Cliente DE ?
	aAdd(aPergs,{cPerg,"01","Cliente DE ?","","","MV_CH1","C",TamSX3("A1_COD")[1],00,00,"G","","MV_PAR01","","","","","","","","","","","","","","","","","","","","","","","","","SA1",""})

	//-- Mv_par02 =     Cliente DE ?
	aAdd(aPergs,{cPerg,"02","Cliente ATE ?","","","MV_CH2","C",TamSX3("A1_COD")[1],00,00,"G","","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","SA1",""})

	//-- Mv_par03 =     Polo de Venda DE ?
	aAdd(aPergs,{cPerg,"03","Polo de Venda DE ?","","","MV_CH3","C",TamSX3("ZCD_CODIGO")[1],00,00,"G","","MV_PAR03","","","","","","","","","","","","","","","","","","","","","","","","","ZCD",""})

	//-- Mv_par04 =     Polo de Venda DE ?
	aAdd(aPergs,{cPerg,"04","Polo de Venda ATE ?","","","MV_CH4","C",TamSX3("ZCD_CODIGO")[1],00,00,"G","","MV_PAR04","","","","","","","","","","","","","","","","","","","","","","","","","ZCD",""})      
	
	ProcRegua(Len(aPergs))
	dbSelectArea("SX1")
	dbSetOrder(1)
	IF ! dbSeek(cPerg)
		For nI:= 1 To Len(aPergs)
			If !Empty(aPergs[nI][1])
				If !dbSeek(aPergs[nI,1]+aPergs[nI,2])
					lSX1 := .T.
					RecLock("SX1",.T.)
					For nJ:=1 To Len(aPergs[nI])
						If !Empty(FieldName(FieldPos(aEstrut[nJ])))
							FieldPut(FieldPos(aEstrut[nJ]),aPergs[nI,nJ])
						EndIf
					Next nJ
					MsUnLock()
					dbCommit()
					IncProc("Atualizando Perguntas de Relatorios" + "...")		//"Atualizando Perguntas de Relatorios"
				EndIf
			EndIf
		Next nI
	EndIf
	
	/*
	Inclusao do "help" 
	*/
	AADD(aHelpPor,"Cliente"			)
	AADD(aHelpPor,"Cliente"			)
	AADD(aHelpPor,"Polo de Venda"	)
	AADD(aHelpPor,"Polo de Venda"	)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	
	PutSX1Help("P." + cPerg + "01.",aHelpPor,aHelpEng,aHelpSpa,.T.)
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {}
	/*..*/
	AADD(aHelpPor,"Cliente"			)
	AADD(aHelpPor,"Cliente"			)
	AADD(aHelpPor,"Polo de Venda"	)
	AADD(aHelpPor,"Polo de Venda"	)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {}
	/*..*/
	AADD(aHelpPor,"Cliente"			)
	AADD(aHelpPor,"Cliente"			)
	AADD(aHelpPor,"Polo de Venda"	)
	AADD(aHelpPor,"Polo de Venda"	)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	PutSX1Help("P." + cPerg + "03.",aHelpPor,aHelpEng,aHelpSpa,.T.)
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {} 
	
	RestArea(aSaveArea)
	
Return