#INCLUDE "TOTVS.CH"
#INCLUDE "PROTHEUS.CH"


/*/{Protheus.doc} LJUPD001
@description Atualiza dicionario para a Customização: Melhorias e Ajustes para Implantação do Venda Assistida. 

@author  Helitom Silva
@since   29/08/2019
/*/
User Function LJUPD001()

	Default oProcess  := Nil
	Default cEmpresa  := "01"

	oProcess:SetRegua2( 10 )

	oProcess:IncRegua2( 'Atualizando SX1')
	ExecSX1()

	oProcess:IncRegua2( 'Atualizando SX2')
	ExecSX2(cEmpresa)	
	
	oProcess:IncRegua2( 'Atualizando SX3')
	ExecSX3()

	oProcess:IncRegua2( 'Atualizando SX4')
	ExecSX4()

	oProcess:IncRegua2( 'Atualizando SX5')
	ExecSX5()

	oProcess:IncRegua2( 'Atualizando SX6')
	ExecSX6()

	oProcess:IncRegua2( 'Atualizando SX7')
	ExecSX7()

	oProcess:IncRegua2( 'Atualizando SIX')
	ExecSIX()
	
	oProcess:IncRegua2( 'Atualizando SXB')
	ExecSXB()	

	oProcess:IncRegua2( 'Atualizando SXA')
	ExecSXA()

	oProcess:IncRegua2( 'Criando Cadastros necessários na Base de Dados')
	ExecInsert()

Return


/*/{Protheus.doc} ExecSX1
@description Atualiza dicionario SX1

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX1()
Return


/*/{Protheus.doc} ExecSX2
@description Atualiza dicionario SX2 - Tabelas

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX2(cEmpresa)
Return


/*/{Protheus.doc} ExecSX3
@description Atualiza dicionario SX3 - Campos das Tabelas

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX3()

    SX3 := UPDSX3():CREATE()

    SX3:CLONE("LQ_CONDPG", "LQ_CONDPG")
	SX3:S('WHEN', '.F.')	

    SX3:CLONE("L1_CONDPG", "L1_CONDPG")
	SX3:S('WHEN', '.F.')	


    SX3:CLONE("LQ_CLIENTE", "LQ_CLIENTE")
	SX3:S('VLDUSER', 'U_SF12A01X()')	

    SX3:CLONE("LQ_LOJA", "LQ_LOJA")
	SX3:S('VLDUSER', 'U_SF12A01X()')	


    SX3:CLONE("L1_CLIENTE", "L1_CLIENTE")
	SX3:S('VLDUSER', 'U_SF12A01X()')	

    SX3:CLONE("L1_LOJA", "L1_LOJA")
	SX3:S('VLDUSER', 'U_SF12A01X()')	


    SX3:ADD("SL2")
    SX3:S('CAMPO', 'L2_XVLRITE')
	SX3:S('TIPO', 'N')
	SX3:S('TAMANHO', 14)
	SX3:S('DECIMAL', 2)
	SX3:S('PICTURE', '@E 999,999,999.99')
	SX3:S('TITULO', 'Prc.It.Tabela')
	SX3:S('DESCRI', 'Preço do Item Tabela')
	SX3:S('CONTEXT', 'R')
	SX3:SETOPCIONAL()	

    SX3:ADD("SLR")
    SX3:S('CAMPO', 'LR_XVLRITE')
	SX3:S('TIPO', 'N')
	SX3:S('TAMANHO', 14)
	SX3:S('DECIMAL', 2)
	SX3:S('PICTURE', '@E 999,999,999.99')
	SX3:S('TITULO', 'Prc.It.Tabela')
	SX3:S('DESCRI', 'Preço do Item Tabela')
	SX3:S('CONTEXT', 'R')
	SX3:S('VISUAL', 'V')
	SX3:SETOPCIONAL()

    SX3:ADD("SBZ")
    SX3:S('CAMPO', 'BZ_XCTT')
	SX3:S('TIPO', 'C')
	SX3:S('TAMANHO', 20)
	SX3:S('DECIMAL', 0)
	SX3:S('PICTURE', '@!')
	SX3:S('TITULO', 'Centro de Custo')
	SX3:S('DESCRI', 'Centro de Custo')
	SX3:S('CONTEXT', 'R')
	SX3:S('VISUAL', 'A')
	SX3:S('F3', 'CTT')
	SX3:SETOPCIONAL()

    SX3:CLONE("L1_MENNOTA", "L1_MENNOTA")
	SX3:S('TIPO', 'M')	
	SX3:S('TAMANHO', 80)	
	SX3:SETOPCIONAL()
	
    SX3:CLONE("LQ_MENNOTA", "LQ_MENNOTA")
	SX3:S('TIPO', 'M')	
	SX3:S('TAMANHO', 80)
	SX3:SETOPCIONAL()

    SX3:CLONE("F2_MENNOTA", "F2_MENNOTA")
	SX3:S('TIPO', 'M')	
	SX3:S('TAMANHO', 80)	
	
    SX3:CONFIRM()

Return


/*/{Protheus.doc}ExecSX4
@description Atualiza dicionario SX1

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX4()
Return


/*/{Protheus.doc} ExecSX5
@description Atualiza dicionario SX5

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX5()
    
	SX5 := UPDSX5():CREATE()
     
	SX5:ADDITENS('02MT    ', '24', 'GT', 'GRATUITO')
	SX5:ADDITENS('02MT    ', '24', 'CD', 'CARTAO DE DEBITO')
	
	SX5:ADDITENS('04MT    ', '24', 'CD', 'CARTAO DE DEBITO')
	
	// Sequencia de Numeração de Notas de Serviços da Serie 8
	SX5:ADDITENS('04MT0001', '01', '8', '000000001')
     	    	        	
	SX5:CONFIRM()
	
Return


/*/{Protheus.doc}ExecSX6
@description Atualiza dicionario SX6 - Parametros

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX6()

	Local nTamFil := Len(cFilAnt)
	
	SX6 := UPDSX6():CREATE()
	
	// *** PARAMETROS GERAIS, TANTO PRO [SESI PARK] QUANTO PARA O [IEL] ***
	
		// Define o tipo de controle da numeracao dos documentos de saída tos de saida ( 1-SX5 | 2-SXE/SXF | 3-SD9 ).
		SX6:CLONE('MV_TPNRNFS', 'MV_TPNRNFS')
		SX6:S('CONTEUD', '1')
	
		// Habilita nova rotina de conferencia de Caixa.
		SX6:CLONE('MV_LJCONFF', 'MV_LJCONFF')
		SX6:S('CONTEUD', '.F.')
	
		// Tipo de desconto que será aplicado: 0=Default, 1=Aplicação do desconto no valor unitário,2=Cons. Desconto mais de duas casas decimais.
		SX6:CLONE('MV_LJTPDES', 'MV_LJTPDES')
		SX6:S('CONTEUD', '2')
	
		// Gravação da Venda Assistida: se MV_LJGRVON = .T. a venda será gravada integralmente ao confirmar a venda, 
		// caso contrario a gravação da venda será feita pelo Job LjGrvBatch se MV_LJGRVJB = .F., senão é Iniciado um Job pelo SmartClient  
		SX6:CLONE('MV_LJGRVON', 'MV_LJGRVON')
		SX6:S('CONTEUD', '.T.')

		// Para poder fazer venda com NFSe dos mesmos produtos em cidades diferentes será necessário informar [SBZ] 
		// nesse parametro e preencher a cada filial o [Cod Trib Municipio] no Cadastro de Produtos->Indicadores de Produtos.	
		// Também será usado para o sistema Identificar as Vendas não Fiscais, pois o Protheus sabe se gera Livro se a TES contiver o 
		// campo referente ao imposto marcado como Sim, exemplo: Calculo ISSO = Sim. Neste caso os produtos que forem não fiscal deverão estar ligado com 
		// TES que esses campos não estejam com valor SIM.
		SX6:CLONE('MV_ARQPROD', 'MV_ARQPROD')
		SX6:S('CONTEUD', 'SBZ')

		//IMPLEMENTADO ponto de entrada LJ7087 com retorno = 2 para emissão da Nota Fiscal, com caixa não fiscal. (Chamada no Fonte LOJA701A-LjNFFimVd)
		//Com o CNPJ da empresa liberado para emissão de Nota Fiscal no Venda Assistida, este Ponto de Entrada permite que o usuário defina o tipo da //venda (Cupom ou Nota), ou se será exibida a pergunta padrão: “Cupom ou Nota?”. Também é possível definir se será utilizado Cupom (NFC-e), ou //Nota sem a apresentação da pergunta na tela. É executado no início da venda, após o preenchimento do cliente, ou na finalização da venda por //meio da opção “Finalizar Venda” na tela de lista de orçamentos .
		//Caso o retorno seja diferente dos números 1 ou 2, será efetuado o tratamento padrão para definição do tipo de emissão da venda, sendo assim, //serão apresentadas as perguntas: "Cupom ou Nota?" ou "NFC-e ou Nota?" (caso habilitada funcionalidade de NFC-e).

	// *** PARAMETROS PARA [SESI PARK] - VENDA DE DAY USE - NÃO FISCAL ***

		// -- Parametros de Controle de Numeracão e Serie ---
		
			// Serie da Nota Fiscal - SIGALOJA.  
			SX6:CLONE('MV_LOJANF', 'MV_LOJANF')
			SX6:S('CONTEUD', 'RMP')
			SX6:S('FIL', '02MT0012')
			
			// Configuração da série a ser apresentada pelas Notas Fiscais emitidas. 
			SX6:CLONE('MV_SERIE', 'MV_SERIE')
			SX6:S('CONTEUD', 'RMP')
			SX6:S('FIL', '02MT0012')
			
			// Serie da NF
			SX6:CLONE('MV_SER_NFE', 'MV_SER_NFE')
			SX6:S('CONTEUD', 'RMP')
			SX6:S('FIL', '02MT0012')
				
			// Serie da Nota Fiscal a ser Gravada na operacao de troca. (Entrada no Estoque)
			SX6:CLONE('MV_LJNFTRO', 'MV_LJNFTRO')
			SX6:S('CONTEUD', 'RMP')
			SX6:S('FIL', '02MT0012')
				
			// Serie da Nota Fiscal de Servico (RPS).
			SX6:CLONE('MV_LOJARPS', 'MV_LOJARPS')
			SX6:S('CONTEUD', 'RPS')
			SX6:S('FIL', '02MT0012')
				
			//Contém tipos de documentos fiscais utilizados na emissão de notas fiscais
			SX6:CLONE('MV_ESPECIE', 'MV_ESPECIE')
			SX6:S('CONTEUD', 'UNI=NF;NFE=SPED;8=RPS;RMP=NF')
			SX6:S('FIL', '02MT0012')

			// Configuração do prefixo das movimentações financeiras/contas a receber a serem geradas pelo Venda Assistida.
			SX6:CLONE('MV_LJPREF', 'MV_LJPREF')
			SX6:S('CONTEUD', 'SF2->F2_SERIE') // RMP
			SX6:S('FIL', '02MT0012')
			
		// -- Parametros responsáveis pela Venda não Fiscal
		
			// TES Padrão Saída SIGALOJA
			SX6:CLONE('MV_TESSAI', 'MV_TESSAI')
			SX6:S('CONTEUD', '501')	
			SX6:S('FIL', '02MT0012')
				
			// Habilita a geração de nota fiscal separadamente para venda com itens de produto e itens de serviço
			SX6:CLONE('MV_LJPRDSV', 'MV_LJPRDSV')
			SX6:S('CONTEUD', '.F.')	
			SX6:S('FIL', '02MT0012')
			
			// Utiliza emissão de NF NO LOJA
			SX6:CLONE('MV_FISNOTA', 'MV_FISNOTA')
			SX6:S('CONTEUD', '.T.')	
			SX6:S('FIL', '02MT0012')
			
			// Emissão de NF para CPNJ e CPF.
			SX6:CLONE('MV_LJLBNT', 'MV_LJLBNT')
			SX6:S('CONTEUD', '2')
			SX6:S('FIL', '02MT0012')
				
			// Parametro que define o NOME DO PONTO DE ENTRADA QUE IMPRIME O CUPOM
			SX6:CLONE('MV_SCRCUP', 'MV_SCRCUP')
			SX6:S('CONTEUD', 'BOLETO')	
			SX6:S('FIL', '02MT0012')
					
			// Parametro que define o NOME DO PONTO DE ENTRADA QUE IMPRIME A NOTA FISCAL
			// Referente a solução do erro ao chamar o relatório(LOJR110) que imprime na LPT1 via driver da EPSON - https://tdn.totvs.com.br/pages/releaseview.action?pageId=514732038
			// Patch https://suporte.totvs.com/portal/p/10098/download?e=797265
			SX6:CLONE('MV_SCRNOTA', 'MV_SCRNOTA')
			SX6:S('CONTEUD', '&(LJNFISCA)')	
			SX6:S('FIL', '02MT0012')
	
		//  --- Parametros Venda Gratuita ---
		
			// Inibe tela de informações de Pagamento das financeiras (CC, CD, FI, BOL)
			SX6:CLONE('MV_LJADMFI', 'MV_LJADMFI')
			SX6:S('CONTEUD', '.T.')	
			SX6:S('FIL', '02MT0012')
				
			// Formas de pagamento que deve apresentar tela para informar os dados do pagamento da Financeira (Numero Cartão de credito...) Usado em conjunto com MV_LJADMFI
			SX6:CLONE('MV_FORMAFI', 'MV_FORMAFI')
			SX6:S('CONTEUD', 'CD, CC')
			SX6:S('FIL', '02MT0012')
		
		// --- Formas de Pagamento ---
		
			// Condição de Pagamento Padrão A VISTA - Dinheiro - Colocado WHEN = .F. no campo LQ_CONDPG para não ser possível alterar a Condição de Pagamento
			SX6:CLONE('MV_CONDPAD', 'MV_CONDPAD')
			SX6:S('CONTEUD', '002')
			SX6:S('FIL', '02MT0012')
			
		// --- Conferencia de Caixa ---
			
			// Somente deixa o valor informado em dinheiro na Sangria, zera os demais numerários para gerar movimentação apenas do dinheiro.
			SX6:CLONE('MV_LJ350MV', 'MV_LJ350MV')
			SX6:S('CONTEUD', '1')
			SX6:S('FIL', '02MT0012')
					
	// *** PARAMETROS PARA [IEL] - VENDA DE CERTIFICADOS - EMISSÃO DE NFS-E ***

		// -- Parametros de Controle de Numeracão e Serie ---
		
		    // Cadastrar a Serie 8 na Tabela 01 - SX5 (Controle da Numeracao)
		
			// Serie da Nota Fiscal - SIGALOJA.  
			SX6:CLONE('MV_LOJANF', 'MV_LOJANF')
			SX6:S('CONTEUD', '8')
			SX6:S('FIL', '04MT0001')
			
			// Configuração da série a ser apresentada pelas Notas Fiscais emitidas. 
			SX6:CLONE('MV_SERIE', 'MV_SERIE')
			SX6:S('CONTEUD', '8')
			SX6:S('FIL', '04MT0001')
			
			// Serie da NF
			SX6:CLONE('MV_SER_NFE', 'MV_SER_NFE')
			SX6:S('CONTEUD', '8')
			SX6:S('FIL', '04MT0001')
				
			// Serie da Nota Fiscal a ser Gravada na operacao de troca. (Entrada no Estoque)
			SX6:CLONE('MV_LJNFTRO', 'MV_LJNFTRO')
			SX6:S('CONTEUD', '8')
			SX6:S('FIL', '04MT0001')
				
			// Serie da Nota Fiscal de Servico (RPS).
			SX6:CLONE('MV_LOJARPS', 'MV_LOJARPS')
			SX6:S('CONTEUD', '8')
			SX6:S('FIL', '04MT0001')
				
			// Contém tipos de documentos fiscais utilizados na emissão de notas fiscais
			// Se faturar com serie UNI a especie será NF...
			SX6:CLONE('MV_ESPECIE', 'MV_ESPECIE')
			SX6:S('CONTEUD', 'UNI=NF;NFE=SPED;8=RPS;RMP=NF') 
			SX6:S('FIL', '04MT0001')

			// Configuração do prefixo das movimentações financeiras/contas a receber a serem geradas pelo Venda Assistida.
			SX6:CLONE('MV_LJPREF', 'MV_LJPREF')
			SX6:S('CONTEUD', 'Iif(AllTrim(SF2->F2_SERIE)="8","CMP",SF2->F2_SERIE)')
			SX6:S('FIL', '04MT0001')
					
		// -- Parametros responsáveis pela Venda gerando a NFS-e
		
			// TES Padrão Saída SIGALOJA
			// Alterar cadastro da TES com F4_ISS = Sim, F4_LISS = I=Isento, F4_CSTISS = 06 - Isento
			// Se no cadastro do Produto->Indicadores de Produtos for informado TES de Saída será essa que será usada, 
			// pode também ser usada uma Tes Inteligente com codigo 01 - Venda ao Consumidor para indicar a TES, caso contrário será 
			// usada a do Parametro MV_TESSAI 
			SX6:CLONE('MV_TESSAI', 'MV_TESSAI')
			SX6:S('CONTEUD', '501')
			SX6:S('FIL', '04MT0001')
				
			// Habilita a geração de nota fiscal separadamente para venda com itens de produto e itens de serviço
			SX6:CLONE('MV_LJPRDSV', 'MV_LJPRDSV')
			SX6:S('CONTEUD', '.T.')	
			SX6:S('FIL', '04MT0001')
			
			// Utiliza emissão de NF NO LOJA
			SX6:CLONE('MV_FISNOTA', 'MV_FISNOTA')
			SX6:S('CONTEUD', '.T.')	
			SX6:S('FIL', '04MT0001')
			
			// Emissão de NF para CPNJ e CPF.
			SX6:CLONE('MV_LJLBNT', 'MV_LJLBNT')
			SX6:S('CONTEUD', '2')
			SX6:S('FIL', '04MT0001')
				
			// Parametro que define o NOME DO PONTO DE ENTRADA QUE IMPRIME O CUPOM
			SX6:CLONE('MV_SCRCUP', 'MV_SCRCUP')
			SX6:S('CONTEUD', 'BOLETO')	
			SX6:S('FIL', '04MT0001')
				
			// Parametro que define o NOME DO PONTO DE ENTRADA QUE IMPRIME A NOTA FISCAL
			SX6:CLONE('MV_SCRNOTA', 'MV_SCRNOTA')
			SX6:S('CONTEUD', 'LJNFISCA')
			SX6:S('FIL', '04MT0001')
					
			// Para truncar os valores do ISSQN, usado em conjunto com MV_RNDSOBR
			SX6:CLONE('MV_RNDISS', 'MV_RNDISS')
			SX6:S('CONTEUD', '.F.')
			SX6:S('FIL', '04MT0001')
					
			// Para truncar os valores do ISSQN ( https://tdn.totvs.com/plugins/viewsource/viewpagesrc.action?pageId=6076790 )
			SX6:CLONE('MV_RNDSOBR', 'MV_RNDSOBR')
			SX6:S('CONTEUD', '.F.')
			SX6:S('FIL', '04MT0001')
					
			// Habilitado campo LQ_MENNOTA para digitação do texto que é informado na Descrição da NFSe.
			// Também foi alterado os campos L1_MENNOTA, LQ_MENNOTA, F2_MENNOTA para MEMO, e assim podendo digitar um texto maior na descrição da NFSe.
			SX6:CLONE('MV_LJMENNO', 'MV_LJMENNO')
			SX6:S('CONTEUD', '.T.')
			SX6:S('FIL', '04MT0001')
						
			// Optante pelo Simples (1 - Sim, 2 -  Não)
			SX6:CLONE('MV_OPTSIMP', 'MV_OPTSIMP')
			SX6:S('CONTEUD', '2')
			SX6:S('FIL', '04MT0001')
			
		    // Informar se será utilizado o novo modelo único de XML a ser enviado ao TSS para NFS-e. .T. = Sim; .F. = Não. 
			SX6:CLONE('MV_NFSEMOD', 'MV_NFSEMOD')
			SX6:S('CONTEUD', '.T.')
			SX6:S('FIL', '04MT0001')

			// Obtem a descrição do Serviço (1 - Mensagem do Pedido de Venda + Tabela 60 do SX5 baseado no D2_CODISS, ou 2 - Somente Descrição do Item Tabela 60 do SX5 baseado no D2_CODISS.
			SX6:CLONE('MV_NFESERV', 'MV_NFESERV')
			SX6:S('CONTEUD', '1')
			SX6:S('FIL', '04MT0001')
			
			// Usado em conjunto com o parametro MV_NFESERV para Enviar a descrição do campo F2_MENNOTA - proveniente da L1_MENNOTA(Venda Assistida) e C5_MENNOTA(Pedido de Venda)
			SX6:CLONE('MV_NFEDESC', 'MV_NFEDESC')
			SX6:S('CONTEUD', '.T.')
			SX6:S('FIL', '04MT0001')
			
		// --- Parametrização do Desconto ---
		
			// Permite definir a apresentação da tela para inserir o motivo de desconto.
			SX6:CLONE('MV_LJUSAMD', 'MV_LJUSAMD')
			SX6:S('CONTEUD', '.T.')
			SX6:S('FIL', '04MT0001')
			
		// --- Formas de Pagamento ---
			
			// Inibe tela de informações de Pagamento das financeiras (CC, CD, FI, BOL)
			SX6:CLONE('MV_LJADMFI', 'MV_LJADMFI')
			SX6:S('CONTEUD', '.T.')
			SX6:S('FIL', '04MT0001')
			
			// Formas de pagamento que deve apresentar tela para informar os dados do pagamento da Financeira (Numero Cartão de credito...) Usado em conjunto com MV_LJADMFI
			SX6:CLONE('MV_FORMAFI', 'MV_FORMAFI')
			SX6:S('CONTEUD', 'CD, CC')
			SX6:S('FIL', '04MT0001')
			
			// Condição de Pagamento Padrão A VISTA - Dinheiro - Colocado WHEN = .F. no campo LQ_CONDPG para não ser possível alterar a Condição de Pagamento
			SX6:CLONE('MV_CONDPAD', 'MV_CONDPAD')
			SX6:S('CONTEUD', '002')
			SX6:S('FIL', '04MT0001')
			
			// Configuração para Consumir o RA/NCC, sem gerar nova NCC, fazendo apenas consumos parciais via compensação na venda.
			SX6:CLONE('MV_LJCPNCC', 'MV_LJCPNCC')
			SX6:S('CONTEUD', '2')
			SX6:S('FIL', '04MT0001')
			
		// --- Conferencia de Caixa ---
			
			// Somente deixa o valor informado em dinheiro na Sangria, zera os demais numerários para gerar movimentação apenas do dinheiro.
			SX6:CLONE('MV_LJ350MV', 'MV_LJ350MV')
			SX6:S('CONTEUD', '1')
			SX6:S('FIL', '02MT0012')
																
	SX6:CONFIRM()
	
Return


/*/{Protheus.doc} ExecSX7
@description Atualiza dicionario SX7 -  Gatilhos

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSX7()

	//SX7 := UPDSX7():CREATE()
		
	//SX7:REMOVE('LR_QUANT', 'LR_XVLRITE')
	//SX7:ADD('LR_QUANT', SX7:PROXSEQ('LR_QUANT', 'LR_XVLRITE'), 'U_SF12A03X()', 'LR_XVLRITE')
	
	//SX7:REMOVE('L2_QUANT', 'L2_XVLRITE')
	//SX7:ADD('L2_QUANT', SX7:PROXSEQ('L2_QUANT', 'L2_XVLRITE'), 'U_SF12A03X()', 'L2_XVLRITE')
	
	//SX7:CONFIRM()
	
Return


/*/{Protheus.doc}ExecSIX
@description Atualiza dicionario SIX -  Indices

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSIX()
Return


/*/{Protheus.doc}ExecSXA
@description Atualiza dicionario SXA

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSXA()
Return


/*/{Protheus.doc} ExecSXB
@description Atualiza dicionario SXB

@author  Helitom Silva
@since   29/08/2019
/*/
Static Function ExecSXB()
Return


/*/{Protheus.doc} ExecInsert
@description Cria cadastros necessários na Base

@author  Helitom Silva
@since   13/09/2019
/*/
Static Function ExecInsert()

	Local aOldArea := GetArea()
	Local lInclui  := .T.
	
	// Cria cadastro de Administradora Financeira - Boleto
	DbSelectArea('SAE')
	SAE->(DbSetOrder(1)) //AE_FILIAL+AE_COD
	lInclui := ( .not. SAE->(DbSeek(xFilial('SAE') + 'BOL')) )
	
	RecLock('SAE', lInclui)
		SAE->AE_COD    := 'BOL'
		SAE->AE_DESC   := 'BOLETO BANCARIO'
		SAE->AE_TIPO   := 'BOL'
		SAE->AE_VENCTO := 15
		SAE->AE_FINPRO := 'S'
		SAE->AE_CODCLI := 'BOL'
	SAE->(MsUnLock())
	
	// Cria cadastro de Administradora Financeira - Gratuito
	DbSelectArea('SAE')
	SAE->(DbSetOrder(1)) //AE_FILIAL+AE_COD
	lInclui := ( .not. SAE->(DbSeek(xFilial('SAE') + 'GT')) )
	
	RecLock('SAE', lInclui)
		SAE->AE_COD    := 'GT'
		SAE->AE_DESC   := 'GRATUITO'
		SAE->AE_TIPO   := 'GT'
		SAE->AE_VENCTO := 0
		SAE->AE_FINPRO := 'S'
		SAE->AE_CODCLI := 'GT'
	SAE->(MsUnLock())
	
	RestArea(aOldArea)

Return