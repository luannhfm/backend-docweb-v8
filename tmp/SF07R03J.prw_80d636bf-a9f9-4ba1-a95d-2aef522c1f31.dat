#Include 'Protheus.ch'
#Include 'Topconn.ch'

/*/{Protheus.doc} SF07R03J
Função responsável pela geração do Relatorio de Validação de Rateios de Folha

@author 	Jose Leite de Barros Neto
@since 	04/11/2014
@version 	1.0

@return Nil, Nulo
/*/
User Function SF07R03J()
	
	Local oReport
	Local cTipo	:= ""
	
	Private cPerg		:= "SF07R03J"
	Private cPeriodo	:= "" 
	Private cTitle		:= ""
	Private cFolMes		:= GETMV("MV_FOLMES")
	
	If TRepInUse()
	
		fCriaSx1()
	
		If Pergunte( cPerg )
			
			If mv_par02 == 1
				cTipo := "ANALÍTICO"
			Else
				cTipo := "SINTÉTICO"
			EndIf
						
			cPeriodo	:= mv_par03
			cTitle		:= "RATEIO DE VERBAS DO PERÍODO: "+ SubStr(cPeriodo,5,2) + '/' + SubStr(cPeriodo,1,4) + " - " + cTipo
			
			oReport:= ReportDef(cPerg)
			oReport:PrintDialog()
			
		EndIf
		
	EndIf

Return( Nil )

/** {Protheus.doc} ReportDef
Funcao que define as colunas

@author: 	Jose Leite de Barros Neto
@since: 	04/11/2014
@Uso: 		SFIEMT
*/
Static Function ReportDef(cPerg)
	
	Local oReport
	Local oSection1
	Local oSection2
	Local oSection3
	Local oSection4
	Local oSection5
	
	oReport := TReport():New(cPerg,cTitle,cPerg,{|oReport| PrintReport(oReport)},cTitle)
	
	//Sessao 1
	oSection1:= TRSection():New(oReport,OemToAnsi(""),{"SRA"})
	
	oFilial:= TRCell():New(oSection1, "_cFilial","TSRA", "Filial")
	oFilial:SetSize(10)
	
	oMat:= TRCell():New(oSection1, "_cMat","TSRA", "Mat")
	oMat:SetSize(8)
	
	oNome:= TRCell():New(oSection1, "_cNome","TSRA", "Nome")
	oNome:SetSize(50)
	
	oDesc:= TRCell():New(oSection1, "_cDesc","TSRA", "Inconsistência")
	oDesc:SetSize(60)
	
	TRFunction():New(oSection1:Cell("_cMat"),"","COUNT",/*oBreak1*/,"Qtde. Registros","@E 9999999",,.T.,.F.,.F.)
	
	//Sessao 2
	oSection2:= TRSection():New(oReport,OemToAnsi(""),{"SRV"})
	
	oCdVerba:= TRCell():New(oSection2, "_cCdVerba","SRV", "Verba")
	oCdVerba:SetSize(8)
	
	oDscVerb:= TRCell():New(oSection2, "_cDscVerb","SRV", "Descrição")
	oDscVerb:SetSize(40)
	
	oDesc2:= TRCell():New(oSection2, "_cDesc","SRV", "Inconsistência")
	oDesc2:SetSize(60)
	
	TRFunction():New(oSection2:Cell("_cCdVerba"),"","COUNT",/*oBreak2*/,"Qtde. Registros","@E 9999999",,.T.,.F.,.F.)
	
	//Sessao 3
	oSection3:= TRSection():New(oReport,OemToAnsi(""),{"SRT"})
	
	oFilial3:= TRCell():New(oSection3, "_cFilial","TRT", "Filial")
	oFilial3:SetSize(10)
	
	oMat3:= TRCell():New(oSection3, "_cMat","TRT", "Mat")
	oMat3:SetSize(8)
	
	oNome3:= TRCell():New(oSection3, "_cNome","TRT", "Nome")
	oNome3:SetSize(50)
	
	oDesc3:= TRCell():New(oSection3, "_cDesc","TRT", "Inconsistência")
	oDesc3:SetSize(60)
	
	oSitFol:= TRCell():New(oSection3, "_cSitFol","TRT", "Situação")
	oSitFol:SetSize(30)
	
	TRFunction():New(oSection3:Cell("_cDesc"),"","COUNT",/*oBreak3*/,"Qtde. Registros","@E 9999999",,.T.,.F.,.F.)
	
	//Sessao 4
	oSection4:= TRSection():New(oReport,OemToAnsi(""),{"SRT"})
	
	oTpProv:= TRCell():New(oSection4, "_cTpProv","TRT", "Tipo Provisão")
	oTpProv:SetSize(20)
	
	oCdVerba4:= TRCell():New(oSection4, "_cCdVerba","TRT", "Verba")
	oCdVerba4:SetSize(8)
	
	oDscVerb4:= TRCell():New(oSection4, "_cDscVerb","TRT", "Descrição")
	oDscVerb4:SetSize(40)
	
	oCtaDeb:= TRCell():New(oSection4, "_cCtaDeb","TRT", "Cta. Débito")
	oCtaDeb:SetSize(25)
	
	oCtaCre:= TRCell():New(oSection4, "_cCtaCre","TRT", "Cta. Crédito")
	oCtaCre:SetSize(25)
	
	oVlrAcum:= TRCell():New(oSection4, "_nVlrAcm","TRT", "Valor Acum.")
	oVlrAcum:SetSize(25)
	
	oVlrMes:= TRCell():New(oSection4, "_nVlrMes","TRT", "Valor Mes")
	oVlrMes:SetSize(25)
	
	oDesc4:= TRCell():New(oSection4, "_cDesc","TRT", "Inconsistência")
	oDesc4:SetSize(40)
	
	//Sessao 05
	oSection5:= TRSection():New(oReport,OemToAnsi(""),{"ZD7"})
	
	oEmp5:= TRCell():New(oSection5, "_cEmpresa","ZD7", "Empresa")
	oEmp5:SetSize(6)
	
	oCtaDeb5:= TRCell():New(oSection5, "_cCtaDeb","ZD7", "Cta. Débito")
	oCtaDeb5:SetSize(25)
		
	oCtaCre5:= TRCell():New(oSection5, "_cCtaCre","ZD7", "Cta. Crédito")
	oCtaCre5:SetSize(25)
		
	If mv_par02 == 1 //Analitico
		oFilial5:= TRCell():New(oSection5, "_cFilial","ZD7", "Filial")
		oFilial5:SetSize(10)
	EndIf
		
	oCdVerba5:= TRCell():New(oSection5, "_cCdVerba","ZD7", "Verba")
	oCdVerba5:SetSize(8)
	
	oDscVerb5:= TRCell():New(oSection5, "_cDscVerb","ZD7", "Descrição")
	oDscVerb5:SetSize(40)
	
	oVlrRat:= TRCell():New(oSection5, "_nVlrRat","ZD7", "Valor Rateado", "@E 999,999,999.99")
	oVlrRat:SetSize(25)
	
	oBreak5 := TRBreak():New(oSection5, oSection5:Cell("_cEmpresa"), "Total por Empresa: ",.F.)
	TRFunction():New(oSection5:Cell("_nVlrRat"),,"SUM",oBreak5,,"@E 999,999,999.99",,.T.,.F.,.F.)
	
Return( oReport )

/** {Protheus.doc} ReportDef
Funcao que gera o relatorio

@author: 	Jose Leite de Barros Neto
@since: 	04/11/2014
@Uso: 		SFIEMT
*/
Static Function PrintReport(oReport)

	Local oSection1	:= oReport:Section(1)
	Local oSection2	:= oReport:Section(2)
	Local oSection3	:= oReport:Section(3)
	Local oSection4	:= oReport:Section(4)
	Local oSection5	:= oReport:Section(5)
	Local oBreak4	:= Nil
	Local oMat4		:= Nil
	Local oFilial4	:= Nil
	Local oFilial5	:= Nil
	Local _cTitSec1	:= "Funcionário x Estrutura de Rateio"
	Local _cTitSec2	:= " Cadastro de Verbas"
	Local _cTitSec3	:= " Provisão"
	Local _cTitSec4	:= " Cálculo de Provisão do Mês"
	Local _cTitSec5	:= " Cálculo de Rateio"
	Local _cCancel	:= "*** Cancelado pelo Usuário ***"
	Local _cDados	:= "*** Não há dados a serem exibidos ***"
	Local _cSemInc	:= "*** Sem Inconsistência ***"
	Local _cQuery1 	:= ""
	Local _cQuery2	:= ""
	Local _cQuery3	:= ""
	Local _cQuery4	:= ""
	Local _cQuery5	:= ""
	Local _cQuery6	:= ""
	Local _cQuery7	:= ""
	Local _cFilial	:= ""
	Local _cEmpresa	:= ""
	Local _cMat		:= ""
	Local _cNome		:= ""
	Local _cDesc		:= ""
	Local _cDesc1	:= ""
	Local _cDesc2	:= ""
	Local _cDesc3	:= ""
	Local _cDesc4	:= ""
	Local _cDesc5	:= ""
	Local _cDesc6	:= ""
	Local _cSitFol	:= ""
	Local _cCusto	:= ""
	Local _cCdVerba	:= ""
	Local _cDscVerb	:= ""
	Local _cCtaDeb	:= ""
	Local _cCtaCre 	:= ""
	Local _nVlrAcm 	:= 0
	Local _nTotAcm	:= 0
	Local _nVlrMes 	:= 0
	Local _nTotMes	:= 0
	Local _nVlrRat	:= 0
	Local _lZD6		:= .T.
	Local _lCusto	:= .T.
	Local _lEmp05	:= .T.
	Local _lFncRat	:= .T.
	Local _lImpr		:= .F.
	
	//Sessao 01 - Funcionarios (SRA) x Rateio (ZD6)
	_cQuery1 := " SELECT * 									"
	_cQuery1 += " FROM  " + RetSqlName("SRA")
	_cQuery1 += " WHERE 		RA_FILIAL <> '04MT0002'	"
	_cQuery1 += " 		AND		RA_FILIAL <> '05MT0001'  "
	_cQuery1 += " 		AND 	RA_MAT < '900000'  		"
	_cQuery1 += "		AND 	RA_SITFOLH <> 'D' OR (RA_SITFOLH = 'D' AND RA_DEMISSA >= '"+mv_par03+"01') "
	 
	_cQuery1 += " 		AND 	D_E_L_E_T_ 	<> '*' 		"
	_cQuery1 += " ORDER BY RA_FILIAL, RA_MAT "
	_cQuery1 := ChangeQuery( _cQuery1 )
	
	TCQUERY _cQuery1 NEW ALIAS "TSRA"
	
	DbSelectArea("TSRA")
	DbGoTop()
	
	oReport:SetMeter(RecCount())
	oSection1:Init()
	oReport:PrintText(_cTitSec1)
	oReport:SkipLine()
	
	While .Not. TSRA->( EOF() )
	
		If oReport:Cancel()
			oReport:SkipLine()
			oReport:PrintText(_cCancel)
			Exit
		EndIf  
		
		_cFilial	:= TSRA->( RA_FILIAL )
		_cMat		:= TSRA->( RA_MAT )
		_cNome		:= TSRA->( RA_NOME )
		_cCusto	:= TSRA->( RA_CC )
		_cFlgRat	:= TSRA->( RA_XTPRAT )
		
		//Situacao 01
		If SubStr(_cCusto,1,6) <> '130104'
		
			If Select("TMP") > 0
				DbSelectarea("TMP")
				TMP->( DbCloseArea() )
			Endif
		
			_cQuery2 := " SELECT * "
			_cQuery2 += " FROM " + RetSqlName("ZD6") 
			_cQuery2 += " WHERE 	SubStr(ZD6_FILIMP,1,4) 	= '"+SubStr(_cFilial,1,4)+"'	"
			_cQuery2 += " 			AND ZD6_MESANO 				<= '"+mv_par03+"'					"
			_cQuery2 += " 			AND ZD6_MAT 					= '"+_cMat+"' 						"
			_cQuery2 += " 			AND D_E_L_E_T_ 				<> '*' 								"
			_cQuery2 += " ORDER BY ZD6_FILIAL, ZD6_MAT												"
			_cQuery2 := ChangeQuery( _cQuery2 )
		
			TCQUERY _cQuery2 NEW ALIAS "TMP"
			
			DbSelectArea("TMP")
			TMP->( DbGoTop() )
			
			If Empty( TMP->( ZD6_MAT ) )
				_lZD6 := .F.
			Else
				_lZD6 := .T.
			EndIf
				
			TMP->( DbCloseArea() )
		Else
			_lZD6 := .T.
		EndIf
		
		//Situacao 02
		If SubStr(_cCusto,1,6) == '130104' .And. _cFlgRat <> '1'
			_lCusto := .F.
		Else
			_lCusto := .T.
		EndIf
		
		//Situacao 03
		If SubStr(_cFilial,1,2) == '05MT' .And. _cFlgRat <> '3'
			_lEmp05 := .F.
		Else
			_lEmp05 := .T.
		EndIf
		
		//Situacao 04
		If Empty(_cFlgRat)
			_lFncRat := .F.
		Else
			_lFncRat := .T.
		EndIf
		
		//Informando a ocorrencia
		If .Not. _lZD6
			_cDesc1 := "Funcionário não possui estrutura de Rateio - ZD6"
		Endif
		
		If .Not. _lCusto
			_cDesc2 := "Funcionário da GC - Flag de Rateio Diferente de 1"
		EndIf
		
		If .Not. _lEmp05
			_cDesc3 := "Funcionário da Emp. 05 - Flag de Rateio Diferente de 3"
		EndIf
		
		If .Not. _lFncRat
			_cDesc4 := "Funcionário Ativo - Flag de Rateio Vazio"
		EndIf
		
		If .Not. Empty(_cDesc1)
			_cDesc := _cDesc1
		ElseIf .Not. Empty(_cDesc2)
			_cDesc := _cDesc2
		ElseIf .Not. Empty(_cDesc3)
			_cDesc := _cDesc3
		ElseIf .Not. Empty(_cDesc4)
			_cDesc := _cDesc4
		EndIf
		
		If .Not. Empty(_cDesc)
			oSection1:Cell("_cFilial"):SetValue(_cFilial)
			oSection1:Cell("_cMat"):SetValue(_cMat)
			oSection1:Cell("_cNome"):SetValue(_cNome)
			oSection1:Cell("_cDesc"):SetValue(_cDesc)
			oSection1:PrintLine()
			oReport:IncMeter()
			_lImpr := .T.
		EndIf
		
		_cDesc  := ""
		_cDesc1 := ""
		_cDesc2 := ""
		_cDesc3 := ""
		_cDesc4 := ""
		_cDesc5 := ""
		_cDesc6 := ""
		
		TSRA->( DbSkip() )
	End
	
	If .Not. _lImpr
		oReport:SkipLine()
		oReport:PrintText(_cSemInc)
	Endif
	
	oSection1:Finish()
	oReport:EndPage()
	
	_cDesc  := ""
	_cDesc1 := ""
	_cDesc2 := ""
	_cDesc3 := ""
	_cDesc4 := ""
	_cDesc5 := ""
	_cDesc6 := ""
	_lImpr  := .F.
		
	//Sessao 02 - Movimento (RCEEAAMM) X Verbas (SRV)
	If cFolMes <= mv_par03
		
		oReport:StartPage()
		oSection2:Init()
		oReport:PrintText(_cTitSec2)
		oReport:SkipLine()
		oReport:PrintText("*** Periodo sem informação para Análise ***")
		
		oSection2:Finish()
		oReport:EndPage()
		
	Else
		_cQuery3 := "SELECT RC_PD								"
		_cQuery3 += " FROM RC01"+ SubStr(mv_par03,3,4)
		_cQuery3 += " WHERE D_E_L_E_T_ <> '*' 				"
		_cQuery3 += " GROUP BY RC_PD							"
		_cQuery3 += " ORDER BY RC_PD 	"
		_cQuery3 := ChangeQuery( _cQuery3 )
		
		TCQUERY _cQuery3 NEW ALIAS "TRC"
		
		DbSelectArea("TRC")
		DbGoTop()
		
		oReport:StartPage()
		oSection2:Init()
		oReport:PrintText(_cTitSec2)
		oReport:SkipLine()
		
		While .Not. TRC->( EOF() )
			
			If oReport:Cancel()
				oReport:SkipLine()
				oReport:PrintText(_cCancel)
				Exit
			EndIf
			
			DbSelectArea('SRV')
			SRV->( DbSetOrder(1) ) //RV_FILIAL+RV_COD
			SRV->( DbGoTop() )
			If DbSeek( xFilial('SRV') + TRC->( RC_PD ) )
			
				_cCdVerba := AllTrim(SRV->RV_COD)
				_cDscVerb := AllTrim(SRV->RV_DESC)
				
				//Situacao 01
				If SRV->RV_TIPOCOD $ '1/2' .AND. ( Empty(SRV->RV_XCTADEB) .OR. Empty(SRV->RV_XCTACRD) )
					_cDesc1 := "Verba de Provento/Desconto - Conta Debito ou Crédito vazios"  
				EndIf
				
				//Situacao 02
				If SRV->RV_TIPOCOD $ '1/2' .AND. ( !Empty(SRV->RV_XCTADEB) .OR. !Empty(SRV->RV_XCTACRD) )
					If SRV->RV_XRATEIO == 'N'
						_cDesc2 := "Verba de Provento/Desconto - O Campo RV_XRATEIO tem que ser Diferente de N"
					EndIf
				EndIf
				
				//Situacao 03
				If SubStr(SRV->RV_XCTADEB,1,1) >= '3' .And. SRV->RV_XRATEIO <> 'R'
					_cDesc3 := "Conta Débito - O Conteúdo do campo RV_XRATEIO deve ser igual a R-Rateado"
				EndIf
				
				//Situacao 04
				If SubStr(SRV->RV_XCTACRD,1,1) >= '3' .And. SubStr(SRV->RV_XCTACRD,1,1) < '4' .And. SRV->RV_XRATEIO <> 'R'
					_cDesc4 := "Conta Crédito - O Conteúdo do campo RV_XRATEIO deve ser igual a R-Rateado"
				EndIf
				
				//Situacao 05
				If SubStr(SRV->RV_XCTADEB,1,1) $ '1/2' .And. SubStr(SRV->RV_XCTACRD,1,1) $ '1/2/4' .And. SRV->RV_XRATEIO <> 'I'
					_cDesc5 := "O Conteúdo do campo RV_XRATEIO deve ser igual a I-Integral"
				EndIf
				
				//Situacao 06
				If SRV->RV_TIPOCOD == '3' .And. !Empty(SRV->RV_XCTADEB) .And. !Empty(SRV->RV_XCTACRD) .And. SRV->RV_XRATEIO == 'N'
					_cDesc6 := "Verbas parametrizadas para Contabilização" 
				EndIf
				
			EndIf
			
			SRV->( DbCloseArea() )
			
			If .Not. Empty(_cDesc1)
				_cDesc := _cDesc1
			ElseIf .Not. Empty(_cDesc2)
				_cDesc := _cDesc2
			ElseIf .Not. Empty(_cDesc3)
				_cDesc := _cDesc3
			ElseIf .Not. Empty(_cDesc4)
				_cDesc := _cDesc4
			ElseIf .Not. Empty(_cDesc5)
				_cDesc := _cDesc5
			ElseIf .Not. Empty(_cDesc6)
				_cDesc := _cDesc6
			EndIf
			
			If .Not. Empty(_cDesc)
				oSection2:Cell("_cCdVerba"):SetValue(_cCdVerba)
				oSection2:Cell("_cDscVerb"):SetValue(_cDscVerb)
				oSection2:Cell("_cDesc"):SetValue(_cDesc)
				oSection2:PrintLine()
				oReport:IncMeter()
				_lImpr := .T.
			EndIf
			
			_cDesc  := ""
			_cDesc1 := ""
			_cDesc2 := ""
			_cDesc3 := ""
			_cDesc4 := ""
			_cDesc5 := ""
			_cDesc6 := ""
		
			TRC->( DbSkip() )
		End
		
		If .Not. _lImpr
			oReport:SkipLine()
			oReport:PrintText(_cSemInc)
		Endif
		
		TRC->(DbCloseArea())
		
		oSection2:Finish()
		oReport:EndPage()
		
	EndIf	
	
	_cDesc  := ""
	_cDesc1 := ""
	_cDesc2 := ""
	_cDesc3 := ""
	_cDesc4 := ""
	_cDesc5 := ""
	_cDesc6 := ""
	_lImpr  := .F.
	
	//Sessao 03 - Funcionario (SRA) x Provisao (SRT)
	oReport:StartPage()
	oSection3:Init()
	oReport:PrintText(_cTitSec3)
	oReport:SkipLine()
	
	DbSelectArea("TSRA")
	TSRA->( DbGoTop() )
	While .Not. TSRA->( EOF() )
	
		If TSRA->( RA_CATFUNC ) == "E"
			TSRA->( DbSkip() )
		EndIf	
		
		_cFilial 	:= TSRA->( RA_FILIAL )
		_cMat    	:= TSRA->( RA_MAT )
		_cNome		:= TSRA->( RA_NOME )
		_cCusto	:= TSRA->( RA_CC )
		
		/*
			Vazio - Situação Normal
			Letra A  - Afastado
			Letra F - Férias
			Ledra D - Demitido
			Letra T - Transferido
			
		*/
		_cSitFol := AllTrim(TSRA->( RA_SITFOLH ))
		
		If Empty(_cSitFol)
			_cSitFol := 'Normal'
		ElseIf _cSitFol == 'A'
			_cSitFol := 'Afastado'
		ElseIf _cSitFol == 'F'
			_cSitFol := 'Férias'
		ElseIf _cSitFol == 'D'
			_cSitFol := 'Demitido'
		ElseIf _cSitFol == 'T'
			_cSitFol := 'Transferido'
		Else
			_cSitFol := 'Não Parametrizado'
		EndIf	
			
		If Select("TRT") > 0
			DbSelectarea("TRT")
			TRT->( DbCloseArea() )
		Endif
			
		_cQuery4 := " SELECT *	" 
		_cQuery4 += " FROM " + RetSqlName("SRT")
		_cQuery4 += " WHERE 	RT_FILIAL 	= '"+_cFilial+"' "
		_cQuery4 += "			AND RT_MAT 	= '"+_cMat+"' "
		_cQuery4 += "			AND SUBSTR(RT_DATACAL,1,6) = '"+ mv_par03 +"' "  
		_cQuery4 += " 			AND D_E_L_E_T_ <> '*' 				"
		_cQuery4 += " ORDER BY RT_FILIAL, RT_MAT, RT_CC			"
		
		_cQuery4 := ChangeQuery( _cQuery4 )
		
		TCQUERY _cQuery4 NEW ALIAS "TRT"
		
		DbSelectArea("TRT")
		DbGoTop()
		If Empty(TRT->( RT_MAT ))
			_cDesc1 := "Funcionário Ativo - Não possui cálculo de provisão"
		EndIf
		
		While .Not. TRT->( EOF() )
			
			If oReport:Cancel()
				oReport:SkipLine()
				oReport:PrintText(_cCancel)
				Exit
			EndIf
			
			If TRT->( RT_XVALMES ) < 0
				_cDesc2 := "Funcionário com cálculo negativo no mês de competência"
			EndIf
			
			TRT->( DbSkip() )
		End
		
		If .Not. Empty(_cDesc1)
			_cDesc := _cDesc1
		ElseIf .Not. Empty(_cDesc2)
			_cDesc := _cDesc2
		EndIf
		
		If .Not. Empty(_cDesc)
			oSection3:Cell("_cFilial"):SetValue(_cFilial)
			oSection3:Cell("_cMat"):SetValue(_cMat)
			oSection3:Cell("_cNome"):SetValue(_cNome)
			oSection3:Cell("_cDesc"):SetValue(_cDesc)
			oSection3:Cell("_cSitFol"):SetValue(_cSitFol)
			oSection3:PrintLine()
			oReport:IncMeter()
			_lImpr := .T.
		EndIf
		
		_cDesc  := ""
		_cDesc1 := ""
		_cDesc2 := ""
		_cDesc3 := ""
		_cDesc4 := ""
		_cDesc5 := ""
		_cDesc6 := ""
		
		TSRA->( DbSkip() )
	End
	
	TSRA->(DbCloseArea())
	
	If .Not. _lImpr
		oReport:SkipLine()
		oReport:PrintText(_cSemInc)
	Endif
	
	oSection3:Finish()
	oReport:EndPage()
	
	_cDesc  := ""
	_cDesc1 := ""
	_cDesc2 := ""
	_cDesc3 := ""
	_cDesc4 := ""
	_cDesc5 := ""
	_cDesc6 := ""
	_lImpr  := .F.
	
	If mv_par01 == 1 //Sessao 04 - Provisao
	
		If Select("TRT") > 0
			DbSelectarea("TRT")
			TRT->( DbCloseArea() )
		Endif
		
		If mv_par02 == 1 //Analitico
		
			oMat4:= TRCell():New(oSection4, "_cMat","TRT", "Mat")
			oMat4:SetSize(8)
			
			oBreak4 := TRBreak():New(oSection4, oSection4:Cell("_cMat"), "Total: ",.F.)
			TRFunction():New(oSection4:Cell("_cTpProv"),,"COUNT",oBreak4,,"@E 999,999.99",,.F.,.F.,.F.)
			TRFunction():New(oSection4:Cell("_cCdVerba"),,"COUNT",oBreak4,,"@E 999,999.99",,.F.,.F.,.F.)
			TRFunction():New(oSection4:Cell("_nVlrAcm"),,"SUM",oBreak4,,"@E 999,999.99",,.F.,.F.,.F.)
			TRFunction():New(oSection4:Cell("_nVlrMes"),,"SUM",oBreak4,,"@E 999,999.99",,.F.,.F.,.F.)
			
			_cQuery5 := " SELECT RT_FILIAL, RT_MAT, RT_TIPPROV, RT_VERBA, SUM(RT_XVALMES) RT_XVALMES	"
			
		Else
			oFilial4 := TRCell():New(oSection4, "_cFilial","TRT", "Empresa")
			oFilial4:SetSize(10)
			
			oBreak4 := TRBreak():New(oSection4, oSection4:Cell("_cFilial"), "Total: ",.F.)
			TRFunction():New(oSection4:Cell("_cTpProv"),,"COUNT",oBreak4,,"@E 999,999.99",,.F.,.F.,.F.)
			TRFunction():New(oSection4:Cell("_cCdVerba"),,"COUNT",oBreak4,,"@E 999,999.99",,.F.,.F.,.F.)
			TRFunction():New(oSection4:Cell("_nVlrAcm"),,"SUM",oBreak4,,"@E 999,999.99",,.T.,.F.,.F.)
			TRFunction():New(oSection4:Cell("_nVlrMes"),,"SUM",oBreak4,,"@E 999,999.99",,.T.,.F.,.F.)
			
			_cQuery5 := " SELECT SUBSTR(RT_FILIAL,1,4) RT_FILIAL, RT_TIPPROV, RT_VERBA, SUM(RT_XVALMES) RT_XVALMES "
		EndIf
		 
		_cQuery5 += " FROM " + RetSqlName("SRT")
		_cQuery5 += " WHERE 	RT_FILIAL >= '"+mv_par04+"' AND RT_FILIAL <= '"+mv_par05+"'					"
		_cQuery5 += "			AND RT_VERBA NOT IN ('910','911','928','929','930','931','939','943')	"
		_cQuery5 += " 			AND SUBSTR(RT_DATACAL,1,6) = '"+ mv_par03 +"' 									"
		_cQuery5 += " 			AND D_E_L_E_T_ <> '*' 																"
		
		If mv_par02 == 1 //Analitico
			_cQuery5 += " GROUP BY RT_FILIAL, RT_MAT, RT_TIPPROV, RT_VERBA										"
			_cQuery5 += " ORDER BY RT_FILIAL, RT_MAT, RT_TIPPROV, RT_VERBA										"
		Else
			_cQuery5 += " GROUP BY SUBSTR(RT_FILIAL,1,4), RT_TIPPROV, RT_VERBA								"
			_cQuery5 += " ORDER BY SUBSTR(RT_FILIAL,1,4), RT_TIPPROV, RT_VERBA								"
		EndIf
		
		_cQuery5 := ChangeQuery( _cQuery5 )
		
		TCQUERY _cQuery5 NEW ALIAS "TRT"
		
		oReport:StartPage()
		oSection4:Init()
		oReport:PrintText(_cTitSec4)
		oReport:SkipLine()
		
		DbSelectArea("TRT")
		DbGoTop()
		If TRT->( EOF() )
			oReport:SkipLine()
			oReport:PrintText(_cDados)
		EndIf
		
		While .Not. TRT->( EOF() )
				
			If oReport:Cancel()
				oReport:SkipLine()
				oReport:PrintText(_cCancel)
				Exit
			EndIf
			
			If mv_par02 == 1 //Analitico
				_cMat	:= TRT->( RT_MAT )
			Else
				_cFilial := TRT->( RT_FILIAL )
			EndIf
			
			_cTpProv	:= TRT->( RT_TIPPROV )
			
			If _cTpProv == '1'
				_cTpProv := '1- Fer. Venc.'
			ElseIf _cTpProv == '2'
				_cTpProv := '2- Fer. Prop.'
			ElseIf _cTpProv == '3'
				_cTpProv := '3- 13º. Salário'
			ElseIf _cTpProv == '4'
				_cTpProv := '4- 14º. Salário'
			EndIf
			
			_cCdVerba	:= TRT->( RT_VERBA )
			_cDscVerb	:= AllTrim(Posicione("SRV",1,xFilial("SRV")+TRT->( RT_VERBA ),"RV_DESC"))
			_cCtaDeb 	:= AllTrim(Posicione("SRV",1,xFilial("SRV")+TRT->( RT_VERBA ),"RV_XCTADEB"))
			_cCtaCre	:= AllTrim(Posicione("SRV",1,xFilial("SRV")+TRT->( RT_VERBA ),"RV_XCTACRD"))
			_nVlrMes 	:= TRT->( RT_XVALMES )
			
			If _nVlrMes == 0 .And. mv_par03 <= '201408'
				_cDesc := "Valor não disponível"
			ElseIf _nVlrMes > 0
				_cDesc := " "
			Else
				TRT->( DbSkip() )
			EndIf
			
			If Select("TSRT") > 0
				DbSelectarea("TSRT")
				TSRT->( DbCloseArea() )
			Endif
			
			_cQuery6 := " SELECT SUM(RT_XVALMES)	RT_XVALMES														"
			_cQuery6 += " FROM " + RetSqlName("SRT")
			_cQuery6 += " WHERE 	RT_FILIAL 		>= '"+mv_par04+"' AND RT_FILIAL 	<= '"+mv_par05+"'	"
			
			If mv_par02 == 1 //Analitico
				_cQuery6 += "		AND RT_MAT 		= '"+_cMat+"'												"
			EndIf
			
			_cQuery6 += " 			AND RT_VERBA 	= '"+_cCdVerba+"'												"
			_cQuery6 += " 			AND ( SUBSTR(RT_DATACAL,1,6) >= '"+ SubStr(mv_par03,1,4) +"01' 		"
			_cQuery6 += " 			AND SUBSTR(RT_DATACAL,1,6) <= '"+mv_par03+"' )								"
			_cQuery6 += " 			AND D_E_L_E_T_ <> '*' 															"	
			_cQuery6 := ChangeQuery( _cQuery6 )
		
			TCQUERY _cQuery6 NEW ALIAS "TSRT"
		
			_nVlrAcm 	:= TSRT->( RT_XVALMES )
			_nTotAcm := _nTotAcm + _nVlrAcm 
			
			TSRT->(DbCloseArea())
			
			If mv_par02 == 1 //Analitico
				oSection4:Cell("_cMat"):SetValue(_cMat)
			Else
				oSection4:Cell("_cFilial"):SetValue(_cFilial)
			EndIf
			
			oSection4:Cell("_cTpProv"):SetValue(_cTpProv)
			oSection4:Cell("_cCdVerba"):SetValue(_cCdVerba)
			oSection4:Cell("_cDscVerb"):SetValue(_cDscVerb)
			oSection4:Cell("_cCtaDeb"):SetValue(_cCtaDeb)
			oSection4:Cell("_cCtaCre"):SetValue(_cCtaCre)
			oSection4:Cell("_nVlrAcm"):SetValue(_nVlrAcm)
			oSection4:Cell("_nVlrMes"):SetValue(_nVlrMes)
			oSection4:Cell("_cDesc"):SetValue(_cDesc)
			oSection4:PrintLine()
			oReport:IncMeter()
			
			_lImpr := .T.
			
			_nTotMes := _nVlrMes + _nTotMes
			
			TRT->( DbSkip() )
		End
		
		TRT->( DbCloseArea() )
		
		If .Not. _lImpr
			oReport:SkipLine()
			oReport:PrintText(_cSemInc)
		Endif
		
		oSection4:Finish()
		oReport:EndPage()
	
	ElseIf mv_par01 == 2 //Sessao 05 - Rateio
	
		If mv_par02 == 1 //Analitico
			_cQuery7 := " SELECT 	SUBSTR(ZD7_FILIAL,1,4) EMPRESA, ZD7_FILIAL, ZD7_VERBA,  "
			_cQuery7 += " 			SUM(ZD7_VALRAT) ZD7_VALRAT	"
		Else
			_cQuery7 := " SELECT 	SUBSTR(ZD7_FILIAL,1,4) EMPRESA, ZD7_VERBA,		"
			_cQuery7 += " 			SUM(ZD7_VALRAT) ZD7_VALRAT	"
		EndIf
		
		_cQuery7 += " FROM " + RetSqlName("ZD7")
		_cQuery7 += " WHERE 	ZD7_FILIAL 		>= '"+ mv_par04 +"' AND ZD7_FILIAL 	<= '"+ mv_par05 +"' 	"
		_cQuery7 += " 			AND ZD7_CC 		>= '"+ mv_par06 +"' AND ZD7_CC 			<= '"+ mv_par07 +"'	"
	   _cQuery7 += " 			AND ZD7_ITEM 	>= '"+ mv_par08 +"' AND ZD7_ITEM 		<= '"+ mv_par09 +"' 	"
	   _cQuery7 += " 			AND ZD7_MESANO = '"+mv_par03+"'															"
	   
	   If .Not. Empty(mv_par10)
	   		_cQuery7 += " 		AND ZD7_CTADEB	= '"+ mv_par10 +"'		"
	   EndIf
	   
	   If .Not. Empty(mv_par11)
	   		_cQuery7 += " 		AND ZD7_CTACRE	= '"+ mv_par11 +"'		"
	   EndIf
	   
	   If .Not. Empty(mv_par12)
	   		_cQuery7 += " 		AND ZD7_VERBA	= '"+ mv_par12 +"'		"
	   EndIf
		
		//_cQuery7 += " 			AND ( ZD7_CTADEB LIKE '1%' OR ZD7_CTADEB LIKE '2%' OR ZD7_CTADEB LIKE '4%' 		"
		//_cQuery7 += "         		OR ZD7_CTACRE LIKE '1%' OR ZD7_CTACRE LIKE '2%' OR ZD7_CTACRE LIKE '4%' ) 	"
		_cQuery7 += " 			AND SUBSTR(ZD7_CC,1,6) <> '130104'	 															" //Desconsidera GC
		_cQuery7 += " 			AND D_E_L_E_T_ <> '*'																				"
		
		If mv_par02 == 1 //Analitico
			_cQuery7 += " GROUP BY 	SUBSTR(ZD7_FILIAL,1,4), ZD7_FILIAL,  ZD7_VERBA	"
			_cQuery7 += " ORDER BY 	SUBSTR(ZD7_FILIAL,1,4), ZD7_FILIAL,  ZD7_VERBA	"
		Else
			_cQuery7 += " GROUP BY  SUBSTR(ZD7_FILIAL,1,4),  ZD7_VERBA	"
			_cQuery7 += " ORDER BY  SUBSTR(ZD7_FILIAL,1,4),  ZD7_VERBA	"
		EndIf
		
		_cQuery7 := ChangeQuery( _cQuery7 )
		
		TCQUERY _cQuery7 NEW ALIAS "ZD7"
		
		DbSelectArea("ZD7")
		DbGoTop()
		
		oReport:StartPage()
		oSection5:Init()
		oReport:PrintText(_cTitSec5)
		oReport:SkipLine()
		
		While .Not. ZD7->( EOF() )
				
			If oReport:Cancel()
				oReport:SkipLine()
				oReport:PrintText(_cCancel)
				Exit
			EndIf
			
			//If _cEmpresa <> ZD7->( EMPRESA )
			//	oReport:SkipLine()
			//	oReport:PrintText("EMPRESA: "+ZD7->( EMPRESA ))
			//	oReport:SkipLine()
			//EndIf
			
			_cEmpresa	:= ZD7->( EMPRESA )
			_cCdVerba	:= ZD7->( ZD7_VERBA )
			_cDscVerb	:= AllTrim(Posicione("SRV",1,xFilial("SRV")+_cCdVerba,"RV_DESC"))
			_cCtaDeb 	:= AllTrim(Posicione("SRV",1,xFilial("SRV")+_cCdVerba,"RV_XCTADEB"))
			_cCtaCre	:= AllTrim(Posicione("SRV",1,xFilial("SRV")+_cCdVerba,"RV_XCTACRD"))
			_nVlrRat	:= ZD7->( ZD7_VALRAT )
			
			oSection5:Cell("_cEmpresa"):SetValue(_cEmpresa)
			oSection5:Cell("_cCdVerba"):SetValue(_cCdVerba)
			oSection5:Cell("_cDscVerb"):SetValue(_cDscVerb)
			oSection5:Cell("_nVlrRat"):SetValue(_nVlrRat)
			
			If mv_par02 == 1 //Analitico
				_cFilial	:= ZD7->( ZD7_FILIAL )
				oSection5:Cell("_cFilial"):SetValue(_cFilial)
			EndIf
			
			oSection5:Cell("_cCtaDeb"):SetValue(_cCtaDeb)
			oSection5:Cell("_cCtaCre"):SetValue(_cCtaCre)
			
			oSection5:PrintLine()
			oReport:IncMeter()
					
			_lImpr := .T.
			
			ZD7->( DbSkip() )
		End
		
		ZD7->( DbCloseArea() )
		
		If .Not. _lImpr
			oReport:SkipLine()
			oReport:PrintText(_cSemInc)
		Endif
		
		oSection5:Finish()
		oReport:EndPage()
	
	EndIf
	
Return( Nil )

/** {Protheus.doc} fCriaSx1
Funcao para criacao das perguntas

@param: 	<Nil>
@author 	Jose Leite de Barros Neto
@since 	04/11/2014
@Uso: 		SFIEMT
*/
Static Function fCriaSx1()

	Local aHelp := {}

	AAdd(aHelp, {{"Informe se o relatorio é de Provisão ou Rateio"		}, {""}, {""}})
	AAdd(aHelp, {{"Informe se o tipo vai ser Analitico ou Sintetico"	}, {""}, {""}})
	AAdd(aHelp, {{"Informe o Ano Mes referente - EX:201410"				}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Filial Inicial"									}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Filial Final"									}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Centro de Custo Inicial"						}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Centro de Custo Final"						}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Item Contabil Inicial"						}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Item Contabil Final"							}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Conta Debito"									}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Conta Credito"									}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Verba a ser Considerada"						}, {""}, {""}})
	AAdd(aHelp, {{"Informe se deve imprimir Cta. Deb e Cred."			}, {""}, {""}})
	
	u_SFPUTSX1( cPerg, "01","Relatorio       "	  	,"","","mv_ch1"	,"C",1  							,0,0,"C",""					,""		,"","","mv_par01","1=Provisao"	,"","","","2=Rateio"		,"","","","","","","","","","","",aHelp[1,1],aHelp[1,2],aHelp[1,3])
	u_SFPUTSX1( cPerg, "02","Tipo            "	  	,"","","mv_ch2"	,"C",1  							,0,0,"C",""					,""		,"","","mv_par02","1=Analitico"	,"","","","2=Sintetico"	,"","","","","","","","","","","",aHelp[2,1],aHelp[2,2],aHelp[2,3])
	u_SFPUTSX1( cPerg, "03","Ano/Mes         "	  	,"","","mv_ch3"	,"C",6								,0,0,"G","U_SF07V03J(3)"	,""		,"","","mv_par03",""				,"","","",""					,"","","","","","","","","","","",aHelp[3,1],aHelp[3,2],aHelp[3,3])	
	u_SFPUTSX1( cPerg, "04","Filial De       "	  	,"","","mv_ch4"	,"C",8								,0,0,"G",""					,"SM0"	,"","","mv_par04",""				,"","","",""					,"","","","","","","","","","","",aHelp[4,1],aHelp[4,2],aHelp[4,3])
	u_SFPUTSX1( cPerg, "05","Filial Ate      "	  	,"","","mv_ch5"	,"C",8								,0,0,"G",""					,"SM0"	,"","","mv_par05",""				,"","","",""					,"","","","","","","","","","","",aHelp[5,1],aHelp[5,2],aHelp[5,3])	
	u_SFPUTSX1( cPerg, "06","Centro Custo De "	  	,"","","mv_ch6"	,"C",TamSX3("CTT_CUSTO")[1]	,0,0,"G",""					,"CTT"	,"","","mv_par06",""				,"","","",""					,"","","","","","","","","","","",aHelp[6,1],aHelp[6,2],aHelp[6,3])
	u_SFPUTSX1( cPerg, "07","Centro Custo Ate"	 	,"","","mv_ch7"	,"C",TamSX3("CTT_CUSTO")[1]	,0,0,"G",""					,"CTT"	,"","","mv_par07",""				,"","","",""					,"","","","","","","","","","","",aHelp[7,1],aHelp[7,2],aHelp[7,3])
	u_SFPUTSX1( cPerg, "08","Item Contabil De"	  	,"","","mv_ch8"	,"C",TamSX3("CTD_ITEM")[1]	,0,0,"G",""					,"CTD"	,"","","mv_par08",""				,"","","",""					,"","","","","","","","","","","",aHelp[8,1],aHelp[8,2],aHelp[8,3])
	u_SFPUTSX1( cPerg, "09","Item Contabil Ate"	  	,"","","mv_ch9"	,"C",TamSX3("CTD_ITEM")[1]	,0,0,"G",""					,"CTD"	,"","","mv_par09",""				,"","","",""					,"","","","","","","","","","","",aHelp[9,1],aHelp[9,2],aHelp[9,3])
	u_SFPUTSX1( cPerg, "10","Conta Debito"			  	,"","","mv_chA","C",TamSX3("CT1_CONTA")[1]	,0,0,"G",""					,"CT1"	,"","","mv_par10",""				,"","","",""					,"","","","","","","","","","","",aHelp[10,1],aHelp[10,2],aHelp[10,3])
	u_SFPUTSX1( cPerg, "11","Conta Credito"	     	,"","","mv_chB","C",TamSX3("CT1_CONTA")[1]	,0,0,"G",""					,"CT1"	,"","","mv_par11",""				,"","","",""					,"","","","","","","","","","","",aHelp[11,1],aHelp[11,2],aHelp[11,3])
	u_SFPUTSX1( cPerg, "12","Cod Verba"	  			  	,"","","mv_chC","C",TamSX3("RV_COD")[1]		,0,0,"G",""					,"SRV"	,"","","mv_par12",""				,"","","",""					,"","","","","","","","","","","",aHelp[12,1],aHelp[12,2],aHelp[12,3])
	
Return( Nil )

/** {Protheus.doc} SF07V03J
Funcao para verificar o ano mes informado no parametro 03 - Ano/Mes

@param: 	<Nil>
@author 	Jose Leite de Barros Neto
@since 	04/11/2014
@Uso: 		SFIEMT
*/
User Function SF07V03J(pOpc)
	
	Local _lRet := .T.
	
	If pOpc == 3
		
		If SubStr(mv_par03,5,2) > '12'
			_lRet := .F.
			MsgAlert("Favor informar corretamente o parâmetro no formato: AAAAMM")
			Return(_lRet)
		EndIf
		
		If mv_par03 > cFolMes
			_lRet := .F.
			MsgAlert("Favor informar corretamente o parâmetro, tem que ser menor ou igual à: "+cFolMes)
		Endif
		
	EndIf
		
Return(_lRet)