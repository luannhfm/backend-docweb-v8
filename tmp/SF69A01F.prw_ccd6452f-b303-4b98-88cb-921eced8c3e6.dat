#Include 'protheus.ch'
#Include 'FWMVCDEF.CH'

/*/{Protheus.doc} SF69A01F
Cadastro de dados complementares da filial
@type function
@author Franklin de Brito de Oliveira
@since 29/11/2021
/*/
user function SF69A01F()
	Local oBrowse
	oBrowse := FWMBrowse():New()
	oBrowse:SetAlias('ZCO')
	oBrowse:SetDescription('Dados complementares da filial - minuta de venda')
	oBrowse:Activate()
return Nil

/*/{Protheus.doc} MenuDef
Contem a definição das operações disponíveis para o modelo de dados (Model).
@type function
@author Franklin de Brito de Oliveira
@since 29/11/2021
@return array, operações disponíveis no modelo de dados.
/*/
Static Function MenuDef()
	Local aRotina := {}
	ADD OPTION aRotina Title 'Visualizar' Action 'VIEWDEF.SF69A01F' OPERATION 2 ACCESS 0
	ADD OPTION aRotina Title 'Incluir' Action 'VIEWDEF.SF69A01F' OPERATION 3 ACCESS 0
	ADD OPTION aRotina Title 'Alterar' Action 'VIEWDEF.SF69A01F' OPERATION 4 ACCESS 0
	ADD OPTION aRotina Title 'Excluir' Action 'VIEWDEF.SF69A01F' OPERATION 5 ACCESS 0
	ADD OPTION aRotina Title 'Imprimir' Action 'VIEWDEF.SF69A01F' OPERATION 8 ACCESS 0
	ADD OPTION aRotina Title 'Copiar' Action 'VIEWDEF.SF69A01F' OPERATION 9 ACCESS 0
Return aRotina

/*/{Protheus.doc} ModelDef
Contem a construção e a definição do Model, lembrando que o Modelo de dados (Model) contém as regras de negócio.
@type function
@author Franklin de Brito de Oliveira
@since 29/11/2021
@return object, objeto com a construção e a definição do Model
/*/
Static Function ModelDef()
	Local oStruZCO	:= FWFormStruc( 1, 'ZCO' )
	Local oModel
	oModel := MPFormModel():New( 'F69A01FM' )
	oModel:AddFields( 'ZCOMASTER', /*cOwner*/, oStruZCO )
	oModel:SetDescription('Modelo de dados complementares da filial - minuta de venda')
	oModel:SetPrimaryKey( { "ZCO_FILIAL" } )
//	oModel:SetVldActivate( { |oModel| fModelACT( oModel ) } )
Return oModel

/*/{Protheus.doc} ViewDef
Contem a construção e definição da View, ou seja, será a construção da interface
@type function
@author Franklin de Brito de Oliveira
@since 29/11/2021
@return object, objeto com a construção e definição da View
/*/
Static Function ViewDef()
	Local oModel := FWLoadModel( 'SF69A01F' )
	Local oStruZCO := FWFormStruct( 2, 'ZCO' )
	Local oView
	oView := FWFormView():New()
	oView:SetModel( oModel )
	oView:AddField( 'VIEW_ZCO', oStruZCO, 'ZCOMASTER' )
	oView:CreateHorizontalBox( 'TELA', 100 )
	oView:SetOwnerView( 'VIEW_ZCO', 'TELA' )
Return oView

/*/{Protheus.doc} fModelACT
Função para validação do modelo de dados em sua ativação
@type function
@author Franklin de Brito de Oliveira
@since 29/11/2021
@param oModel, object, Modelo de dados
@return logical, Se a ativação do modelo de dados pode ocorrer
/*/
Static function fModelACT( oModel )
	Local aArea	:= GetArea()
	Local nOper	:= oModel:GetOperation()
	Local lRet 	:= .T.
	Local oMdlZCO := oModel:GetModel("ZCOMASTER")

	RestArea( aArea )

Return lRet

/*/{Protheus.doc} F69A01FM
Ponto de entrada no padrão MVC
@type function
@author Franklin de Brito de Oliveira
@since 29/11/2021
@return variant, de acordo com o ID do ponto de entrada
/*/
User Function F69A01FM()

	Local _lRet         := .T.
	Local _aArea	    := GetArea()
	Local oModel        := ParamIXB[1]
	Local cIdPonto      := ParamIXB[2]
	Local cIdModel      := ParamIXB[3]

	If cIdPonto == 'MODELPRE' /* Chamada antes da alteração de qualquer campo do modelo. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'MODELPOS' /* Chamada na validação total do modelo. */
		//Alert(cIdPonto)
		_lRet := fModelACT( oModel )
	ElseIf cIdPonto == 'FORMPRE' /* Chamada na antes da alteração de qualquer campo do formulário. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'FORMPOS' /* Chamada na validação total do formulário. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'FORMLINEPOS' /* Chamada na validação da linha do formulário. */
		// Alert(cIdPonto)
	ElseIf cIdPonto == 'MODELVLDACTIVE' /* Chamada na validação da ativação do Modelo. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'MODELCOMMITTTS' /* Chamada apos a gravação total do modelo e dentro da transação. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'MODELCOMMITNTTS' /* Chamada apos a gravação total do modelo e fora da transação. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'FORMCOMMITTTSPRE' /* Chamada antes da gravação da tabela do formulário. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'FORMCOMMITTTSPOS' /* Chamada apos a gravação da tabela do formulário. */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'MODELCANCEL' /* Cancela */
		//Alert(cIdPonto)
	ElseIf cIdPonto == 'BUTTONBAR' /* Usado para Criação de Botoes Estrutura: { {'Nome', 'Imagem Botap', { || bBlock } } } */
		//Alert(cIdPonto)
	EndIf

	RestArea(_aArea)

Return _lRet
