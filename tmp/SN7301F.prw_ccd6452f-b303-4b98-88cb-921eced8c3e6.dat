#Include 'Protheus.ch'

/*/{Protheus.doc} SN7301F
	Relatório de viabilidades de atendimento.
	
@author Franklin B. Oliveira
@since 22/02/2017

@type function
/*/
User Function SN7301F()

Local oReport
	
	If FindFunction("TRepInUse") .And. TRepInUse()
		oReport := ReportDef()
		oReport:PrintDialog()
	EndIf
		
Return (Nil)

/*/{Protheus.doc} ReportDef
	Função para definições do relatório de viabilidade.
	
@author Franklin B. Oliveira
@since 22/02/2017

@type function
/*/
Static Function ReportDef()

Local bAction	:= {|oReport| ReportPrint(oReport)}		
Local cDescrip	:= "Este relatorio ira imprimir a relacao de viabilidades de atendimento conforme os parametros solicitados"
Local cPerg		:= "SN73R01F"
Local cReport	:= "SN7301F"
Local cTitle	:= "Relatorio de Viabilidades de Atendimento"
Local oReport
Local oSectionZCG

	oReport := TReport():New(cReport, cTitle, cPerg, bAction, cDescrip)
	oReport:SetLandscape()
	
	AjustaSX1(cPerg)
	Pergunte(cPerg, .T.)
	
	oSectionZCG := TRSection():New(oReport, "Viabilidades", {"ZCG", "ZCH"}, {"Viabilidade", "Cliente", "Data", "Modalidade"})
	
	TRCell():New(oSectionZCG, "ZCG_FILIAL"	, "ZCG", /*cTitle*/, /*cPicture*/, 10)
	TRCell():New(oSectionZCG, "ZCG_CODIGO"	, "ZCG")
	TRCell():New(oSectionZCG, "ZCG_DATA"	, "ZCG")
	TRCell():New(oSectionZCG, "ZCG_HORA"	, "ZCG", /*cTitle*/, /*cPicture*/, 10)
	TRCell():New(oSectionZCG, "ZCG_NOME"	, "ZCG", /*cTitle*/, /*cPicture*/, 60)
	TRCell():New(oSectionZCG, "ZCG_CARGAH"	, "ZCG")
	TRCell():New(oSectionZCG, "ZCG_DATAIN"	, "ZCG")
	TRCell():New(oSectionZCG, "ZCG_DATAFI"	, "ZCG")
	TRCell():New(oSectionZCG, "ZCG_DESCMO"	, "ZCG", /*cTitle*/, /*cPicture*/, 40)
	TRCell():New(oSectionZCG, "ZCG_CIDADE"	, "ZCG", /*cTitle*/, /*cPicture*/, 35)
	TRCell():New(oSectionZCG, "ZCG_STATUS"	, "ZCG")
	TRCell():New(oSectionZCG, "ZCH_DATA"	, "ZCH")
	TRCell():New(oSectionZCG, "GEROUCN9"	, ""   , "Gerou Ctr?", "@R", 20)
	TRCell():New(oSectionZCG, "ZCG_XOPOR"	, "ZCG")

Return (oReport)

/*/{Protheus.doc} ReportPrint
	Função responsável por seleção dos dados, conforme
	parâmetros informados, e impressão do relatório de
	viabilidades.
	
@author Franklin B. Oliveira
@since 22/02/2017
@param oReport, object, objeto de impressão
/*/
Static Function ReportPrint(oReport)

Local aIndexKey	:= {}
Local aStatus	:= {}
Local cAliasZCG := "ZCG"
Local cCondição := ""
Local cIndice	:= ""
Local cStatus	:= ""
Local cWhere	:= ""
Local nX
	
	/* Array com ordens do relatório */
	AAdd( aIndexKey, "ZCG_CODIGO" )
	AAdd( aIndexKey, "ZCG_CLIENT, ZCG_LOJA" )
	AAdd( aIndexKey, "ZCG_DATA, ZCG_HORA, ZCG_CLIENT, ZCG_LOJA" )
	AAdd( aIndexKey, "ZCG_MODAL, ZCG_CODIGO" )
	
	/* Montagem do Where */
	
	//A emissão do relatório pelo DR deverá permitir retornar as 
	//informações de todas as unidades
	If .Not. (cFilAnt == '03MT0001')
	//A emissão do relatório pela unidade deverá retornar somente 
	//as informações referentes a própria unidade
		MV_PAR01 := cFilAnt 
		MV_PAR02 := cFilAnt
	EndIf
	
	cWhere := " AND ZCG_FILIAL >= '" + MV_PAR01 + "' " 
	cWhere += " AND ZCG_FILIAL <= '" + MV_PAR02 + "' "
	
	//Tratamento da data
	If .Not. Empty(MV_PAR03)
		cWhere += " AND ZCG_DATA >= " + DToS(MV_PAR03)
	EndIf
	
	If .Not. Empty(MV_PAR04)
		cWhere += " AND ZCG_DATA <= " + DToS(MV_PAR04)
	EndIf
	
	cWhere += " AND ZCG_CLIENT >= '" + MV_PAR05 + "' "
	cWhere += " AND ZCG_CLIENT <= '" + MV_PAR06 + "' "
	
	//Montagem do ZCG_STATUS
	/*
	If .Not. Empty(MV_PAR07)
		aStatus := StrTokArr(MV_PAR07, ';')
		
		For nX := 1 To Len(aStatus)
			If nX == 1
				cStatus += "'" + aStatus[nX] + "'"
			Else
				cStatus += ", '" + aStatus[nX] + "'"
			EndIf 
		Next nX
		
		cWhere += " AND ZCG_STATUS IN (" + cStatus + ") "
	EndIf
	*/
	
	If .Not. Empty(MV_PAR07)		
		For nX := 1 To Len(MV_PAR07)
			If MV_PAR07[nX][01]
				If Empty(cStatus)
					cStatus += "'" + CValToChar( nX ) + "'"
				Else
					cStatus += ", '" + CValToChar( nX ) + "'"
				EndIf 
			EndIf
		Next nX
		
		MV_PAR07 := cStatus
		
		cWhere += " AND ZCG_STATUS IN (" + cStatus + ") "
	EndIf
	
	cWhere := "%" + cWhere + "%"
	
	/* Montagem da ordem do relatório */
	cIndice := (aIndexKey[oReport:Section(1):nOrder])
	cIndice := '%'+ cIndice + '%'
	
	cAliasZCG := GetNextAlias()
	
	oReport:Section(1):BeginQuery()
	
	BeginSql Alias cAliasZCG
		SELECT ZCG.ZCG_FILIAL,
		 	ZCG.ZCG_CODIGO,
		 	ZCG.ZCG_DATA,
		 	ZCG.ZCG_HORA,
		 	ZCG.ZCG_NOME,
		 	ZCG.ZCG_CARGAH,
		 	ZCG.ZCG_DATAIN,
		 	ZCG.ZCG_DATAFI,
		 	ZCG.ZCG_DESCMO,
		 	ZCG.ZCG_CIDADE,
		 	ZCG.ZCG_STATUS,
			ZCH.ZCH_DATA,
			ZCG.ZCG_XOPOR,
			CASE
				WHEN CN9.CN9_NUMERO IS NULL THEN 'Não'
				WHEN CN9.CN9_NUMERO IS NOT NULL THEN 'Sim'
			END AS GEROUCN9
		FROM %Table:ZCG% ZCG
		LEFT JOIN %Table:ZCH% ZCH ON
			(ZCH.%NOTDEL% 
			AND ZCG.ZCG_FILIAL = ZCH.ZCH_FILIAL
			AND ZCG.ZCG_CODIGO = ZCH.ZCH_VIABIL)
		LEFT JOIN %Table:AD1% AD1 ON
			(AD1.%NOTDEL% 
			AND AD1.AD1_FILIAL = ZCG.ZCG_FILIAL
			AND AD1.AD1_NROPOR = ZCG.ZCG_XOPOR
			AND AD1.AD1_REVISA = ZCG.ZCG_XREVOP)
		LEFT JOIN %Table:CN9% CN9 ON
			(CN9.%NOTDEL% 
			AND CN9.CN9_FILIAL = AD1.AD1_FILIAL
			AND CN9.CN9_XOPORT = AD1.AD1_NROPOR
			AND CN9.CN9_XREVOP = AD1.AD1_REVISA)
		WHERE
		ZCG.%NotDel%
		%Exp:cWhere%
		ORDER BY %Exp:cIndice%
	EndSql
	
	oReport:Section(1):EndQuery()
	oReport:SetMeter((cAliasZCG)->(LastRec()))
	oReport:Section(1):Print()

Return (Nil)

/*/{Protheus.doc} AjustaSX1
	Função para ajuste no arquivo de perguntas.
	
@author Franklin B. Oliveira
@since 22/02/2017
@param cPerg, characters, Nome do arquivo de perguntas
/*/
Static Function AjustaSX1(cPerg)

	u_SFPUTSX1(cPerg, "01", "Filial De	?", "Filial De 	?", "Filial De 	?", "mv_ch01", "C", 08, 00, 1, "G", "", "SM0"	, "", "", "MV_PAR01", ""				,; 
		"", "", "", ""		, "", "", ""		, "", "", ""				, "", "", ""			, "", "", {})
	
	u_(cPerg, "02", "Filial Até	?", "Filial Até ?", "Filial Até ?", "mv_ch02", "C", 08, 00, 1, "G", "", "SM0"	, "", "", "MV_PAR02", ""				,; 
		"", "", "", ""		, "", "", ""		, "", "", ""				, "", "", ""			, "", "", {})
	
	u_SFPUTSX1(cPerg, "03", "Data De	?", "Data De 	?", "Data De 	?", "mv_ch03", "D", 08, 00, 1, "G", "", ""		, "", "", "MV_PAR03", ""				,; 
		"", "", "", ""		, "", "", ""		, "", "", ""				, "", "", ""			, "", "", {})
	
	u_SFPUTSX1(cPerg, "04", "Data Até	?", "Data Até	?", "Data Até	?", "mv_ch04", "D", 08, 00, 1, "G", "", ""		, "", "", "MV_PAR04", ""				,;
	 "", "", "", ""		, "", "", ""		, "", "", ""				, "", "", ""			, "", "", {})
	
	u_SFPUTSX1(cPerg, "05", "Cliente De ?", "Cliente De ?", "Cliente De ?", "mv_ch05", "C", 09, 00, 1, "G", "", "SA1"	, "", "", "MV_PAR05", ""				,; 
		"", "", "", ""		, "", "", ""		, "", "", ""				, "", "", ""			, "", "", {})
	
	u_SFPUTSX1(cPerg, "06", "Cliente Até?", "Cliente Até?", "Cliente Até?", "mv_ch06", "C", 09, 00, 1, "G", "", "SA1"	, "", "", "MV_PAR06", ""				,; 
		"", "", "", ""		, "", "", ""		, "", "", ""				, "", "", ""			, "", "", {})
	
	u_SFPUTSX1(cPerg, "07" , "Status		?", "Status		?", "Status		?", "mv_ch07", "C", 01, /*nDecimal*/, /*nPresel*/, "K", /*cValid*/, /*cF3*/, /*cGrpSxg*/,;
	 		/*cPyme*/, "MV_PAR07", "Em Elaboracao"	, /*cDefSpa1*/, /*cDefEng1*/, /*cCnt01*/, "Aberta", /*cDefSpa2*/, /*cDefEng2*/, "Aprovada", /*cDefSpa3*/,;
	 		/*cDefEng3*/, "Aguardando Prod", /*cDefSpa4*/, /*cDefEng4*/, "Rejeitada", /*cDefSpa5*/, /*cDefEng5*/)

Return (Nil)