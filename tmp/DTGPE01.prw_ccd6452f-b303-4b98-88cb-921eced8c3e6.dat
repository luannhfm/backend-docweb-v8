#INCLUDE "RWMAKE.CH"
#INCLUDE "Protheus.CH"
#INCLUDE "TopConn.ch"
#INCLUDE "TBICONN.CH"
#INCLUDE "FILEIO.CH"
#INCLUDE "APWIZARD.CH"

/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Importação de Base de Horas para Rateio de Folha
<Autor> : Fábrica DOIT SP
<Data> : 30/04/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Folha de Pagamento
<Tipo> : 
<Obs> : 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

User Function DTGPE01()

Local cTitle      := "Wizard - Importação de Base de Horas para Rateio de Folha de Pagamento"

Local nL          := 0
Local aTitDad     := {}
Local oUsrImp     := Nil
Local oDataImp    := Nil
Local oHoraImp    := Nil

Private lMsgImp   := .T.

Private oMesBase  := Nil
Private oAnoBase  := Nil
Private oArqImp   := Nil
Private oTermImp  := Nil
Private oTermRat  := Nil
Private oTermGrv  := Nil

Private oWizard   := Nil

Private aDadosImp := {}
Private aErroImp  := {{"", Space(50), "", Space(50), "", Space(50), "", "", 0, .T., 0, "" }}
Private aMesBase  := {}
Private aAnoBase  := {}
Private cPeriodo  := GETMV('MV_FOLMES')
Private cMesBase  := ""
Private cAnoBase  := SUBSTR(cPeriodo,1,4) //StrZero( Year( dDataBase ), 4 )  -- william
Private cArqImp   := ""

Private cUsrImp   := UsrRetName(RetCodUsr())
Private dDataImp  := dDataBase
Private cHoraImp  := Time()

Private nTermImp  := 0
Private nTermGrv  := 0

Private lGPE01Ok  := .F.

Private oVerde    := LoadBitmap( GetResources(), "BR_VERDE"    )
Private oVermelho := LoadBitmap( GetResources(), "BR_VERMELHO" )

Aadd( aTitDad, ""                )
Aadd( aTitDad, "Matrícula"       )
Aadd( aTitDad, "Funcionário"     )
Aadd( aTitDad, "Centro de Custo" )
Aadd( aTitDad, "Descrição"       )
Aadd( aTitDad, "Item Contábil"   )
Aadd( aTitDad, "Descrição"       )
Aadd( aTitDad, "Horas Mês"       )
Aadd( aTitDad, "Horas Alocado"   )
Aadd( aTitDad, "Percentual (%)"  )

DbSelectArea( "ZD6" )
DbSetOrder( 1 )

//---------------------------------
//
//--------------------------------------------------

For nL := 2000 To Year( dDataBase )

   Aadd( aAnoBase, Str( nL, 4 ) )

Next

Aadd( aMesBase, "Janeiro"   )
Aadd( aMesBase, "Fevereiro" )
Aadd( aMesBase, "Março"     )
Aadd( aMesBase, "Abril"     )
Aadd( aMesBase, "Maio"      )
Aadd( aMesBase, "Junho"     )
Aadd( aMesBase, "Julho"     )
Aadd( aMesBase, "Agosto"    )
Aadd( aMesBase, "Setembro"  )
Aadd( aMesBase, "Outubro"   )
Aadd( aMesBase, "Novembro"  )
Aadd( aMesBase, "Dezembro"  )

cMesBase := aMesBase[ VAL(SUBSTR(cPERIODO,5,2))]//aMesBase[ Month( dDataBase ) ] --william

//---------------------------------
// Painel 1
//--------------------------------------------------

DEFINE WIZARD oWizard TITLE cTitle HEADER cTitle MESSAGE "Importação de Base de Horas" PANEL NEXT {|| File( cArqImp ) } FINISH {|| .T. }

ogr01 := TGroup():New( 005, 005, 065, 295, "Competência"    , oWizard:oMPanel[1],,,.T.,.T.,, .T.)
ogr02 := TGroup():New( 070, 005, 095, 295, "Arquivo (*.CSV)", oWizard:oMPanel[1],,,.T.,.T.,, .T.)
ogr03 := TGroup():New( 100, 005, 125, 295, "Log de Acesso"  , oWizard:oMPanel[1],,,.T.,.T.,, .T.)

@ 015,010 Say "Mês:"                                                Of oWizard:oMPanel[1] Pixel
@ 023,010 ComboBox oMesBase Var cMesBase Items aMesBase Size 100,36 Of oWizard:oMPanel[1] Pixel When .F.

@ 040,010 Say "Ano:"                                                Of oWizard:oMPanel[1] Pixel
@ 048,010 ComboBox oAnoBase Var cAnoBase Items aAnoBase Size 070,36 Of oWizard:oMPanel[1] Pixel When .F.

@ 080,010 MsGet oArqImp Var cArqImp	When .F.			     Size 270,07 Of oWizard:oMPanel[1] Pixel

@ 080,281 Button "..."                                  Size 011,10 Of oWizard:oMPanel[1] Pixel Action ( cArqImp := cGetFile( "Arquivos CSV|*.csv", "Selecione o arquivo para Importação",,,.F.,, .T.), oArqImp:Refresh() )

@ 110,010 MsGet oUsrImp  Var cUsrImp  When .F.		     Size 150,07 Of oWizard:oMPanel[1] Pixel
@ 110,185 MsGet oDataImp Var dDataImp When .F.		     Size 050,07 Of oWizard:oMPanel[1] Pixel
@ 110,255 MsGet oHoraImp Var cHoraImp When .F.		     Size 025,07 Of oWizard:oMPanel[1] Pixel


//---------------------------------
// Painel 2
//--------------------------------------------------

CREATE PANEL oWizard HEADER cTitle MESSAGE "Processamento: Validando Base de Horas para Rateio.";
PANEL BACK {|| lGPE01OK } NEXT {|| lGPE01OK } FINISH {|| .T.} EXEC {|| lGPE01Ok := U_ValGPE01() }

@ 005,110 Say "Leitura do arquivo informado..."                     Of oWizard:oMPanel[2] Pixel

oTermImp := tMeter():New( 014, 010, { |u| Iif(Pcount()>0,nTermImp:=u,nTermImp)}, 100, oWizard:oMPanel[2], 285, 30,,.T.)

@ 030,005 ListBox oDadosImp Fields HEADER;
			aTitDad[01],;
			aTitDad[02],;
			aTitDad[03],;
			aTitDad[04],;
			aTitDad[05],;
			aTitDad[06],;
			aTitDad[07],;
			aTitDad[08],;
			aTitDad[09],;
			aTitDad[10] Size 295, 110 Of oWizard:oMPanel[2] Pixel

			oDadosImp:SetArray( aErroImp )
			oDadosImp:bLine := { || {  Iif( aErroImp[ oDadosImp:nAT,10], oVerde, oVermelho ) ,;
											        aErroImp[ oDadosImp:nAT,05]                      ,;
										  AllTrim( aErroImp[ oDadosImp:nAT,06] )                    ,;
												     aErroImp[ oDadosImp:nAT,01]                      ,;
										  AllTrim( aErroImp[ oDadosImp:nAT,02] )                    ,;
												     aErroImp[ oDadosImp:nAT,03]                      ,;
										  AllTrim( aErroImp[ oDadosImp:nAT,04] )                    ,;
										  		     aErroImp[ oDadosImp:nAT,07]                      ,;
										           aErroImp[ oDadosImp:nAT,08]                      ,;
										Transform( aErroImp[ oDadosImp:nAT,09], "@E 999.99" ) + "%" }}

//---------------------------------
// Painel 3
//--------------------------------------------------

CREATE PANEL oWizard HEADER cTitle MESSAGE "Processamento: Gravando Base de Horas para Rateio.";
PANEL BACK {|| .F. } NEXT {|| .T. } FINISH {|| .T.} EXEC {|| U_FimGPE01( "F", lGPE01Ok ) }

@ 067,110 Say "Gravação na Base Protheus..."                        Of oWizard:oMPanel[3] Pixel

oTermGrv := tMeter():New( 075, 010, { |u| Iif(Pcount()>0, nTermGrv:=u,nTermGrv)}, 100, oWizard:oMPanel[3], 285, 30,,.T.)
//---------------------------------
//
//--------------------------------------------------

oWizard:oCancel:bAction	:= {|| Iif( U_FimGPE01( "C", lGPE01Ok ), ::End(), (lMsgImp := .T.) ) }
oWizard:oFinish:bAction	:= {|| Iif( U_FimGPE01( "C", lGPE01Ok ), ::End(), .F. ) }


ACTIVATE WIZARD oWizard CENTERED VALID {|| U_FimGPE01( "X", lGPE01Ok ) }
                                                                     
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FimGPE01  ºAutor  ³Microsiga          º Data ³  01/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacao do fechamento do Wizard                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function FimGPE01(cBtnFim, lSemErro)

Local    lRet    := .F.
Default lSemErro := .T.

If !lSemErro .And. lMsgImp

	If Len( aErroImp ) > 1

		If msgYesNo( "Imprimir relatório de divergência?" )

			U_DTGPER01(aErroImp)

	   EndIf
   EndIf

	lRet      := .T.
	lMsgImp   := .F.
	lVolGPE01 := .F.

Else

	If cBtnFim == "F"  //-- Botao Finalizar

		lRet      := .T.
		lMsgImp   := .F.
		lVolGPE01 := .F.
		
		U_DTGPE01Del()//deleta os registros primeiro
		U_GrvGPE01()

	ElseIf cBtnFim == "C"  //-- Botao Cancelar

		lRet    := MsgYesNo("Confirma o Encerramento?")

		lMsgImp := .F.

	EndIf

	If lMsgImp

		lRet := MsgYesNo("Confirma o Encerramento?")

	Else

		If cBtnFim == "X"

			lRet := .T.

		EndIf
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ ValGPE01  ºAutor  ³Microsiga          º Data ³  01/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validação da Importação de Base de Horas                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function ValGPE01()

Local lRet      := .T.
Local nReg      := 1
Local nTotalReg := 0
Local nPosIni   := 1
Local cLinImp   := ""
Local nDadosPos := 1
Local nTotDel   := Len( aErroImp )
Local nSizeCTT  := 4
Local nSizeCTD  := 4
Local nTamCusto := TamSX3( "CTT_CUSTO" )[1] 
Local nTamItem  := TamSX3( "CTD_ITEM"  )[1] 
Local nTamMat   := TamSX3( "RA_MAT"    )[1] 
Local nD		  := 0
Local nY		  := 0

For nD := 1 To nTotDel
	aDel( aErroImp, nD )
Next

aSize( aErroImp, 0 )

dbSelectArea("CTT")
dbOrderNickName("DTCTT01")

dbSelectArea("CTD")
dbOrderNickName("DTCTD01")

dbSelectArea("SRA")
dbOrderNickName("DTSRA01")

If File( cArqImp )

	FT_FUse(cArqImp)

	nTotalReg := FT_FLastRec()

	FT_FGoTop()

	//Capturando as linhas do arquivo
	While !FT_FEof()

		If nReg > 1
			cLinImp   := FT_FREADLN()
	        nDadosPos := 1
			nPosIni   := 1

      		For nY := 1 To Len( cLinImp )

         		If nY == 1
					AADD(aDadosImp, Array(13) )
            	EndIf

				If SubStr( cLinImp, nY, 1 ) == ";"

             	aDadosImp[Len(aDadosImp)][nDadosPos] := SubStr( cLinImp, nPosIni, (nY-nPosIni) )
               	nPosIni   := nY + 1
               	nDadosPos += 1

				ElseIf nY == Len( cLinImp )
			   		aDadosImp[Len(aDadosImp)][    13   ] := SubStr( cLinImp, nPosIni, nY )
               //aDadosImp[Len(aDadosImp)][nDadosPos] := SubStr( cLinImp, nPosIni, nY )
               aDadosImp[Len(aDadosImp)][    09   ] := ( Val(aDadosImp[Len(aDadosImp)][07]) / Val( aDadosImp[Len(aDadosImp)][08]) ) * 100
            EndIf
			Next nY
		
			//If aDadosImp[Len(aDadosImp)][09] > 100
			//	Alert("PAROU!")
			//EndIf

			SRA->( dbSeek( StrZero( Val( aDadosImp[Len(aDadosImp)][05] ), nTamMat ) + SubStr( aDadosImp[Len(aDadosImp)][06], 1, 5 ) ) ) //+ Padr( aDadosImp[Len(aDadosImp)][01], nTamCusto ) + Padr( aDadosImp[Len(aDadosImp)][03], nTamItem ) ) )
      		CTT->( dbSeek( Padr( aDadosImp[Len(aDadosImp)][01], nTamCusto ) + SubStr( SRA->RA_FILIAL, 1, nSizeCTT ) ) )
      		CTD->( dbSeek( Padr( aDadosImp[Len(aDadosImp)][03], nTamItem  ) ) ) //+ SubStr( SRA->RA_FILIAL, 1, nSizeCTD ) ) )

      		aDadosImp[Len(aDadosImp)][02] := CTT->CTT_DESC01
      		aDadosImp[Len(aDadosImp)][04] := CTD->CTD_DESC01
      		aDadosImp[Len(aDadosImp)][05] := StrZero( Val( aDadosImp[Len(aDadosImp)][05] ), nTamMat )
      		aDadosImp[Len(aDadosImp)][06] := SRA->RA_NOME
			aDadosImp[Len(aDadosImp)][10] := .T.
			aDadosImp[Len(aDadosImp)][11] := nReg
			aDadosImp[Len(aDadosImp)][12] := SubStr( CTT->CTT_FILIAL, 1, nSizeCTT ) 
		

         If Empty( aDadosImp[Len(aDadosImp)][02] )
				lRet := .F.
 				aDadosImp[Len(aDadosImp)][02] := "(Centro de Custo não encontrado)"
				aDadosImp[Len(aDadosImp)][10] := .F.
			EndIf

         If Empty( aDadosImp[Len(aDadosImp)][04] )
				lRet := .F.
				aDadosImp[Len(aDadosImp)][04] := "(Item Contábil não encontrado)"
				aDadosImp[Len(aDadosImp)][10] := .F.
			EndIf

         If Empty( aDadosImp[Len(aDadosImp)][06] )
				lRet := .F.
				aDadosImp[Len(aDadosImp)][06] := "(Funcionário não encontrado)"
				aDadosImp[Len(aDadosImp)][10] := .F.
			EndIf

			Aadd( aErroImp, aDadosImp[Len(aDadosImp)] )
		EndIf

		nReg += 1

		oTermImp:Set( Int( nReg * 100 / nTotalReg ) )

		If Len( aErroImp ) == 0
			oDadosImp:Refresh()
		EndIf

		FT_FSkip()

	End

	FT_FUSE()

EndIf

If Len( aErroImp ) == 0
	AADD(aErroImp, {"", Space(50), "", Space(50), "", Space(50), "", "", 0, .T., 0 } )
EndIf

If !lRet
	Alert( "Existem erros no arquivo para importação!" + Chr(10) + Chr(10) + "A gravação será efetuada somente após a correção do(s) erro(s)." )
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ GrvGPE01  ºAutor  ³Microsiga          º Data ³  01/05/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Gravação da Importação de Base de Horas                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function GrvGPE01()

Local nTotalReg := Len( aDadosImp )
Local cMes      := StrZero( oMesBase:nAt, 2 )
Local cAno      := cAnoBase
Local lAtuImp   := .T.
Local nTamCC    := TamSX3( "ZD6_CC"   )[1]
Local nTamItem  := TamSX3( "ZD6_ITEM" )[1]
Local nX		 := 0

ZD6->( dbSetOrder( 1 ) )

For nX := 1 To Len( aDadosImp )

   If !( ZD6->( dbSeek( xFilial( "ZD6" ) + cAno + cMes + aDadosImp[nX][05] + Padr( aDadosImp[nX][01], nTamCC ) + Padr( aDadosImp[nX][03], nTamItem ) ) ) )

		RecLock("ZD6", .t.)

		ZD6->ZD6_FILIAL := aDadosImp[nX][13] //xFilial( "ZD6" )
		ZD6->ZD6_FILIMP := aDadosImp[nX][12]
		ZD6->ZD6_MESANO := cAno + cMes
		ZD6->ZD6_MAT    := aDadosImp[nX][05]
		ZD6->ZD6_CC     := aDadosImp[nX][01]
		ZD6->ZD6_ITEM   := aDadosImp[nX][03]
		ZD6->ZD6_HRTRAB := Val( aDadosImp[nX][07] )
		ZD6->ZD6_HRMES  := Val( aDadosImp[nX][08] )
		ZD6->ZD6_PERCEN := aDadosImp[nX][09]
		ZD6->ZD6_USRIMP := cUsrImp
		ZD6->ZD6_DATIMP := dDataImp
		ZD6->ZD6_HORIMP := cHoraImp

		ZD6->( MsUnLock() )

		If lAtuImp

			PutMv( "DT_IMPRAT", ( cAno + cMes ) )

			lAtuImp := .F.

	  	EndIf
	
  	EndIf

	oTermGrv:Set( Int( nX * 100 / nTotalReg ) )

Next nX

MSGINFO( "Estrutura de rateio gravada com sucesso!" )

Return .T.   



//----------------------------------------------------------
// APAGA REGISTROS PARA NOVA ITERAÇÃO DO CALCULO DO RATEIO
//---------------------------------------------------------

User Function DTGPE01Del()  

Local cEmp := SubStr(cFilAnt,1,4)

aArea := GETAREA()
      
cQuery := " DELETE FROM "+RetSqlName("ZD6")+" "
/* Jose Leite - 28-05-15
	Tratamento para deletar somente da filial logada, devido a uma necessidade
	do SENAI realizar uma nova carga de dados.
*/
cQuery +=	" Where SUBSTR(ZD6_FILIAL,1,4) = '"+cEmp+"' 
cQuery +=	" AND ZD6_MESANO = "+cPeriodo+" 
cQuery +=	" AND D_E_L_E_T_ <> '*'"

IF TCSQLEXEC(cQuery) < 0 
  MSGSTOP("tcsqlerror()" + tcsqlerror())
else
 tcsqlexec("commit")
EndIf                            

RestArea(aArea)

Return


/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Rotina para controle de versao
<Data> : 24/05/2014
<Parametros> : Nenhum
<Retorno> : cRet
<Processo> : Controle de versao
<Tipo> (Menu,Trigger,Validacao,Ponto de Entrada,Genericas,Especificas ) : V
<Autor> : Doit Sistemas
<Obs> :
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

User Function DTGPE01V()

Local cRet := ""
cRet := "20140523"
 
Return cRet