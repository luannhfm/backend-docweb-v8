#INCLUDE "rwmake.ch"
#INCLUDE "topconn.ch"

#DEFINE CRLF Chr(13)+Chr(10)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIPCOA17 º Autor ³ Leonardo Soncin    º Data ³  22/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Cadastro da DUM                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SIPCOA17
Private cCadastro := "Cadastro da DUM"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta um aRotina proprio                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Private aRotina := { {"Pesquisar","AxPesqui",0,1} ,;
{"Visualizar","U_SIPCO17A",0,2} ,;
{"Incluir","U_SIPCO17A",0,3} ,;
{"Alterar","U_SIPCO17A",0,4} ,;
{"Excluir","U_SIPCO17A",0,5} ,;
{"Copiar","U_SIPCO17A",0,6} ,;
{"Revisar","U_SIPCO17A",0,7} }

Private cDelFunc := ".T." // Validacao para a exclusao. Pode-se utilizar ExecBlock

Private cString := "SZM"

dbSelectArea("SZM")
dbSetOrder(1)

dbSelectArea(cString)
mBrowse( 6,1,22,75,cString)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIPCO17A º Autor ³ Leonardo Soncin    º Data ³  22/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Atualizacao da DUM                                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SIPCO17A(cAlias,nReg,nOpc)
Local nX 	 	:= 0
Local nUsado1 	:= 0
Local nUsado2 	:= 0
Local aButtons	:= {}
Local aCpoEnch 	:= {}
Local cAliasE 	:= cAlias
Local aAlterEnch:= {}
Local aPos		:= {000,000,080,400}
Local nModelo	:= 3
Local lF3 		:= .F.
Local lMemoria	:= .T.
Local lColumn	:= .F.
Local caTela 	:= ""
Local lNoFolder	:= .F.
Local lProperty	:= .F.
Local aCpoGDa1	:= {}
Local aCpoGDa2  := {}
Local aCpoGDa3  := {}
Local nSuperior := 081
Local nEsquerda := 000
Local nInferior := 250
Local nDireita  := 400
Local cLinOk1   := "U_PCO17LOk('1')"
Local cLinOk2   := "U_PCO17LOk('2')"
Local cTudoOk   := "AllwaysTrue"
Local cIniCpos  := ""
Local nFreeze   := 000
Local nMax      := 999
Local cFieldOk  := "AllwaysTrue"
Local cSuperDel := ""
Local cDelOk    := "AllwaysTrue"
Local aHeader1  := {}
Local aCols1    := {}
Local aHeader2  := {}
Local aCols2    := {}
Local aAlterGDa1:= {}
Local aAlterGDa2:= {}
Local nOpcX		:= 0
Local nStyle	:= 0
Local aRegNo1  	:= {}
Local aRegNo2  	:= {}

Local aTitles	:= {"DUM",;
"QTDE"}

Private oDlg
Private oBrw1
Private oBrw2
Private oEnch
Private oFolder
Private aTELA[0][0]
Private aGETS[0]

RegToMemory("SZM", Iif(nOpc==3.or.nOpc==6,.T.,.F.))

If nOpc == 7
	M->ZM_REVISAO := Soma1(SZM->ZM_REVISAO)
Endif

DbSelectArea("SX3")
DbSetOrder(1)
DbSeek(cAliasE)

While !Eof() .And. SX3->X3_ARQUIVO == cAliasE
	If !(SX3->X3_CAMPO $ "ZM_FILIAL") .And. cNivel >= SX3->X3_NIVEL .And. 	X3Uso(SX3->X3_USADO)
		IF nOpc == 4 .and. Alltrim(SX3->X3_CAMPO) == "ZM_ANO"
			DbSkip()
			Loop
		ENDIF
		AAdd(aCpoEnch,SX3->X3_CAMPO)
	EndIf
	DbSkip()
End

If nOpc == 3 .or. nOpc ==4 .or. nOpc ==6 .or. nOpc ==7
	aAlterEnch := aClone(aCpoEnch)
ENdif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem GetDados Itens DUM                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DbSelectArea("SX3")
DbSetOrder(1)
MsSeek("SZN")

While !Eof() .And. SX3->X3_ARQUIVO == "SZN"
	If	!(AllTrim(SX3->X3_CAMPO) $ "ZN_FILIAL") .And. cNivel >= SX3->X3_NIVEL .And. X3Uso(SX3->X3_USADO)
		AAdd(aCpoGDa1,SX3->X3_CAMPO)
	EndIf
	DbSkip()
End

aAlterGDa1 := aClone(aCpoGDa1)

nUsado1:=0
dbSelectArea("SX3")
dbSeek("SZN")
aHeader1:={}
While !Eof().And.(x3_arquivo=="SZN")
	If X3USO(x3_usado).And.cNivel>=x3_nivel .and. !(Alltrim(x3_campo) $ "ZN_ANO/ZN_REVISAO/ZN_TIPO")
		nUsado1:=nUsado1+1
		Aadd(aHeader1,{ TRIM(x3_titulo), x3_campo, x3_picture,;
		x3_tamanho, x3_decimal,X3_VALID,;
		x3_usado, x3_tipo, x3_f3, x3_context } )
	Endif
	dbSkip()
End

aCols1:={}

If nOpc==6 .or. nOpc==7
	
	dbSelectArea("SZN")
	dbSetOrder(1)
	dbSeek(xFilial("SZN")+SZM->ZM_ANO+SZM->ZM_REVISAO)
	While !eof().and. ZN_FILIAL == xFilial("SZN") .and. ZN_ANO==SZM->ZM_ANO .AND. ZN_REVISAO==SZM->ZM_REVISAO
		If SZN->ZN_TIPO == 'D'
			AADD(aCols1,Array(nUsado1+1))
			For nX:=1 to nUsado1
				aCols1[Len(aCols1),nX]:=FieldGet(FieldPos(aHeader1[nX,2]))
			Next
			aCols1[Len(aCols1),nUsado1+1]:=.F.
			//aadd(aRegNo1,SZN->(RECNO()))
		Endif
		dbSkip()
	End
	
Else
	
	dbSelectArea("SZN")
	dbSetOrder(1)
	dbSeek(xFilial("SZN")+M->ZM_ANO+M->ZM_REVISAO)
	While !eof().and. ZN_FILIAL == xFilial("SZN") .and. ZN_ANO==M->ZM_ANO .AND. ZN_REVISAO==M->ZM_REVISAO
		If SZN->ZN_TIPO == 'D'
			AADD(aCols1,Array(nUsado1+1))
			For nX:=1 to nUsado1
				aCols1[Len(aCols1),nX]:=FieldGet(FieldPos(aHeader1[nX,2]))
			Next
			aCols1[Len(aCols1),nUsado1+1]:=.F.
			aadd(aRegNo1,SZN->(RECNO()))
		Endif
		dbSkip()
	End
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem GetDados Itens da DUM - QTDE                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

DbSelectArea("SX3")
DbSetOrder(1)
MsSeek("SZN")

While !Eof() .And. SX3->X3_ARQUIVO == "SZN"
	If	!(AllTrim(SX3->X3_CAMPO) $ "ZN_FILIAL") .And. cNivel >= SX3->X3_NIVEL .And. X3Uso(SX3->X3_USADO)
		AAdd(aCpoGDa2,SX3->X3_CAMPO)
	EndIf
	DbSkip()
End

aAlterGDa2 := aClone(aCpoGDa2)

nUsado2:=0
dbSelectArea("SX3")
dbSeek("SZN")
aHeader2:={}
While !Eof().And.(x3_arquivo=="SZN")
	If X3USO(x3_usado).And.cNivel>=x3_nivel .and. !(Alltrim(x3_campo) $ "ZN_ANO/ZN_REVISAO/ZN_TIPO/ZN_CONTA")
		nUsado2:=nUsado2+1
		Aadd(aHeader2,{ TRIM(x3_titulo), x3_campo, x3_picture,;
		x3_tamanho, x3_decimal,X3_VALID,;
		x3_usado, x3_tipo, x3_f3, x3_context } )
	Endif
	dbSkip()
End

aCols2:={}

If nOpc==6 .or. nOpc==7
	
	dbSelectArea("SZN")
	dbSetOrder(1)
	dbSeek(xFilial("SZN")+SZM->ZM_ANO+SZM->ZM_REVISAO)
	While !eof().and. ZN_FILIAL == xFilial("SZN") .and. ZN_ANO==SZM->ZM_ANO .AND. ZN_REVISAO==SZM->ZM_REVISAO
		If SZN->ZN_TIPO == 'Q'
			AADD(aCols2,Array(nUsado2+1))
			For nX:=1 to nUsado2
				aCols2[Len(aCols2),nX]:=FieldGet(FieldPos(aHeader2[nX,2]))
			Next
			aCols2[Len(aCols2),nUsado2+1]:=.F.
			//aadd(aRegNo2,SZN->(RECNO()))
		Endif
		dbSkip()
	End
	
Else
	
	dbSelectArea("SZN")
	dbSetOrder(1)
	dbSeek(xFilial("SZN")+M->ZM_ANO+M->ZM_REVISAO)
	While !eof().and. ZN_FILIAL == xFilial("SZN") .and. ZN_ANO==M->ZM_ANO .AND. ZN_REVISAO==M->ZM_REVISAO
		If SZN->ZN_TIPO == 'Q'
			AADD(aCols2,Array(nUsado2+1))
			For nX:=1 to nUsado2
				aCols2[Len(aCols2),nX]:=FieldGet(FieldPos(aHeader2[nX,2]))
			Next
			aCols2[Len(aCols2),nUsado2+1]:=.F.
			aadd(aRegNo2,SZN->(RECNO()))
		Endif
		dbSkip()
	End
	
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem da Tela de Consulta                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

aObjects 	:= {}
aSizeAut	:= MsAdvSize()
Aadd( aObjects, { 100, 100, .T., .T. } )
Aadd( aObjects, { 100, 100, .T., .T. } )
Aadd( aObjects, { 100, 015, .T., .F. } )
aInfo		:= { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 3, 3 }
aPosObj		:= MsObjSize( aInfo, aObjects )
aPosGet		:= MsObjGetPos(aSizeAut[ 3 ]-aSizeAut[ 1 ], 315, {{003, 033, 160, 200, 240, 265}} )

oDlg 	:= MSDIALOG():New(aSizeAut[7],000, aSizeAut[6],aSizeAut[5], cCadastro,,,,,,,,,.T.)

If nOpc ==3 .or. nOpc ==6 .or. nOpc ==7
	INCLUI := .T.
	ALTERA := .F.
	nStyle := GD_INSERT+GD_UPDATE+GD_DELETE
ElseIf nOpc == 4
	INCLUI := .F.
	ALTERA := .T.
	nStyle := GD_INSERT+GD_UPDATE+GD_DELETE
Else
	INCLUI := .F.
	nStyle := 0
Endif

oEnch := MsMGet():New(cAliasE, nReg,nOpc, /*aCRA*/, /*cLetra*/, /*cTexto*/,;
aCpoEnch,aPosObj[1],	aAlterEnch, nModelo, /*nColMens*/, /*cMensagem*/,;
/*cTudoOk*/, oDlg,lF3, lMemoria,lColumn,caTela,lNoFolder,lProperty)
If !nOpc == 2 .and. !nOpc == 5
	aAdd(aButtons, 	{'AUTOM', 	{|| oBrw1:aCols := SIPCOCSV(oBrw1:aCols,aHeader1,nUsado1),oBrw1:Refresh()} ,"Importa CSV" ,"Importa CSV"})
Endif
aadd(aButtons,	{"BUDGET",	{|| xSimula(oBrw1:aCols,aHeader1,oBrw2:aCols,aHeader2,nUsado1,nUsado2) } ,"Simulação" ,"Simulação"})

oFolder := TFolder():New(aPosObj[2,1],aPosObj[2,2],aTitles,{"AHEADER"},oDlg,,,,.T.,.F.,aPosObj[2,4]-aPosObj[2,2],aPosObj[2,3]-aPosObj[2,1])

// Browse 1 // DUM
oBrw1:= MsNewGetDados():New(1,1,aPosObj[2,3]-162,aPosObj[2,4]-5, nStyle,cLinOk1, cTudoOk, cIniCpos, aAlterGDa1, nFreeze, nMax, cFieldOk, cSuperDel,cDelOk, oFolder:aDialogs[1], aHeader1, aCols1)

// Browse 2 // QTDE
oBrw2:= MsNewGetDados():New(1,1,aPosObj[2,3]-162,aPosObj[2,4]-5, nStyle,cLinOk2, cTudoOk, cIniCpos, aAlterGDa2, nFreeze, nMax, cFieldOk, cSuperDel,cDelOk, oFolder:aDialogs[2], aHeader2, aCols2)

oDlg:bInit	:= {|| EnchoiceBar(oDlg, {|| aCols1 := oBrw1:aCols,aCols2 := oBrw2:aCols,nOpcX:=1,IIf(oBrw1:TudoOk().and.oBrw2:TudoOk().and.Obrigatorio(aGets, aTela),oDlg:End(),nOpcX:=0)}, {||nOpcx := 0, oDlg:End()},,aButtons)}
oDlg:lCentered := .T.
oDlg:Activate()

If nOpcX == 1 .and. !nOpc == 2
	//Gravaçao dos Dados
	xSIPCOGRV(aCols1,aHeader1,aCols2,aHeader2,aRegno1,aRegno2,nUsado1,nUsado2,nOpc)
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xSIPCOGRVº Autor ³ Leonardo Soncin    º Data ³  04/01/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Gravacao dos Dados                                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico - CNI                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xSIPCOGRV(aCols1,aHeader1,aCols2,aHeader2,aRegno1,aRegno2,nUsado1,nUsado2,nOpc)
Local bCampo 	 := {|nCPO| Field(nCPO) }

dbSelectArea("SZM")
dbSetOrder(1)

If !nOpc == 5
	
	If MsSeek(xFilial("SZM")+M->ZM_ANO+M->ZM_REVISAO)
		RecLock("SZM",.F.)
	Else
		RecLock("SZM",.T.)
	EndIf
	
	For nX := 1 TO FCount()
		FieldPut(nX,M->&(EVAL(bCampo,nX)))
	Next nX
	SZM->ZM_FILIAL := xFilial("SZM")
	
	MsUnLock()
	
	SZM->(FkCommit(.T.))
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Grava os itens - DUM                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 To Len(aCols1)
		
		lTravou := .F.
		
		dbSelectArea("SZN")
		
		If nX <= Len(aRegNo1)
			dbGoto(aRegNo1[nX])
			RecLock("SZN",.F.)
			lTravou := .T.
		EndIf
		
		If ( !aCols1[nX][nUsado1+1] )
			If !lTravou
				RecLock("SZN",.T.)
			EndIf
			For nY := 1 to Len(aHeader1)
				If aHeader1[nY][10] <> "V"
					SZN->(FieldPut(FieldPos(aHeader1[nY][2]),aCols1[nX][nY]))
				EndIf
			Next nY
			SZN->ZN_FILIAL 	:= xFilial("SZN")
			SZN->ZN_ANO 	:= M->ZM_ANO
			SZN->ZN_REVISAO	:= M->ZM_REVISAO
			SZN->ZN_TIPO	:= "D"
			
			MsUnLock()
			lGravou := .T.
		Else
			If lTravou
				SZN->(dbDelete())
			EndIf
		EndIf
		MsUnLock()
	Next nX
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Grava os itens - QTDE                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 To Len(aCols2)
		
		lTravou := .F.
		
		dbSelectArea("SZN")
		
		If nX <= Len(aRegNo2)
			dbGoto(aRegNo2[nX])
			RecLock("SZN",.F.)
			lTravou := .T.
		EndIf
		
		If ( !aCols2[nX][nUsado2+1] )
			If !lTravou
				RecLock("SZN",.T.)
			EndIf
			For nY := 1 to Len(aHeader2)
				If aHeader2[nY][10] <> "V"
					SZN->(FieldPut(FieldPos(aHeader2[nY][2]),aCols2[nX][nY]))
				EndIf
			Next nY
			SZN->ZN_FILIAL 	:= xFilial("SZN")
			SZN->ZN_ANO 	:= M->ZM_ANO
			SZN->ZN_REVISAO	:= M->ZM_REVISAO
			SZN->ZN_TIPO	:= "Q"
			
			MsUnLock()
			lGravou := .T.
		Else
			If lTravou
				SZN->(dbDelete())
			EndIf
		EndIf
		MsUnLock()
	Next nX
	
Else
	
	dbSelectArea("SZN")
	dbSetOrder(1)
	MsSeek(xFilial("SZN")+M->ZM_ANO+M->ZM_REVISAO)
	While ( !Eof() .And. xFilial("SZN") == SZN->ZN_FILIAL .And. M->ZM_ANO == SZN->ZN_ANO .AND.  M->ZM_REVISAO == SZN->ZN_REVISAO )
		RecLock("SZN")
		dbDelete()
		MsUnLock()
		dbSelectArea("SZN")
		dbSkip()
	EndDo
	
	dbSelectArea("SZM")
	dbSetOrder(1)
	If MsSeek(xFilial("SZM")+M->ZM_ANO+M->ZM_REVISAO)
		RecLock("SZM")
		dbDelete()
		MsUnLock()
	EndIf
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIPCOCSV	º Autor ³ Leonardo Soncin    º Data ³  04/01/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Importacao de Dados                                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico - CNI                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function SIPCOCSV(aCols1,aHeader1,nUSado1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local oProcess  := NIL
Local cPathIni := "C:\"

Private cFile := cGetFile("Arquivo CSV | *.csv","Selecione o arquivo CSV",,cPathIni,.T.,GETF_LOCALFLOPPY+GETF_LOCALHARD+GETF_NETWORKDRIVE )

If !Empty(cFile)
	IF !File(cFile)
		Alert("Arquivo não localizado. Verifique!")
		Return aClone(aCols1)
	ENDIF
	oProcess := MsNewProcess():New( { | lEnd | aCols1 := xImpCSV( @lEnd,oProcess,aCols1,aHeader1,nUsado1) }, 'Processando', 'Aguarde, processando...', .F. )
	oProcess:Activate()
Endif

Return aClone(aCols1)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xSimula  º Autor ³ Leonardo Soncin    º Data ³  04/01/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Simulacao do dados                                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico - CNI                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xSimula(aCols1,aHeader1,aCols2,aHeader2,nUsado1,nUsado2)

Local oProcess  := NIL

oProcess := MsNewProcess():New( { | lEnd | xCalcDum( @lEnd,oProcess,.F.,aCols1,aHeader1,aCols2,aHeader2,nUsado1,nUsado2) }, 'Processando', 'Aguarde, processando...', .F. )
oProcess:Activate()

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xImpCSV  º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Importacao CSV                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xImpCSV(lEnd,oProcess,aCols1,aHeader1,nUsado1)
Local nX,nY
Local cLin		 :=	""
Local aCampo	 := {}
Local aEstrut	 := {}
Local aTXT		 := {}
Local aPosCampos := {}
Local cAliasTrb  := GetNextAlias()
Local cArqTrb	 := ""
Local cChave	 := ""
Local cAno 		 :=  M->ZM_ANO
Local nPosCc	 := Ascan(aHeader1, {|e| Alltrim(e[2]) = "ZN_CC"} )
Local nPosItem	 := Ascan(aHeader1, {|e| Alltrim(e[2]) = "ZN_ITEM"} )
Local nPosClasse := Ascan(aHeader1, {|e| Alltrim(e[2]) = "ZN_CLASSE"} )
Local nPosConta	 := Ascan(aHeader1, {|e| Alltrim(e[2]) = "ZN_CONTA"} )
Local aEstErro	 := {}
Local cAliasTmp  := GetNextAlias()
Local cArqTmp	 := ""
Local cChaveErr	 := ""
Local lErro		 := .F.
Local cPeriodos  := "JAN/FEV/MAR/ABR/MAI/JUN/JUL/AGO/SET/OUT/NOV/DEZ" //cAno+"0101/"+cAno+"0201/"+cAno+"0301/"+cAno+"0401/"+cAno+"0501/"+cAno+"0601/"+cAno+"0701/"+cAno+"0801/"+cAno+"0901/"+cAno+"1001/"+cAno+"1101/"+cAno+"1201"

aEstErro :={	{ "NOME" 	, "C", 	 20, 0 },;
{ "LINHA"		, "C",  5, 0 },;
{ "CAMPO"		, "C",  10, 0 },;
{ "CONTEUDO"	, "C",  30, 0 },;
{ "MSG"			, "C",  70, 0 }}

cArqTmp := CriaTrab(aEstErro, .T.)
dbUseArea( .T.,, cArqTmp, cAliasTmp, .F., .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Indice Temporario do Arquivo de Trabalho.               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChaveErr   := "NOME+LINHA"

IndRegua(cAliasTmp,cArqTmp,cChaveErr,,,"Criando Arquivo Temporário...")
dbSelectArea(cAliasTmp)
dbSetIndex(cArqTmp+OrdBagExt())
dbSetOrder(1)

////////////////////////////////////

aEstrut :={	{ "ZN_CC" 		, "C", 	 TamSx3("ZN_CC")[1], 0 },;
{ "ZN_ITEM"		, "C",   TamSx3("ZN_ITEM")[1], 0 },;
{ "ZN_CONTA"	, "C",   TamSx3("ZN_CONTA")[1], 0 },;
{ "ZN_CLASSE"	, "C",   TamSx3("ZN_CLASSE")[1], 0 },;
{ "ZN_MES01"	, "N",   17, 2 },;
{ "ZN_MES02"	, "N",   17, 2 },;
{ "ZN_MES03"	, "N",   17, 2 },;
{ "ZN_MES04"	, "N",   17, 2 },;
{ "ZN_MES05"	, "N",   17, 2 },;
{ "ZN_MES06"	, "N",   17, 2 },;
{ "ZN_MES07"	, "N",   17, 2 },;
{ "ZN_MES08"	, "N",   17, 2 },;
{ "ZN_MES09"	, "N",   17, 2 },;
{ "ZN_MES10"	, "N",   17, 2 },;
{ "ZN_MES11"	, "N",   17, 2 },;
{ "ZN_MES12"	, "N",   17, 2 }}

cArqTrb := CriaTrab(aEstrut, .T.)
dbUseArea( .T.,, cArqTrb, cAliasTrb, .F., .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Indice Temporario do Arquivo de Trabalho 1.             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChave   := "ZN_CC+ZN_ITEM+ZN_CONTA+ZN_CLASSE"

IndRegua(cAliasTrb,cArqTrb,cChave,,,"Selecionando Registros...")
dbSelectArea(cAliasTrb)
dbSetIndex(cArqTrb+OrdBagExt())
dbSetOrder(1)

// ESTRUTURA DO ARQUIVO TEXTO
aAdd(aCampo,"UO")
aAdd(aCampo,"CR")
aAdd(aCampo,"CONTA")
aAdd(aCampo,"CLASSE")
aAdd(aCampo,"JAN")
aAdd(aCampo,"FEV")
aAdd(aCampo,"MAR")
aAdd(aCampo,"ABR")
aAdd(aCampo,"MAI")
aAdd(aCampo,"JUN")
aAdd(aCampo,"JUL")
aAdd(aCampo,"AGO")
aAdd(aCampo,"SET")
aAdd(aCampo,"OUT")
aAdd(aCampo,"NOV")
aAdd(aCampo,"DEZ")

//Define o valor do array conforme estrutura
aPosCampos:= Array(Len(aCampo))

If (nHandle := FT_FUse(AllTrim(cFile)))== -1
	Help(" ",1,"NOFILEIMPOR")
	Return
EndIf

//Verifica Estrutura do Arquivo
FT_FGOTOP()
cLinha := FT_FREADLN()
nPos	:=	0
nAt	:=	1

While nAt > 0
	nPos++
	nAt	:=	AT(";",cLinha)
	If nAt == 0
		cCampo := cLinha
	Else
		cCampo	:=	Substr(cLinha,1,nAt-1)
	Endif
	nPosCpo	:=	Ascan(aCampo,{|x| x==cCampo})
	If nPosCPO > 0
		aPosCampos[nPosCpo]:= nPos
	Endif
	cLinha	:=	Substr(cLinha,nAt+1)
Enddo

If (nPosNil:= Ascan(aPosCampos,Nil)) > 0
	Aviso("Estrutura de arquivo inválido.","O campo "+aCampo[nPosNil]+" nao foi encontrado na estrutura, verifique.",{"Sair"})
	Return aCols1
Endif

// Inicia Importacao das Linhas
FT_FSKIP()
While !FT_FEOF()
	cLinha := FT_FREADLN()
	AADD(aTxt,{})
	nCampo := 1
	While At(";",cLinha)>0
		aAdd(aTxt[Len(aTxt)],Substr(cLinha,1,At(";",cLinha)-1))
		nCampo ++
		cLinha := StrTran(Substr(cLinha,At(";",cLinha)+1,Len(cLinha)-At(";",cLinha)),'"','')
	End
	If Len(AllTrim(cLinha)) > 0
		aAdd(aTxt[Len(aTxt)],StrTran(Substr(cLinha,1,Len(cLinha)),'"','') )
	Else
		aAdd(aTxt[Len(aTxt)],"")
	Endif
	
	IF Len(aTxt[Len(aTxt)]) <> Len(aCampo)
		Aviso("LINHA "+Alltrim(Str(Len(aTxt))),"Estrutura de arquivo inválida (qtde de registros). Verifique.",{"Sair"})
		Return aCols1
	ENDIF
	
	FT_FSKIP()
End

// Gravacao dos Itens (TRB)
FT_FUSE()
For nX:=1 To Len(aTxt)
	
	dbSelectArea(cAliasTrb)
	dbGotop()
	If !dbSeek(aTxt[nX,1]+Space(TamSx3("ZN_CC")[1]-Len(aTxt[nX,1]))+aTxt[nX,2]+Space(TamSx3("ZN_ITEM")[1]-Len(aTxt[nX,2]))+aTxt[nX,3]+Space(TamSx3("ZN_CONTA")[1]-Len(aTxt[nX,3]))+aTxt[nX,4]+Space(TamSx3("ZN_CLASSE")[1]-Len(aTxt[nX,4])))
		
		//Valida Linha Duplicada
		If nPosCc > 0
			// Pesquisa por item ja cadastrado
			For nZ := 1 To Len(aCols1)
				// Se encontrou um item igual ao ja cadastrado, avisa e nao permite continuar
				If !(GdDeleted( nZ, aHeader1, aCols1)) .And.;
					Alltrim(aCols1[nZ][nPosCc])+Alltrim(aCols1[nZ][nPosItem])+Alltrim(aCols1[nZ][nPosConta])+Alltrim(aCols1[nZ][nPosClasse]) == ;
					Alltrim(aTxt[nX,1])+Alltrim(aTxt[nX,2])+Alltrim(aTxt[nX,3])+Alltrim(aTxt[nX,4])
					lErro := .T.
					dbSelectArea(cAliasTmp)
					RecLock(cAliasTmp,.T.)
					(cAliasTmp)->NOME 		:= cFile
					(cAliasTmp)->LINHA 		:= Alltrim(Str(nX))
					(cAliasTmp)->CAMPO		:= "DUPL"
					(cAliasTmp)->CONTEUDO 	:= Alltrim(aCols1[nZ][nPosCc])+Alltrim(aCols1[nZ][nPosItem])+Alltrim(aCols1[nZ][nPosConta])+Alltrim(aCols1[nZ][nPosClasse])
					(cAliasTmp)->MSG	 	:= "Existem duplicidades para o UO: "+Alltrim(aCols1[nZ][nPosCC])+", CR "+Alltrim(aCols1[nZ][nPosItem])+", CONT "+Alltrim(aCols1[nZ][nPosConta])+" e Classe "+Alltrim(aCols1[nZ][nPosClasse])+"."
					MsUnlock()
				Endif
			Next
		Endif
		
		RecLock(cAliasTrb,.T.)
		For nY:=1 To Len(aCampo)
			
			// Valida CC
			If AllTrim(aCampo[nY]) $ "UO"
				dbSelectArea("CTT")
				dbSetOrder(1)
				If !dbSeek(xFilial("CTT")+aTxt[nX,nY])
					lErro 	:= .T.
					dbSelectArea(cAliasTmp)
					RecLock(cAliasTmp,.T.)
					(cAliasTmp)->NOME 		:= cFile
					(cAliasTmp)->LINHA 		:= Alltrim(Str(nX))
					(cAliasTmp)->CAMPO		:= "UO"
					(cAliasTmp)->CONTEUDO 	:= aTxt[nX,nY]
					(cAliasTmp)->MSG	 	:= "Centro de Custo "+Alltrim(aTxt[nX,nY])+" não localizado na base de dados."
					MsUnlock()
				Endif
			Endif
			
			// Valida Item
			If AllTrim(aCampo[nY]) $ "CR"
				dbSelectArea("CTD")
				dbSetOrder(1)
				If !dbSeek(xFilial("CTD")+aTxt[nX,nY])
					lErro 	:= .T.
					dbSelectArea(cAliasTmp)
					RecLock(cAliasTmp,.T.)
					(cAliasTmp)->NOME 		:= cFile
					(cAliasTmp)->LINHA 		:= Alltrim(Str(nX))
					(cAliasTmp)->CAMPO		:= "CR"
					(cAliasTmp)->CONTEUDO 	:= aTxt[nX,nY]
					(cAliasTmp)->MSG	 	:= "Item Contábil "+Alltrim(aTxt[nX,nY])+" não localizado na base de dados."
					MsUnlock()
				Endif
			Endif
			
			// Valida Conta
			If AllTrim(aCampo[nY]) $ "CONTA"
				dbSelectArea("AK5")
				dbSetOrder(1)
				If !dbSeek(xFilial("AK5")+aTxt[nX,nY])
					lErro 	:= .T.
					dbSelectArea(cAliasTmp)
					RecLock(cAliasTmp,.T.)
					(cAliasTmp)->NOME 		:= cFile
					(cAliasTmp)->LINHA 		:= Alltrim(Str(nX))
					(cAliasTmp)->CAMPO		:= "CONTA"
					(cAliasTmp)->CONTEUDO 	:= aTxt[nX,nY]
					(cAliasTmp)->MSG	 	:= "Conta Orçamentária "+Alltrim(aTxt[nX,nY])+" não localizado na base de dados."
					MsUnlock()
				Endif
			Endif
			
			// Valida Classe
			If AllTrim(aCampo[nY]) $ "CLASSE"
				dbSelectArea("AK6")
				dbSetOrder(1)
				If !dbSeek(xFilial("AK6")+aTxt[nX,nY])
					lErro 	:= .T.
					dbSelectArea(cAliasTmp)
					RecLock(cAliasTmp,.T.)
					(cAliasTmp)->NOME 		:= cFile
					(cAliasTmp)->LINHA 		:= Alltrim(Str(nX))
					(cAliasTmp)->CAMPO		:= "CLASSE"
					(cAliasTmp)->CONTEUDO 	:= aTxt[nX,nY]
					(cAliasTmp)->MSG	 	:= "Classe Orçamentária "+Alltrim(aTxt[nX,nY])+" não localizado na base de dados."
					MsUnlock()
				Endif
			Endif
			
			dbSelectArea(cAliasTrb)
			
			If AllTrim(aCampo[nY]) $ cPeriodos
				_nValor	:= Val(StrTran(aTxt[nX,nY],",","."))
				FieldPut(nY,_nValor)
			Else
				FieldPut(nY,aTxt[nX,nY])
			Endif
			
		Next
		MsUnLock()
	Else
		
		lErro 	:= .T.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->NOME 		:= cFile
		(cAliasTmp)->LINHA 		:= Alltrim(Str(nX))
		(cAliasTmp)->CAMPO		:= "DUPL"
		(cAliasTmp)->CONTEUDO 	:= Alltrim(aTxt[nX,1])+Alltrim(aTxt[nX,2])+Alltrim(aTxt[nX,3])+Alltrim(aTxt[nX,4])
		(cAliasTmp)->MSG	 	:= "Existem duplicidades para o UO: "+Alltrim(aTxt[nX,1])+", CR "+Alltrim(aTxt[nX,2])+", CONT "+Alltrim(aTxt[nX,3])+" e Classe "+Alltrim(aTxt[nX,4])+"."
		MsUnlock()
		
	Endif
Next

If lErro
	//Chama Impressao do Relatorio de Inconsistencias
	If ApMsgYesNo("Ocorreram inconsistências durante a importação dos dados, deseja imprimir o log?","Log de Inconsistências")
		xRelInc(cAliasTmp,"Inconsistências da Importação")
	Endif
Else
	dbSelectArea(cAliasTrb)
	dbGotop()
	
	// Inicia Gravacao no Sistema - aCols1,aHeader1
	While !Eof(cAliasTrb)
		
		If !Empty(aCols1[Len(aCols1),nPosCC]+aCols1[Len(aCols1),nPosItem]+aCols1[Len(aCols1),nPosConta]+aCols1[Len(aCols1),nPosClasse])
			AADD(aCols1,Array(nUsado1+1))
		Endif
		For nX := 1 to Len(aEstrut)
			aCols1[Len(aCols1),nX]:=FieldGet(nX)
			aCols1[Len(aCols1),nUsado1+1]:=.F.
		Next nX
		
		dbSelectArea(cAliasTrb)
		dbSkip()
	EndDo
Endif

If Select(cAliasTrb) != 0
	dbSelectArea(cAliasTrb)
	dbCloseArea()
	FErase(cArqTrb+GetDBExtension())
	FErase(cArqTrb+OrdBagExt())
Endif

If Select(cAliasTmp) != 0
	dbSelectArea(cAliasTmp)
	dbCloseArea()
	FErase(cArqTmp+GetDBExtension())
	FErase(cArqTmp+OrdBagExt())
Endif

Return aCols1

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIPCO17D º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Geracao da DUM na Planilha Orcamentaria                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SIPCO17D
Local cPerg := "SIPCO3"
Local oProcess  := NIL

ValidPerg(cPerg)
If Pergunte(cPerg)
	
	SZM->(dbSetOrder(1))
	IF !SZM->(dbSeek(XFilial("SZM")+MV_PAR01))
		Aviso("ATENÇÃO","A DUM informada não foi localizada. Verifique!",{"Sair"})
		Return()
	ELSE
		IF SZM->ZM_ATIVO <> "1"
			Aviso("ATENÇÃO","A DUM informada não está ativa. Verifique!",{"Sair"})
			Return()
		ENDIF
	ENDIF
	
	If AK1->(FieldPos("AK1_XAPROV"))>0
		If AK1->AK1_XAPROV <> "0"
			MsgStop("A planilha orçamentária deve estar com a situação igual a '0 - Em aberto' para que possa importar dados. Verifique!","Atenção")
			Return
		Endif
	Endif
	
	// Verifica se existem entidades bloqueadas
	IF !SIPCO07Blq()
		Return
	ENDIF
	
	dbSelectArea("AK2")
	AK2->(dbOrderNickName("SIAK203"))
	
	IF AK2->(dbSeek(xFilial("AK2")+AK1->(AK1_CODIGO+AK1_VERSAO)+MV_PAR01))
		IF Aviso("ATENÇÃO","Esta DUM já foi gerada, deseja sobrepor os dados ?",{"Sim","Não"}) <> 1
			Return()
		ENDIF
		
		// Exclui dados
		MsgRun('Excluindo lançamentos. Aguarde...',, {|| _fDelLanc() } )
		
	ENDIF
	
	oProcess := MsNewProcess():New( { | lEnd | xCalcDum( @lEnd,oProcess,.T.) }, 'Processando', 'Aguarde, processando...', .F. )
	oProcess:Activate()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ ValidPerg³ Autor ³ Wagner Gomes          ³ Data ³ 10/12/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria as Perguntas para Fatura para locacao de Bens Moveis  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Especifico Construtora OAS Ltda                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ValidPerg(cPerg)

Local _sAlias := Alias()
Local aRegs := {}
Local i,j

dbSelectArea("SX1")
dbSetOrder(1)
cPerg := PADR(cPerg,10)

// Grupo/Ordem/Pergunta/Variavel/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/Cnt01/Var02/Def02/Cnt02/Var03/Def03/Cnt03/Var04/Def04/Cnt04/Var05/Def05/Cnt05
aAdd(aRegs,{cPerg,"01","Referencia DUM  "				,"mv_ch1","C",06,0,0,"G","naovazio()","mv_par01","","","","","","","","","","","","","","","SZM",""})

For i := 1 to Len(aRegs)
	u_SFPUTSX1(aRegs[i,1],aRegs[i,2],aRegs[i,3],aRegs[i,3],aRegs[i,3],aRegs[i,4],aRegs[i,5],aRegs[i,6],aRegs[i,7],;
	aRegs[i,8],aRegs[i,9],aRegs[i,10],iif(len(aRegs[i])>=26,aRegs[i,26],""),aRegs[i,27],"",aRegs[i,11],aRegs[i,12],;
	aRegs[i,12],aRegs[i,12],aRegs[i,13],aRegs[i,15],aRegs[i,15],aRegs[i,15],aRegs[i,18],aRegs[i,18],aRegs[i,18],;
	aRegs[i,21],aRegs[i,21],aRegs[i,21],aRegs[i,24],aRegs[i,24],aRegs[i,24])
	
Next i

dbSelectArea(_sAlias)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xCalcDum º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Geracao da DUM na Planilha Orcamentaria                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xCalcDum(lEnd,oProcess,lGeraOrc,aCols1,aHeader1,aCols2,aHeader2,nUsado1,nUsado2)
Local cQuery := ""
Local cAliasDUM := GetNextAlias()
Local cAliasQTD	:= GetNextAlias()
Local cAliasTMP	:= GetNextAlias()
Local aEstrut	:= SZN->(dbStruct())
Local cNomArqDUM:= ""
Local cNomArqQTDE:= ""
Local cNomArqTMP:= ""
Local cCtaOrc 	:= ""
Local nTotRegs 	:= 0
Local nProcRegs := 0
Local cAnoRev 	:= Iif(lGeraOrc,MV_PAR01,M->ZM_ANO+M->ZM_REVISAO)
Local cClasse 	:= Iif(lGeraOrc,Posicione("SZM",1,xFilial("SZM")+cAnoRev,"ZM_CLASSE"),M->ZM_CLASSE)
Local nPosCC 	:= ""
Local nPosItem 	:= ""
Local nPosClas 	:= ""

If !lGeraOrc
	nPosCc		:= Ascan(aHeader2, {|e| Alltrim(e[2]) = "ZN_CC"} )
	nPosItem	:= Ascan(aHeader2, {|e| Alltrim(e[2]) = "ZN_ITEM"} )
	nPosClas	:= Ascan(aHeader2, {|e| Alltrim(e[2]) = "ZN_CLASSE"} )
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria o arquivo temporario ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cNomArqTmp := CriaTrab( aEstrut, .T. )
dbUseArea( .T.,,cNomArqTmp, cAliasTmp, .F., .F. )

IndRegua( cAliasTmp,cNomArqTmp, "ZN_CC+ZN_ITEM+ZN_CONTA+ZN_TIPO",,,"Criando Indice, aguarde..." )
dbClearIndex()
dbSetIndex( cNomArqTMP + OrdBagExt() )

If lGeraOrc
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Query - DUM               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cQuery :=  "SELECT ZN_CC, ZN_ITEM, ZN_CONTA, ZN_CLASSE, ZN_MES01, ZN_MES02, ZN_MES03, ZN_MES04, ZN_MES05, ZN_MES06, ZN_MES07, ZN_MES08, ZN_MES09, ZN_MES10, ZN_MES11, ZN_MES12 "
	cQuery +=  "FROM "+RetSqlName("SZN")+" SZN "
	cQuery +=  "WHERE ZN_FILIAL = '"+xFilial("SZN")+"' AND "
	cQuery +=  "ZN_ANO = '"+Substr(cAnoRev,1,4)+"' AND ZN_REVISAO = '"+Substr(cAnoRev,5,2)+"' AND "
	cQuery +=  "ZN_TIPO = 'D' AND "
	cQuery +=  "D_E_L_E_T_ = '' "
	cQuery := ChangeQuery(cQuery)
	
	If Select(cAliasDUM) > 0
		dbSelectArea(cAliasDUM)
		dbCloseArea()
	Endif
	
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasDUM,.T.,.F.)
	
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria o arquivo temporario - DUM  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNomArqDum := CriaTrab( aEstrut, .T. )
	dbUseArea( .T.,,cNomArqDUM, cAliasDUM, .F., .F. )
	IndRegua( cAliasDUM, cNomArqDUM, "ZN_CC+ZN_ITEM+ZN_CONTA+ZN_TIPO",,,"Criando Indice, aguarde..." )
	dbClearIndex()
	dbSetIndex( cNomArqDUM + OrdBagExt() )
	
	//Importa aCols para o TMP
	dbSelectArea(cAliasDUM)
	For nX := 1 to Len(aCols1)
		RecLock(cAliasDUM,.T.)
		If ( !aCols1[nX][nUsado1+1] )
			For nY := 1 to Len(aHeader1)
				If aHeader1[nY][10] <> "V"
					(cAliasDUM)->(FieldPut(FieldPos(aHeader1[nY][2]),aCols1[nX][nY]))
				EndIf
			Next nY
			(cAliasDUM)->ZN_TIPO	:= "D"
			MsUnLock()
		Endif
	Next
	
Endif

DbSelectArea(cAliasDUM)
dbGotop()

If !Eof(cAliasDUM)
	
	dbEval( {|x| nTotRegs++ },,{|| (cAliasDUM)->(!EOF())})
	oProcess:SetRegua1(nTotRegs)
	oProcess:IncRegua1("Iniciando processamento...")
	oProcess:SetRegua2(nTotRegs)
	oProcess:IncRegua2("Ordem de producao:")
	
	dbgotop(cAliasDUM)
	
	While !Eof(cAliasDUM)
		
		nProcRegs++
		oProcess:IncRegua1("Processando item: "+CValToChar(nProcRegs)+" / "+CValToChar(nTotRegs))
		
		If lGeraOrc
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Query - QTDE              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cQuery :=  "SELECT ZN_CC, ZN_ITEM, ZN_CLASSE, ZN_MES01, ZN_MES02, ZN_MES03, ZN_MES04, ZN_MES05, ZN_MES06, ZN_MES07, ZN_MES08, ZN_MES09, ZN_MES10, ZN_MES11, ZN_MES12 "
			cQuery +=  "FROM "+RetSqlName("SZN")+" SZN "
			cQuery +=  "WHERE ZN_FILIAL = '"+xFilial("SZN")+"' AND "
			cQuery +=  "ZN_ANO = '"+Substr(cAnoRev,1,4)+"' AND ZN_REVISAO = '"+Substr(cAnoRev,5,2)+"' AND "
			cQuery +=  "ZN_CC = '"+(cAliasDUM)->ZN_CC+"' AND ZN_ITEM = '"+(cAliasDUM)->ZN_ITEM+"' AND ZN_CLASSE = '"+(cAliasDUM)->ZN_CLASSE+"' AND "
			cQuery +=  "ZN_TIPO = 'Q' AND "
			cQuery +=  "D_E_L_E_T_ = '' "
			cQuery := ChangeQuery(cQuery)
			
			If Select(cAliasQTD) > 0
				dbSelectArea(cAliasQTD)
				dbCloseArea()
			Endif
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQTD,.T.,.F.)
			
		Else
			
			If Select(cAliasQTD) != 0
				dbSelectArea(cAliasQTD)
				dbCloseArea()
				FErase(cNomArqQTDE+GetDBExtension())
				FErase(cNomArqQTDE+OrdBagExt())
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria o arquivo temporario - QTDE  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cNomArqQTDE := CriaTrab( aEstrut, .T. )
			dbUseArea( .T.,,cNomArqQTDE, cAliasQTD, .F., .F. )
			IndRegua( cAliasQTD, cNomArqQTDE, "ZN_CC+ZN_ITEM+ZN_CONTA+ZN_TIPO",,,"Criando Indice, aguarde..." )
			dbClearIndex()
			dbSetIndex( cNomArqQTDE + OrdBagExt() )
			
			//Importa aCols para o TMP
			dbSelectArea(cAliasQTD)
			For nX := 1 to Len(aCols2)
				
				If !aCols2[nX][nUsado2+1].and. ((aCols2[nX,nPosCc]+aCols2[nX,nPosItem]+aCols2[nX,nPosClas]) == ((cAliasDUM)->ZN_CC+(cAliasDUM)->ZN_ITEM+(cAliasDUM)->ZN_CLASSE))
					RecLock(cAliasQTD,.T.)
					If ( !aCols2[nX][nUsado2+1] )
						For nY := 1 to Len(aHeader2)
							If aHeader2[nY][10] <> "V"
								(cAliasQTD)->(FieldPut(FieldPos(aHeader2[nY][2]),aCols2[nX][nY]))
							EndIf
						Next nY
						(cAliasQTD)->ZN_TIPO	:= "Q"
						MsUnLock()
					Endif
				Endif
			Next
		Endif
		
		DbSelectArea(cAliasQTD)
		dbGotop()
		
		If !Eof(cAliasQTD)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Multiplicacao dos Valores ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			//Grava dados Agrupados
			dbSelectArea(cAliasTmp)
			dbSetOrder(1)
			dbGotop(cAliasTmp)
			If dbSeek((cAliasDUM)->(ZN_CC+ZN_ITEM+ZN_CONTA+"D"))
				//Grava Registro da DUM
				RecLock(cAliasTmp,.F.)
				(cAliasTmp)->ZN_MES01 += ((cAliasDUM)->ZN_MES01 * (cAliasQTD)->ZN_MES01)
				(cAliasTmp)->ZN_MES02 += ((cAliasDUM)->ZN_MES02 * (cAliasQTD)->ZN_MES02)
				(cAliasTmp)->ZN_MES03 += ((cAliasDUM)->ZN_MES03 * (cAliasQTD)->ZN_MES03)
				(cAliasTmp)->ZN_MES04 += ((cAliasDUM)->ZN_MES04 * (cAliasQTD)->ZN_MES04)
				(cAliasTmp)->ZN_MES05 += ((cAliasDUM)->ZN_MES05 * (cAliasQTD)->ZN_MES05)
				(cAliasTmp)->ZN_MES06 += ((cAliasDUM)->ZN_MES06 * (cAliasQTD)->ZN_MES06)
				(cAliasTmp)->ZN_MES07 += ((cAliasDUM)->ZN_MES07 * (cAliasQTD)->ZN_MES07)
				(cAliasTmp)->ZN_MES08 += ((cAliasDUM)->ZN_MES08 * (cAliasQTD)->ZN_MES08)
				(cAliasTmp)->ZN_MES09 += ((cAliasDUM)->ZN_MES09 * (cAliasQTD)->ZN_MES09)
				(cAliasTmp)->ZN_MES10 += ((cAliasDUM)->ZN_MES10 * (cAliasQTD)->ZN_MES10)
				(cAliasTmp)->ZN_MES11 += ((cAliasDUM)->ZN_MES11 * (cAliasQTD)->ZN_MES11)
				(cAliasTmp)->ZN_MES12 += ((cAliasDUM)->ZN_MES12 * (cAliasQTD)->ZN_MES12)
				MsUnLock()
				
			Else
				//Grava Registro da DUM
				RecLock(cAliasTmp,.T.)
				(cAliasTmp)->ZN_FILIAL  := SZM->ZM_FILIAL
				(cAliasTmp)->ZN_ANO     := SZM->ZM_ANO
				(cAliasTmp)->ZN_REVISAO := SZM->ZM_REVISAO
				(cAliasTmp)->ZN_CC      := (cAliasDUM)->ZN_CC
				(cAliasTmp)->ZN_ITEM    := (cAliasDUM)->ZN_ITEM
				(cAliasTmp)->ZN_CONTA   := (cAliasDUM)->ZN_CONTA
				(cAliasTmp)->ZN_CLASSE  := cClasse
				(cAliasTmp)->ZN_TIPO    := "D"
				(cAliasTmp)->ZN_MES01   := ((cAliasDUM)->ZN_MES01 * (cAliasQTD)->ZN_MES01)
				(cAliasTmp)->ZN_MES02   := ((cAliasDUM)->ZN_MES02 * (cAliasQTD)->ZN_MES02)
				(cAliasTmp)->ZN_MES03   := ((cAliasDUM)->ZN_MES03 * (cAliasQTD)->ZN_MES03)
				(cAliasTmp)->ZN_MES04   := ((cAliasDUM)->ZN_MES04 * (cAliasQTD)->ZN_MES04)
				(cAliasTmp)->ZN_MES05   := ((cAliasDUM)->ZN_MES05 * (cAliasQTD)->ZN_MES05)
				(cAliasTmp)->ZN_MES06   := ((cAliasDUM)->ZN_MES06 * (cAliasQTD)->ZN_MES06)
				(cAliasTmp)->ZN_MES07   := ((cAliasDUM)->ZN_MES07 * (cAliasQTD)->ZN_MES07)
				(cAliasTmp)->ZN_MES08   := ((cAliasDUM)->ZN_MES08 * (cAliasQTD)->ZN_MES08)
				(cAliasTmp)->ZN_MES09   := ((cAliasDUM)->ZN_MES09 * (cAliasQTD)->ZN_MES09)
				(cAliasTmp)->ZN_MES10   := ((cAliasDUM)->ZN_MES10 * (cAliasQTD)->ZN_MES10)
				(cAliasTmp)->ZN_MES11   := ((cAliasDUM)->ZN_MES11 * (cAliasQTD)->ZN_MES11)
				(cAliasTmp)->ZN_MES12   := ((cAliasDUM)->ZN_MES12 * (cAliasQTD)->ZN_MES12)
				MsUnlock()
			Endif
			
			//Grava Registro da QTDE - Meta Fisica
			RecLock(cAliasTmp,.T.)
			(cAliasTmp)->ZN_FILIAL  := SZM->ZM_FILIAL
			(cAliasTmp)->ZN_ANO     := SZM->ZM_ANO
			(cAliasTmp)->ZN_REVISAO := SZM->ZM_REVISAO
			(cAliasTmp)->ZN_CC      := (cAliasQTD)->ZN_CC
			(cAliasTmp)->ZN_ITEM    := (cAliasQTD)->ZN_ITEM
			(cAliasTmp)->ZN_CONTA   := (cAliasDUM)->ZN_CONTA
			(cAliasTmp)->ZN_CLASSE  := (cAliasQTD)->ZN_CLASSE
			(cAliasTmp)->ZN_TIPO    := "Q"
			(cAliasTmp)->ZN_MES01   := (cAliasQTD)->ZN_MES01
			(cAliasTmp)->ZN_MES02   := (cAliasQTD)->ZN_MES02
			(cAliasTmp)->ZN_MES03   := (cAliasQTD)->ZN_MES03
			(cAliasTmp)->ZN_MES04   := (cAliasQTD)->ZN_MES04
			(cAliasTmp)->ZN_MES05   := (cAliasQTD)->ZN_MES05
			(cAliasTmp)->ZN_MES06   := (cAliasQTD)->ZN_MES06
			(cAliasTmp)->ZN_MES07   := (cAliasQTD)->ZN_MES07
			(cAliasTmp)->ZN_MES08   := (cAliasQTD)->ZN_MES08
			(cAliasTmp)->ZN_MES09   := (cAliasQTD)->ZN_MES09
			(cAliasTmp)->ZN_MES10   := (cAliasQTD)->ZN_MES10
			(cAliasTmp)->ZN_MES11   := (cAliasQTD)->ZN_MES11
			(cAliasTmp)->ZN_MES12   := (cAliasQTD)->ZN_MES12
			MsUnlock()
		Endif
		
		dbSelectArea(cAliasDUM)
		dbSkip()
	EndDo
	
	//Faz a Gravacao na Planilha Orcamentaria
	If lGeraOrc
		DbSelectArea(cAliasTmp)
		dbGotop()
		
		While !Eof(cAliasTmp)
			
			cCtaOrc := (cAliasTmp)->ZN_CONTA
			oProcess:IncRegua2("CO: "+cCtaOrc)
			_cNextID := _fNextID((cAliasTmp)->ZN_CONTA)
			xGeraOrc(cAliasTmp,cCtaOrc,cAnoRev,_cNextID)
			
			dbSelectArea(cAliasTmp)
			dbSkip()
		EndDo
	Else
		//ListBox
		xShowSim(cAliasTmp,oProcess,cNomArqTmp)
	EndIf
	
Else
	MsgInfo("Não existem dados a serem exibidos/importados.")
Endif

// Deleta os arquivos temporarios e fecha os Alias
If Select(cAliasTMP) != 0
	dbSelectArea(cAliasTMP)
	dbCloseArea()
	FErase(cNomArqTMP+GetDBExtension())
	FErase(cNomArqTMP+OrdBagExt())
Endif

If Select(cAliasDUM) != 0
	dbSelectArea(cAliasDUM)
	dbCloseArea()
	FErase(cNomArqDUM+GetDBExtension())
	FErase(cNomArqDUM+OrdBagExt())
Endif

If Select(cAliasQTD) != 0
	dbSelectArea(cAliasQTD)
	dbCloseArea()
	FErase(cNomArqQTDE+GetDBExtension())
	FErase(cNomArqQTDE+OrdBagExt())
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³  xGeraOrcº Autor ³ Leonardo Soncin    º Data ³  27/11/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Deleta dados da Pl. Orcamentaria antes da importacao do csvº±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xGeraOrc(cAliasTmp,cCtaOrc,cAnoRev,_cNextID)
Local nX := 0
Local cItem	:=	""
Local cNivel:= "001"
Local aRecAK3:={}
Local cPtLanc := GetNewPar("SI_PCODUM", "" ) //Ponto de Lancamento para a DUM
Local aPeriodo 	:= PcoRetPer()
Local cPlanOri 	:= AK1->AK1_CODIGO
Local cRevOri 	:= IF(Empty(AK1->AK1_VERREV), AK1->AK1_VERSAO, AK1->AK1_VERREV)
Local cOper 	:= Posicione("SZM",1,xFilial("SZM")+cAnoRev,"ZM_OPER")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

PcoIniLan(cPtLanc)

For nX := 1 to Len(aPeriodo)
	
	IF (cAliasTmp)->&("ZN_MES"+Substr(aPeriodo[nx],4,2)) == 0
		Loop
	ENDIF
	
	/*
	dbSelectArea("AK2")
	dbSetOrder(1)
	dbSeek(xFilial("AK2")+cPlanOri+cRevOri+cCtaOrc+DTOS(CTOD(Substr(aPeriodo[nx],1,10)))+"ZZZZ",.T.)
	dbSkip(-1)
	
	If xFilial("AK2")+cPlanOri+cRevOri+cCtaOrc+DTOS(CTOD(Substr(aPeriodo[nx],1,10)))==;
	AK2_FILIAL+AK2_ORCAME+AK2_VERSAO+AK2_CO+DTOS(AK2_PERIOD)
	cItem := Soma1(AK2->AK2_ID)
	Else
	cItem := "0001"
	EndIf
	*/
	
	RecLock("AK2",.T.)
	AK2->AK2_FILIAL := xFilial("AK2")
	AK2->AK2_ORCAME := cPlanOri
	AK2->AK2_VERSAO := cRevOri
	AK2->AK2_MOEDA	:= 1
	AK2->AK2_PERIOD	:= CTOD(Substr(aPeriodo[nx],1,10))
	AK2->AK2_DATAI	:= CTOD(Substr(aPeriodo[nx],1,10))
	AK2->AK2_DATAF	:= CTOD(Substr(aPeriodo[nx],14,16))
	AK2->AK2_ID		:= _cNextID //cItem
	AK2->AK2_XDUM	:= cAnoRev
	AK2->AK2_OPER	:= cOper
	AK2->AK2_XSTS	:= "0" // status da UO
	AK2->AK2_CO 	:= (cAliasTmp)->ZN_CONTA
	AK2->AK2_CC 	:= (cAliasTmp)->ZN_CC
	AK2->AK2_ITCTB 	:= (cAliasTmp)->ZN_ITEM
	AK2->AK2_CLASSE := (cAliasTmp)->ZN_CLASSE
	AK2->AK2_VALOR	:= (cAliasTmp)->&("ZN_MES"+Substr(aPeriodo[nx],4,2))
	MsUnlock()
	
	dbSelectArea("AK3")
	dbSetOrder(1)
	
	If !dbSeek(xFilial('AK3')+AK2->AK2_ORCAME+AK2->AK2_VERSAO+AK2->AK2_CO)
		cNivel := "001"
		GravaAK3(AK2->AK2_ORCAME,AK2->AK2_VERSAO,AK2->AK2_CO,aRecAK3,@cNivel)
		
		For nt := Len(aRecAK3) to 1 Step -1
			cNivel := Soma1(cNivel)
			AK3->(dbGoto(aRecAK3[nt]))
			RecLock("AK3",.F.)
			AK3->AK3_NIVEL := cNivel
			MsUnlock()
		Next nt
	EndIf
	
	dbSelectArea("AK2")
	
	PcoDetLan(cPtLanc,"01","SIPCOA17")
	
Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

PcoFinLan(cPtLanc)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xIncConta   ºAutor ³ Leonardo Soncin   º Data ³ 21/11/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Inclui as contas orcamentarias ref a tab (AK3)   posicionadoº±±
±±º          ³utiliza recursividade ao chamar a funcao A200Nivel() para   º±±
±±º          ³chamar novamente xIncConta para as contas pai     	      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function GravaAK3(cOrcame,cVersao,cCO,aRecAK3,cNivel)

Local aArea := GetArea()
dbSelectArea("AK5")
dbSetOrder(1)
If MsSeek(xFilial()+cCO)
	PmsNewRec("AK3")
	AK3->AK3_FILIAL 	:= xFilial("AK3")
	AK3->AK3_ORCAME		:= cOrcame
	AK3->AK3_VERSAO		:= cVersao
	AK3->AK3_CO			:= cCO
	AK3->AK3_PAI		:= If(Empty(AK5->AK5_COSUP),cOrcame,AK5->AK5_COSUP)
	AK3->AK3_TIPO		:= AK5->AK5_TIPO
	AK3->AK3_DESCRI		:= AK5->AK5_DESCRI
	MsUnlock()
	aAdd(aRecAK3,AK3->(RecNo()))
	dbSelectArea("AK3")
	dbSetOrder(1)
	If !Empty(AK5->AK5_COSUP)
		If !dbSeek(xFilial('AK3')+cOrcame+cVersao+AK5->AK5_COSUP)
			GravaAK3(AK2->AK2_ORCAME,AK2->AK2_VERSAO,AK5->AK5_COSUP,aRecAK3,@cNivel)
		Else
			cNivel := AK3->AK3_NIVEL
		EndIf
	EndIf
EndIf
RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xShowSim	 ºAutor ³ Leonardo Soncin     º Data ³ 21/11/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Apresenta Listbox com dados da simulacao.                  º±±
±±º          ³                                                            º±±
±±º          ³                                                  	      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function xShowSim(cAliasTmp,oProcess,cNomArqTmp)
Local aList := {}
Local oDlg
Local oLbx
Local cTitulo  := "Simulação"
Local bOk 	   := {|| oDlg:End() }
Local bCancel  := {|| oDlg:End() }
Local aButtons := {}

DbSelectArea(cAliasTmp)
dbGotop()
dbSetOrder(1)

// Carrega o vetor conforme a condicao.
While !Eof(cAliasTmp)
	
	oProcess:IncRegua2()
	aAdd( aList, { ZN_CC,ZN_ITEM ,ZN_CONTA,ZN_CLASSE,Transform(ZN_MES01,PesqPict("SZN","ZN_MES01")),Transform(ZN_MES02,PesqPict("SZN","ZN_MES02")),Transform(ZN_MES03,PesqPict("SZN","ZN_MES03")),Transform(ZN_MES04,PesqPict("SZN","ZN_MES04")),Transform(ZN_MES05,PesqPict("SZN","ZN_MES05")),Transform(ZN_MES06,PesqPict("SZN","ZN_MES06")),Transform(ZN_MES07,PesqPict("SZN","ZN_MES07")),Transform(ZN_MES08,PesqPict("SZN","ZN_MES08")),Transform(ZN_MES09,PesqPict("SZN","ZN_MES09")),Transform(ZN_MES10,PesqPict("SZN","ZN_MES10")),Transform(ZN_MES11,PesqPict("SZN","ZN_MES11")),Transform(ZN_MES12,PesqPict("SZN","ZN_MES12")) } )
	
	dbSkip()
End

If !Len( aList ) == 0
	
	DEFINE MSDIALOG oDlg TITLE cTitulo FROM 0,0 TO 300,800 PIXEL
	
	@ 10,10 LISTBOX oLbx FIELDS HEADER ;
	"UO","CR","Conta","Classe","Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro" ;
	SIZE 382,120 OF oDlg PIXEL
	
	oLbx:SetArray( aList )
	oLbx:bLine := {|| {aList[oLbx:nAt,1],;
	aList[oLbx:nAt,2],;
	aList[oLbx:nAt,3],;
	aList[oLbx:nAt,4],;
	aList[oLbx:nAt,5],;
	aList[oLbx:nAt,6],;
	aList[oLbx:nAt,7],;
	aList[oLbx:nAt,8],;
	aList[oLbx:nAt,9],;
	aList[oLbx:nAt,10],;
	aList[oLbx:nAt,11],;
	aList[oLbx:nAt,12],;
	aList[oLbx:nAt,13],;
	aList[oLbx:nAt,14],;
	aList[oLbx:nAt,15],;
	aList[oLbx:nAt,16]}}
	
	oLbx:Align := CONTROL_ALIGN_ALLCLIENT
	
	aAdd(aButtons, 	{'AUTOM', 	{|| _fExpExcel(cAliasTmp) } ,"Exportar p/ Excel" ,"Excel"})
	
	ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,bOk,bCancel,,aButtons))
	
Else
	MsgInfo("Não existem dados a serem exibidos.")
Endif

Return

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³ ESTA1LOk ³ Autor ³ Leonardo Soncin       ³ Data ³ 11/12/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Confere se a linha digitada esta OK 						  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³                   										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ CNI    													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User FuncTion PCO17LOk(cGet)
Local lRet := .T.
Local nX, lDuplicado := .F.
Local nPosCc		:= Ascan(aHeader, {|e| Alltrim(e[2]) = "ZN_CC"} )
Local nPosItem		:= Ascan(aHeader, {|e| Alltrim(e[2]) = "ZN_ITEM"} )
Local nPosClasse	:= Ascan(aHeader, {|e| Alltrim(e[2]) = "ZN_CLASSE"} )
Local nPosConta		:= ""

If cGet == "1"
	nPosConta		:= Ascan(aHeader, {|e| Alltrim(e[2]) = "ZN_CONTA"} )
Endif

If nPosCc > 0
	
	// Pesquisa por item ja cadastrado
	For nX := 1 To Len(aCols)
		// Se encontrou um item igual ao ja cadastrado, avisa e nao permite continuar
		If cGet == '1'
			If !(GdDeleted( n, aHeader, aCols)) .AND. !(GdDeleted( nX, aHeader, aCols)).And.;
				aCols[nX][nPosCc]+aCols[nX][nPosItem]+aCols[nX][nPosConta]+aCols[nX][nPosClasse] == ;
				aCols[n][nPosCc]+aCols[n][nPosItem]+aCols[n][nPosConta]+aCols[n][nPosClasse] .And. nX != n
				lDuplicado := .T.
				Exit
			Endif
		Else
			If !(GdDeleted( n, aHeader, aCols)) .AND. !(GdDeleted( nX, aHeader, aCols)) .And.;
				aCols[nX][nPosCc]+aCols[nX][nPosItem]+aCols[nX][nPosClasse] == ;
				aCols[n][nPosCc]+aCols[n][nPosItem]+aCols[n][nPosClasse] .And. nX != n
				lDuplicado := .T.
				Exit
			Endif
		Endif
	Next
Endif

// Se encontrou um titulo igual ao ja cadastrado, avisa e nao permite continuar
If !(GdDeleted( n, aHeader, aCols)) .And. lDuplicado
	lRet := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao permite duplicar o numero !                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Help(" ",1, "SI0EEXIST","Item já existente.","Registro já existente, verifique por favor.",1,0 )
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xRelIn   º Autor ³ Leonardo Soncin    º Data ³  29/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Relatorio de Inconsistencias (Importacao e Transferencia)  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xRelInc(_cAlias,_cTitulo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Local cDesc1        := "Este programa tem como objetivo imprimir relatorio "
Local cDesc2        := "de acordo com os parametros informados pelo usuario."
Local cDesc3        := _cTitulo
Local cPict       	:= ""
Local titulo       	:= _cTitulo
Local nLin         	:= 80
Local Cabec1       	:= "Nome Arquivo            Linha     Campo     Conteudo                       Mensagem"
//1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789123456789123456789123456789
//0        1         2         3         4         5         6         7         8         9         1
Local Cabec2       	:= ""
Local imprime      	:= .T.
Local aOrd 			:= {}
Private lEnd      	:= .F.
Private lAbortPrint	:= .F.
Private CbTxt     	:= ""
Private limite   	:= 132
Private tamanho  	:= "M"
Private nomeprog 	:= "SIPCOA17"
Private nTipo     	:= 18
Private aReturn  	:= { "Zebrado", 1, "Administracao", 2, 2, 1, "", 1}
Private nLastKey	:= 0
Private cbtxt      	:= Space(10)
Private cbcont     	:= 00
Private CONTFL     	:= 01
Private m_pag      	:= 01
Private wnrel      	:= "SIPCOA17"
Private cString		:= _cAlias

dbSelectArea(cString)
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a interface padrao com o usuario...                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

wnrel := SetPrint(cString,NomeProg,"",@titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,.F.,Tamanho,,.F.)

If nLastKey == 27
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	Return
Endif

nTipo := If(aReturn[4]==1,15,18)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento. RPTSTATUS monta janela com a regua de processamento. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

RptStatus({|| RunReport(Cabec1,Cabec2,Titulo,nLin) },Titulo)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³RUNREPORT º Autor ³ AP6 IDE            º Data ³  29/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Funcao auxiliar chamada pela RPTSTATUS. A funcao RPTSTATUS º±±
±±º          ³ monta a janela com a regua de processamento.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Programa principal                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function RunReport(Cabec1,Cabec2,Titulo,nLin)

Local nOrdem

dbSelectArea(cString)
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SETREGUA -> Indica quantos registros serao processados para a regua ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SetRegua(RecCount())

dbGoTop()
While !EOF()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o cancelamento pelo usuario...                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If lAbortPrint
		@nLin,00 PSAY "*** CANCELADO PELO OPERADOR ***"
		Exit
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impressao do cabecalho do relatorio. . .                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If nLin > 55 // Salto de Página. Neste caso o formulario tem 55 linhas...
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
		nLin := 8
	Endif
	
	@nLin,000 PSAY (cString)->NOME
	@nLin,025 PSAY (cString)->LINHA
	@nLin,035 PSAY (cString)->CAMPO
	@nLin,045 PSAY (cString)->CONTEUDO
	@nLin,076 PSAY (cString)->MSG
	
	nLin := nLin + 1 // Avanca a linha de impressao
	
	IncRegua()
	dbSkip() // Avanca o ponteiro do registro no arquivo
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a execucao do relatorio...                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SET DEVICE TO SCREEN

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se impressao em disco, chama o gerenciador de impressao...          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If aReturn[5]==1
	dbCommitAll()
	SET PRINTER TO
	OurSpool(wnrel)
Endif

MS_FLUSH()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIPCOA17  ºAutor  ³Microsiga           º Data ³  18/01/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Exclusao de lancamentos orcamentarios                      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - Sistema Industria                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function _fDelLanc()
Local _cID := ""

PcoIniLan('000252')
While AK2->(!Eof()) .and. AK2->AK2_FILIAL == XFilial("AK2") .and. AK2->(AK2_ORCAME+AK2_VERSAO+AK2_XDUM) == AK1->(AK1_CODIGO+AK1_VERSAO)+MV_PAR01
	
	IF !Empty(_cID) .and. AK2->AK2_ID <> _cID
		PcoDetLan("000252","01","PCOA100", .T. )
	ENDIF
	
	RecLock("AK2",.F.)
	AK2->(dbDelete())
	AK2->(MsUnlock())
	
	_cID := AK2->AK2_ID
	
	AK2->(dbSkip())
Enddo
PcoFinLan('000252')

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIPCOA17  ºAutor  ³Microsiga           º Data ³  19/01/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Calcula ID                                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - Sistema Industria                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function _fNextID(_cConta)
Local _cRet     := StrZero(0,TamSX3("AK2_ID")[1])
Local _cAreaAK2 := AK2->(GetArea())

AK2->(dbSetOrder(5))
AK2->(dbSeek(xFilial("AK2") + AK1->(AK1_CODIGO+AK1_VERSAO) + _cConta ))

While AK2->(!Eof()) .and. AK2->(AK2_FILIAL+AK2_ORCAME+AK2_VERSAO+AK2_CO)  == xFilial("AK2") + AK1->(AK1_CODIGO+AK1_VERSAO) + _cConta
	_cRet := AK2->AK2_ID
	AK2->(dbSkip())
End

RestArea(_cAreaAK2)
Return(Soma1(_cRet))

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIPCOA17  ºAutor  ³Microsiga           º Data ³  23/01/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Exportar para Excel                                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - CNI                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function _fExpExcel(cAliasTmp)
Local aStruct  := SZN->(dbStruct())
Local cDirDocs := MsDocPath()
Local cArquivo := CriaTrab(,.F.)
Local cBuffer  := ""
Local cPath	   := AllTrim(GetTempPath())
Local _cArea   := GetArea()

If !ApOleClient("MsExcel")
	MsgStop("Microsoft Excel nao instalado.")  //"Microsoft Excel nao instalado."
	Return
EndIf

ADel(aStruct,aScan( aStruct, {|x| Alltrim(x[1]) == "ZN_FILIAL" } ))
ADel(aStruct,aScan( aStruct, {|x| Alltrim(x[1]) == "ZN_ANO" } ))
ADel(aStruct,aScan( aStruct, {|x| Alltrim(x[1]) == "ZN_REVISAO" } ))
ASize(aStruct,Len(aStruct)-3)

nHandle := FCreate(cDirDocs + "\" + cArquivo + ".CSV" )

If nHandle == -1
	MsgStop("Erro na criacao do arquivo na estacao local. Contate o administrador do sistema")
	Return
EndIf

For nx := 1 to Len(aStruct)
	If nx == Len(aStruct)
		cBuffer += ToXlsFormat(aStruct[nx,1])
	Else
		cBuffer += ToXlsFormat(aStruct[nx,1]) + ";"
	EndIf
Next

FWrite(nHandle, cBuffer)
FWrite(nHandle, CRLF)
cBuffer := ""

(cAliasTmp)->(dbGotop())
(cAliasTmp)->(dbSetOrder(1))

// Carrega CSV
While (cAliasTmp)->(!Eof())
	
	For nx := 1 to Len(aStruct)
		If nx == Len(aStruct)
			cBuffer += ToXlsFormat((cAliasTmp)->(&(aStruct[nx,1])))
		Else
			cBuffer += ToXlsFormat((cAliasTmp)->(&(aStruct[nx,1]))) + ";"
		EndIf
	Next
	
	FWrite(nHandle, cBuffer)
	FWrite(nHandle, CRLF)
	cBuffer := ""
	
	(cAliasTmp)->(dbSkip())
End

FClose(nHandle)

CpyS2T(cDirDocs + "\" + cArquivo + ".CSV", cPath, .T.)

oExcelApp := MsExcel():New()
oExcelApp:WorkBooks:Open(cPath + cArquivo)
oExcelApp:SetVisible(.T.)
oExcelApp:Destroy()

RestArea(_cArea)
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIPCO07Blq  ºAutor  ³Microsiga         º Data ³  15/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se existem entidades bloqueadas                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function SIPCO07Blq()
Local _cRet := ""
Local _cAreaSZN := SZN->(GetArea())
Local _cAreaAK5 := AK5->(GetArea())

SZN->(dbSetOrder(1))
SZN->(dbSeek(XFilial("SZN")+MV_PAR01+"D"))

While SZN->(!Eof()) .and. SZN->(ZN_FILIAL+ZN_ANO+ZN_REVISAO+ZN_TIPO) == XFilial("SZN")+MV_PAR01+"D"
	
	// Valida bloqueio da conta contábil
	AK5->(dbSetOrder(1))
	IF AK5->(dbSeek(XFilial("AK5")+SZN->ZN_CONTA)) .and. AK5->AK5_MSBLQL == "1"
		IF !(Alltrim(SZN->ZN_CONTA)$_cRet)
			_cRet += Chr(9)+"Conta Orçamentária "+SZN->ZN_CONTA+" bloqueada para uso"+CRLF
		ENDIF
	ENDIF
	
	// Valida bloqueio do item contábil
	IF !ValidaBloq(SZN->ZN_ITEM,Date(),"CTD",.f.)
		IF !(Alltrim(SZN->ZN_ITEM)$_cRet)
			_cRet += Chr(9)+"Item contábil "+SZN->ZN_ITEM+" bloqueado para uso"+CRLF
		ENDIF
	ENDIF
	
	// Valida bloqueio do centro de custo
	IF !ValidaBloq(SZN->ZN_CC,Date(),"CTT",.f.)
		IF !(Alltrim(SZN->ZN_CC)$_cRet)
			_cRet += Chr(9)+"Centro de Custo "+SZN->ZN_CC+" bloqueada para uso"+CRLF
		ENDIF
	ENDIF
	
	SZN->(dbSkip())
Enddo

IF !Empty(_cRet)
	Aviso("Inconsistências",_cRet,{"Voltar"},3)
ENDIF

RestArea(_cAreaSZN)
RestArea(_cAreaAK5)
Return(Empty(_cRet))
