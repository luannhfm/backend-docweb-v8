#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'RWMAKE.CH'
#INCLUDE 'TOTVS.CH'
#INCLUDE 'FONT.CH'
#INCLUDE 'COLORS.CH'
#INCLUDE "FWBROWSE.CH"

#DEFINE CODIGO 1
#DEFINE ID     2
#DEFINE NOME   3
#DEFINE NREDUZ 4
#DEFINE NIVEL  5
#DEFINE ATIVO  6
#DEFINE PJUROS 7
#DEFINE PMULTA 8
#DEFINE PCOMIS 9

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ SF06A43X ³ Autor ³ Leonardo P. de Castro ³ Data ³ 11/11/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Locacao   ³                  ³Contato ³                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³Rotina para realizacao de atendimentos.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Aplicacao ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Analista Resp.³  Data  ³                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³  /  /  ³                                               ³±±
±±³              ³  /  /  ³                                               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

User Function SF06A43X

	/*ÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±± Declaração de cVariable dos componentes                                 ±±
	Ù±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ*/
	Private _cTxt1     := "Bom dia, Operador"
	Private _cTxt2     := "Informações, Nível: Operador | Perc. Juros: 00,00% | Perc. Multa: 00,00%"
	Private _cTxt3     := "Data e Hora: 00/00/00 00:00:00"
	Private _cTxt4     := "Selecione uma fase de cobrança para exibição da agenda de cobranças"
	Private _cTxt5     := "Selecione um agendamento para realizar a cobrança"
	Private _cTxt6     := "Total de atendidos para a data: nnnnnnnnn"
	Private _cTxt7     := "Total de atendimentos para a data: nnnnnnnnn"
	Private _aCBox     := {}
	Private _aCBoxF    := {"Data+Hora+Fase Cobran.+Cliente+Loja Cliente","Cliente+Loja Cliente+Data+Hora","Ultimo atend","Valor Divida"}
	Private _aOper     := {}
	Private _aFase
	Private _oVerde	 := LoadBitmap( GetResources(), "BR_VERDE"   )
	Private _oVermelho := LoadBitmap( GetResources(), "BR_VERMELHO")
	Private _nReg1     := 0
	Private _nReg2     := 0

	//Variaveis do _oBrowse
	Private _aHeader := {" ", "Data Cob", "Hora Cob", "Codigo",;
		"Loja", "Nome Cliente", "CPF/CNPJ", "Ult. Cob.", "Vlr. Divida", "Loja Resp"}

	Private _aColSize := {1,40,30,30,20,120,60,60,70,10}
	Private _bCpo := {||{ 	Iif(ZAJ->ZAJ_ATEND='S',_oVermelho,_oVerde),;
		ZAJ->ZAJ_DATA   , ZAJ->ZAJ_HORA  , ZAJ->ZAJ_CLIENTE,;
		ZAJ->ZAJ_LOJA   , ZAJ->ZAJ_NOME  , ZAJ->ZAJ_CNP    ,;
		ZAJ->ZAJ_UTLATE, Transform(ZAJ->ZAJ_VLRDIV,"@E 999,999,999,999.99"),;
		ZAJ->ZAJ_FILDONO}}

	//Variaveis dos objetos
	SetPrvt("_oFA14N","_oFA12N","_oDlg","_oTxt1","_oBmp1","_oBmp4","_oTxt3","_oTxt4","_oBmp2","_oTxt5","_oBmp3","_oBtn6","_oBtn7","_oBtn8")
	SetPrvt("_oTxt6","_oTxt7","_oCBox","_oBrw","_oTimer1","_oTimer2","_oCBoxF")

	_aOper := U_TcInfo()

	If Empty(_aOper[CODIGO])
		Alert("Nenhum cadastro de operador foi encontrado para este usuário!")
		Return()
	EndIF

	If _aOper[ATIVO] = 'N'
		Alert("O operador cadastrado para este usuário não está Ativo!")
		Return()
	EndIF

	_aCBox := U_TcFases(_aOper[CODIGO])

	If Empty(_aCBox)'
		Alert("Não existem fases ativas para este operador!")
		Return()
	EndIF

	If !U_TcCondPgt()
		Alert("Não existem condições de pagamento cadastrdas para realizar cobranças.")
		Return()
	EndIF

	_cTxt1 := U_TcSaudacao() + ", " + Capital(AllTrim(_aOper[NREDUZ]))
	_cTxt2 := "Informações, Nível: " + Iif(_aOper[NIVEL]='S',"Superior","Operador") +;
		" | Perc. Juros: " + TransForm(_aOper[PJUROS],'@E 999.99') + "%" +;
		" | Perc. Multa: " + TransForm(_aOper[PMULTA],'@E 999.99') + "%"

	//Habilito os atalhos
	A004XKey(.T.)
	aSizewin      	:= FWGetDialogSize( oMainWnd )
	aSize := MsAdvSize()
	aObjects := {} 
	AAdd( aObjects, { 100, 100, .T., .T. } )
	aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
	aPosObj := MsObjSize( aInfo, aObjects )
	DbselectArea('ZAJ')
	ZAJ->(DbSetOrder(1))

	_oFA12N    := TFont():New( "Arial"      ,0,-19,,.T.,0,,700,.F.,.F.,,,,,, )
	_oFA10N    := TFont():New( "Arial"      ,0,-13,,.T.,0,,700,.F.,.F.,,,,,, )
	_oFA08N    := TFont():New( "Arial"      ,0,-11,,.T.,0,,400,.F.,.F.,,,,,, )
	_oFC08     := TFont():New( "Courier New",0,-11,,.F.,0,,400,.F.,.F.,,,,,, )
	_oDlg      := MSDialog():New( aSize[7], aSize[8], aSize[6], aSize[5],"TeleCobrança - Atendimentos de Cobrança",,,.F.,,,,,,.T.,,,.T. )
	_oTxt1     := TSay():New( 002,036,{||_cTxt1},_oDlg,,_oFA12N,.F.,.F.,.F.,.T.,CLR_RED  ,CLR_WHITE,156,011)
	_oTxt2     := TSay():New( 016,036,{||_cTxt2},_oDlg,,_oFA10N,.F.,.F.,.F.,.T.,CLR_RED  ,CLR_WHITE,427,009)
	_oTxt3     := TSay():New( 004,310,{||_cTxt3},_oDlg,,_oFA12N,.F.,.F.,.F.,.T.,CLR_BLACK,CLR_WHITE,168,011)
	_oTxt4     := TSay():New( 041,018,{||_cTxt4},_oDlg,,_oFA10N,.F.,.F.,.F.,.T.,CLR_BLUE ,CLR_WHITE,287,009)
	_oTxt5     := TSay():New( 077,018,{||_cTxt5},_oDlg,,_oFA10N,.F.,.F.,.F.,.T.,CLR_BLUE ,CLR_WHITE,287,009)
	_oTxt6     := TSay():New( 267,132,{||_cTxt6},_oDlg,,_oFA10N,.F.,.F.,.F.,.T.,CLR_RED  ,CLR_WHITE,181,009)
	_oTxt7     := TSay():New( 267,335,{||_cTxt7},_oDlg,,_oFA10N,.F.,.F.,.F.,.T.,CLR_GREEN,CLR_WHITE,181,009)
	_oBmp1     := TBitmap():New( 002,002,030,028,,"headset1" ,.T.,_oDlg,,,.T.,.F.,,"",.T.,,.T.,,.F.)
	_oBmp2     := TBitmap():New( 036,003,014,012,,"PIN"      ,.T.,_oDlg,,,.T.,.F.,,"",.T.,,.T.,,.F.)
	_oBmp3     := TBitmap():New( 072,003,014,012,,"PIN"      ,.T.,_oDlg,,,.T.,.F.,,"",.T.,,.T.,,.F.)
//	_oBmp4     := TBitmap():New( 000,aPosObj[1,4]-26,017,307,,"PROJETOAP",.T.,_oDlg,,,.T.,.T.,,"",.T.,,.T.,,.F.)
	
	//_oBmp4:lAutoSize:= .T.
	_oBtn1     := TBtnBmp2():New( 002,aSize[5]-40,035,25,"BPMSDOCI",,,,{||fSelec(.F.)	},_oDlg,"Selecionar Cobrança - <Ctrl+S>",,.F.,.F. )

	_oBtn2     := TBtnBmp2():New( 032,aSize[5]-40,035,25,"AUTOM"   ,,,,{||fSelec(.T.)	},_oDlg,"Proxima Cobrança - <Ctrl+P>",,.F.,.F. )
	_oBtn3     := TBtnBmp2():New( 062,aSize[5]-40,035,25,"TK_FONE" ,,,,{||fRecep()  	},_oDlg,"Atendimento Receptivo - <Ctrl+R>",,.F.,.F. )
	_oBtn6     := TBtnBmp2():New( 092,aSize[5]-40,035,25,"BTPESQ"  ,,,,{||fSelCli(2)	},_oDlg,"Pesquisa - <Ctrl+Q>",,.F.,.F. )
	_oBtn4     := TBtnBmp2():New( 122,aSize[5]-40,035,25,"COLOR"   ,,,,{||A004XLeg() 	},_oDlg,"Legenda - <Ctrl+L>",,.F.,.F. )
	_oBtn5     := TBtnBmp2():New( 152,aSize[5]-40,035,25,"FINAL"   ,,,,{||fFechar()  	},_oDlg,"Fechar - <Ctrl+F>",,.F.,.F. )
	_oBtn7     := TBtnBmp2():New( 182,aSize[5]-40,035,25,"CLIPS"   ,,,,{||RunReport("1")},_oDlg,"Termo de Divida",,.F.,.F. )
	_oBtn8     := TBtnBmp2():New( 212,aSize[5]-40,035,25,"TK_VERTIT",,,,{||U_His06A01() },_oDlg,"Historico Cobrança",,.F.,.F. )
	_oBtn8     := TBtnBmp2():New( 242,aSize[5]-40,035,25,"EMAIL"    ,,,,{||fEmail() 	},_oDlg,"Enviar Email Cobrança",,.F.,.F. )
//035,000,592,992
 //aSize[1], aSize[2], aSize[3], aSize[4]
	_oCBox     := TComboBox():New( 056,002,,_aCBox,200,010,_oDlg,,,{||MsgRun("Selecionando registro... Aguarde...","",{|| CursorWait(), fFiltra(), CursorArrow()})},CLR_BLACK,CLR_WHITE,.T.,_oFC08,"",,,,,,, )
	_oTxt8     := TSay():New( 080,286,{||"Ordem:"},_oDlg,,_oFA08N,.F.,.F.,.F.,.T.,CLR_BLUE,CLR_WHITE,181,009)
	_oCBoxF    := TComboBox():New( 078,311,,_aCBoxF,170,010,_oDlg,,,{||ZAJ->(DbSetOrder(_oCBoxF:nAt))/*fFiltra()*/},CLR_BLACK,CLR_WHITE,.T.,_oFC08,"",,,,,,, )
	_oBrowse   := TWBrowse():New( 089,002,aPosObj[1,4]-26,170,_bCpo,_aHeader,_aColSize,_oDlg,,,,,,,_oFC08,,,,,,"ZAJ",.T. )
	_oTimer1   := TTimer():New(1000, {|| fTimer1()},_oDlg)
	_oTimer2   := TTimer():New(60000,{|| fTimer2()},_oDlg)

	_oCBox:nAt := 1
	_oCBoxF:nAt := 1

	_oTimer1:Activate()
	_oTimer2:Activate()

	_oDlg:Activate(,,,.T.,,,{|| fFiltra() })

	ZAJ->(DbCloseArea())

Return()

/*/{Protheus.doc} RunReport
	@description
	@type Static Function
	@author Rafael Karczevski
	@since 03/03/2020
	@version 1.0
/*/
Static Function RunReport(p_cReport)

	Local aDadosX := {}

	BeginSql Alias 'Reports'
		SELECT DISTINCT
			E1_FILIAL,
			E1_NUM,
			E1_TIPO,
			E1_PREFIXO,
			E1_PARCELA,
			E1_VENCREA,
			E1_BAIXA,
			E1_VENCTO,
			E1_PORCJUR,
			SE1.R_E_C_N_O_,
			E1_DECRESC,
			E1_VALOR,
			E1_SDDECRE,
			E1_CLIENTE,
			E1_LOJA,
			ZAM_OPER,
			0 AS ZAL_VLRJUR, 
			ZAM_VALCOR - ZAM_VALOR AS ZAL_VLRMUL,
			ZAM_DSCJUR, 
			ZAM_DSCMLT
		FROM %Table:ZAK% ZAK
		INNER JOIN %Table:ZAL% ZAL 
			ON ZAL_FILIAL = ZAK_FILIAL 
			AND ZAL_CODATE = ZAK_COD
			AND ZAL.%NotDel%
		INNER JOIN %Table:ZAM% ZAM
			ON ZAL_FILIAL = ZAM_FILIAL 
			AND ZAL_COD = ZAM_CODNEG 
			AND ZAM.%NotDel%
		INNER JOIN %Table:SE1% SE1
			ON E1_FILIAL = ZAM_FILTIT
			AND E1_NUM = ZAM_NUM
			AND E1_PREFIXO = ZAM_PREFIX
			AND E1_PARCELA = ZAM_PARCEL
			AND E1_CLIENTE = ZAK_CLIENT
			AND E1_LOJA = ZAK_LOJA
			AND SE1.%NotDel%
		WHERE
			ZAK.R_E_C_N_O_ = (SELECT
									MAX(R_E_C_N_O_)
								FROM %Table:ZAK% XZAK
								WHERE
									XZAK.ZAK_FILIAL = ' '
									AND XZAK.ZAK_CLIENT = %Exp:ZAJ->ZAJ_CLIENT%
									AND XZAK.ZAK_LOJA = %Exp:ZAJ->ZAJ_LOJA%
									AND XZAK.ZAK_DATA = %Exp:dDataBase%
									AND XZAK.%NotDel%)
			ORDER BY ZAM_OPER DESC
	EndSql
	DbSelectArea('Reports')
	Reports->(DbGoTop())

	If Reports->(!eof())

		aDadosX := {}
		cKey := Reports->(E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)
		cKeyC	:= FWxFilial("SA1") + Reports->(E1_CLIENTE + E1_LOJA)

		While Reports->(!eof())
			If Reports->(ZAM_OPER) == "G"
				cKey := Reports->(E1_FILIAL+E1_PREFIXO+E1_NUM+E1_PARCELA+E1_TIPO)
				cKeyC	:= FWxFilial("SA1") + Reports->(E1_CLIENTE + E1_LOJA)
			Else
				aAdd(aDadosX, {;
							.T.,;						 	                                                           //[01] Selecao
							Reports->E1_NUM,;				                                                           //[02] Titulo
							Reports->E1_TIPO,;				                                                           //[03] Tipo
							Reports->E1_PREFIXO,;			                                                           //[04] Prefixo
							Reports->E1_PARCELA,;			                                                           //[05] Parcela
							STOD(Reports->E1_VENCREA),;		                                                           //[06] Vencimento
							Reports->E1_VALOR,;							                                                           //[07] Saldo
							Reports->ZAL_VLRJUR + Reports->ZAM_DSCJUR,;			                                       //[08] Juros
							Reports->ZAL_VLRMUL + Reports->ZAM_DSCMLT,;			                                       //[09] Multa
							Reports->ZAL_VLRJUR + Reports->ZAL_VLRMUL + Reports->ZAM_DSCJUR + Reports->ZAM_DSCMLT,;                                                //[10] Juros + Multa
							dDataBase - IIF(!EMPTY(Reports->E1_BAIXA),StoD(Reports->E1_BAIXA),StoD(Reports->E1_VENCTO)),; //[11] Dias Atraso
							000,;							                                                           //[12] % de Desconto
							Reports->ZAM_DSCJUR + Reports->ZAM_DSCMLT,;                                                //[13] Valor de Desconto
							0,;								                                                           //[14] A Receber
							0,;                                                                                        //[15]  
							0,;                                                                                        //[16]
							cKey,;							                                                           //[17] Chave de busca financeiro
							cKeyC,;							                                                           //[18] Chave de busca cliente
							Reports->E1_PORCJUR,;			                                                           //[19] Percentual de juros
							Reports->R_E_C_N_O_ ,;			                                                           //[20] R_E_C_N_O_
							.F.,;                                                                                      //[21] 
							Reports->E1_DECRESC,;       		                                                           //[22] Decrescimo
							Reports->E1_VALOR,;				                                                           //[23] Valor
							StoD(Reports->E1_BAIXA),;      	                                                           //[24] Data Baixa Parcial
							StoD(Reports->E1_VENCTO),;		                                                           //[25] Data Vencimeto 
							0,;																					       //[26] Valor de desconto
							Reports->E1_SDDECRE;																	   //[27] Saldo Decrescimo
						})
			EndIf

			Reports->(dbSkip())
		End
		
		If(p_cReport == "1")
			u_DTFINR03(cKey,aDadosX)
		Else
			u_DTFINR02(aDadosX)
		EndIf
	EndIf
	Reports->(DbCloseArea())

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±³Fun‡„o    ³ A004XLeg  ³ Autor ³Leonardo P de Castro  ³ Data ³ 12/11/09 ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Legendas da janela                                         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P10                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A004XLeg()

	BrwLegenda("TeleCobrança - Legendas","Legenda",	{	{"BR_VERDE"		,"Cobrança não realizada"},;
		{"BR_VERMELHO"	,"Cobrança realizada"    }})
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±³Fun‡„o    ³ A004XKey  ³ Autor ³Leonardo P de Castro  ³ Data ³ 12/11/09 ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Habilita atakhos do teclado                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P10                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A004XKey( _lHab )

	Default _lHab := .T.

	//Define atalhos do teclado
	If _lHab
		SetKey(19,{||fSelec(.F.)}) 	// CTRL+S
		SetKey(16,{||fSelec(.T.)}) 	// CTRL+P
		SetKey(18,{||Alert("CTRL+R")}) 	// CTRL+R
		SetKey(12,{||A004XLeg()}) 	// CTRL+L
		SetKey(06,{||fFechar()}) 	// CTRL+F
	Else
		SetKey(19,Nil) 	// CTRL+S
		SetKey(16,Nil) 	// CTRL+P
		SetKey(18,Nil) 	// CTRL+R
		SetKey(12,Nil) 	// CTRL+L
		SetKey(06,Nil) 	// CTRL+F
	EndIF

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fFechar() ºAutor  ³Leonardo P de Castroº Data ³  13/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para validacao da saida da janela de atendimentos    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fFechar()

	If MsgYesNo("Deseja realmente fechar a janela de cobranças ?")

		_oTimer1:Deactivate()
		_oTimer2:Deactivate()

		//Restauro os atalhos
		A004XKey(.F.)

		_oDlg:End()
	EndIF

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fTimer1() ºAutor  ³Leonardo P de Castroº Data ³  13/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para atualizar o browse da lista de cobranca.        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fTimer1()

	_cTxt3 := "Data e Hora: " + DtoC(Date()) + " " + Time()
	_oTxt3:Refresh()
	_oBrowse:Refresh()

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fTimer2() ºAutor  ³Leonardo P de Castroº Data ³  13/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para atualizar o total de atendimento do dia.        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fTimer2()

	Local _cRecNum := ZAJ->(RecNo())

	_nReg2 := 0

	ZAJ->(DbGoTop())
	ZAJ->(DbEval({|| Iif(ZAJ->ZAJ_ATEND='S',_nReg2++,)}))
	ZAJ->(dbGoto(_cRecNum))

	_cTxt6 := Subs(_cTxt6,1,32) + StrZero(_nReg2,9)
	_oTxt6:Refresh()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fFiltra() ºAutor  ³Leonardo P de Castroº Data ³  13/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para filtrar o browse da lista de cobranca.          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fFiltra()

	Local _aAreZAE  := ZAE->(GetArea())
	Local _cCodFase := Subs(_aCBox[_oCBox:nAt],1,3)
	Local _cFiltro  := " dToS(ZAJ_DATA) = '" + dToS(dDataBase) + "' .AND. ZAJ_CODFASE = '" + _cCodFase + "'"

	//Verifico se existe motivos de atendomento para estas fases.
	_aFase := U_TcMotivo( _cCodFase )

	DbSelectArea("ZAE")
	ZAE->(DbSetOrder(1))

	If !Empty(_aFase)
		If ZAE->(DbSeek(xFilial("ZAE") + _cCodFase))
			If ZAE->ZAE_PORLOJA = 'S'
				_cFiltro += " .AND. ZAJ_FILDONO = '" + cFilAnt + "'"
			EndIF
		EndIF
	Else  //Nao existem motivos para esta fase
		Alert("Não existem motivos associados a esta fase! Não será possível realizar cobranças.")
		_cFiltro += " .AND. ZAJ_FILDONO = 'XX'"
	EndIF

	_nReg1 := 0
	_nReg2 := 0

	DbselectArea('ZAJ')
	ZAJ->(DbSetOrder(_oCBoxF:nAt))
	Set Filter To &(_cFiltro)
	ZAJ->(DbEval({|| _nReg1++, If(ZAJ->ZAJ_ATEND='S',_nReg2++,)}))
	ZAJ->(DbGoTop())

	//If _nReg1 = 0
	//	Alert("Não existem atedimentos nesta data para esta fase!")
	//EndIF

	_cTxt6 := Subs(_cTxt6,1,32) + StrZero(_nReg2,9)
	_cTxt7 := Subs(_cTxt7,1,35) + StrZero(_nReg1,9)
	_oTxt6:Refresh()
	_oTxt7:Refresh()
	_oBrowse:Refresh()
	_oBrowse:DrawSelect()

	RestArea(_aAreZAE)

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fSelec()  ºAutor  ³Leonardo P de Castroº Data ³  13/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina validar a seleção do atendimento pelo usuario.       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fSelec( _lAuto )

	Local _aAreZAJ := ZAJ->(GetArea())
	Local _nRecZAJ := ZAJ->(RecNo())
	Local _nNewZAJ := ""
	Local _nRecZAN := ""
	Local _cTime   := Subs(Time(),1,5)
	Local _cAtend  := ZAJ->ZAJ_ATEND
	Local _lPrior  := .F.
	Local _lOk     := .T.
	Local _aZAJ := {}
	Local _cMotPag := AllTrim(GetMV("MV_MOTPAG",.F.))
	Local _cFasPag := AllTrim(GetMV("MV_FASEPAG",.F.))

	//Desativo os objetos timer...
	_oTimer1:Deactivate()
	_oTimer2:Deactivate()

	//Verifico se possui atendomento agendado.
	ZAJ->(DbSetOrder(1))
	ZAJ->(DbGoTop())
	While ZAJ->(!Eof())

		If ZAJ->ZAJ_HORA = "00:00"
			ZAJ->(DbSkip())
			Loop
		EndIF

		If (ZAJ->ZAJ_HORA <= _cTime .And. ZAJ->ZAJ_ATEND = 'N')
			If U_TcSemaf("SF06A48X", ZAJ->(RecNo()), @_nRecZAN, .F.)
				_nNewZAJ := ZAJ->(RecNo())
				Exit
			EndIF
		EndIF
		ZAJ->(DbSkip())
	EndDo

	If !Empty(_nNewZAJ)
		ZAJ->(dbGoto(_nNewZAJ))
		If _nRecZAJ != _nNewZAJ .And. !_lAuto
			Alert("Não será possível realizar a cobrança selecionada, existe uma cobrança com prioridade!")
		EndIF
	Else
		If _lAuto //O sistema escolherá um atendimento automatico.

			ZAJ->(DbGoTop())
			While ZAJ->(!Eof())

				If (ZAJ->ZAJ_HORA <= _cTime .And. ZAJ->ZAJ_ATEND = 'N')
					If U_TcSemaf("SF06A48X", ZAJ->(RecNo()), @_nRecZAN, .F.)
						_nNewZAJ := ZAJ->(RecNo())
						Exit
					EndIF
				EndIF
				ZAJ->(DbSkip())
			EndDo

			If !Empty(_nNewZAJ)
				ZAJ->(dbGoto(_nNewZAJ))
			Else
				Alert("Não há cobranças para serem realizadas!")

				//Ativo os objetos de timer...
				_oTimer1:Activate()
				_oTimer2:Activate()

				RestArea(_aAreZAJ)

				//Restauro os atalhos
				A004XKey(.T.)

				Return()
			EndIF
		Else
			ZAJ->(dbGoto(_nRecZAJ))
			If ZAJ->ZAJ_ATEND = 'N'
				If ZAJ->ZAJ_HORA <= _cTime
					If !U_TcSemaf("SF06A48X", ZAJ->(RecNo()), @_nRecZAN, .T.)
						Return()
					EndIF
				Else
					Alert("Esta cobrança está agendada para às " + ZAJ->ZAJ_HORA + " e não poderá ser realizada agora.")

					//Ativo os objetos de timer...
					_oTimer1:Activate()
					_oTimer2:Activate()

					RestArea(_aAreZAJ)

					//Restauro os atalhos
					A004XKey(.T.)

					Return()
				EndIF
			Else
				Alert("Esta cobrança já foi realizada! Escolha outra cobrança ou utilize função 'Proxima Cobrança'.")

				//Ativo os objetos de timer...
				_oTimer1:Activate()
				_oTimer2:Activate()

				RestArea(_aAreZAJ)

				//Restauro os atalhos
				A004XKey(.T.)

				Return()
			EndIF
		EndIF
	EndIF

	_lGeraBxa := .T.

	//Chamada da tela de atendimento
	_lOk := U_SF06A48X()

	If _lGeraBxa .and. _lOk
		_lOk := U_SF06A53X(ZAJ->ZAJ_CLIENT, ZAJ->ZAJ_LOJA)
		If _lOk
			If RecLock("ZAJ",.F.)
				Replace ZAJ->ZAJ_ATEND With "S"
				ZAJ->(MsUnLock())
			EndIF
		EndIF
	EndIF

	//Marco o flag de atendimento para legendas e contadores..
	If _lOk
		If RecLock("ZAJ",.F.)
			Replace ZAJ->ZAJ_ATEND With "S"
			ZAJ->(MsUnLock())
		EndIF
		//Cria caso o motivo for Alega Pagamento
		//Parametro onde define o motivo de atendimento "Alega Pagamento" MV_MOTPAG
		If ZAK->ZAK_CODMOT $ _cMotPag
			Aadd(_aZAJ,{ZAJ->ZAJ_FILIAL, ZAJ->ZAJ_DATA, ZAJ->ZAJ_HORA, _cFasPag, ZAJ->ZAJ_CLIENTE, ZAJ->ZAJ_LOJA, ZAJ->ZAJ_NOME, ZAJ->ZAJ_CNP, ZAJ->ZAJ_UTLATEN, ZAJ->ZAJ_VLRDIV, "N", ZAJ->ZAJ_FILDONO})
			If RecLock("ZAJ",.T.)
				Replace ZAJ->ZAJ_FILIAL  With _aZAJ[01,01]
				Replace ZAJ->ZAJ_DATA    With _aZAJ[01,02]
				Replace ZAJ->ZAJ_HORA    With "00:00"
				Replace ZAJ->ZAJ_CODFASE With _aZAJ[01,04]
				Replace ZAJ->ZAJ_CLIENTE With _aZAJ[01,05]
				Replace ZAJ->ZAJ_LOJA    With _aZAJ[01,06]
				Replace ZAJ->ZAJ_NOME    With _aZAJ[01,07]
				Replace ZAJ->ZAJ_CNP     With _aZAJ[01,08]
				Replace ZAJ->ZAJ_UTLATEN With _aZAJ[01,09]
				Replace ZAJ->ZAJ_VLRDIV  With _aZAJ[01,10]
				Replace ZAJ->ZAJ_ATEND   With "N"
				Replace ZAJ->ZAJ_FILDONO With _aZAJ[01,12]
				ZAJ->(MsUnLock())
			EndIF
		EndIf

	EndIf

	//Liberar o bloqueio do registro (semaforo)
	DbSelectArea("ZAN")
	If _nRecZAN > 0
		ZAN->(DbGoto(_nRecZAN))
	EndIF
	RecLock("ZAN",.F.)
	ZAN->(DbDelete())
	ZAN->(MsUnlock())

	RestArea(_aAreZAJ)

	//Ativo os objetos de timer...
	_oTimer1:Activate()
	_oTimer2:Activate()

	//Atualizo as informacoes...
	_oBrowse:Refresh()

	//Restauro os atalhos
	A004XKey(.T.)

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fRecep()  ºAutor  ³Leonardo P de Castroº Data ³  02/12/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina validar o atendimento no modelo receptivo.           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fRecep()

	Local _aAreZAJ := ZAJ->(GetArea())
	Local _nRecZAN := 0
	Local _lOk     := .T.

	//Desativo os objetos timer...
	_oTimer1:Deactivate()
	_oTimer2:Deactivate()

	//O usuario seleciona o Cliente
	_lOk := fSelCli(1)

	If _lOk

		If U_TcSemaf("SF06A48X", ZAJ->(RecNo()), @_nRecZAN, .T.)

			_lGeraBxa := .T.

			//Chamada da tela de atendimento
			_lOk := U_SF06A48X()

			If _lGeraBxa .and. _lOk
				U_SF06A53X(ZAJ->ZAJ_CLIENTE, ZAJ->ZAJ_LOJA)

				If RecLock("ZAJ",.F.)
					Replace ZAJ->ZAJ_ATEND With "S"
					ZAJ->(MsUnLock())
				EndIF
			EndIF

			//Liberar o bloqueio do registro (semaforo)
			DbSelectArea("ZAN")
			If _nRecZAN > 0
				ZAN->(DbGoto(_nRecZAN))
			EndIF
			RecLock("ZAN",.F.)
			ZAN->(DbDelete())
			ZAN->(MsUnlock())
		EndIF
	EndIF

	fFiltra()

	RestArea(_aAreZAJ)

	//Ativo os objetos de timer...
	_oTimer1:Activate()
	_oTimer2:Activate()

	//Restauro os atalhos
	A004XKey(.T.)

Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fSelCli() ºAutor  ³Leonardo P de Castroº Data ³  02/12/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rotina para selecionar e tratar a lista do atendimento.     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function fSelCli(_nOpc)

	Local   _lRet := .F.
	Local   _cTitulo := ""
	Private _oDlg5
	Private _oCli
	Private _oLoj
	Private _oNom
	Private _oCpf
	Private _cCli := Space(09)
	Private _cLoj := Space(04)
	Private _cNom := Space(60)
	Private _cCpf := Space(11)

	If _nOpc = 1
		_cTitulo := "Atendimento Receptivo"
	Else
		_cTitulo := "Pesquisa de clientes na fase de cobranáa"
	EndIf

	DEFINE MSDIALOG _oDlg5 TITLE _cTitulo FROM 00,00 TO 140,432 PIXEL

	@ 002,002 TO 054,215 LABEL "Selecione o cliente" PIXEL OF _oDlg5
	@ 013,010 Say "Cliente" 	Size 023,008 COLOR CLR_BLUE PIXEL OF _oDlg5
	@ 025,010 Say "Loja" 		Size 023,008 COLOR CLR_BLUE PIXEL OF _oDlg5
	@ 025,070 Say "CPF" 		Size 023,008 COLOR CLR_BLUE PIXEL OF _oDlg5
	@ 037,010 Say "Nome" 		Size 023,008 COLOR CLR_BLUE PIXEL OF _oDlg5
	@ 012,034 MsGet _oCli Var _cCli F3 "SA1" 	Size 032,009 COLOR CLR_BLACK Picture "@!" PIXEL OF _oDlg5 Valid fValdCli()
	@ 024,034 MsGet _oLoj Var _cLoj 			Size 016,009 COLOR CLR_BLACK Picture "@!" PIXEL OF _oDlg5 Valid fValdCli()
	@ 024,094 MsGet _oCpf Var _cCpf 			Size 055,009 COLOR CLR_BLACK Picture "@R 999.999.999-99" PIXEL OF _oDlg5
	_oCpf:Disable()
	@ 036,034 MsGet _oNom Var _cNom 			Size 170,009 COLOR CLR_BLACK Picture "@!" PIXEL OF _oDlg5
	_oNom:Disable()
	If _nOpc = 1
		DEFINE SBUTTON FROM 058,158 TYPE 1 ENABLE OF _oDlg5 ACTION fSelOk1(@_lRet)
		DEFINE SBUTTON FROM 058,187 TYPE 2 ENABLE OF _oDlg5 ACTION fSelCan1()
	Else
		DEFINE SBUTTON FROM 058,158 TYPE 1 ENABLE OF _oDlg5 ACTION fSelOk2()
		DEFINE SBUTTON FROM 058,187 TYPE 2 ENABLE OF _oDlg5 ACTION Close(_oDlg5)
	EndIF

	ACTIVATE MSDIALOG _oDlg5 CENTERED

Return(_lRet)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa validacao do botao ok.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Static Function fSelOk1(_lRet)

	_lRet := .F.

	If MsgYesNo("Confirma gravação?")

		If !Empty(_cCli) .And. !Empty(_cLoj)

			//regra receptivo
			If ExistCpo("SA1",_cCli+_cLoj,1)

				DbselectArea('ZAJ')
				ZAJ->(DbSetOrder(2))
				Set Filter To

				If ZAJ->(!DbSeek(xFilial("ZAJ") + _cCli + _cLoj + DtoS(dDataBase)))

					//Gravo o atendimento
					If RecLock("ZAJ",.T.)
						Replace ZAJ->ZAJ_FILIAL  With xFilial("ZAJ")
						Replace ZAJ->ZAJ_DATA    With dDataBase
						Replace ZAJ->ZAJ_HORA    With "00:00"
						Replace ZAJ->ZAJ_CODFASE With Subs(_aCBox[_oCBox:nAt],1,3)
						Replace ZAJ->ZAJ_CLIENTE With _cCli
						Replace ZAJ->ZAJ_LOJA    With _cLoj
						Replace ZAJ->ZAJ_NOME    With _cNom
						Replace ZAJ->ZAJ_CNP     With _cCpf
						Replace ZAJ->ZAJ_UTLATEN With ""
						Replace ZAJ->ZAJ_VLRDIV  With 0
						Replace ZAJ->ZAJ_ATEND   With "S"

						DbSelectArea("ZAE")
						ZAE->(DbSetOrder(1))

						If ZAE->(DbSeek(xFilial("ZAE") + Subs(_aCBox[_oCBox:nAt],1,3)))
							If ZAE->ZAE_PORLOJA = 'S'
								Replace ZAJ->ZAJ_FILDONO With cFilAnt
							Else
								Replace ZAJ->ZAJ_FILDONO With ""
							EndIF
						Else
							Replace ZAJ->ZAJ_FILDONO With ""
						EndIF

						ZAJ->(MsUnLock())
					EndIF
				EndIF
				_lRet := .T.
			EndIF
		Else
			Alert("Cliente ou Loja não foram informados.")
			Return(_oDlg5)
		EndIf

		Close(_oDlg5)
	Else
		Return(_oDlg5)
	EndIf

Return()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa validacao do botao ok.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Static Function fSelOk2()

	If !Empty(_cCli) .And. !Empty(_cLoj)

		//regra receptivo
		If ExistCpo("SA1",_cCli+_cLoj,1)

			DbselectArea('ZAJ')
			ZAJ->(DbSetOrder(2))

			If ZAJ->(!DbSeek(xFilial("ZAJ") + _cCli + _cLoj + DtoS(dDataBase)))
				Alert("O cliente nao foi localizado nesta fase de cobrança.")
				Return(_oDlg5)
			Else
				Close(_oDlg5)
			EndIF
		EndIF
	Else
		Alert("Cliente ou Loja não foram informados.")
		Return(_oDlg5)
	EndIf

Return()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa validacao do botao cancelar.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Static Function fSelCan1()

	If MsgYesNo("Confirma cancelamento?")
		Close(_oDlg5)
	Else
		Return(_oDlg5)
	EndIf

Return()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa validacao da localizacao do cliente.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Static Function fValdCli()

	Local _lRet := .T.

	If !Empty(_cCli) .And. !Empty(_cLoj)
		If !ExistCpo("SA1",_cCli+_cLoj,1)
			_cNom := Space(40)
			_cCpf := Space(11)
			_lRet := .F.
		Else
			_cNom := Posicione("SA1",1,xFilial("SA1")+_cCli+_cLoj,"A1_NOME")
			_cCpf := Posicione("SA1",1,xFilial("SA1")+_cCli+_cLoj,"A1_CGC")
		EndIF

		_oNom:Refresh()
		_oCpf:Refresh()
	EndIF

Return( _lRet )



/*/{Protheus.doc} His06A01
	@description Historico Antigo.
	@type Static Function
	@author Joao Tavares
	@since 11/12/2020
	@version 1.0
	@param param, param_type, param_descr
	@return return, return_type, return_description
	@see (links_or_references)
/*/
User Function His06A01()

	Local oDlg
	Local oLbx1
	Local cCond     := ""
	Local aArea := GetArea()
	Local cAlTMP := GetNextAlias()
	Local aBotoes := {}
	Private cTitulo   := "Historico de Cobranca"
	Private aVetSF1   := {}
	Private oMemo
	Private cTexto := ""


//+-------------------------------------+
//| Carrega o vetor conforme a condicao |
//+-------------------------------------+

	If Select(cAlTMP) > 0
		(cAlTMP)->(DbCloseArea())
	EndIf
//Select * from ZF1010  Where ZF1_CLIENT = '574809584' order by ZF1_DATA DESC, ZF1_HORA desc
	BeginSql Alias cAlTMP
		SELECT  ZF1_FILIAL,ZF1_DATA, ZF1_HORA, ZF1_PREF, ZF1_NUM, ZF1_PARC,ZF1_CODUSR,ZF1.R_E_C_N_O_, 'ZF1' as tabela
		
		FROM %Table:ZF1% ZF1
		WHERE
			ZF1_CLIENT = %Exp:ZAJ->ZAJ_CLIENT%
			AND ZF1_LOJA = %Exp:ZAJ->ZAJ_LOJA%
			AND %NotDel%

		Union All
		
		Select 'GESTÃO', ZAK_DATA, ZAK_HORA,' ' ,ZAK_COD,' ',ZAF_CODUSU ,ZAK.R_E_C_N_O_, 'ZAK'
		FROM %Table:ZAK% ZAK
			INNER JOIN  %Table:ZAF% ZAF 
			 ON ZAK.ZAK_FILIAL = ZAF.ZAF_FILIAL AND ZAK.ZAK_CODOPE = ZAF.ZAF_COD 
		WHERE
			ZAK_CLIENT = %Exp:ZAJ->ZAJ_CLIENT%
			AND ZAK_LOJA = %Exp:ZAJ->ZAJ_LOJA%
			AND ZAK.%NotDel%
			AND ZAF.%NotDel%

		order by  ZF1_DATA DESC, ZF1_HORA desc,ZF1_FILIAL
	EndSql

	While (cAlTMP)->(!Eof())
		aAdd(aVetSF1,{ZF1_FILIAL,StoD(ZF1_DATA), ZF1_HORA, ZF1_PREF, ZF1_NUM, ZF1_PARC,UsrRetName(ZF1_CODUSR),R_E_C_N_O_,Tabela})
		dbSkip()
	End
	(cAlTMP)->(DbCloseArea())
//+------------------------------------+
//| Se o estiver vazio, nao mostra-los |
//+------------------------------------+
	If Len(aVetSF1)==0
		Aviso(cTitulo,"Nao existe dados a consultar", {"Ok"} )
		Return .t.

	Endif


//+-----------------------------------------------+
//| Monta a tela para usuario visualizar consulta |
//+-----------------------------------------------+
	DEFINE MSDIALOG oDlg TITLE cTitulo FROM 0,0 TO 510,810 PIXEL

	@ 33,3 TO  400,400 LABEL "Historico de cobranca" OF oDlg PIXEL
	@ 40,7 LISTBOX oLbx1 FIELDS HEADER "Filial","Data", "Hora", "Prefixo", "Numero", "Parcela","Usuario";
		SIZE 390,100 OF oDlg PIXEL ON CHANGE MudaLin(oLbx1:nAt)

	oLbx1:SetArray(aVetSF1)
	oLbx1:bLine:={||{aVetSF1[oLbx1:nAt,1],aVetSF1[oLbx1:nAt,2],aVetSF1[oLbx1:nAt,3],aVetSF1[oLbx1:nAt,4],aVetSF1[oLbx1:nAt,5],aVetSF1[oLbx1:nAt,6],aVetSF1[oLbx1:nAt,7]}}


	@ 150, 005 GET oMemo VAR cTexto MEMO SIZE 200, 100 OF oDlg PIXEL
	//Crio o menu que irá aparece no botão Ações relacionadas
	aadd(aBotoes,{"PMSPRINT", {||ReportDef()},"Imprimir Historico","Imprimir"})


	ACTIVATE MSDIALOG oDlg CENTER ON INIT EnchoiceBar(oDlg, {|| oDlg:End() }, {|| oDlg:End() },,aBotoes,,,.F.,.F.,.F.,.F.,.F.)

	RestArea(aArea)

Return

///////////////////////////////////////////////////////////////////////////////////
//+-----------------------------------------------------------------------------+//
//| PROGRAMA  | ListBoxItems.prw     | AUTOR | Robson Luiz  | DATA | 18/01/2004 |//
//+-----------------------------------------------------------------------------+//
//| DESCRICAO | Funcao - MudaLin()                                              |//
//|           | Fonte utilizado no curso oficina de programacao.                |//
//|           | Funcao que atualiza o segundo listbox relacionado ao primeiro   |//
//+-----------------------------------------------------------------------------+//
///////////////////////////////////////////////////////////////////////////////////
Static Function MudaLin(nPos)


	IF aVetSF1[npos,9] = "ZF1"
		dbSelectArea("ZF1")
		dbgoto(aVetSF1[npos,8])
		//cTexto += +CRLF
		cTexto := ZF1->ZF1_HISTOR
	Else
		dbSelectArea("ZAK")
		dbgoto(aVetSF1[npos,8])
//cTexto += +CRLF 
		cTexto := ZAK->ZAK_OBSERV
	Endif
	oMemo:refresh()
Return


Static Function ReportDef()
	oReport := RptDef()
	oReport:PrintDialog()
Return

Static Function RptDef()
	Local oReport
	Local oSection1:= Nil
	Local oSection2:= Nil

   /*Sintaxe: TReport():New(cNome,cTitulo,cPerguntas,bBlocoCodigo,cDescricao)*/

	oReport := TReport():New("SF06A43X","Relatorio de ações de Cobranca",,{|oReport| PrintReport(oReport)},"Este relatorio ira imprimir a relacao das ações de cobrança.")
	oReport:SetPortrait()
	oReport:SetTotalInLine(.F.)

	oSection1:= TRSection():New(oReport, "Cliente", {"SA1"}, , .F., .T.)
	TRCell():New(oSection1,"A1_COD"     ,"","Codigo Cliente","@!",15)
	TRCell():New(oSection1,"A1_NOME"  ,"","DESCRICAO"    ,"@!",60)


	oSection2:= TRSection():New(oReport, "Anotações", , NIL, .F., .T.)
	TRCell():New(oSection2,"Filial"     ,"","Filial"  ,"@!",TamSX3("E1_FILIAL")[1] + 5)
	TRCell():New(oSection2,"Data"      	,"","Data"    ,"@!",10 + 5)
	TRCell():New(oSection2,"Hora"    	,"","Hora"    ,"@!",10 + 5)
	TRCell():New(oSection2,"Prefixo"    ,"","Prefixo" ,"@!",TamSX3("E1_PREFIXO")[1] + 5)
	TRCell():New(oSection2,"Numero"     ,"","Numero"  ,"@!",TamSX3("E1_NUM")[1] + 5)
	TRCell():New(oSection2,"Parcela"    ,"","Parcela" ,"@!",TamSX3("E1_PARCELA")[1] +5)
	TRCell():New(oSection2,"Usuario"    ,"","Usuario" ,"@!",40 + 5)
	TRCell():New(oSection2,"Anotação"   ,"","Anotação","@!",150 + 5 ,,,,.T.)
	//TRCEll():New( oParent   , cName     , cAlias    , cTitle     , cPicture , nSize     , lPixel   ,{|| bBlock }, cAlign , lLineBreak , cHeaderAlign , lCellBreak,nColSpace,lAutoSize,nClrBack,nClrFore,lBold)
Return oReport

Static Function PrintReport(oReport)

	Local oSection1 := oReport:Section(1)
	Local oSection2 := oReport:Section(2)
	Local nLinhas := 0
	Local nX

	oSection1:Init()
	oSection1:Cell("A1_COD"):SetValue(ZAJ->ZAJ_CLIENT+"-"+ZAJ->ZAJ_LOJA)
	oSection1:Cell("A1_NOME"):SetValue(ZAJ->ZAJ_NOME)
	oSection1:Printline()


	oReport:SetMeter(Len(aVetSF1))
	oSection2:Init()
	For nX :=1 to Len(aVetSF1)

		oSection2:Cell("Filial" ):SetValue(aVetSF1[nX,1])
		oSection2:Cell("Data"   ):SetValue(DtoC(aVetSF1[nX,2]))
		oSection2:Cell("Hora"   ):SetValue(aVetSF1[nX,3])
		oSection2:Cell("Prefixo"):SetValue(aVetSF1[nX,4])
		oSection2:Cell("Numero" ):SetValue(aVetSF1[nX,5])
		oSection2:Cell("Parcela"):SetValue(aVetSF1[nX,6])
		oSection2:Cell("Usuario"):SetValue(aVetSF1[nX,7])

		IF aVetSF1[nX,9] = "ZF1"
			dbSelectArea("ZF1")
			dbgoto(aVetSF1[nX,8])
			oSection2:Cell("Anotação"):SetValue(ZF1->ZF1_HISTOR)
		Else
			dbSelectArea("ZAK")
			dbgoto(aVetSF1[nX,8])
			oSection2:Cell("Anotação"):SetValue(ZAK->ZAK_OBSERV)
		Endif

		oSection2:Printline()
		oReport:SkipLine()
		oReport:IncMeter()
	Next
	oSection2:Finish()
	oReport:ThinLine()
	oSection1:Finish()
Return

// ===========================================================================================
//  fEmail - Envio de Email de Cobrança
//  Função de envio de email para cobrança
//  Autor: Daniel Castro - TOTVS
//  Data: 13/10/2021
// ===========================================================================================
Static Function fEmail ()

	Local oBrowse   := NIL
	Local cQuery 	:= ""
	Local aStruct    As Array //Fields Struct
	Local aColumns   As Array //Browse Columns
	Local aFilter    As Array //Filter Array
	Local nX         As Numeric //Loop Control

	aStruct := {}
	AAdd(aStruct, {"ZAE_COD" , "C", TamSX3("ZAE_COD")[01]  , TamSX3("ZAE_COD")[02]})
	AAdd(aStruct, {"ZAE_DESCRI", "C", TamSX3("ZAE_DESCRI")[01] , TamSX3("ZAE_DESCRI")[02]})
	//   AAdd(aStruct, {"ZAE_MSBLQL", "C", TamSX3("ZAE_MSBLQL")[01] , TamSX3("ZAE_MSBLQL")[02]})

	//Set Columns
	aColumns := {}
	aFilter  := {}
	For nX := 1 To Len(aStruct)
		//Columns
		AAdd(aColumns,FWBrwColumn():New())
		aColumns[Len(aColumns)]:SetData( &("{||"+aStruct[nX][1]+"}") )
		aColumns[Len(aColumns)]:SetTitle(RetTitle(aStruct[nX][1]))
		aColumns[Len(aColumns)]:SetSize(aStruct[nX][3])
		aColumns[Len(aColumns)]:SetDecimal(aStruct[nX][4])
		aColumns[Len(aColumns)]:SetPicture(PesqPict("ZAE",aStruct[nX][1]))
	Next nX

	oTempTable := FWTemporaryTable():New()
	oTempTable:SetFields(aStruct)
	oTempTable:AddIndex("INDEX1", {"ZAE_COD"} )
	oTempTable:Create()
	cAliasTmp := oTemptable:GetAlias()

	cAliasQry := GetNextAlias()

	cQuery := "SELECT ZAE_COD, ZAE_DESCRI, ZAE_MSBLQL "
	cQuery += "FROM " + RetSqlTab("ZAE")
	cQuery += "WHERE ZAE_FILIAL = '" + FWxFILIAL("ZAE") + "' "
//	cQuery += " AND ZAE_COD = '" + ZAJ->ZAJ_CODFAS + "' "
	cQuery += " AND ZAE.D_E_L_E_T_ = ' ' "
	cQuery += "ORDER BY ZAE_COD"

	cQuery := ChangeQuery(cQuery)

	PlsQuery(cQuery, cAliasQry)

	DBSelectArea(cAliasTMP)
	(cAliasQry)->(DbGoTop())
	While !(cAliasQry)->(Eof())
		//Add Temporary Table
		If (RecLock(cAliasTMP, .T.))
			(cAliasTMP)->ZAE_COD  := (cAliasQry)->ZAE_COD
			(cAliasTMP)->ZAE_DESCRI := (cAliasQry)->ZAE_DESCRI
			//   (cAliasTMP)->ZAE_MSBLQL := (cAliasQry)->ZAE_MSBLQL
			(cAliasTMP)->(MsUnlock())
		EndIf
		(cAliasQry)->(DBSkip())
	EndDo

	(cAliasTMP)->(DbGoTop())

	DEFINE MSDIALOG oDlg TITLE "Cadastro de Fase" FROM 0,0 TO 450, 800 PIXEL

	// Cria o conteiner onde serão colocados os paineis
	oTela     := FWFormContainer():New( oDlg )
	cIdTela	  := oTela:CreateHorizontalBox( 88 )
	cIdRodap  := oTela:CreateHorizontalBox( 08 )

	oTela:Activate( oDlg, .F. )

	//Cria os paineis onde serao colocados os browses
	oPanel  	:= oTela:GeTPanel( cIdTela )
	oPanelRod  	:= oTela:GeTPanel( cIdRodap )

	@ 002,250 BUTTON "Selecionar" SIZE 050, 015 PIXEL OF oPanelRod ACTION (EnvMail(oDlg))

	oBrowse := FWBrowse():New()
	oBrowse:SetDataTable( .T. )
	oBrowse:SetAlias( cAliasTMP )
	oBrowse:SetOwner( oPanel )
	oBrowse:SetDescription( "Cadastro de Fases" )
	oBrowse:SetColumns(aColumns)
	oBrowse:Activate()

	ACTIVATE MSDIALOG oDlg

	//Delete Temporary Table
	oTempTable:Delete()
	(cAliasQry)->(DbCloseArea())

Return

//=====================================================================
Static Function EnvMail(oDlg)

	Local oServer
	Local oMessage
	Local cCodCli 	:= ZAJ->ZAJ_CLIENT
	Local cLojCli 	:= ZAJ->ZAJ_LOJA
	Local cMsg 		:= ""
	Local nErro 	:= 0
	Local cServer 	:= GetMv("MV_RELSERV")
	Local cConta	:= GetMv("MV_RELACNT")
	Local cSenha	:= GetMv("MV_RELPSW")
	Local lEnv		:= .F.


	//encontra dados do cliente
	dbSelectArea("SA1")
	SA1->(dbSetOrder(1))
	SA1->(dbSeek(xFilial("SA1") + cCodCli + cLojCli))

	If Empty(SA1->A1_EMAIL)
		Help(,,"Processo abortado",, "Cliente sem email cadastrado", 1, 0,,,,,, {"Verifique o cadastro do cliente" + CRLF + "Email NÃO enviado"})
		oDlg:End()
		Return
	EndIf

// Encontra informações do texto encio de email
	dbSelectArea("ZAE")
	ZAE->(dbSetOrder(1))
	If ZAE->(dbSeek(xFilial("ZAE") + (cAliasTMP)->ZAE_COD  ))
		If ZAE->ZAE_EMENV <> "1"
			Alert("Fase não habilitada para envio de email","ATENÇÃO")
			oDlg:End()
			Return
		else
			//Texto padrão do Email
			cMsg := '<!DOCTYPE html>'
			cMsg += '<html>'
			cMsg += '<head>'
			cMsg += '<meta charset="UTF-8"/>'
			cMsg += '<title>COBRANÇA FIEMT</title>'
			cMsg += '</head>'
			cMsg += '<body>'
			cMsg += '<p>Prezado(a) Senhor(a)' + Alltrim(SA1->A1_NOME)  + ',</p>'
			cMsg += '<p>' + Alltrim(ZAE->ZAE_EMTXT) +'</p>'
			cMsg += '</body>'
			cMsg += '</html>'
		EndIf
	Else
		Alert("Não foi encontrado a Fase Selecionada","ATENÇÃO")
		oDlg:End()
		Return
	EndIf


	// //Texto padrão do Email
	// cMsg := '<!DOCTYPE html>'
	// cMsg += '<html>'
	// cMsg += '<head>'
	// cMsg += '<meta charset="UTF-8"/>'
	// cMsg += '<title>COBRANÇA FIEMT</title>'
	// cMsg += '</head>'
	// cMsg += '<body>'
	// cMsg += '<p>Prezado(a) Senhor(a)' + Alltrim(SA1->A1_NOME)  + ',</p>'
	// cMsg += '<p>Em nosso sistema consta título(s) vencido(s) em seu nome. </p>'
	// cMsg += '<p>Entre em contato para maiores informações e regularização. </p>'
	// cMsg += '<p>E-mail: cobranca@sfiemt.ind.br</p>'
	// cMsg += '<p>WhatsApp: (65) 3611-1641 ou 3611-1642. </p>'
	// cMsg += '<p>Caso o pagamento já tenha sido efetuado, por favor, desconsidere este aviso.</p>'
	// cMsg += '</body>'
	// cMsg += '</html>'

	//Cria a conexão com o server STMP ( Envio de e-mail )
	oServer := TMailManager():New()
	oServer:Init( "", cServer, cConta, cSenha, 0, 587 )
	oServer:SetUseSSL( .T. )
	oServer:SetUseTLS( .T. )

	//seta um tempo de time out com servidor de 2min
	nErro:= oServer:SetSmtpTimeOut( 120 )
	If nErro <> 0
		Help(,,"Falha ao setar o time out",, oServer:GetErrorString( nErro ), 1, 0,,,,,, {"Verifique"})
		oServer:SMTPDisconnect()
		oDlg:End()
		Return
	EndIf

	//realiza a conexão SMTP
	nErro:= oServer:SmtpConnect()
	If nErro <> 0
		Help(,,"Falha ao conectar",, oServer:GetErrorString( nErro ), 1, 0,,,,,, {"Verifique"})
		oServer:SMTPDisconnect()
		oDlg:End()
		Return
	EndIf

	// authenticate on the SMTP server (if needed)
	nErro := oServer:SmtpAuth( cConta, cSenha )
	if nErro <> 0
		Help(,,"Usuário não autenticado",, oServer:GetErrorString( nErro ), 1, 0,,,,,, {"Verifique"})
		oServer:SMTPDisconnect()
		oDlg:End()
		Return
	endif

	//Apos a conexão, cria o objeto da mensagem
	oMessage := TMailMessage():New()

	//Limpa o objeto
	oMessage:Clear()

	//Popula com os dados de envio
	oMessage:cFrom              := "erp@fiemt.com.br"
	oMessage:cTo                := "renata.lima@sfiemt.ind.br" //Alltrim(SA1->A1_EMAIL)
	oMessage:cCc                := "cobranca@sfiemt.ind.br"
	oMessage:cBcc               := ""
	oMessage:cSubject           := "EMAIL DE COBRANÇA"
	oMessage:cBody              := cMsg

	//Envia o e-mail
	nErro:= oMessage:Send( oServer )
	If nErro <> 0
		Help(,,"Erro ao enviar o e-mail",, oServer:GetErrorString( nErro ), 1, 0,,,,,, {"Verifique"})
		oDlg:End()
	else
		MsgInfo( "E-mail enviado com sucesso!","OK" )
		oDlg:End()
		lEnv := .T.
	EndIf

	//Desconecta do servidor
	nErro:= oServer:SmtpDisconnect()
	If nErro <> 0
		Help(,,"Erro ao disconectar do servidor SMTP",, oServer:GetErrorString( nErro ), 1, 0,,,,,, {"Verifique"})
		oDlg:End()
	EndIf

	If lEnv //Grava Atendimento via email
		Begin Transaction
			If RecLock("ZAK",.T.)
				ZAK->ZAK_FILIAL := xFilial("ZAK")
				ZAK->ZAK_COD	:= GetSxeNum("ZAK","ZAK_COD")
				ZAK->ZAK_DATA	:= dDataBase
				ZAK->ZAK_HORA	:= TIME()
				ZAK->ZAK_CLIENT	:= cCodCli
				ZAK->ZAK_LOJA	:= cLojCli
				ZAK->ZAK_OBSERV	:= "Email enviado para " + Alltrim(SA1->A1_EMAIL)
				ZAK->ZAK_DTPATE	:= dDataBase
				ZAK->ZAK_HRPATE	:= TIME()
				ZAK->ZAK_CODMOT	:= "000016"
				ZAK->ZAK_CODOPE	:= Posicione("ZAF",4,xFilial("ZAF") +RetCodUsr(),"ZAF_COD")
				ConfirmSx8()
				ZAK->(MsUnlock())
			Else
				RollbackSx8()
			EndIf
		End Transaction
	EndIf

Return
