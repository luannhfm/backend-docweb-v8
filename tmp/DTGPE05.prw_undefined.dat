#INCLUDE "RWMAKE.CH"
#INCLUDE "protheus.CH"
#INCLUDE "TopConn.ch"
#INCLUDE "TBICONN.CH"
#INCLUDE "FILEIO.CH"
#INCLUDE "APWIZARD.CH"

//-- Diretivas indicando as colunas para Matriz de Verbas
#define MN_QTDCOL	 11

#define MN_MARCA    1
#define MN_MES      2
#define MN_ANO      3
#define MN_CC       4
#define MN_DESCCC   5
#define MN_ITEM     6
#define MN_DESCITE  7
#define MN_HRMES    8
#define MN_HORAS    9
#define MN_PERCEN  10
#define MN_RECNO   11
                                                   	
/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Exportação de Rateio
<Autor> : Fábrica DOIT SP
<Data> : 18/05/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Folha de Pagamento
<Tipo> : 
<Obs> : 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

User Function DTGPE05()

Local cTitle       := "Wizard - Exportação de Verbas Rateadas por Centro de Custo/Item Contábil"

Local nL           := 0
Local aTitDad      := {}

Private lMsgFim    := .T.

Private oMesBase   := Nil
Private oAnoBase   := Nil
Private oTermExp   := Nil

Private oWizard    := Nil

Private aMesBase   := {}
Private aAnoBase   := {}
Private cMesBase   := ""
Private cPeriodo	:= GETMV("MV_FOLMES")
Private cAnoBase  	:= ALLTRIM(IIF(SUBSTR(cPeriodo,5,2)<>'01',SUBSTR(cPeriodo,1,4),STR(VAL(SUBSTR(cPeriodo,1,4))-1))) //StrZero(  Year( dDataBase ), 4 )
Private nRadioExp  := 0

Private nTermExp   := 0 
Private cTabEmp    := SubStr( SuperGetMV("DT_TBEMP" ), 1, TamSX3("RCB_CODIGO")[1] )   
Private aEmpComp   := {}
Private aTamanhos  := {}  
Private nY			:= 0
Private nI			:= 0
Private nX			:= 0


cTabEmp  := Iif( Empty( AllTrim( cTabEmp  ) ), Space( TamSX3("RCB_CODIGO")[1] ), cTabEmp  )            
//Retorna as Empresas
DTGPE05Get()

//Jose Leite - 05-12-14
//INICIO
If Substr(cPeriodo,5,2) == '01'
	cPeriodo		:= STRZERO(VAL(Substr(cPeriodo,1,4))-1,4)+"12"
	//cAnoBase	:= cValToChar(YEAR(dDatabase))
Else
	cPeriodo		:= SUBSTR(cPeriodo,1,4)+STRZERO(VAL(Substr(cPeriodo,5,2))-1,2)
	//cAnoBase	:= SUBSTR(cPeriodo,1,4)
EndIf
//FIM

For nL := 2000 To Year( dDataBase )

   Aadd( aAnoBase, Str( nL, 4 ) )

Next

Aadd( aMesBase, "Janeiro"   )
Aadd( aMesBase, "Fevereiro" )
Aadd( aMesBase, "Março"     )
Aadd( aMesBase, "Abril"     )
Aadd( aMesBase, "Maio"      )
Aadd( aMesBase, "Junho"     )
Aadd( aMesBase, "Julho"     )
Aadd( aMesBase, "Agosto"    )
Aadd( aMesBase, "Setembro"  )
Aadd( aMesBase, "Outubro"   )
Aadd( aMesBase, "Novembro"  )
Aadd( aMesBase, "Dezembro"  )

cMesBase := aMesBase[ VAL(SUBSTR(cPERIODO,5,2)) ] //aMesBase[ Month( dDataBase ) ]

//---------------------------------
// Painel 1
//--------------------------------------------------

DEFINE WIZARD oWizard TITLE cTitle HEADER cTitle MESSAGE "Exportação de Rateio de Verbas" PANEL NEXT {|| nRadioExp > 0 } FINISH {|| .T. }

ogr01 := TGroup():New( 003, 005, 058, 295, "Competência"     , oWizard:oMPanel[1],,,.T.,.T.,, .T.)
ogr02 := TGroup():New( 060, 005, 135, 295, "Rateio de Verbas", oWizard:oMPanel[1],,,.T.,.T.,, .T.)

@ 010,010 Say "Mês:"                                                                               Of oWizard:oMPanel[1] Pixel
@ 018,010 ComboBox oMesBase   Var cMesBase   When .f.  Items aMesBase                 Size 100, 36 Of oWizard:oMPanel[1] Pixel

@ 033,010 Say "Ano:"                                                                               Of oWizard:oMPanel[1] Pixel
@ 041,010 ComboBox oAnoBase   Var cAnoBase   When .f.  Items aAnoBase                 Size 070, 36 Of oWizard:oMPanel[1] Pixel

@ 68, 10 RADIO oRadio         Var nRadioExp  Items "Folha de Pagamento"       ,;
                                                   "Férias"                   ,;
                                                   "Rescisão"                 ,;
                                                   "1ª Parcela de 13º Salário",;
                                                   "2ª Parcela de 13º Salário",;
                                                   "Provisão de Férias"       ,;
                                                   "Provisão de 13º Salário"          Size 140, 08 Of oWizard:oMPanel[1] Pixel

//---------------------------------
// Painel 2
//--------------------------------------------------

CREATE PANEL oWizard HEADER cTitle MESSAGE "Processamento: Exportando Rateio de Verbas.";
PANEL BACK {|| .T. } NEXT {|| .F. } FINISH {|| .T.} EXEC {|| .T. }

@ 060,090 Say "Gerando arquivo de Exportação de Rateio de Verbas..."  Of oWizard:oMPanel[2] Pixel

oTermExp := tMeter():New( 068, 010, { |u| Iif(Pcount()>0, nTermExp:=u,nTermExp )}, 100, oWizard:oMPanel[2], 285, 30,,.T.)

//---------------------------------
//
//--------------------------------------------------

oWizard:oFinish:bAction	:= {|| GPE05Exp(), ::End() }

oWizard:oFinish:cCaption := "&Processar"
oWizard:oFinish:cTitle   := "&Processar"


ACTIVATE WIZARD oWizard CENTERED

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ GPE05Exp    ºAutor  ³DOIT        º Data ³  09/04/2014      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³  Função para exportar dados da Folha para Rateio por       º±±
±±º             programa externo                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function GPE05Exp()

Local cArq      := CriaTrab(,.F.) + ".TXT"
Local cNewArq   := ""
Local cPath     := GetNewPar("DT_PATHEXP","C:\")
Local cQuery    := ""
Local cTipFol   := ""
Local cCRLF     := chr(13) + chr(10)
Local cAlias    := GetNextAlias() 
Local nCta      := 0
Local nTotalReg := 0

Local nLimEnt   := 03//Tamanho do Campo ENTIDADE no arq. texto
Local nLimCC    := 10//Tamanho do Campo CENTRO CUSTO no arq. texto
Local nLimIC    := 16//Tamanho do Campo ITEM CONTABIL no arq. texto
Local nLimCta   := 16//Tamanho do Campo CONTA CONTABIL no arq. texto
Local nLimTp    := 01//Tamanho do Campo TIPO no arq. texto
Local nLimVlr   := 17//Tamanho do Campo VALOR no arq. texto
Local nLimDt    := 10//Tamanho do Campo DATA no arq. texto
Local nLimHis   := 03//Tamanho do Campo HISTORICO no arq. texto
Local nLimOri   := 03//Tamanho do Campo XXXX no arq. texto
Local nLimX2    := 16//Tamanho do Campo XXXX no arq. texto
Local nLimDte   := 40//Tamanho do Campo XXXX no arq. texto
Local cGeraEmp  := ''
Local aTpRat	  := {'G','P','C'}
Local nY        := 0
Local nX        := 0

Private nHdl
                     
For nX := 1 to Len(aEmpComp) 

	cGeraEmp := aEmpComp[nX][1]
	nCta	 := 0

	If nRadioExp == 1
		cNewArq := "FOL_"    + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "1"
	ElseIf nRadioExp == 2
		cNewArq := "FER_"    + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "6"
	ElseIf nRadioExp == 3
		cNewArq := "RES_"    + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "7"
	ElseIf nRadioExp == 4
		cNewArq := "PAR1_"   + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "4"
	ElseIf nRadioExp == 5
		cNewArq := "PAR2_"   + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "5"
	ElseIf nRadioExp == 6
		cNewArq := "PROVF_"  + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "3"
	ElseIf nRadioExp == 7
		cNewArq := "PROV13_" + DtoS(Date()) + "_" + AllTrim(aEmpComp[nX][1])+"-"+AllTrim(aEmpComp[nX][2]) + ".TXT"
		cTipFol := "2"
	EndIf
	
	If SubStr( cPath, Len( cPath ), 1 ) # "\"
	
		cPath += "\"
		PutMV("MV_PATHSRZ", cPath )
	EndIf
	
	nHdl := fCreate( cPath + cArq )
	
	If fError() # 0
	   Alert ("ERRO AO CRIAR O ARQUIVO, ERRO: " + Str( fError() ) )
	   Return
	EndIf
	
	DbSelectArea( "ZD7" )
	DbSetOrder(1)
	
	
	//---------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	/*cQuery :=        "Select ZD7.ZD7_FILIAL, ZD7.ZD7_MAT, ZD7.ZD7_CC, ZD7.ZD7_ITEM, ZD7.ZD7_TIPFOL, ZD7.ZD7_VALRAT, RV_TIPOCOD, RV_XCTADEB, RV_XCTACRD,ZD7_TPRAT"
	
	cQuery += CRLF + "  From " + RetSqlName("ZD7") + " ZD7 "
	
	cQuery += CRLF + "  Inner Join " + RetSqlName("SRV") + " SRV On SRV.D_E_L_E_T_ = ' ' And SRV.RV_FILIAL = '" + xFilial( "SRV" ) + "' And SRV.RV_COD = ZD7.ZD7_VERBA"
	
	cQuery += CRLF + " Where ZD7.D_E_L_E_T_ = ' '"
	cQuery += CRLF + "   And ZD7.ZD7_MESANO = '" + cAnoBase + StrZero( oMesBase:nAt, 2 ) + "'"
	cQuery += CRLF + "   And ZD7.ZD7_TIPFOL = '" + cTipFol  + "'"
	
	cQuery += CRLF + " Order By ZD7.ZD7_MAT "*/
	//--------------------QUERY ANTIGO-------------------------------------------------------------------------------------------------------------------------------------
	
	nCont := 1
	
	For nY := 1 to 8
	                            
		If nY <= 2
			//cQuery :=   "SELECT ZD7.ZD7_ORIGEM,zd7.zd7_filial,zd7.zd7_ctadeb DEB,zd7.zd7_ctacre CRE,zd7.zd7_tipfol,ZD7_FILRAT,SUM(ZD7.ZD7_VALRAT) VALRAT FROM " 
			cQuery :=   "SELECT ZD7.ZD7_ORIGEM,zd7.zd7_ctadeb DEB,zd7.zd7_ctacre CRE,zd7.zd7_tipfol,SUM(ZD7.ZD7_VALRAT) VALRAT FROM "
			cQuery +=	RetSqlName("ZD7") + " ZD7 "
			cQuery +=	"WHERE  ZD7.D_E_L_E_T_ = ' ' AND ZD7.ZD7_MESANO = '"+ cAnoBase + StrZero( oMesBase:nAt, 2 ) + "' And ZD7.ZD7_TIPFOL = '" + cTipFol  + "' "
			If nY = 1
				cQuery +=   "AND (zd7.zd7_ctaCRE < '3'AND zd7.zd7_ctaCRE <> '                   ' ) "  
			ELSE
				cQuery +=   "AND (zd7.zd7_CTADEB < '3'AND zd7.zd7_CTADEB <> '                   ' ) "  
			EndIf
			cQuery +=   "AND SUBSTR(ZD7.ZD7_FILRAT,1,2) = '" + cGeraEmp + "' "
			//cQuery += 	"GROUP BY zd7.ZD7_ORIGEM,ZD7.ZD7_FILIAL,zd7.zd7_ctadeb,zd7.zd7_ctacre,zd7.zd7_tipfol,ZD7_FILRAT " 
			cQuery += 	"GROUP BY zd7.ZD7_ORIGEM,zd7.zd7_ctadeb,zd7.zd7_ctacre,zd7.zd7_tipfol "
			If nY = 1
				cQuery += 	"ORDER BY ZD7_CTACRE "
			Else
				cQuery += 	"ORDER BY ZD7_CTADEB "
			EndIf 
		Else
 			IF nY = 3 .OR. nY = 5 .OR. nY = 7                                                  
		   		cQuery :=   "SELECT ZD7.ZD7_ORIGEM,zd7.zd7_filial,ZD7.ZD7_CC,ZD7.ZD7_ITEM,zd7.zd7_ctadeb DEB,zd7.zd7_ctacre CRE,zd7.zd7_tipfol,ZD7_FILRAT,SUM(ZD7.ZD7_VALRAT) VALRAT FROM "
				cQuery +=	RetSqlName("ZD7") + " ZD7 "
				cQuery +=	"WHERE  ZD7.D_E_L_E_T_ = ' ' AND ZD7.ZD7_MESANO = '"+ cAnoBase + StrZero( oMesBase:nAt, 2 ) + "' And ZD7.ZD7_TIPFOL = '" + cTipFol  + "' "
				cQuery +=   "AND SUBSTR(ZD7.ZD7_FILRAT,1,2) = '" + cGeraEmp + "' "   
				cQuery +=   "AND ZD7.ZD7_TPRAT = '" +aTpRat[nCont]+"' AND (zd7.zd7_CTADEB >= '3' AND zd7.zd7_CTADEB < '5') "
				cQuery += 	"GROUP BY zd7.ZD7_ORIGEM,ZD7.ZD7_FILIAL,ZD7.ZD7_CC,ZD7.ZD7_ITEM,zd7.zd7_ctadeb,zd7.zd7_ctacre,zd7.zd7_tipfol,ZD7_FILRAT "
				cQuery += 	"ORDER BY ZD7.ZD7_FILIAL,ZD7_CTADEB " 
			ELSE
			    cQuery :=   "SELECT ZD7.ZD7_ORIGEM,zd7.zd7_filial,ZD7.ZD7_CC,ZD7.ZD7_ITEM,zd7.zd7_ctadeb DEB,zd7.zd7_ctacre CRE,zd7.zd7_tipfol,ZD7_FILRAT,SUM(ZD7.ZD7_VALRAT) VALRAT FROM "
				cQuery +=	RetSqlName("ZD7") + " ZD7 "
				cQuery +=	"WHERE  ZD7.D_E_L_E_T_ = ' ' AND ZD7.ZD7_MESANO = '"+ cAnoBase + StrZero( oMesBase:nAt, 2 ) + "' And ZD7.ZD7_TIPFOL = '" + cTipFol  + "' "
				cQuery +=   "AND SUBSTR(ZD7.ZD7_FILRAT,1,2) = '" + cGeraEmp + "' "   
				cQuery +=   "AND ZD7.ZD7_TPRAT = '" +aTpRat[nCont]+"' AND (zd7.zd7_CTACRE >= '3' AND zd7.zd7_CTACRE < '5') "
				cQuery += 	"GROUP BY zd7.ZD7_ORIGEM,ZD7.ZD7_FILIAL,ZD7.ZD7_CC,ZD7.ZD7_ITEM,zd7.zd7_ctadeb,zd7.zd7_ctacre,zd7.zd7_tipfol,ZD7_FILRAT "
				cQuery += 	"ORDER BY ZD7.ZD7_FILIAL,ZD7_CTACRE "

			    nCont := nCont + 1  // Só incrementa aqui, para garantir que faça Gestão/Projeto/Condominio para debito e credito.
			ENDIF
			    
		EndIf
		
		cQuery := ChangeQuery( cQuery )
		
		dbUseArea( .T., "TOPCONN", TCGenQry(,,cQuery), cAlias, .T., .T. )     
		
		dbSelectArea(cAlias)
		
		(cAlias)->( dbEval( { || nTotalReg++ },, { || !EOF() } ) )
		
		(cAlias)->(dbGoTop())
		
		//--------------------------------------
		//
		//-----------------------------------------------------------
		
		//FIXOS no Arquivo
		_cCampoDt  := PadR(Dtoc(Lastday(dDataBase)),nLimDt)
		_cCampoDte := AllTrim(PadR(Upper(MesExtenso(dDataBase)),nLimDt)) + "/" + Padr(StrZero(Year(dDataBase),4),nLimDte)
		
		While (cAlias)->(!EOF())
		
			 //Trata Campo Entidade Original
			/*If Left((cAlias)->ZD7_FILIAL,2) 	== "01"   // FIEMT
					_cCampoOri := "091"
			ElseIf Left((cAlias)->ZD7_FILIAL,2) == "02"  // SESI
					_cCampoOri := "088"
			ElseIf Left((cAlias)->ZD7_FILIAL,2) == "03"  // SENAI
					_cCampoOri := "089"
			ElseIf Left((cAlias)->ZD7_FILIAL,2) == "04"  // IEL
					_cCampoOri := "090"
			ElseIf Left((cAlias)->ZD7_FILIAL,2) == "05"  // CONDOMINIO
					_cCampoOri := "092"					
			EndIf*/
			
			_cCampoOri := (cAlias)->ZD7_ORIGEM 
			
			If cGeraEmp == "01"   // FIEMT
					_cCampoEnt := PadR("113", nLimEnt ) 
			ElseIf cGeraEmp == "02"  // SESI
					_cCampoEnt := PadR("213", nLimEnt ) 
			ElseIf cGeraEmp == "03"  // SENAI
					_cCampoEnt := PadR("313", nLimEnt ) 
			ElseIf cGeraEmp == "04"  // IEL
					_cCampoEnt := PadR("413", nLimEnt ) 
			ElseIf cGeraEmp == "05"  // CONDOMINIO
					_cCampoEnt := PadR("105", nLimEnt ) 					
			EndIf
		
			If (cAlias)->ZD7_TIPFOL == "1"
				_cCampoX2 := PadR( "MENSAL"         , nLimX2 )
			ElseIf (cAlias)->ZD7_TIPFOL == "2"
				_cCampoX2 := PadR( "PROVISAO 13 SAL", nLimX2 )
			ElseIf (cAlias)->ZD7_TIPFOL == "3"
				_cCampoX2 := PadR( "PROVISAO FERIAS", nLimX2 )
			ElseIf (cAlias)->ZD7_TIPFOL == "4"
				_cCampoX2 := PadR( "1A PARCELA"     , nLimX2 )
			ElseIf (cAlias)->ZD7_TIPFOL == "5"
				_cCampoX2 := PadR( "2A PARCELA"     , nLimX2 )
			ElseIf (cAlias)->ZD7_TIPFOL == "6"
				_cCampoX2 := PadR( "FERIAS"         , nLimX2 )
			ElseIf (cAlias)->ZD7_TIPFOL == "7"
				_cCampoX2 := PadR( "RESCISAO"       , nLimX2 )
		   EndIf
		   
			_cCampoTp  := IIF(AllTrim(( cAlias )->CRE) <> '',"C","D")
			_cCampoCta := IIF(AllTrim(( cAlias )->CRE) <> '',( cAlias )->CRE,( cAlias )->DEB)		
			/*If (cAlias)->( RV_TIPOCOD ) == "1" //Provento
				_cCampoTp  := "D"
		      ///_cCampoCta := ( cAlias )->RV_XCTACRD
		      _cCampoCta := ( cAlias )->CRE
			ElseIf (cAlias)->( RV_TIPOCOD ) $ "2|3" //Desconto ou Base
				_cCampoTp  := "C"
		      //_cCampoCta := ( cAlias )->RV_XCTADEB
		      _cCampoCta := ( cAlias )->DEB
			EndIf  */          
			
			//_cCampoEnt := PadR( IIF(StrZero( Val( Left( ( cAlias )->ZD7_FILRAT, 2 ) ), 1 )<>"05",StrZero( Val( Left( ( cAlias )->ZD7_FILRAT, 2 ) ), 1 ) + "13","105"), nLimEnt ) 
			If nY <= 2
				_cCampoCC  := SPACE(10)
				_cCampoIC  := SPACE(16)
			ELSE
				_cCampoCC  := PadR(            AllTrim( ( cAlias )->ZD7_CC   )                   , nLimCC  )
				_cCampoIC  := PadR(            AllTrim( ( cAlias )->ZD7_ITEM )                   , nLimIC  )
			ENDIF
			_cCampoCta := PadL(            AllTrim( _cCampoCta           )                   , nLimCta )
		  	_cCampoTp  := PadR(                     _cCampoTp                                , nLimTp  )
		//	_cCampoVlr := PadL(                     ( cAlias )->ZD7_VALRAT                   , nLimVlr ) 
		    _cCampoVlr := PadL(                     ( cAlias )->VALRAT 		                 , nLimVlr )
			_cCampoHis := PadR(                     "001"                                    , nLimHis ) // Hist Padrão - Analisar fonte da informação
			_cCampoOri := PadR(                     _cCampoOri                               , nLimOri )
		
			fWrite( nHdl, _cCampoEnt + Chr(9) +;
							  _cCampoCC  + Chr(9) +;
							  _cCampoIC  + Chr(9) +;
							  _cCampoCta + Chr(9) +;
							  _cCampoTp  + Chr(9) +;
							  _cCampoVlr + Chr(9) +;
							  _cCampoDt  + Chr(9) +;
							  _cCampoHis + Chr(9) +;
							  _cCampoOri + Chr(9) +;
							  _cCampoX2  + Chr(9) +;
							  _cCampoDte + cCRLF   )
		
			If fError() # 0
				If !MsgAlert( "Erro ao gravar o arquivo de exportação! Erro: " + str( fError() ), "Atencao!" )
		   		fClose( nHdl )
		   		Return
				EndIf
			EndIf
			
			nCta++ //Contador de registros
		
			oTermExp:Set( Int( nCta * 100 / nTotalReg ) )
			
			( cAlias )->( dbSkip() )
		End
		
		( cAlias )->( dbCloseArea() )
		
	NEXT nY
		
	oTermExp:Set( 100 )
	oTermExp:Refresh()
	
	MSGINFO( "Arquivo "+AllTrim(aEmpComp[nX][2])+" com " + StrZero( nCta, 5 ) + " registro(s) gerado(s) com sucesso!", "Sucesso!" )
	
	fClose( nHdl )   
	
	fRename( cPath + cArq, cPath + cNewArq )
	
	fErase( cPath + cArq + GetDbExtension())  // Deletando o arquivo
	fErase( cPath + cArq + OrdBagExt())       // Deletando índice 

Next nX//Geração de arquivo por tipo de empresa.

Return

/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Rotina para controle de versao
<Data> : 24/05/2014
<Parametros> : Nenhum
<Retorno> : cRet
<Processo> : Controle de versao
<Tipo> (Menu,Trigger,Validacao,Ponto de Entrada,Genericas,Especificas ) : V
<Autor> : Doit Sistemas
<Obs> :
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

User Function DTGPE05V()

Local cRet := ""
cRet := "20140523"
 
Return cRet                              

      
/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Rotina para retornar codigo e descrição das empresas a processar
<Data> : 18/06/2014
<Parametros> : Nenhum
<Retorno> : cRet
<Tipo> (Menu,Trigger,Validacao,Ponto de Entrada,Genericas,Especificas ) : V
<Autor> : Doit Sistemas
<Obs> :
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

Static Function DTGPE05Get   

Local nI := 0

dbSelectArea("RCB")
dbSetOrder( 1 )

dbSelectArea("RCC")
dbSetOrder( 1 )



If RCB->( dbSeek( xFilial("RCB")+cTabEmp ) ) .And. RCC->( dbSeek( xFilial("RCC")+cTabEmp ) )

		While RCB->RCB_CODIGO == cTabEmp .And. !RCB->( Eof() )

		   Aadd( aTamanhos, RCB->RCB_TAMAN )

			RCB->( dbSkip() )

		End

		While RCC->RCC_CODIGO == cTabEmp .And. !RCC->( Eof() )

			nItem := 1

			Aadd( aEmpComp, Array( Len(aTamanhos) ) )

			For nI := 1 To Len( aTamanhos )

				aEmpComp[Len(aEmpComp)][nI] := SubStr( RCC->RCC_CONTEU, nItem, aTamanhos[nI] )

         	nItem += aTamanhos[nI]

			Next

			RCC->( dbSkip() )
	   End
	EndIf
                                        

Return