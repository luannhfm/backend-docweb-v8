#Include 'Totvs.ch'

/*/{Protheus.doc} SFFA71A1
@description Rotina para definir os caixas que terão permissão a efetuar vendas futuras.
@type User Function
@author Alan Teles de oliveira
@since 08/01/2019
@version 11.8
/*/
User Function SFFA71A1()

    Local cMsg		    := 'Selecione os Caixas que terão acesso à venda futura.'
    Local aCaixas		:= {}
    Local oPnlMaster    := Nil
    Local oPnlMsg		:= Nil
    Local oDlg			:= Nil
    Local oSize			:= Nil
    Local oBrwSA6		:= Nil
    Local oOk 			:= Nil
    Local oNo 			:= Nil
    Local lCancela      := .F.
    Local bChOk         := Nil

    bChOk := {|| If(aScan(aCaixas, {|x| x[1]}) > 0,; 
                    If(fAltBanc(aCaixas), (MsgInfo('Permissões alteradas com sucesso.', 'Atenção - SFFA71A1'), oDlg:Refresh()), Nil), Nil)}

    dbSelectArea('SA6')
    SA6->(dbGoTop())
    SA6->(dbSetOrder(1))
    If SA6->(DbSeek(xFilial('SA6')))

        While .not. (SA6->(Eof())) 
            
            If SA6->A6_AGENCIA = '.' .and. SA6->A6_NUMCON = '.' .and. SA6->A6_BLOCKED != '1' .and. SA6->A6_FILIAL == xFilial('SA6')
                
                PswOrder(2)

                If PswSeek(Lower(AllTrim(SA6->A6_NOME)), .T.) .and. .not. PswRet(1, .F.)[1, 17]

                    aAdd(aCaixas, {SA6->A6_XVENDFU, SA6->A6_FILIAL, SA6->A6_COD, SA6->A6_NOME,; 
                        AllTrim(Transform(SA6->A6_SALATU, X3Picture('A6_SALATU'))),; 
                        SA6->A6_DATAABR, SA6->A6_HORAABR, SA6->A6_DATAFCH, SA6->A6_HORAFCH, Recno()})
                
                EndIf
                
            EndIf

            SA6->(dbSkip())

        EndDo

        oSize := FwDefSize():New(.T.)
        oSize:lLateral := .F.
        oSize:AddObject("MASTER",100,100,.T.,.T.)
        oSize:lProp := .T.
        oSize:Process()

        oOk := LoadBitmap( GetResources(), "LBOK" )
        oNo := LoadBitmap( GetResources(), "LBNO" )
 
        DEFINE MSDIALOG oDlg TITLE 'Definição de privilegio' From oSize:aWindSize[1]*0.6,oSize:aWindSize[2]*0.6 To oSize:aWindSize[3]*0.6,oSize:aWindSize[4]*0.6 OF oMainWnd PIXEL		//"Índices"

            oSize := FwDefSize():New(.T.,,,oDlg)
            oSize:lLateral := .F.
            oSize:AddObject("MENSAGEM",100,15,.T.,.T.)
            oSize:AddObject("MASTER",100,85,.T.,.T.)
            oSize:lProp := .T.
            oSize:Process()

            oPnlMsg     := TPanel():New(oSize:GetDimension("MENSAGEM", "LININI"),   oSize:GetDimension("MENSAGEM", "COLINI"), cMsg, oDlg,, .F., .F.,,, oSize:GetDimension("MENSAGEM", "XSIZE"), oSize:GetDimension("MENSAGEM", "YSIZE"))
            oPnlMaster  := TPanel():New(oSize:GetDimension("MASTER", "LININI"),     oSize:GetDimension("MASTER", "COLINI"),,        oDlg,, .T., .T.,,, oSize:GetDimension("MASTER", "XSIZE"),   oSize:GetDimension("MASTER", "YSIZE"))
            oBrwSA6     := TCBrowse():New(0, 0, 10, 10,,,, oPnlMaster,,,,,,,,,,,,,, .T.,,,, .T.,)
                    
                    oBrwSA6:AddColumn(TCColumn():New("Vd. Futura",  {|| If(aCaixas[oBrwSA6:nAt , 01], oOk, oNo)},,,,,   040, .T., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Filial",      {|| aCaixas[oBrwSA6:nAt, 02]},,,,,                  012, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Código",      {|| aCaixas[oBrwSA6:nAt, 03]},,,,,                  030, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Usuário",     {|| aCaixas[oBrwSA6:nAt, 04]},,,,,                  040, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Saldo Cx.",   {|| aCaixas[oBrwSA6:nAt, 05]},,,,,                  032, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Dt. Abr.",    {|| aCaixas[oBrwSA6:nAt, 06]},,,,,                  012, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Hr. Abr.",    {|| aCaixas[oBrwSA6:nAt, 07]},,,,,                  030, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Dt. Fch.",    {|| aCaixas[oBrwSA6:nAt, 08]},,,,,                  030, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Hr. Fch.",    {|| aCaixas[oBrwSA6:nAt, 09]},,,,,                  030, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Recno",       {|| aCaixas[oBrwSA6:nAt, 10]},,,,,                  020, .F., .F.,,,,,))
                    oBrwSA6:AddColumn(TCColumn():New("Alias",       {|| 'SA6'},,,,,                                     020, .F., .F.,,,,,))
                    
                    oBrwSA6:Align := CONTROL_ALIGN_ALLCLIENT
                    oBrwSA6:SetArray(aCaixas)
                    oBrwSA6:bLDblClick := {|| aCaixas[oBrwSA6:nAT, 1] := !aCaixas[oBrwSA6:nAT, 1]}
                    oBrwSA6:Refresh()

        ACTIVATE DIALOG oDlg ON INIT (EnchoiceBar(oDlg, bChOk, {|| lCancela:= .T., oDlg:End()},,,,,.F.,.F.,.F.),oBrwSA6:Refresh()) CENTERED        

    EndIf

Return


/*/{Protheus.doc} fAltBanc
@description Função responsável por alterar o registro no banco de dados. 
@type  Static Function
@author Alan Teles de Oliveira
@since 08/01/2019
@version 11.8
@param p_aCaixa, array, relação de caixas localizados para filial corrente.
@return lRet, logico, verdadeiro se alterado com sucesso.
/*/
Static Function fAltBanc(p_aCaixa)

    Local nX := 0
    Local nAlt := 0
    Local lRet := .T.

    For nX := 1 To Len(p_aCaixa)
            
        dbGoTo(p_aCaixa[nX, 10])
        
        If .not. SA6->(Eof())
                    
            If SA6->A6_XVENDFU != p_aCaixa[nX, 1]

                nAlt += 1

                RecLock('SA6', .F.)
            
                SA6->A6_XVENDFU := p_aCaixa[nX, 1]

                SA6->(MsUnLock())

            EndIf

        EndIf

    Next

    If nAlt = 0
        lRet := .F.
    EndIf

Return lRet
