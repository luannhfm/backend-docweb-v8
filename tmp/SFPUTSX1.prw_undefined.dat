#Include 'Protheus.ch'

/*/{Protheus.doc} SFPUTSX1
@description Cria uma pergunta no arquivo SX1 que poderá ser usada pelas rotinas padrões.
@type User Function
@author Alan Teles de Oliveira
@since 11/01/2019
@version 12.1.17
@param cGrupo,	 	Caracter,	Nome do grupo de pergunta
@param cOrdem,	 	Caracter,	Ordem de apresentação das perguntas na tela
@param cPergunt, 	Caracter,	Texto da pergunta a ser apresentado na tela.
@param cPerSpa,	 	Caracter,	Texto em espanhol da pergunta a ser apresentado na tela.
@param cPerEng,	 	Caracter,	Texto em inglês da pergunta a ser apresentado na tela.
@param cVar, 	 	Caracter,	Variavel do item.
@param cTipo,	 	Caracter,	Tipo do conteúdo de resposta da pergunta.
@param nTamanho,	Numérico,	Tamanho do campo para a resposta da pergunta.
@param nDecimal, 	Numérico,	Número de casas decimais da resposta, se houver.
@param nPresel,	 	Numérico,	Valor que define qual o item do combo estará selecionado na apresentação da tela. Este campo somente poderá ser preenchido quando o parâmetro cGSC for preenchido com "C".
@param cGSC, 	 	Caracter,	Estilo de apresentação da pergunta na tela: - "G" - formato que permite editar o conteúdo do campo. - "S" - formato de texto que não permite alteração. - "C" - formato que permite a opção de seleção de dados para o campo.
@param cValid,	 	Caracter,	Validação do item de pergunta.
@param cF3,	 	 	Caracter,	Nome da consulta F3 que poderá ser acionada pela pergunta.
@param cGrpSxg,	 	Caracter,	Código do grupo de campos relacionado a pergunta.
@param cPyme,	 	Caracter,	Código do grupo de campos relacionado a pergunta.
@param cVar01,	 	Caracter,	Nome do MV_PAR para a utilização nos programas.
@param cDef01,	 	Caracter,	Conteúdo em português do primeiro item do objeto, caso seja Combo.
@param cDefSpa1, 	Caracter,	Conteúdo em espanhol do primeiro item do objeto, caso seja Combo.
@param cDefEng1, 	Caracter,	Conteúdo em inglês do primeiro item do objeto, caso seja Combo.
@param cCnt01,	 	Caracter,	Conteúdo padrão da pergunta.
@param cDef02,	 	Caracter,	Conteúdo em português do segundo item do objeto, caso seja Combo.
@param cDefSpa2, 	Caracter,	Conteúdo em espanhol do segundo item do objeto, caso seja Combo.
@param cDefEng2, 	Caracter,	Conteúdo em inglês do segundo item do objeto, caso seja Combo.
@param cDef03,	 	Caracter,	Conteúdo em português do terceiro item do objeto, caso seja Combo.
@param cDefSpa3, 	Caracter,	Conteúdo em espanhol do terceiro item do objeto, caso seja Combo.
@param cDefEng3, 	Caracter,	Conteúdo em inglês do terceiro item do objeto, caso seja Combo.
@param cDef04,	 	Caracter,	Conteúdo em português do quarto item do objeto, caso seja Combo.
@param cDefSpa4, 	Caracter,	Conteúdo em espanhol do quarto item do objeto, caso seja Combo.
@param cDefEng4, 	Caracter,	Conteúdo em inglês do quarto item do objeto, caso seja Combo.
@param cDef05,	 	Caracter,	Conteúdo em português do quinto item do objeto, caso seja Combo.
@param cDefSpa5, 	Caracter,	Conteúdo em espanhol do quinto item do objeto, caso seja Combo.
@param cDefEng5, 	Caracter,	Conteúdo em inglês do quinto item do objeto, caso seja Combo.
@param aHelpPor, 	Vetor,	 	Help descritivo da pergunta em Português.
@param aHelpEng, 	Vetor,	 	Help descritivo da pergunta em Inglês.
@param aHelpSpa, 	Vetor,	 	Help descritivo da pergunta em Espanhol.
@param cHelp,	 	Caracter,	Nome do help equivalente, caso já exista algum no sistema.
@see http://tdn.totvs.com/pages/releaseview.action?pageId=244740739
/*/
User Function SFPUTSX1(cGrupo, cOrdem, cPergunt, cPerSpa, cPerEng, cVar,;
                        cTipo, nTamanho, nDecimal, nPresel, cGSC, cValid,;
                        cF3, cGrpSxg, cPyme,;
                        cVar01, cDef01, cDefSpa1, cDefEng1, cCnt01,;
                        cDef02, cDefSpa2, cDefEng2,;
                        cDef03, cDefSpa3, cDefEng3,;
                        cDef04, cDefSpa4, cDefEng4,;
                        cDef05, cDefSpa5, cDefEng5,;
                        aHelpPor, aHelpEng, aHelpSpa, cHelp,cPicture)

    LOCAL aArea := GetArea()
    Local cKey
    Local lPort := .f.
    Local lSpa  := .f.
    Local lIngl := .f. 

    cKey  := "P." + AllTrim( cGrupo ) + AllTrim( cOrdem ) + "."

    cPyme    := Iif( cPyme 		== Nil, " ", cPyme		)
    cF3      := Iif( cF3 		== NIl, " ", cF3		)
    cGrpSxg  := Iif( cGrpSxg	== Nil, " ", cGrpSxg	)
    cCnt01   := Iif( cCnt01		== Nil, "" , cCnt01 	)
    cHelp	 := Iif( cHelp		== Nil, "" , cHelp		)

    dbSelectArea( "SX1" )
    dbSetOrder( 1 )

    // Ajusta o tamanho do grupo. Ajuste emergencial para validação dos fontes.
    // RFC - 15/03/2007
    cGrupo := PadR( cGrupo , Len( SX1->X1_GRUPO ) , " " )

    If !( DbSeek( cGrupo + cOrdem ))

        cPergunt:= If(! "?" $ cPergunt .And. ! Empty(cPergunt),Alltrim(cPergunt)+" ?",cPergunt)
        cPerSpa	:= If(! "?" $ cPerSpa  .And. ! Empty(cPerSpa) ,Alltrim(cPerSpa) +" ?",cPerSpa)
        cPerEng	:= If(! "?" $ cPerEng  .And. ! Empty(cPerEng) ,Alltrim(cPerEng) +" ?",cPerEng)

        Reclock( "SX1" , .T. )

        Replace X1_GRUPO   With cGrupo
        Replace X1_ORDEM   With cOrdem
        Replace X1_PERGUNT With cPergunt
        Replace X1_PERSPA  With cPerSpa
        Replace X1_PERENG  With cPerEng
        Replace X1_VARIAVL With cVar
        Replace X1_TIPO    With cTipo
        Replace X1_TAMANHO With nTamanho
        Replace X1_DECIMAL With nDecimal
        Replace X1_PRESEL  With nPresel
        Replace X1_GSC     With cGSC
        Replace X1_VALID   With cValid

        Replace X1_VAR01   With cVar01

        Replace X1_F3      With cF3
        Replace X1_GRPSXG  With cGrpSxg
        Replace X1_PICTURE With cPicture

        If Fieldpos("X1_PYME") > 0
            If cPyme != Nil
                Replace X1_PYME With cPyme
            Endif
        Endif

        Replace X1_CNT01   With cCnt01
        If cGSC == "C"			// Mult Escolha
            Replace X1_DEF01   With cDef01
            Replace X1_DEFSPA1 With cDefSpa1
            Replace X1_DEFENG1 With cDefEng1

            Replace X1_DEF02   With cDef02
            Replace X1_DEFSPA2 With cDefSpa2
            Replace X1_DEFENG2 With cDefEng2

            Replace X1_DEF03   With cDef03
            Replace X1_DEFSPA3 With cDefSpa3
            Replace X1_DEFENG3 With cDefEng3

            Replace X1_DEF04   With cDef04
            Replace X1_DEFSPA4 With cDefSpa4
            Replace X1_DEFENG4 With cDefEng4

            Replace X1_DEF05   With cDef05
            Replace X1_DEFSPA5 With cDefSpa5
            Replace X1_DEFENG5 With cDefEng5
        Endif

        Replace X1_HELP  With cHelp

        fPutHelp(cKey,aHelpPor,aHelpEng,aHelpSpa)

        MsUnlock()
    Else

    lPort := ! "?" $ X1_PERGUNT .And. ! Empty(SX1->X1_PERGUNT)
    lSpa  := ! "?" $ X1_PERSPA  .And. ! Empty(SX1->X1_PERSPA)
    lIngl := ! "?" $ X1_PERENG  .And. ! Empty(SX1->X1_PERENG)

    If lPort .Or. lSpa .Or. lIngl
            RecLock("SX1",.F.)
            If lPort 
            SX1->X1_PERGUNT:= Alltrim(SX1->X1_PERGUNT)+" ?"
            EndIf
            If lSpa 
                SX1->X1_PERSPA := Alltrim(SX1->X1_PERSPA) +" ?"
            EndIf
            If lIngl
                SX1->X1_PERENG := Alltrim(SX1->X1_PERENG) +" ?"
            EndIf
            SX1->(MsUnLock())
        EndIf
    Endif

    RestArea( aArea )

Return


/*/{Protheus.doc} fPutHelp
@description Função utilizada para cadastro de helps no Protheus.
@author alan.oliveira
@since 11/01/2019
@version 12.1.17
@param cKey,		Caracter,	Nome do help a ser cadastrado
@param aHelpPor,	Vetor,		Array com o texto do help em Português
@param aHelpEng,	Vetor,		Array com o texto do help em Inglês
@param aHelpSpa,	Vetor,		Array com o texto do help em Espanhol
@param lUpdate,		Lógico,		Caso seja .T. e já existir um help com o mesmo nome, atualiza o registro. Se for .F. não atualiza
@param cStatus,		Caracter,	Parâmetro reservado
@type function
/*/
Static Function fPutHelp(cKey,aHelpPor,aHelpEng,aHelpSpa,lUpdate,cStatus)

    Local cFilePor := "SIGAHLP.HLP"
    Local cFileEng := "SIGAHLE.HLE"
    Local cFileSpa := "SIGAHLS.HLS"
    Local nRet
    Local nT
    Local nI
    Local cLast
    Local cNewMemo
    Local cAlterPath := ''
    Local nPos	

    If (ExistBlock('HLPALTERPATH'))

        cAlterPath := Upper(AllTrim(ExecBlock('HLPALTERPATH', .F., .F.)))
    
        If (ValType(cAlterPath) != 'C')
            cAlterPath := ''
        ElseIf ((nPos:=Rat('\', cAlterPath)) == 1)
            cAlterPath += '\'
        ElseIf (nPos == 0)
            cAlterPath := '\' + cAlterPath + '\'
        EndIf
        
        cFilePor := cAlterPath + cFilePor
        cFileEng := cAlterPath + cFileEng
        cFileSpa := cAlterPath + cFileSpa
        
    EndIf

    Default aHelpPor := {}
    Default aHelpEng := {}
    Default aHelpSpa := {}
    Default lUpdate  := .T.
    Default cStatus  := ""

    If Empty(cKey)
        Return
    EndIf

    If !(cStatus $ "USER|MODIFIED|TEMPLATE")
        cStatus := NIL
    EndIf

    cLast 	 := ""
    cNewMemo := ""

    nT := Len(aHelpPor)

    For nI:= 1 to nT
    cLast := Padr(aHelpPor[nI],40)
    If nI == nT
        cLast := RTrim(cLast)
    EndIf
    cNewMemo+= cLast
    Next

    If !Empty(cNewMemo)
        nRet := SPF_SEEK( cFilePor, cKey, 1 )
        If nRet < 0
            SPF_INSERT( cFilePor, cKey, cStatus,, cNewMemo )
        Else
            If lUpdate
                SPF_UPDATE( cFilePor, nRet, cKey, cStatus,, cNewMemo )
            EndIf
        EndIf
    EndIf

    cLast 	 := ""
    cNewMemo := ""

    nT := Len(aHelpEng)

    For nI:= 1 to nT
    cLast := Padr(aHelpEng[nI],40)
    If nI == nT
        cLast := RTrim(cLast)
    EndIf
    cNewMemo+= cLast
    Next

    If !Empty(cNewMemo)
        nRet := SPF_SEEK( cFileEng, cKey, 1 )
        If nRet < 0
            SPF_INSERT( cFileEng, cKey, cStatus,, cNewMemo )
        Else
            If lUpdate
                SPF_UPDATE( cFileEng, nRet, cKey, cStatus,, cNewMemo )
            EndIf
        EndIf
    EndIf

    cLast 	 := ""
    cNewMemo := ""

    nT := Len(aHelpSpa)

    For nI:= 1 to nT
    cLast := Padr(aHelpSpa[nI],40)
    If nI == nT
        cLast := RTrim(cLast)
    EndIf
    cNewMemo+= cLast
    Next

    If !Empty(cNewMemo)
        nRet := SPF_SEEK( cFileSpa, cKey, 1 )
        If nRet < 0
            SPF_INSERT( cFileSpa, cKey, cStatus,, cNewMemo )
        Else
            If lUpdate
                SPF_UPDATE( cFileSpa, nRet, cKey, cStatus,, cNewMemo )
            EndIf
        EndIf
    EndIf

Return
