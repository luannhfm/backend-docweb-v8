#INCLUDE "TOTVS.CH"
#INCLUDE "PROTHEUS.CH"


/*{Protheus.doc} P12UPD01

@description 	Atualiza dicionario para a Customização:
				Update para migração de versão. 

@author  Alan Oliveira
@since   10/12/2018
@obs
*/
User Function P12UPD01()

	Default oProcess  := Nil
	Default cEmpresa  := "01"

	oProcess:SetRegua2( 10 )

	oProcess:IncRegua2( 'Atualizando SX1')
	ExecSX1()

	oProcess:IncRegua2( 'Atualizando SX2')
	ExecSX2(cEmpresa)	
	
	oProcess:IncRegua2( 'Atualizando SX3')
	ExecSX3()

	oProcess:IncRegua2( 'Atualizando SX4')
	ExecSX4()

	oProcess:IncRegua2( 'Atualizando SX5')
	ExecSX5()

	oProcess:IncRegua2( 'Atualizando SX6')
	ExecSX6()

	oProcess:IncRegua2( 'Atualizando SX7')
	ExecSX7()

	oProcess:IncRegua2( 'Atualizando SIX')
	ExecSIX()
	
	oProcess:IncRegua2( 'Atualizando SXB')
	ExecSXB()	

	oProcess:IncRegua2( 'Atualizando SXA')
	ExecSXA()


Return

/*{Protheus.doc}

Atualiza dicionario SX1

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX1()
/*
CTR490
	01 	TAMANHO 20
	02
SICTBR02
	19	tamanho 20
	20	
*/
Return


/*{Protheus.doc}

Atualiza dicionario SX2 - Tabelas

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX2(cEmpresa)

	SX2 := UPDSX2():CREATE() 

	SX2:CLONE('CQ0')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ1')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ2')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ3')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ4')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ5')
	SX2:S('MODO', 'C')
	
	SX2:CLONE('CQ6')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ7')
	SX2:S('MODO', 'C')

	SX2:CLONE('CQ8')
	SX2:S('MODO', 'C')
	
	SX2:CLONE('CQ9')
	SX2:S('MODO', 'C')
	
	SX2:CLONE('CQA')
	SX2:S('MODO', 'C')

	SX2:CONFIRM()

Return


/*{Protheus.doc}

Atualiza dicionario SX3 - Campos das Tabelas

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX3()

	SX3 := UPDSX3():CREATE() 

	//Alterado dicionário de dados para o campo Código conta referencial (CVD_CTAREF) na tabela CVD as seguintes clausulas Contexto que estava vazia para real, modo edição onde existia !Empty(cCvdCodPla) foi alterado para .T. e a consulta padrão de CVN3 para CVN2 conforme dicionário de dados padrão encaminhado pela TOTVS em outros chamados.
	SX3:CLONE("CVD_CTAREF", "CVD_CTAREF", "CVD")
	SX3:S("CONTEXT", "R")
	SX3:S("WHEN", ".T.")
	SX3:S("F3", "CVN2")

	//Foi criado o campo D1_XLOCSN1 porem devido não existir nenhuma documentação de como deve ser configurado o campo fiz apenas um espelhamento do campo N1_LOCAL.
	SX3:CLONE("N1_LOCAL", "N1_LOCAL", "SN1")
	SX3:S("WHEN", "")
	SX3:SETOBR()
/*
	SX3:CLONE("N1_LOCAL", "D1_XLOCSN1", "SD1")
	SX3:SETOPCIONAL()
	SX3:S("WHEN", "")
*/
	/*Ajustes no CRM campo AD1_STATUS voltando os status padrões 1=Aberto;2=Perdido;3=Suspenso;9=Ganha
		E incluindo o ponto de entrada FT300D1ST 
			Para adicionar os novos status 
		D=Cancelado após aceite,  E=Ganha SEM Pedido e F=Ganha COM Pedido*/		
	SX3:CLONE("AD1_STATUS", "AD1_STATUS", "AD1")
	SX3:S("CBOX", "1=Aberto;2=Perdido;3=Suspenso;9=Ganha")
	
	SX3:CLONE("AD1_DTASSI", "AD1_DTASSI", "AD1")
	SX3:S("WHEN", "M->AD1_STATUS $ 'E/F'")
	
	SX3:CLONE("AD1_USRASS", "AD1_USRASS", "AD1")
	SX3:S("WHEN", "M->AD1_STATUS $ 'E/F'")

	//Alterado tamanho dos campos CNE_VLUNIT e CNE_VUNORI no dicionário de dados para 18 e decimal 8.
	SX3:CLONE("CNE_VLUNIT", "CNE_VLUNIT", "CNE")
	SX3:S("TAMANHO", 18)
	SX3:S("DECIMAL", 8)
	SX3:S("PICTURE", "@E 999,999,999.99999999")

	SX3:CLONE("CNE_VUNORI", "CNE_VUNORI", "CNE")
	SX3:S("TAMANHO", 18)
	SX3:S("DECIMAL", 8)
	SX3:S("PICTURE", "@E 999,999,999.99999999")

	//Criado função FT30F3C3 e criado a consulta padrão U5CONT e alterado a consulta do campo ZC3_CODCON no dicionario de dados. 
	SX3:CLONE("ZC3_CODCON", "ZC3_CODCON", "ZC3")
	SX3:S("F3", "U5CONT")

	//Criação de campos para novas tabelas da contabilidade.
	SX3:CLONE("CT2_EC05DB", "DBL_EC05DB", "DBL")
	SX3:CLONE("CT2_EC05CR", "DBL_EC05CR", "DBL")
	SX3:CLONE("CT2_EC06DB", "DBL_EC06DB", "DBL")
	SX3:CLONE("CT2_EC06CR", "DBL_EC06CR", "DBL")
	SX3:CLONE("CT2_EC07DB", "DBL_EC07DB", "DBL")
	SX3:CLONE("CT2_EC07CR", "DBL_EC07CR", "DBL")
	SX3:CLONE("CT2_EC08DB", "DBL_EC08DB", "DBL")
	SX3:CLONE("CT2_EC08CR", "DBL_EC08CR", "DBL")
	SX3:CLONE("CT2_EC09DB", "DBL_EC09DB", "DBL")
	SX3:CLONE("CT2_EC09CR", "DBL_EC09CR", "DBL")
	SX3:CLONE("CT2_EC05DB", "DBK_EC05DB", "DBK")
	SX3:CLONE("CT2_EC05CR", "DBK_EC05CR", "DBK")
	SX3:CLONE("CT2_EC06DB", "DBK_EC06DB", "DBK")
	SX3:CLONE("CT2_EC06CR", "DBK_EC06CR", "DBK")
	SX3:CLONE("CT2_EC07DB", "DBK_EC07DB", "DBK")
	SX3:CLONE("CT2_EC07CR", "DBK_EC07CR", "DBK")
	SX3:CLONE("CT2_EC08DB", "DBK_EC08DB", "DBK")
	SX3:CLONE("CT2_EC08CR", "DBK_EC08CR", "DBK")
	SX3:CLONE("CT2_EC09DB", "DBK_EC09DB", "DBK")
	SX3:CLONE("CT2_EC09CR", "DBK_EC09CR", "DBK")

	//Ao incluir  Oportunidade contendo serviço do tipo IST, na aba IST - campo AD1_XDIAGN - deve ser preenchido o formulário, porém os campos da aba  Pesquisa Geral estão marcados como obrigatório .
	SX3:CLONE("ZCL_OPORT", "ZCL_OPORT", "ZCL")
	SX3:S("VISUAL", "A")
	SX3:S("RELACAO", "Iif(IsInCallStack('FATA300'), M->AD1_NROPOR,'')")
	SX3:S("WHEN", ".not. (IsInCallStack('FATA300'))")	

	SX3:CLONE("ZCL_REVOP", "ZCL_REVOP", "ZCL")
	SX3:S("VISUAL", "A")
	SX3:S("RELACAO", "Iif(IsInCallStack('FATA300'), M->AD1_REVISA,'')")
	SX3:S("WHEN", ".not. (IsInCallStack('FATA300'))")	

	SX3:CLONE("ZCL_SVTENG", "ZCL_SVTENG", "ZCL")
	SX3:SETOPCIONAL()

	SX3:CLONE("ZCL_SVTGEM", "ZCL_SVTGEM", "ZCL")
	SX3:SETOPCIONAL()

	SX3:CLONE("ZCL_SDAPRP", "ZCL_SDAPRP", "ZCL")
	SX3:SETOPCIONAL()

	SX3:CLONE("ZCL_EDITAL", "ZCL_EDITAL", "ZCL")
	SX3:SETOPCIONAL()

	SX3:CLONE("ZCL_SVOUTR", "ZCL_SVOUTR", "ZCL")
	SX3:SETOPCIONAL()

	SX3:CLONE("ZC6_NOME", "ZC6_NOME", "ZC6")
	SX3:S("VISUAL", "A")	
	
	SX3:CLONE("ZC6_BLOCO", "ZC6_BLOCO", "ZC6")
	SX3:S("VISUAL", "A")	

	SX3:CLONE("ZC6_CARGO", "ZC6_CARGO", "ZC6")
	SX3:S("VISUAL", "A")	

	SX3:CLONE("ZC6_DTANIV", "ZC6_DTANIV", "ZC6")
	SX3:S("VISUAL", "A")	

	SX3:CLONE("ZC6_CLIENT", "ZC6_CLIENT", "ZC6")
	SX3:S("VISUAL", "A")	

	SX3:CLONE("ZC6_LOJCLI", "ZC6_LOJCLI", "ZC6")
	SX3:S("VISUAL", "A")	

	//Compatibilizando versão
	SX3:CLONE("AD2_NOMVEN", "AD2_NOMVEN", "AD2")
	SX3:S("RELACAO", "If(!INCLUI,Posicione('SA3',1,xFilial('SA3')+AD2->AD2_VEND,'A3_NOME'),'')")	

	//Alterado a pesquisa padrão SU5001 para a customizada FT30F3 para remover a opção de adição de novos contatos da pesquisa.
	SX3:CLONE("AD9_CODCON", "AD9_CODCON", "AD9")
	SX3:S("F3", "FT30F3")	

	SX3:CLONE("AD9_NOMCON", "AD9_NOMCON", "AD9")
	SX3:S("RELACAO", "IIF(!INCLUI,AllTrim(Posicione('SU5',1,FwxFilial('SU5')+AD9->AD9_CODCON,'U5_CONTAT')),'')")	

	//Ajustes na rotina de manutenção de contratos.
	SX3:CLONE("CNC_NOME", "CNC_NOME", "CNC")
	SX3:S("TAMANHO", 100)	

	SX3:SETORDEM("CN9", "CN9_TPCTO",	"15")
	SX3:SETORDEM("CN9", "CN9_CONDPG", 	"16")
	SX3:SETORDEM("CN9", "CN9_DESCPG", 	"17")
	SX3:SETORDEM("CN9", "CN9_CODOBJ", 	"18")
	
	//Ajuste em campos virtuais da descrição do produto alterando para o novo tamanho de 250 caracteres.
	SX3:CLONE("CNB_DESCRI", "CNB_DESCRI", "CNB")
	SX3:S("TAMANHO", 250)

	SX3:CLONE("D1_XDESPRO", "D1_XDESPRO",   "SD1")
	SX3:S('TAMANHO', 250)

	SX3:CLONE("N1_XDSCPRO", "N1_XDSCPRO",   "SN1")
	SX3:S('TAMANHO', 250)	

	SX3:CLONE("ADZ_DESCRI", "ADZ_DESCRI", 	"ADZ")
	SX3:S('TAMANHO', 250)
	SX3:SETOPCIONAL()

	SX3:CLONE("CNB_DESCRI", "CNB_DESCRI", 	"CNB")
	SX3:S('TAMANHO', 250)

	//
	SX3:CLONE("AD2_CARGO", "AD2_CARGO", "AD2")
	SX3:S("RELACAO", 'IIF(!INCLUI,Ft300NCargo(AD2->AD2_CODCAR),"")')
	SX3:S("INIBRW", 'Ft500Cargo(AD2->AD2_VEND)')

	SX3:CLONE("AD3_NOMCON", "AD3_NOMCON", "AD3")
	SX3:S("RELACAO", 'IIF(!INCLUI,Posicione("AC3",1,xFilial("AC3")+AD3->AD3_CODCON,"AC3_NOME"),"")')

	SX3:CLONE("AD4_NOMPAR", "AD4_NOMPAR", "AD4")
	SX3:S("RELACAO", 'IIF(!INCLUI,Posicione("AC4",1,xFilial("AC4")+AD4->AD4_PARTNE,"AC4_NOME"),"")')

	SX3:CLONE("ADY_XASSIN", "ADY_XASSIN", "ADY")
	SX3:S("F3", 'SU5002')

	SX3:CLONE("ADY_OPORTU", "ADY_OPORTU", "ADY")
	SX3:S("RELACAO", 'AD1->AD1_NROPOR')
	SX3:S("VISUAL", 'V')

	SX3:CLONE("ADY_REVISA", "ADY_REVISA", "ADY")
	SX3:S("RELACAO", 'AD1->AD1_REVISA')
	SX3:S("VISUAL", 'V')

	SX3:CLONE("ADZ_ITEM", 	"ADZ_ITEM", 	"ADZ")
	SX3:SETOPCIONAL() 
	
	SX3:CLONE("ADZ_PRODUT", "ADZ_PRODUT",	"ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_UM", 	"ADZ_UM", 	    "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XTBPRC", "ADZ_XTBPRC",   "ADZ")
	SX3:SETOBR()
	
	SX3:CLONE("ADZ_CONDPG", "ADZ_CONDPG",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_TES", 	"ADZ_TES",      "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_QTDVEN", "ADZ_QTDVEN",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PRCTAB", "ADZ_PRCTAB",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_DESCON", "ADZ_DESCON",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PRCVEN", "ADZ_PRCVEN",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_VALDES", "ADZ_VALDES",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_TOTAL", 	"ADZ_TOTAL",    "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XUNEXE", "ADZ_XUNEXE",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XVEND", 	"ADZ_XVEND",    "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XNOMEV", "ADZ_XNOMEV",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PROPOS", "ADZ_PROPOS",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_FOLDER", "ADZ_FOLDER",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_REVISA", "ADZ_REVISA",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XPESQ", 	"ADZ_XPESQ" ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XCODVI", "ADZ_XCODVI",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XPRDSG", "ADZ_XPRDSG",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_LOCAL", 	"ADZ_LOCAL" ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XMODUL", "ADZ_XMODUL",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XCHMOD", "ADZ_XCHMOD",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XTURMA", "ADZ_XTURMA",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XDTINI", "ADZ_XDTINI",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XDTFIM", "ADZ_XDTFIM",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_TPALDO", "ADZ_TPALDO",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XQTDDO", "ADZ_XQTDDO",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_DTALTD", "ADZ_DTALTD",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_DT1VEN", "ADZ_DT1VEN",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_MOEDA" , "ADZ_MOEDA" ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_ORCAME", "ADZ_ORCAME",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_TPPROD", "ADZ_TPPROD",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_ITEMOR", "ADZ_ITEMOR",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_ITPAI" , "ADZ_ITPAI" ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PMS", 	"ADZ_PMS"   ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PRDALO", "ADZ_PRDALO",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XOPER", 	"ADZ_XOPER" ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_XREM", 	"ADZ_XREM"  ,   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PMSVER", "ADZ_PMSVER",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_CODVIS", "ADZ_CODVIS",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_ITEMVI", "ADZ_ITEMVI",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_CODAGR", "ADZ_CODAGR",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_CODNIV", "ADZ_CODNIV",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PERIOD", "ADZ_PERIOD",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_PERREC", "ADZ_PERREC",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_QTDREC", "ADZ_QTDREC",   "ADZ")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("ADZ_DIASEM", "ADZ_DIASEM",   "ADZ")
	SX3:SETOPCIONAL()

	//
	SX3:CLONE("A1_CNAE", "A1_CNAE",   "SA1")
	SX3:S('F3', 'CC3')

	//AD1_CNTPRO - engatilha descrição do contato, valor atribuído difere do tamanho do campo. AD1_USRASS - engatilha descrição do usuário responsável pela proposta, valor atribuído difere do tamanho do campo.
	SX3:CLONE("AD1_NOMVEN", "AD1_NOMVEN",   "AD1")
	SX3:S('TAMANHO', 120)

	SX3:CLONE("AD1_NOMCLI", "AD1_NOMCLI",   "AD1")
	SX3:S('TAMANHO', 80)

	SX3:CLONE("AD1_DESPRO", "AD1_DESPRO",   "AD1")
	SX3:S('TAMANHO', 250)

	SX3:CLONE("AD1_DSCUSR", "AD1_DSCUSR",   "AD1")
	SX3:S('TAMANHO', 120)

	//
	SX3:CLONE("N1_XNMFORN", "N1_XNMFORN",   "SN1")
	SX3:S('TAMANHO', 100)	

	//
	SX3:CLONE("CN9_TPCTO", "CN9_TPCTO", "CN9")
	SX3:S("VISUAL", "A")

	SX3:CLONE("ADZ_DESCON", "ADZ_DESCON", "ADZ")
	SX3:S("VLDUSER", " ")

	SX3:CLONE("ADZ_VALDES", "ADZ_VALDES", "ADZ")
	SX3:S("VLDUSER", " ")

	//Campo AOF_CHAVE deve ser somente visual para usuario.
	SX3:CLONE("AOF_CHAVE", "AOF_CHAVE", "AOF")
	SX3:S("VISUAL", "V")

	//Campo CNK_CODIGO deve ser sequencial automatico
	//Fazer manualmente
/*	SX3:CLONE("CNK_CODIGO", "CNK_CODIGO", "CNK")
	SX3:S("VISUAL", "V")
	SX3:S("RELACAO", "GetSXENum('CNK', 'CNK_CODIGO')")
*/
	SX3:CLONE("ZCG_CLIENT", "ZCG_CLIENT", "ZCG")
	SX3:S("RELACAO", 'IIF(IsInCallStack("FATA300"),IIF(INCLUI,M->AD1_CODCLI,AD1->AD1_CODCLI)," ")')

	SX3:CLONE("ZCG_LOJA", "ZCG_LOJA", "ZCG")
	SX3:S("RELACAO", 'IIF(IsInCallStack("FATA300"),IIF(INCLUI,M->AD1_LOJCLI,AD1->AD1_LOJCLI)," ")')

	SX3:CLONE("ZCG_NOME", "ZCG_NOME", "ZCG")
	SX3:S("RELACAO", 'IF(IsInCallStack("FATA300"),POSICIONE("SA1",1,XFILIAL("SA1")+M->AD1_CODCLI+M->AD1_LOJCLI,"A1_NOME"),"")')

	SX3:CLONE("ADZ_XOPER", "ADZ_XOPER", "ADZ")
	SX3:S("RELACAO", 'IIF(INCLUI, DTOS(DDATABASE) + SUBSTR(TIME(),1,5),GDFIELDGET("ADZ_XOPER"))')

	SX3:CLONE("CNC_NOME", "CNC_NOME",   "CNC")
	SX3:S('TAMANHO', 80)

	SX3:CLONE("CNC_NOMECL", "CNC_NOMECL",   "CNC")
	SX3:S('TAMANHO', 80)
	
	SX3:CLONE("ND_CODRESP", "ND_CODRESP",   "SND")
	SX3:S('WHEN', '')

	SX3:CLONE("C7_CC", "C7_CC",   			"SC7")
	SX3:SETOPCIONAL()

	SX3:CLONE("C7_ITEMCTA", "C7_ITEMCTA", "SC7")
	SX3:SETOPCIONAL()
	
	SX3:CLONE("C7_CONTA", "C7_CONTA", "SC7")
	SX3:SETOPCIONAL()

	SX3:CLONE("CND_RETCAC", "CND_RETCAC", 	"CND")
	SX3:S('RELACAO', '1')

	SX3:CLONE("C8_FORMAIL", "C8_FORMAIL", 	"SC8")
	SX3:S('TAMANHO', 254)

	SX3:CLONE("C8_FORNECE", "C8_FORNECE", 	"SC8")
	SX3:S('VISUAL', 'A')

	SX3:CLONE("C8_FORNOME", "C8_FORNOME", 	"SC8")
	SX3:S('VISUAL', 'V')

	SX3:CLONE("A5_NOMPROD", "A5_NOMPROD", 	"SA5")
	SX3:S('TAMANHO', 250)
	SX3:S('CONTEXT', 'V')
	
	SX3:CLONE("A5_NOMERED", "A5_NOMERED", 	"SA5")
	SX3:S('TAMANHO', 50)

	SX3:CLONE("CNB_EC05DB", "CNZ_EC05DB", "CNZ")
	SX3:CLONE("CNB_EC05CR", "CNZ_EC05CR", "CNZ")
	SX3:CLONE("CNB_EC06DB", "CNZ_EC06DB", "CNZ")
	SX3:CLONE("CNB_EC06CR", "CNZ_EC06CR", "CNZ")
	SX3:CLONE("CNB_EC07DB", "CNZ_EC07DB", "CNZ")
	SX3:CLONE("CNB_EC07CR", "CNZ_EC07CR", "CNZ")
	SX3:CLONE("CNB_EC08DB", "CNZ_EC08DB", "CNZ")
	SX3:CLONE("CNB_EC08CR", "CNZ_EC08CR", "CNZ")
	SX3:CLONE("CNB_EC09DB", "CNZ_EC09DB", "CNZ")
	SX3:CLONE("CNB_EC09CR", "CNZ_EC09CR", "CNZ")

	SX3:CLONE("ZZI_DTINCL", "ZZI_DTINCL", 	"ZZI")
	SX3:S('RELACAO', 'dDataBase')
	
	SX3:CLONE("A2_DTINC", "A2_DTINC", 	"SA2")
	SX3:S('RELACAO', 'StoD(FWLeUserlg("A2_USERLGI", 2))')

	SX3:CLONE("AOF_CODIGO",	"AOF_CODIGO", 	"AOF")
	SX3:S('TAMANHO', 9)

	SX3:CLONE("AD7_XPOLO", 	"AOF_XPOLO", 	"AOF")
	SX3:CLONE("AD7_XLIDAV",	"AOF_XLIDAV",	"AOF")
	SX3:CLONE("AD7_XCOD", 	"AOF_XCOD", 	"AOF")

	SX3:CLONE("COI_ITEM", "COI_ITEM", 	"COI")
	SX3:S('TAMANHO', 4)

	SX3:CLONE("A2_TIPO", "A2_TIPO", 	"SA2")
	SX3:S('NIVEL', 1)

	SX3:CONFIRM()

Return

/*{Protheus.doc}

Atualiza dicionario SX1

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX4()
Return


/*{Protheus.doc}

Atualiza dicionario SX5

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX5()
Return


/*{Protheus.doc}

Atualiza dicionario SX6 - Parametros

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX6()

	SX6 := UPDSX6():CREATE()

	SX6:CLONE('MV_MULNATP', 'MV_MULNATP', '        ')
	SX6:S('CONTEUD', 'F')

	SX6:CLONE('MV_PCOPROC', 'MV_PCOPROC', '        ')
	SX6:S('CONTEUD', '3')

	SX6:CLONE('MV_PCOTHRE', 'MV_PCOTHRE', '        ')
	SX6:S('CONTEUD', '3')
	
	SX6:CLONE('MV_A300THR', 'MV_A300THR', '        ')
	SX6:S('CONTEUD', '3')

	SX6:CONFIRM()

Return


/*{Protheus.doc}

Atualiza dicionario SX7 -  Gatilhos

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSX7()

	SX7 := UPDSX7():CREATE()

	//Criado programa SFCN30A1 utilizado para alimentar campos de forma automática coletando informações da proposta comercial e do cadastro de tipo de contrato. Alterado regra do gatilho de campo CN9_XREVOP sequencia 001 chamando esse fonte.
	SX7:REMOVE('CN9_XREVOP', '001')
	SX7:ADD('CN9_XREVOP', '001', 'U_SFCN30A1()', 'CN9_CLIENT')

	//A partida da versão 12 os gatilhos da rotina de proposta de venda devem na tabela ADZ devem ser feitas por mei do ponto de entrada FT600UTRIGGER.
	SX7:REMOVE('ADZ_CONDPG', '001')
	SX7:REMOVE('ADZ_CONDPG', '002')
	SX7:REMOVE('ADZ_DESCON', '001')
	SX7:REMOVE('ADZ_DESCON', '002')
	SX7:REMOVE('ADZ_PRCVEN', '001')
	SX7:REMOVE('ADZ_PRCVEN', '002')
	SX7:REMOVE('ADZ_PRCVEN', '003')
	SX7:REMOVE('ADZ_PRCVEN', '004')
	SX7:REMOVE('ADZ_PRODUT', '001')
	SX7:REMOVE('ADZ_PRODUT', '002')
	SX7:REMOVE('ADZ_PRODUT', '003')
	SX7:REMOVE('ADZ_PRODUT', '004')
	SX7:REMOVE('ADZ_PRODUT', '005')
	SX7:REMOVE('ADZ_PRODUT', '006')
	SX7:REMOVE('ADZ_QTDVEN', '001')
	SX7:REMOVE('ADZ_QTDVEN', '002')
	SX7:REMOVE('ADZ_QTDVEN', '003')
	SX7:REMOVE('ADZ_QTDVEN', '004')
	SX7:REMOVE('ADZ_QTDVEN', '005')
	SX7:REMOVE('ADZ_QTDVEN', '006')
	SX7:REMOVE('ADZ_XTBPRC', '001')
	SX7:REMOVE('ADZ_XTBPRC', '002')

	SX7:REMOVE('C1_PRODUTO', '009')
	SX7:ADD('C1_PRODUTO', '009', '_cCCUSTO', 'C1_CC')
	
	//Ajustado e testado por Alexandre Manini - Dinâmica Tecnologia
	SX7:REMOVE('C1_PRODUTO', '020')
	SX7:ADD('C1_PRODUTO', '020', 'POSICIONE("COJ",4, XFILIAL("COJ")+M->C1_CC,"COJ_COD")', 'C1_XGRPAPR')

	SX7:REMOVE('CNB_PRODUT', '009')
	SX7:REMOVE('CNB_PRODUT', '012')
	SX7:REMOVE('CNB_PRODUT', '027')

	SX7:ADD('CP_CC', '001', 'POSICIONE("COJ",4,XFILIAL("COJ")+M->CP_CC,"COJ_COD")', 'CP_XAPROV')

	SX7:ADD('CNB_QUANT', '002', 'CNB_QUANT * CNB_VLUNIT', 'CNB_VLTOT')

	SX7:REMOVE('AD9_CODCON', '001')
	SX7:ADD('AD9_CODCON', '001', 'Substr(Posicione("SU5",1,xFilial("SU5")+M->AD9_CODCON,"U5_CONTAT"),1,30)', 'AD9_NOMCON')

	SX7:CONFIRM()

Return


/*{Protheus.doc}

Atualiza dicionario SIX -  Indices

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSIX()

	SIX := UPDSIX():CREATE()

	SIX:ADD('ZCA', 'ZCA_FILIAL+ZCA_NOME', 'Descrição', 'ZCANOME')

	SIX:REMOVE('ADZ', '5')
	SIX:ADD('ADZ', 'ADZ_FILIAL+ADZ_PROPOS+ADZ_REVISA', 'Nr Proposta+Revisao', 'ADZREVISA')
 
	SIX:REMOVE('ADJ', '7')
	SIX:ADD('ADJ', 'ADJ_FILIAL+ADJ_NROPOR+ADJ_REVISA+ADJ_PROPOS+ADJ_PROD', 'Oportunidade+Revisao+No.Proposta+Produto', 'ADJREVISA')
 
	SIX:CONFIRM()

Return


/*{Protheus.doc}

Atualiza dicionario SXA

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSXA()
Return

/*{Protheus.doc}

Atualiza dicionario SXB - Consulta Padrão

@author  Alan Teles de Oliveira
@since   10/12/2018
*/
Static Function ExecSXB()

	SXB := UPDSXB():CREATE()

	//Alterado regra de filtro da pesquisa padrão XCTA2 onde constava M->CCUSTO foi alterado para cCCusto.
    SXB:ADDFILTRO('XCTA2', '(Left(xFilial("SC1"),4) == Left(CTA->CTA_FILIAL,4)) .And. (_cCCusto = CTA->CTA_CUSTO) .And. (Substr(CTA->CTA_ITEM,1,2) >= Substr(DtoS(dDataBase),3,2))')

	/*Ajustes no CRM campo AD1_STATUS voltando os status padrões 1=Aberto;2=Perdido;3=Suspenso;9=Ganha
		E incluindo o ponto de entrada FT300D1ST 
			Para adicionar os novos status 
		D=Cancelado após aceite,  E=Ganha SEM Pedido e F=Ganha COM Pedido*/
	SXB:ADDFILTRO('AD1AAT', 'AD1->AD1_STATUS == "1"')
	SXB:ADDFILTRO('AD1B', 'AD1->AD1_STATUS == "E"  .And.  Empty(Alltrim(AD1->AD1_XCONTR))')

	//Desconsiderar tabelas de preço inativas na pesquisa DA0ATI. Alterado filtro onde consta DA0_ATIVO $ ('1,2') para DA0_ATIVO $ ('1')
	SXB:ADDFILTRO('DA0ATI', '(Dtos(DA0_DATATE) >= Dtos(dDataBase) .Or. Empty(Dtos(DA0_DATATE))).And.DA0_ATIVO $ ("1")')

	//Criado função FT30F3C3 e criado a consulta padrão U5CONT e alterado a consulta do campo ZC3_CODCON no dicionario de dados. 
	SXB:ADDCONSULT('U5CONT', 'Contatos', 'Contatos', 'Contatos', 'SU5', '2')
	SXB:ADDINDICE('U5CONT', '01', '01', 'U_FT30F3C3()')
	SXB:ADDRETORN('U5CONT', '01', 'Var_IXB')
    
	SXB:ADDCONSULT('FT30F3', 'Contatos', 'Contatos', 'Contatos', 'SU5', '2')
	SXB:ADDINDICE('FT30F3', '01', '01', 'U_FT30F3A1()')
	SXB:ADDRETORN('FT30F3', '01', 'Var_IXB')	

	//
	SXB:ADDCONSULT('SU5002', 'Contatos da entidade', 'Contatos da entidade', 'Contatos da entidade', 'SU5', '2')
	SXB:ADDINDICE('SU5002', '01', '01', 'u_SF73C01F()')
	SXB:ADDRETORN('SU5002', '01', 'SU5->U5_CODCONT')

	SXB:ADDRETORN('ADZSGE', '01', 'Var_IXB')

	//Campo A1_CODSIN só permite buscar por código e cnpj. Disponibilizar consulta de Descrição. O filtro não funciona.
	SXB:ADDINDICE('ZCA', '02', '02', 'CNPJ', 'CNPJ', 'CNPJ')
	SXB:ADDCOLUNA('ZCA', '02', '01', 'Filial',	'Sucursal',	'Branch',	'ZCA_FILIAL')
	SXB:ADDCOLUNA('ZCA', '02', '02', 'Codigo', 	'Codigo', 	'Codigo', 	'ZCA_CODIGO')
	SXB:ADDCOLUNA('ZCA', '02', '03', 'Nome', 	'Nome', 	'Nome', 	'ZCA_NOME')
	SXB:ADDCOLUNA('ZCA', '02', '04', 'CNPJ', 	'CNPJ', 	'CNPJ', 	'ZCA_CGC')
	
	SXB:ADDINDICE('ZCA', '03', '03', 'Nome', 'Nome', 'Nome')
	SXB:ADDCOLUNA('ZCA', '03', '01', 'Filial',	'Sucursal',	'Branch',	'ZCA_FILIAL')
	SXB:ADDCOLUNA('ZCA', '03', '02', 'Codigo', 	'Codigo', 	'Codigo', 	'ZCA_CODIGO')
	SXB:ADDCOLUNA('ZCA', '03', '03', 'Nome', 	'Nome', 	'Nome', 	'ZCA_NOME')
	SXB:ADDCOLUNA('ZCA', '03', '04', 'CNPJ', 	'CNPJ', 	'CNPJ', 	'ZCA_CGC')
	
	SXB:CONFIRM()

Return
