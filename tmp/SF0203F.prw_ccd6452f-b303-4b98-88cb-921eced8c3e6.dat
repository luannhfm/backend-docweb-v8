#Include 'protheus.ch'
#Include 'FWMVCDEF.CH'

/*/{Protheus.doc} SF0203F
	Browser para cadastro de unidades de aprovação,
	utilizado no cadastro de grupos de aprovação.
	
@author Franklin de Brito de Oliveira
@since 24/10/2016

@type function
/*/
User Function SF0203F()

Local oBrowse

	// Instanciamento da Classe de Browse
	oBrowse := FWMBrowse():New()

	// Definição da tabela do Browse
	oBrowse:SetAlias('ZDB')

	// Titulo da Browse
	oBrowse:SetDescription('Cadastro de Unid. de Aprovação')

	// Opcionalmente pode ser desligado a exibição dos detalhes
	oBrowse:DisableDetails()

	// Ativação da Classe
	oBrowse:Activate()

Return NIL

Static Function MenuDef()

	Local aRotina := {}
	
	ADD OPTION aRotina Title 'Visualizar' 			Action 'VIEWDEF.SF0203F' OPERATION 2 ACCESS 0
	ADD OPTION aRotina Title 'Incluir'    			Action 'VIEWDEF.SF0203F' OPERATION 3 ACCESS 0
	ADD OPTION aRotina Title 'Alterar'    			Action 'VIEWDEF.SF0203F' OPERATION 4 ACCESS 0
	ADD OPTION aRotina Title 'Excluir'    			Action 'VIEWDEF.SF0203F' OPERATION 5 ACCESS 0
	ADD OPTION aRotina Title 'Imprimir'   			Action 'VIEWDEF.SF0203F' OPERATION 8 ACCESS 0
	ADD OPTION aRotina Title 'Copiar'     			Action 'VIEWDEF.SF0203F' OPERATION 9 ACCESS 0

Return ( aRotina )

Static Function ModelDef()

// Cria as estruturas a serem usadas no Modelo de Dados
Local oStruZDB 		:= FWFormStruct( 1, 'ZDB', { |x| AllTrim(x) $ 'ZDB_CODIGO, ZDB_DESCRI' }  )
Local oStruZDBGrid 	:= FWFormStruct( 1, 'ZDB', { |x| .Not. (AllTrim(x) $ 'ZDB_CODIGO, ZDB_DESCRI') }  )
Local oModel

	// Cria o objeto do Modelo de Dados
	oModel := MPFormModel():New( 'SF0203FM' )
	
	// Adiciona ao modelo um componente de formulário
	oModel:AddFields( 'ZDBMASTER', /*cOwner*/, oStruZDB )
	
	// Adiciona ao modelo uma componente de grid
	oModel:AddGrid( 'ZDBDETAIL', 'ZDBMASTER', oStruZDBGrid )
	
	// Faz relacionamento entre os componentes do model
	oModel:SetRelation( 'ZDBDETAIL', { { 'ZDB_FILIAL', 'xFilial( "ZDB" )' }, { 'ZDB_CODIGO', 'ZDB_CODIGO' } }, ZDB->( IndexKey( 1 ) ) )
	
	// Indica a chave primária
	oModel:SetPrimaryKey({"ZDB_FILIAL","ZDB_CODIGO"})
	
	// Adiciona a descrição do Modelo de Dados
	oModel:SetDescription( 'Cadastro de Unid. de Aprovação' )
	
	// Adiciona a descrição dos Componentes do Modelo de Dados
	oModel:GetModel( 'ZDBMASTER' ):SetDescription( 'Dados do Cadastro' )
	oModel:GetModel( 'ZDBDETAIL' ):SetDescription( 'Unidades de Aprovação' )

Return oModel

Static Function ViewDef()

// Cria um objeto de Modelo de dados baseado no ModelDef do fonte informado
Local oModel := FWLoadModel( 'SF0203F' )
// Cria as estruturas a serem usadas na View
Local oStruZDB 		:= FWFormStruct( 2, 'ZDB', { |x| AllTrim(x) $ 'ZDB_CODIGO, ZDB_DESCRI' }  )
Local oStruZDBGrid 	:= FWFormStruct( 2, 'ZDB', { |x| .Not. (AllTrim(x) $ 'ZDB_CODIGO, ZDB_DESCRI') }  )
// Interface de visualização construída
Local oView
	
	// Cria o objeto de View
	oView := FWFormView():New()
	
	// Define qual Modelo de dados será utilizado
	oView:SetModel( oModel )
	
	// Adiciona no nosso View um controle do tipo formulário (antiga Enchoice)
	oView:AddField( 'VIEW_ZDB', oStruZDB, 'ZDBMASTER' )
	
	//Adiciona no nosso View um controle do tipo Grid (antiga Getdados)
	oView:AddGrid( 'VIEW_ZDBGRID', oStruZDBGrid, 'ZDBDETAIL' )
	
	// Cria um "box" horizontal para receber cada elemento da view
	oView:CreateHorizontalBox( 'SUPERIOR', 15 )
	oView:CreateHorizontalBox( 'INFERIOR', 85 )
	
	// Relaciona o identificador (ID) da View com o "box" para exibição
	oView:SetOwnerView( 'VIEW_ZDB', 'SUPERIOR' )
	oView:SetOwnerView( 'VIEW_ZDBGRID', 'INFERIOR' )
	
	// Define campo incremental
	oView:AddIncrementField( 'VIEW_ZDBGRID', 'ZDB_ITEM' )

Return oView