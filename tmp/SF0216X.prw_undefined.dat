#Include 'Protheus.ch'
#INCLUDE "APWIZARD.CH"
#include "totvs.ch"
#include 'fileio.ch'
//#Include 'directory.ch'
#Include 'COMMON.ch'

#DEFINE MV_XLOCTR GETNEWPAR("MV_XLOCTR","\system\doc\com\tr") //Local a ser salvo Anexo TR
/*/{Protheus.doc} SF0215X
@author Newton Silva - J2A Consultoria
@since 16/11/2016
@version 1.0
@description Tela de aprovacao do documento.
Apenas tem acesso a tela o usuario que estiver no grupo de compradores
/*/
//+---------------------------------------------+
//|Usuario participante do grupo de compradores	|
//+---------------------------------------------+
User Function SF0216X(_pNSC)
	Local oBrw
	Local oDlg
	Local nX 		:= 0
	Local aCol 		:= {}
	Local aRow 		:= {}
	Local lRet 		:= .T.
	Local _cCamin 	:= '' 
	Local _cObjCod 	:= ''
	Local _cObjOri 	:= ''
	//+----------------------------------------------------
	//| Valida Permisao de Usuario no Grupo de compradores 
	//| E Status na SC1, C1_APROV == 'L'
	//+----------------------------------------------------
	if !(U_VldUsTR())
		lRet := .f.
		Return .f.
	endif
	DbSelectArea("ZBA")
	DbSetOrder(1)
	//aRow := {{"","","","","",CTOD("  /  /  "),""",""}}

   	//Tela Dialogo
	DEFINE MSDIALOG oDlg TITLE "Analise TR" FROM 0,0 TO 400,800 PIXEL
	//TWBrowse():New(nRow, nCol, nWidth, nHeigth, bFields, aHeader, aColSize, oDlg, cField, uValue1, uValue2, bChange, bDblClick, bRClick, oFont, oCursor, nClrFore, nClrBack, cMsg, lUpdate, cAliasZBA, lpixel, bWhen, lDesign, bValid)
	oBrw:=TWBrowse():New(0,0,400,180,,,,oDlg,,,,,,,,,,,,,,.T.)
	oBrw:SetArray(aRow)
	oBrw:Align := CONTROL_ALIGN_TOP
	//Num SC, Data, Hora,Cod User,Nome User,Codigo, Nome Ori., Local
	Aadd(aCol, {"Num Sc",			"","",040,0,".F.","","C","",""})
	Aadd(aCol, {"Data",				"","",060,0,".F.","","D","",""})
	Aadd(aCol, {"Hora",				"","",060,0,".F.","","C","",""})
	Aadd(aCol, {"Cod Usuario",		"","",060,0,".F.","","C","",""})
	Aadd(aCol, {"Nome Usuario",		"","",080,0,".F.","","C","",""})
	Aadd(aCol, {"Codigo", 			"","",050,0,".F.","","C","",""})
	Aadd(aCol, {"Nome Ori.", 		"","",080,0,".F.","","C","",""})
	Aadd(aCol, {"Local",			"","",080,0,".F.","","C","",""})

	//								1		2		3		4			5		6		7		8		9		10		11		12	13		14
	//oBrw:AddColumn(TCColumn():New(cHead, bData, cPicture, bClrFore, bClrBack, cAlign, nWidth, lbitmap, ledit, cMsg, bValid, cErr, llite, cOrder))
	oBrw:AddColumn(TCColumn():New(aCol[ 1,1],{|| aRow[oBrw:nAt, 1]},aCol[ 1,3],,,"LEFT", aCol[ 1,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 2,1],{|| aRow[oBrw:nAt, 2]},aCol[ 2,3],,,"LEFT", aCol[ 2,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 3,1],{|| aRow[oBrw:nAt, 3]},aCol[ 3,3],,,"LEFT", aCol[ 3,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 4,1],{|| aRow[oBrw:nAt, 4]},aCol[ 4,3],,,"LEFT", aCol[ 4,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 5,1],{|| aRow[oBrw:nAt, 5]},aCol[ 5,3],,,"LEFT", aCol[ 5,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 6,1],{|| aRow[oBrw:nAt, 6]},aCol[ 6,3],,,"LEFT", aCol[ 6,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 7,1],{|| aRow[oBrw:nAt, 7]},aCol[ 7,3],,,"LEFT", aCol[ 7,4],.F.,.F.,,,,.F.,))
	oBrw:AddColumn(TCColumn():New(aCol[ 8,1],{|| aRow[oBrw:nAt, 8]},aCol[ 8,3],,,"LEFT", aCol[ 8,4],.F.,.F.,,,,.F.,))
   	
   	//Botões 
   	@ 184,220 BUTTON "Aprovar"			SIZE 040,012 OF oDlg PIXEL ACTION {|| AprvTR(_pNSC),oDlg:Refresh(),oDlg:End(),.T.} PIXEL
	@ 184,265 BUTTON "Reprovar" 		SIZE 040,012 OF oDlg PIXEL ACTION {|| ReprvTR(_pNSC),oDlg:Refresh(),oDlg:End(),.T.} PIXEL
	@ 184,310 Button "Baixar Anexo" 	Size 040,012 OF oDlg PIXEL ACTION {|| _cCamin := cGetFile("", "Salvar Arquivo no Terminal", 0 , GetTempPath(), .F., GETF_LOCALFLOPPY+GETF_LOCALHARD+GETF_RETDIRECTORY, .F.),_cObjCod := aRow[oBrw:nAt,06],_cObjOri := aRow[oBrw:nAt,07],BaixZBA(_cCamin,_cObjCod,_cObjOri),oDlg:Refresh(), .t.} PIXEL
	@ 184,355 BUTTON "Sair" 			SIZE 040,012 OF oDlg PIXEL ACTION {|| oDlg:End()} PIXEL 
	
	ACTIVATE MSDIALOG oDlg ON INIT Processa({|| LoadRowsA(oBrw, @aRow,_pNSC),oDlg:Refresh()}, "Obtendo dados", "Aguarde...", .T.) CENTERED
	
	nX := Len(aRow)
	aRow := {}
Return lRet

/*/{Protheus.doc} AprvTR
@author Newton Silva - J2A Consultoria
@since 22/11/2016
@version 1.0
@description Aprova Anexo TR
/*/
Static Function AprvTR(_pNSC)
	Local _lRet := .T.
	Local _oDlgA
	Local _oGet
	Local _cCont := ''
	Local _cTRAprv := ''
	Local _cJust   := ''
	
	IF MsgYesNo("Deseja realmente Aprovar TR","Analise TR")
		dbSelectarea('SC1')
		SC1->(dbSetOrder(1))
		If SC1->(dbSeek(xFilial('SC1')+_pNSC))
			dbSelectarea('ZF6')
			ZF6->(dbSetOrder(2))//Num+Sttr]
			If ZF6->(dbSeek(xfilial('ZF6')+_pNSC+"A"))
				While !ZF6->(eof()) .and. xfilial('ZF6') == ZF6->ZF6_FILIAL .AND. ZF6->ZF6_NUMSC == _pNSC .AND. ZF6->ZF6_STTR == "A"
					_cJust := ZF6->ZF6_JUST
					ZF6->(dbSkip())
				Enddo 
				_cTRAprv := _cJust
			Endif
			//+-------------+
			//|	Monta Tela	|
			//+-------------+
			DEFINE DIALOG _oDlgA FROM 0,0 TO 250,400 TITLE "Justificativa Aprovacao" OF oMainWnd PIXEL
			
			@ 002,002 GROUP TO 022,200 LABEL "" OF _oDlgA PIXEL
			
			@ 004,004 Say "Número da SC : "+ SubsTR(_pNSC,1,80) SIZE 197,008 OF _oDlgA PIXEL //COLOR CLR_HBLUE
			
			@ 014,004 Say "Descreva a Justificativa da Aprovação " SIZE 197,008 OF _oDlgA PIXEL //COLOR CLR_HBLUE
			
			@ 024,004 Get _oGet Var _cTRAprv SIZE 198,062 MEMO OF _oDlgA PIXEL

			@ 108,103 BUTTON "Confirmar" SIZE 030,013 PIXEL OF _oDlgA ACTION ( iif(VldcAprv(_pNSC,_cTRAprv),_oDlgA:End(),_lRet := .f.) )
			@ 108,136 BUTTON "Sair" SIZE 030,013 PIXEL OF _oDlgA ACTION ( _oDlgA:End() )
			
			//_oGet:lReadOnly := .T. //Habilita apenas Visualizacao
			
			ACTIVATE MSDIALOG _oDlgA 
		
		Else
			Alert('Registro nao encontrado')
		Endif
	Else
		Alert('Cancelado pelo usuario '+__cUserID)
	EndIf			

Return _lRet

Static Function VldcAprv(_pNSC,_cTRAprv)
	Local lRet := .f.
	If !empty(_cTRAprv)
		VldApTR(_pNSC,_cTRAprv)
		lRet := .t.
	Else
		Alert('Conteúdo da Justificativa não pode ser vazio! Favor preencher.')
	Endif
Return lRet

/*/{Protheus.doc} VldApTR
@author Newton Silva - J2A Consultoria
@since 01/12/2016
@version 1.0
@description Enviar WF ao Solicitante para conhecimento
/*/
Static Function VldApTR(_pNSC,_pTRAprv)
	Local lRet 		:= .t.
	Local cUser 	:= cUserName
	Local _nW 		:= 0	
	Local _aItem 	:= {}
	Local aAreaSC1
	//Adicionado condição for 
	dbSelectarea('SC1')
	SC1->(dbSetOrder(1))
	If SC1->(dbSeek(xFilial('SC1')+_pNSC))
		aAreaSC1	:= SC1->(GetArea())
		//SC1->(dbGoTop()) //Posiciona no inicio da tabela
		While !SC1->(EOF()) .and. xFilial('SC1') == SC1->C1_FILIAL .and. SC1->C1_NUM == _pNSC
			Aadd(_aItem,{SC1->C1_ITEM})
			SC1->(dbSkip())
		Enddo
		RestArea(aAreaSC1)
		For _nW := 1 to Len(_aItem)
			If Reclock("SC1",.F.)
				SC1->C1_XSTTR := 'A'
				SC1->(MsUnLock())
			endif
			SC1->(dbSkip())
		Next _nW
		//+---------------------------------------------+
		//|	Registro anexo da Aprovação do TR			|
		//+---------------------------------------------+
		DbSelectArea("ZF6")
		ZF6->(dbSetorder(1))//num+item+cod
		if RecLock("ZF6",.T.)
			ZF6->ZF6_FILIAL := xFilial('ZF6')
			ZF6->ZF6_NUMSC 	:= _pNSC
			ZF6->ZF6_CODIGO := _pNSC
			ZF6->ZF6_PROCES := "TR Aprovada"
			ZF6->ZF6_DATA 	:= Date()
			ZF6->ZF6_HORA 	:= Time()
			ZF6->ZF6_USUARI := cUser
			ZF6->ZF6_STTR 	:= 'A'
			ZF6->ZF6_JUST	:= _pTRAprv
			ZF6->(MsUnLock())
			
			U_SF0219X(_pNSC,"A",_pTRAprv,cUser)
		Endif
	Endif

Return (lRet)

/*/{Protheus.doc} ReprvTR
@author Newton Silva - J2A Consultoria
@since 22/11/2016
@version 1.0
@description Reprova Anexo TR
/*/
Static Function ReprvTR(_pNSC)
	Local _lRet := .T.
	Local _oDlgR
	Local _oGet
	Local _cTRRepr := ''
	Local _cJust   := ''

	IF MsgYesNo("Deseja realmente Reprovar TR","Analise TR")
		dbSelectarea('SC1')
		SC1->(dbSetOrder(1))
		If SC1->(dbSeek(xFilial('SC1')+_pNSC))
			dbSelectarea('ZF6')
			ZF6->(dbSetOrder(2))//Num+Sttr]
			If ZF6->(dbSeek(xfilial('ZF6')+_pNSC+"R"))
				While !ZF6->(eof()) .and. xfilial('ZF6') == ZF6->ZF6_FILIAL .AND. ZF6->ZF6_NUMSC == _pNSC .AND. ZF6->ZF6_STTR == "R"
					_cJust := ZF6->ZF6_JUST
					ZF6->(dbSkip())
				Enddo 
				_cTRRepr := _cJust
			Endif
			//+-------------+
			//|	Monta Tela	|
			//+-------------+
			DEFINE DIALOG _oDlgR FROM 0,0 TO 250,400 TITLE "Justificativa Reprovacao TR" OF oMainWnd PIXEL
			
			@ 002,002 GROUP TO 022,200 LABEL "" OF _oDlgR PIXEL
			
			@ 004,004 Say "Número da SC : "+ SubsTR(_pNSC,1,80) SIZE 197,008 OF _oDlgR PIXEL //COLOR CLR_HBLUE
			 
			@ 014,004 Say "Descreva a Justificativa da Reprovação " SIZE 197,008 OF _oDlgR PIXEL //COLOR CLR_HBLUE 
			
			@ 024,004 Get _oGet Var _cTRRepr SIZE 198,062 MEMO OF _oDlgR PIXEL

			@ 108,103 BUTTON "Confirmar" SIZE 030,013 PIXEL OF _oDlgR ACTION ( iif(VldcRepr(_pNSC,_cTRRepr),_oDlgR:End(),_lRet := .f.) )
			@ 108,136 BUTTON "Sair" SIZE 030,013 PIXEL OF _oDlgR ACTION ( _oDlgR:End() )
			//_oGet:lReadOnly := .T. //Habilita apenas Visualizacao
			
			ACTIVATE MSDIALOG _oDlgR
			
		Else
			Alert('Registro nao encontrado')
		Endif
	Else
		Alert('Cancelado pelo usuario '+__cUserID)
	EndIf
Return

Static Function VldcRepr(_pNSC,_cTRRepr)
	Local lRet := .f.
	If !empty(_cTRRepr)
		VldRepTR(_pNSC,_cTRRepr)
		lRet := .t.
	Else
		Alert('Conteúdo da Justificativa não pode ser vazio! Favor preencher.')
	Endif
Return lRet

/*/{Protheus.doc} VldRepTR
@author Newton Silva - J2A Consultoria
@since 01/12/2016
@version 1.0
@description Enviar Wf para o solicitante para correção
/*/
Static Function VldRepTR(_pNSC,_pTRRepr)
	Local lRet 	:= .t.
	Local cUser := cUserName
	Local _aItem := {}
	Local _nW 	:= 0	
	Local aAreaSC1 
	
	dbSelectarea('SC1')
	SC1->(dbSetOrder(1))
	If SC1->(dbSeek(xFilial('SC1')+_pNSC))
		aAreaSC1	:= SC1->(GetArea())
		//SC1->(dbGoTop()) //Posiciona no inicio da tabela
		While !SC1->(EOF()) .and. xFilial('SC1') == SC1->C1_FILIAL .and. SC1->C1_NUM == _pNSC
			Aadd(_aItem,{SC1->C1_ITEM})
			SC1->(dbSkip())
		Enddo
		
		RestArea(aAreaSC1)
		For _nW := 1 to Len(_aItem)
			If Reclock("SC1",.F.)
				SC1->C1_XSTTR := 'R'
				SC1->(MsUnLock())
			endif
			SC1->(dbSkip())
		Next _nW
		//+---------------------------------------------+
		//|	Registro anexo da Reprovação do TR			|
		//+---------------------------------------------+
		DbSelectArea("ZF6")
		ZF6->(dbSetorder(1))//num+item+cod
		if RecLock("ZF6",.T.)
			ZF6->ZF6_FILIAL := xFilial('ZF6')
			ZF6->ZF6_NUMSC 	:= _pNSC
			ZF6->ZF6_CODIGO := _pNSC
			ZF6->ZF6_PROCES := "TR Reprovada"
			ZF6->ZF6_DATA 	:= Date()
			ZF6->ZF6_HORA 	:= Time()
			ZF6->ZF6_USUARI := cUser
			ZF6->ZF6_STTR 	:= 'R'
			ZF6->ZF6_JUST   := _pTRRepr
			ZF6->(MsUnLock())
			
			U_SF0219X(_pNSC,"R",_pTRRepr,cUser)
		Endif
	Endif
Return (lRet)

/*/{Protheus.doc} LoadRows
@author Newton Silva - J2A Consultoria
@since 18/11/2016
@version 1.0
@description Carregar Grid Inicial
/*/

Static Function LoadRowsA(oBrw, aRow, _pNSC)
	Private _cAliasZBAA  := GetNextAlias()
	Procregua(0)
	IncProc()
	ProcessMessages()
	_cAliasZBAA := CarQryA(_pNSC)

	//aRow := {{"","","","","",CTOD("  /  /  "),"","",""}}
	While !(_cAliasZBAA)->(Eof())
		//Num SC, Data, Hora,Cod User,Nome User,Codigo, Nome Ori., Local
		aAdd(aRow, {Trim((_cAliasZBAA)->ZBA_NUMSC),;
					STOD((_cAliasZBAA)->ZBA_DATA),;
					Trim((_cAliasZBAA)->ZBA_HORA),;
					Trim((_cAliasZBAA)->ZBA_CODUSE),;
					Trim((_cAliasZBAA)->ZBA_NOMUSE),;
					Trim((_cAliasZBAA)->ZBA_CODIGO),;
					Trim((_cAliasZBAA)->ZBA_NOMORI),;
					Trim((_cAliasZBAA)->ZBA_LOCAL)})
					
		(_cAliasZBAA)->(DbSkip())
	EndDo
	(_cAliasZBAA)->(DbCloseArea())
	
	If ValType(oBrw) == "O"
		If Empty(aRow)
			aRow := {{"","","","","",CTOD("  /  /  "),"","",""}}
			oBrw:BHeaderClick := {|| Nil}
			oBrw:bLDblClick := {|| Nil}
			oBrw:cToolTip:="Vazio"
		Else
			oBrw:BHeaderClick := {|o,n| oX:=o, nX:=n, TWBOrder(oX,nX)}
			oBrw:bLDblClick := {|o,c| iif(c==1, DocView(oBrw), Nil)} //Detalhes
			oBrw:cToolTip:="Linhas: ("+AllTrim(Transform(Len(aRow),"@E 999,999,999"))+") Ordem: Padrão"
		Endif
		oBrw:SetArray(aRow)
		oBrw:Refresh()
	Endif

Return(Nil)
  
/*/{Protheus.doc} CarQry
@author Newton Silva - J2A Consultoria
@since 18/11/2016
@version 1.0
@description Monta a query de vinculo no ciclo da SC
/*/
Static Function CarQryA(_pNSC)
	Local _cQry := ''
	Private cAliasQryZBAA 	:= GetNextAlias()
	
	//Anexo TR tabela ZBA  
	//ZBA_STATUS,ZBA_NUMSC,ZBA_CODIGO,ZBA_DESCRI,ZBA_LOCAL,ZBA_DATA,ZBA_HORA,ZBA_CODUSE,ZBA_NOMUSE,ZBA_USERGI
	
	_cQry := " SELECT DISTINCT ZBA.ZBA_NUMSC, ZBA.ZBA_CODIGO, ZBA.ZBA_NOMORI, ZBA.ZBA_LOCAL, ZBA.ZBA_DATA, ZBA.ZBA_HORA, ZBA.ZBA_CODUSE, ZBA.ZBA_NOMUSE, SC1.C1_NUM "+ CRLF
	_cQry += " FROM " + RetSqlName("ZBA") + " ZBA "+ CRLF
	_cQry += " LEFT JOIN " + RetSQLName("SC1")  + " SC1 "+ CRLF
	_cQry += " ON SC1.C1_FILIAL = ZBA.ZBA_FILIAL "+ CRLF
	_cQry += " AND SC1.C1_NUM = ZBA.ZBA_NUMSC " + CRLF
	_cQry += " AND SC1.D_E_L_E_T_ = ' '" + CRLF
	_cQry += " WHERE ZBA.D_E_L_E_T_ = ' '" + CRLF
	_cQry += " AND SC1.C1_NUM = '"+ trim(_pNSC)+"' "+ CRLF
	//_cQry += " AND SC1.C1_ITEM = '0001' "+ CRLF
	_cQry += " AND SC1.C1_FILIAL = '"+ xFilial("SC1")+"'"+ CRLF
	
	//_cQry := StrTran(_cQry, "+", "||") 	//Converte p/ Oracle
	
	MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQry)//Salva _cQry montada
	DBUseArea(.T., "TOPCONN", TcGenQry(,,ChangeQuery(_cQry)),cAliasQryZBAA, .F.,.F.)
    
Return(cAliasQryZBAA)

/*/{Protheus.doc} VldAltSolic
@author Newton Silva - J2A Consultoria
@since 21/11/2016
@version 1.0
@description Verifica se usuario tem ou nao acesso
Param MV_XGPOTR
/*/
User Function VldUsTR()
	Local aAreaSC1	:= {}
	Local aAreaSAJ	:= {}
	Local aGrupSolic := {}
	Local cUser    	:= RetCodUsr()
	Local nLoop    	:= 0
	Local lRet 		:= .f.
	Local cSolic	:= GetMv("MV_XGPOTR")
	Local lPertGrp 	:= .F. //Pertence ao mesmo grupo do criador da SC
	Local _aItem 	:= {}
	Local _nW := 0
	
	If ! Empty(cSolic)
		DbSelectArea("SAJ")                       
		DbSetOrder(1)
		If (MsSeek(xFilial("SAJ")+cSolic))
			aAreaSAJ	:= SAJ->(GetArea())
			//SAJ->(dbGoTop()) //Posiciona no inicio da tabela
			While !SAJ->(EOF()) .AND. SAJ->AJ_GRCOM == cSolic
				Aadd(_aItem,{SAJ->AJ_ITEM})
				SAJ->(dbSkip())
			EndDo
			
			RestArea(aAreaSAJ)
			For _nW:= 1 to Len(_aItem)
				If __cUserID == SAJ->AJ_USER
					lRet := .T.
					Exit
				Endif
				SAJ->(dbSkip())
			Next _nW
			
			If !lRet
				Alert('Usuario não pertence ao Grupo de Analistas TR!')
			Endif
		Else
			Alert('Não encontrado')
			lRet := .f.
		EndIf
	Else
		Alert('Parâmetro de Gpo TR Vazio!')
		lRet := .f.
	EndIf
	aAreaSC1	:= SC1->(GetArea())
	DbSelectarea('SC1')
	SC1->(DbSetOrder(1))
	If SC1->(DbSeek(xFilial('SC1')+ SC1->C1_NUM)) .and. SC1->C1_XSTTR != 'N' //TR em analise
		if SC1->C1_XSTTR = 'R'
			Alert('Documento Reprovado, necessário que o Solicitante anexe um novo documento!')
		else
			Alert('Documento não se encontra em fase de Analise.')
			lRet := .F.
		endif
	Endif
	//Necessidade futura: Caso haja alterações na SC, a mesma deve mudar o Status para ser analisada, quando for Bloqueada, ou Analisada novamente.
	RestArea(aAreaSC1)
Return	lRet

/*/{Protheus.doc} BaixZBA
@author Newton Silva - J2A Consultoria
@since 22/11/2016
@version 1.0
@description Baixa arquivo para local indicado no Terminal do usuario
/*/
Static Function BaixZBA(_pCamin,_pObjMod,_pObjOri)//NOME DO ARQUIVO E LOCAL A SER SALVO
	Local lRet      := .t.
	Local _cExt := ''
	
	If Empty(_pCamin)
		Alert('Nao selecionado nenhum Caminho!')
		Return .f.
	Endif
	//_pObjMod - Não existe mais no Browser, necessario criar nomenclatura para busca do possivel sequencial e nome do arquivo.
	_cExt := '.pdf'
	//Transfere com nome original do arquivo
	If File(MV_XLOCTR+_pObjMod+_cExt)//Arquivo deve existir no servidor
		If File(_pCamin+_pObjOri)
			//MsgStop("Arquivo já existente neste local!", )
			If FERASE(_pCamin+_pObjOri) == -1 //Deleta Arquivo no Terminal do Usuario
				MsgStop('Verifique se o arquivo esta aberto no Terminal ['+   str(ferror(),4)+'] ')
			Else
				//MsgStop('Arquivo deletado com sucesso')
			Endif
		Endif
	
		//------------------------------------------------
		//Copia Arquivo do Server p/ Maquina _cCamin+_cArq
		//possivel controlar a quantidade de vezes que o documento é impresso
		//------------------------------------------------
		Processa({|| CpyS2T(MV_XLOCTR+_pObjMod+_cExt, _pCamin) }, "Transferindo objeto Server to Terminal", "Aguarde...", .T.)
		
		//No processo de copia ja realiza a mudança do nome do arquivo
		nStatus := freName(_pCamin+_pObjMod+_cExt,_pCamin+_pObjOri)
		If nStatus == -1
			MsgStop('Falha na mudanca do nome do Arquivo '+ Str(ferror(),4))
		Endif
	   	If File(_pCamin+_pObjOri)
	     	//MsgInfo("Arquivo transferido com sucesso!"+CRLF+_pCamin+_pObjOri)
	   	Else
	   		MsgInfo("Arquivo já existe no local indicado!"+CRLF+_pCamin+_pObjOri)
	   	Endif
	else
		Alert('Arquivo não existe no Servidor')
	Endif
Return lRet 

/*/{Protheus.doc} TWBOrder
@author Newton Silva - J2A Consultoria
@since 01/12/2016
@version 1.0
@description Ordenar colunas
/*/
Static Function TWBOrder(o,n)
	Local cX := iif(Empty(o:aheaders), o:aColumns[n]:cHeading, o:aheaders[n])
	iif(Empty(o:Cargo), o:Cargo:={0,0,Seconds()-1}, Nil)
	If Seconds() > o:Cargo[3]+1
		If o:Cargo[2] == 0 .Or. o:Cargo[1] != n
			ASORT(o:aArray,,,{|x,y| x[n] < y[n]})
			o:Cargo := {n,1,Seconds()}
		Else
			ASORT(o:aArray,,,{|x,y| x[n] > y[n]})
			o:Cargo := {n,0,Seconds()}
		Endif
		o:cToolTip:="Linhas: ("+AllTrim(Transform(Len(o:aArray),"@E 999,999,999"))+") Ordem: #"+AllTrim(Str(n))+" "+AllTrim(cX)+" "+iif(o:cargo[2]==0, "Desc.", "Asc.")
		o:Refresh()
		o:SetFocus()
	Endif
Return(Nil)