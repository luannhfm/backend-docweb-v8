#Include 'Protheus.ch'

/*/{Protheus.doc} SFAJUSX1
@description Cria ou altera grupo de pergunta na SX1.
@type User Function
@author Alan Teles de Oliveira
@since 16/01/2019
@version 12.1.17
@param p_cPerg, characters, nome do grupo de perguntas.
@param p_aPergs, array, relação de pergutnas.
/*/
User Function SFAJUSX1(p_cPerg, p_aPergs)

    Local aCposSX1	:= {}
    Local nX 		:= 0
    Local lAltera	:= .F.
    Local cKey		:= ""
    Local nj		:= 1
    Local aArea		:= GetArea()
    Local lUpdHlp   := .T.

    aCposSX1 := {"X1_PERGUNT", "X1_PERSPA", "X1_PERENG", "X1_VARIAVL", "X1_TIPO", "X1_TAMANHO", "X1_DECIMAL", "X1_PRESEL", "X1_GSC", "X1_VALID", "X1_VAR01", "X1_DEF01", "X1_DEFSPA1", "X1_DEFENG1", "X1_CNT01", "X1_VAR02", "X1_DEF02", "X1_DEFSPA2", "X1_DEFENG2", "X1_CNT02", "X1_VAR03", "X1_DEF03", "X1_DEFSPA3", "X1_DEFENG3", "X1_CNT03", "X1_VAR04", "X1_DEF04", "X1_DEFSPA4", "X1_DEFENG4", "X1_CNT04", "X1_VAR05", "X1_DEF05", "X1_DEFSPA5", "X1_DEFENG5", "X1_CNT05", "X1_F3", "X1_GRPSXG", "X1_PYME", "X1_HELP", "X1_PICTURE"}

    dbSelectArea("SX1")
    SX1->(dbSetOrder(1))

    p_cPerg := PadR(p_cPerg, Len(X1_GRUPO), " ")

    For nX := 1 to Len(p_aPergs)

        lAltera := .F.
        
        If SX1->(dbSeek(p_cPerg + Right(Alltrim(p_aPergs[nX][11]), 2)))

            If (ValType(p_aPergs[nX][Len(p_aPergs[nx])]) = "B" .and. Eval(p_aPergs[nX][Len(p_aPergs[nx])], p_aPergs[nX]))

                p_aPergs[nX]    := ASize(p_aPergs[nX], Len(p_aPergs[nX]) - 1)
                lAltera         := .T.

            Endif

        Endif
        
        If !lAltera .and. Found() .and. SX1->X1_TIPO <> p_aPergs[nX][5]		

            lAltera := .T.

        Endif	
        
        If !Found() .Or. lAltera

            RecLock("SX1", !lAltera)
                Replace SX1->X1_GRUPO with p_cPerg
                Replace SX1->X1_ORDEM with Right(ALLTRIM(p_aPergs[nX][11]), 2)

                For nj:=1 to Len(aCposSX1)

                    If 	Len(p_aPergs[nX]) >= nJ .and. p_aPergs[nX][nJ] <> Nil .and. FieldPos(AllTrim(aCposSX1[nJ])) > 0 .and. ValType(p_aPergs[nX][nJ]) != "A"
                    
                        Replace &(AllTrim(aCposSX1[nJ])) With p_aPergs[nx][nj]
                    
                    Endif

                Next

            MsUnlock()

        Endif

        cKey := "P." + AllTrim(X1_GRUPO) + AllTrim(X1_ORDEM) + "."

        If ValType(p_aPergs[nx][Len(p_aPergs[nx])]) = "A"

            aHelpSpa := p_aPergs[nx][Len(p_aPergs[nx])]

        Else

            aHelpSpa := {}

        Endif
        
        If ValType(p_aPergs[nx][Len(p_aPergs[nx]) - 1]) = "A"

            aHelpEng := p_aPergs[nx][Len(p_aPergs[nx]) - 1]

        Else

            aHelpEng := {}

        Endif

        If ValType(p_aPergs[nx][Len(p_aPergs[nx]) - 2]) = "A"

            aHelpPor := p_aPergs[nx][Len(p_aPergs[nx]) - 2]

        Else

            aHelpPor := {}

        Endif

        lUpdHlp := (!Empty(aHelpSpa) .and. !Empty(aHelpEng) .and. !Empty(aHelpPor))

        PutSX1Help(cKey, aHelpPor, aHelpEng, aHelpSpa, lUpdHlp)
        
    Next

    RestArea(aArea)

Return