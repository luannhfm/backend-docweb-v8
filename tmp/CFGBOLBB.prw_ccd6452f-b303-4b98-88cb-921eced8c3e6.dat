#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'FWMVCDEF.CH'
#INCLUDE 'IDATOOLS.CH'


#DEFINE CR Chr(13) + Chr(10)

/*/{Protheus.doc} CFGBOLBB
@description Formulário Configuração Integração Boletos Banco do Brasil

@author Helitom Silva 
@since  23/07/2020

@type User Function
@obs Nil
/*/
User Function CFGBOLBB()

	Private oBrowse

	Private aRotina := MenuDef()

	oBrowse := FWMBrowse():New()
	oBrowse:SetAlias('ZHS') 
	//oBrowse:SetSeeAll( .F. )
	//oBrowse:SetChgAll( .F. )	      
	oBrowse:SetMenuDef('CFGBOLBB')	
	oBrowse:SetDescription('Configuração Integração Boletos Banco do Brasil')
	oBrowse:DisableDetails()
	oBrowse:ForceQuitButton()
	
	oBrowse:Activate()

Return


/*/{Protheus.doc} MenuDef
@description Criação do Menu.

@author  Helitom Silva 
@since   23/07/2020

@return  aRotina, Array, Opcões do Menu do formulário

/*/
Static Function MenuDef()

	Local aRotina := {}

	aAdd( aRotina, { "Pesquisar" , "PesqBrw"         , 0, 1, 0, .T. } )
	aAdd( aRotina, { "Visualizar", "ViewDef.CFGBOLBB", 0, 2, 0, .T. } )
	//aAdd( aRotina, { "Reinstalar API", "U_CFGBOLRI()", 0, 2, 0, .T. } )
	aAdd( aRotina, { "Incluir"   , "ViewDef.CFGBOLBB", 0, 3, 0, .T. } )
	aAdd( aRotina, { "Alterar"   , "ViewDef.CFGBOLBB", 0, 4, 0, .T. } )
	aAdd( aRotina, { "Excluir"   , "ViewDef.CFGBOLBB", 0, 5, 0, .T. } )
	aAdd( aRotina, { "Imprimir"  , "ViewDef.CFGBOLBB", 0, 8, 0, .T. } )

Return aRotina


/*/{Protheus.doc} ModelDef
@description Criação do Modelo de dados

@author  Helitom Silva 
@since   23/07/2020

@return oModel, Objeto, Objeto de modelo de dados

/*/
Static Function ModelDef()

	Local oStruZHSM := FWFormStruct( 1, 'ZHS', {|p_cField| .T.} )
	Local oModel

	oStruZHSM:SetProperty('ZHS_AMBIEN', MODEL_FIELD_OBRIGAT, .T.)
	oStruZHSM:SetProperty('ZHS_URLTOK', MODEL_FIELD_OBRIGAT, .T.)
	oStruZHSM:SetProperty('ZHS_URLCOB', MODEL_FIELD_OBRIGAT, .T.)
	oStruZHSM:SetProperty('ZHS_ID', MODEL_FIELD_OBRIGAT, .T.)
	oStruZHSM:SetProperty('ZHS_APPKEY', MODEL_FIELD_OBRIGAT, .T.)
	oStruZHSM:SetProperty('ZHS_REGTOK', MODEL_FIELD_OBRIGAT, .T.)

	oModel := MPFormModel():New('MCFGINTB')

	oModel:AddFields( 'ZHSMASTER', /*cOwner*/, oStruZHSM)
	oModel:GetModel("ZHSMASTER"):SetDescription("Integração Boletos Banco do Brasil")
	oModel:SetPrimaryKey({"ZHS_FILIAL", "ZHS_ID", "ZHS_APPKEY"})
	
Return oModel


/*/{Protheus.doc} ViewDef
@description Criação da View

@author Helitom Silva
@version versao
@since 23/07/2020

@return oView, Objeto, Objeto com Visual da Rotina

/*/      
Static Function ViewDef()

	Local oStruZHSM	:= FWFormStruct(2, "ZHS", {|p_cField| .T.})
	Local oModel    := FWLoadModel( 'CFGBOLBB' )

	Local oView		

	oStruZHSM:AddGroup( 'CONFIG', 'Configuração', '', 2 )
	oStruZHSM:AddGroup( 'HISTOR', 'Histórico', '', 2 )

	oStruZHSM:SetProperty( 'ZHS_URLTOK', MVC_VIEW_GROUP_NUMBER, 'CONFIG' )
	oStruZHSM:SetProperty( 'ZHS_URLCOB', MVC_VIEW_GROUP_NUMBER, 'CONFIG' )
	oStruZHSM:SetProperty( 'ZHS_ID', MVC_VIEW_GROUP_NUMBER, 'CONFIG' )
	oStruZHSM:SetProperty( 'ZHS_APPKEY', MVC_VIEW_GROUP_NUMBER, 'CONFIG' )
	oStruZHSM:SetProperty( 'ZHS_REGTOK', MVC_VIEW_GROUP_NUMBER, 'CONFIG' )

	oStruZHSM:SetProperty( 'ZHS_CLIID', MVC_VIEW_GROUP_NUMBER, 'HISTOR' )
	oStruZHSM:SetProperty( 'ZHS_CLIID', MVC_VIEW_TITULO, 'Retorno ClientID' )	

	oStruZHSM:SetProperty( 'ZHS_CLIIDA', MVC_VIEW_GROUP_NUMBER, 'HISTOR' )
	oStruZHSM:SetProperty( 'ZHS_CLIIDA', MVC_VIEW_TITULO, 'Retorno ClientID Anterior' )		

	oStruZHSM:SetProperty( 'ZHS_CLISC', MVC_VIEW_GROUP_NUMBER, 'HISTOR' )
	oStruZHSM:SetProperty( 'ZHS_CLISC', MVC_VIEW_TITULO, 'Retorno Client Secret' )	

	oStruZHSM:SetProperty( 'ZHS_CLISCA', MVC_VIEW_GROUP_NUMBER, 'HISTOR' )
	oStruZHSM:SetProperty( 'ZHS_CLISCA', MVC_VIEW_TITULO, 'Retorno Client Secret Anterior' )

	oStruZHSM:SetProperty( 'ZHS_TOKEN', MVC_VIEW_GROUP_NUMBER, 'HISTOR' )
	oStruZHSM:SetProperty( 'ZHS_TOKEN', MVC_VIEW_TITULO, 'Token Transação' )

	oStruZHSM:SetProperty( 'ZHS_TOKENA', MVC_VIEW_GROUP_NUMBER, 'HISTOR' )
	oStruZHSM:SetProperty( 'ZHS_TOKENA', MVC_VIEW_TITULO, 'Token Anterior' )

	oView := FWFormView():New()
	oView:SetModel( oModel )

	oView:CreateHorizontalBox( 'MASTER', 100 )
	
	oView:AddField( 'VIEW_ZHSM', oStruZHSM, 'ZHSMASTER' )
	oView:SetOwnerView( 'VIEW_ZHSM', 'MASTER' )
	
	oView:EnableTitleView('VIEW_ZHSM')

	oView:SetAfterViewActivate({|| ModifyObj()})

	oView:SetCloseOnOk( {|| .T.} )

Return oView


/*/{Protheus.doc} ValidActive
@description Valida a ativação do formulário

@author  Helitom Silva
@since   23/07/2020

@param p_oModel, Objeto, Modelo

@return lRet,  Se poder alterar Retorna .T.

/*/
Static Function ValidActive(p_oModel)

	Local lRet	 := .T.

	If lRet .and. (p_oModel:GetOperation() == 3) .and. !IsBlind()
	EndIf

Return lRet


/*/{Protheus.doc} CO01HSInit
@description Inicializador de Campos do Modelo

@author  Helitom Silva
@since   23/07/2020
@version 1.0

@param p_cField, Caracter, Campo a ser inicializado

@return uRet, Indefinido, Valor inicial do Campo

/*/
Static Function CO01HSInit(p_cField, p_oFields)

	Local uRet		 
	Local oModel	 := p_oFields:oFormModel
	Local oZHSMASTER := oModel:GetModel('ZHSMASTER')

	Default p_cField := ''
	
	/*If p_cField $ 'ZHS_CODIGO' .and. p_oFields:GetId() = 'ZHSMASTER'
	
		uRet := GetSXENum('ZHS', 'ZHS_CODIGO')
	
	ElseIf p_cField $ 'ZHS_CODIGO' .and. p_oFields:GetId() = 'ZHSDETAIL'
	
		uRet := oZHSMASTER:GetValue('ZHS_CODIGO')
		
	ElseIf p_cField $ 'ZHS_ESPECI' .and. p_oFields:GetId() = 'ZHSDETAIL'
	
		uRet := oZHSMASTER:GetValue('ZHS_ESPECI')
		
	EndIf*/
	
Return uRet


/*/{Protheus.doc} MCFGINTB
@description Ponto de Entrada Geral da Rotina

@author  Helitom Silva
@since   23/07/2020

@param PARAMIXB, Array, [Objeto][IdPonto][IdModel]

@return uRet,  Retorno diversos do PE

/*/
User Function MCFGINTB()

	Local uRet		 := .T.
	Local oObj       := ParamIXB[1]
	Local cIdPonto   := ParamIXB[2]
	Local cIdModel   := ParamIXB[3]
	Local lIsGrid    := .F.
	Local nX		 := 0
	Local nLinha     := 0
	Local nQtdLinhas := 0
	Local aAreaOld   := GetArea()

	If (lIsGrid := ( oObj:ClassName() == 'FWFORMGRID' ))

		nQtdLinhas := oObj:GetQtdLine()
		nLinha     := oObj:nLine

	EndIf

	If cIdPonto == 'MODELPRE' /* Chamada antes da alteração de qualquer campo do modelo. */   		
	ElseIf cIdPonto == 'MODELPOS' /* Chamada na validação total do modelo. */
	ElseIf cIdPonto == 'FORMPRE' /* Chamada na antes da alteração de qualquer campo do formulário. */ 
	ElseIf cIdPonto == 'FORMPOS' /* Chamada na validação total do formulário. */ 
	ElseIf cIdPonto == 'FORMLINEPRE' /* Chamada na pre validação da linha do formulário. */            
	ElseIf cIdPonto == 'FORMLINEPOS' /* Chamada na validação da linha do formulário. */	

		/*If lIsGrid

			uRet := .T.

			For nX := 1 to Len(oObj:aHeader)

				If !(AllTrim(oObj:aHeader[nX][2]) == 'ZHS_CODUSR')

					If !( uRet := ValidField(oObj:aHeader[nX][2]))
						Exit
					EndIf

				EndIf

			Next

		EndIf*/

	ElseIf cIdPonto == 'MODELVLDACTIVE' /* Chamada na validação da ativação do Modelo. */	      

		uRet := ValidActive(oObj)

	ElseIf cIdPonto == 'MODELCOMMITTTS' /* Chamada apos a gravação total do modelo e dentro da transação. */      
	ElseIf cIdPonto == 'MODELCOMMITNTTS' /* Chamada apos a gravação total do modelo e fora da transação. */	      
	ElseIf cIdPonto == 'FORMCOMMITTTSPRE' /* Chamada antes da gravação da tabela do formulário. */
	ElseIf cIdPonto == 'FORMCOMMITTTSPOS' /* Chamada apos a gravação da tabela do formulário. */

		/*If (oObj:oFormModel:nOperation = 4) .or. (oObj:oFormModel:nOperation = 3)

			If lIsGrid

				If oObj:GetLine() == nQtdLinhas

				EndIf

			EndIf

		EndIf*/

	ElseIf cIdPonto == 'MODELCANCEL' /* Cancela */	
		
		//RollbackSX8()
		
		uRet := .T.
		
	ElseIf cIdPonto == 'BUTTONBAR' /* Usado para Criação de Botoes Estrutura: { {'Nome', 'Imagem Botap', { || bBlock } } } */	 
	EndIf

	RestArea(aAreaOld)

Return uRet


/*/{Protheus.doc} ValidField
@description Avalia campos

@author  Helitom Silva
@since   23/07/2020

@param p_cField, Caracter, Campo a ser avaliado

@return lRet, Se Valido Retorna .T.

/*/
Static Function ValidField(p_cField)

	Local lRet   := .T.
	Local oModel := FwModelActive()
	Local oZHSM	 := oModel:GetModel('ZHSMASTER')
	Local oZHSD	 := oModel:GetModel('ZHSDETAIL')		

	If !oZHSD:IsDeleted()

		If (p_cField == 'CAMPO')

			lRet := .F.

		EndIf

	EndIf

Return lRet


/*/{Protheus.doc} GBOLBBEV
@description Executa Cadastro de Configuração de Comunicação com Banco do Brasil

@author    Helitom Silva
@since     23/07/2020
@version   1.0

@param p_nOption, Numeric, Opção da rotina que chamou o formulário de acompanhamento

@type User Function
@obs Nil

/*/
Static Function GBOLBBEV(p_nOption, p_cCodigo)

	Local nOper	    := MODEL_OPERATION_INSERT
	Local aButtons  := {{.F.,Nil},{.F.,Nil},{.F.,Nil},{.T.,Nil},{.T.,Nil},{.T.,Nil}, {.T., "OK"}, {.T., "Cancelar"},{.T.,Nil},{.T.,Nil},{.T.,Nil},{.T.,Nil},{.T.,Nil},{.T.,Nil}}
	Local aAreaSC1  := SC1->(GetArea())
	
	Default p_nOption := 3
	
	DbSelectArea('ZHS')
	ZHS->(DbSetOrder(1)) // ZHS_FILIAL + ZHS_CODIGO
	If ZHS->(DbSeek(FWxFilial('ZHS') + p_cCodigo))
		
		If p_nOption = 2
			nOper  := MODEL_OPERATION_VIEW
		Else
			nOper  := MODEL_OPERATION_UPDATE
		EndIf
		
	EndIf

	FWExecView('Portos'/*cTitulo*/, 'CFGBOLBB' /*cPrograma*/, nOper /*nOperation*/, /*oDlg*/, { || .t. } /*bCloseOnOK*/, { || .t. } /*bOk*/, /*nPercReducao*/ , aButtons /*aEnableButtons*/, /*bCancel*/, /*cOperatId*/, /*cToolBar*/, /*oModelAct*/)

	RestArea(aAreaSC1)

Return .T.


/*/{Protheus.doc} CFGBOLCS
@description Obtem strings concatenadas

@author    Helitom Silva
@since     28/05/2019
@version   1.0

@type User Function
@obs Nil

/*/
Static Function CFGBOLCS(p_cString1, p_cString2)

	Local cRet	:= ''
	
	Default p_cString1 := ''
	Default p_cString2 := ''
	
	cRet := AllTrim(p_cString1) + ', ' + AllTrim(p_cString2)
	
Return cRet


/*/{Protheus.doc} CFGBOLRI
@description Re-Instalar API

@author    Helitom Silva
@since     20/08/2020
@version   1.0

@type User Function
@obs Nil

/*/
User Function CFGBOLRI()

	Local aRet	:= {.T., ''}
	
    Local oIntegra := Nil

	If MsgYesNo('Este procedimento vai desfazer a conexão atual caso exista, e vai fazer uma nova, confirma a reinstalação da API?')

		oIntegra := INTBOLBB():New()

		// Obtem ClientId
		aRet := Iif(aRet[1], oIntegra:PostClientId(), aRet)

		// Obtem Credencial (Secret_id + Token)
		aRet := Iif(aRet[1], oIntegra:PostCredential(), aRet)
		
		// Obtem Token para realizar Transação
		aRet := Iif(aRet[1], oIntegra:PostToken(), aRet)

		If aRet[1]
			IdaMsg('Instalação concluída com Sucesso!', 'API - Integração Boleto Banco do Brasil')
		Else
			IdaMsg('Não foi possível realizar a Instalação da API' + CR + CR + AllTrim(aRet[2]:ToJson()), 'API - Integração Boleto Banco do Brasil')
		EndIf

		FreeObj(oIntegra)

	EndIf

Return aRet[1]



/*/{Protheus.doc} ModifyObj
@description Modifica propriedades dos Objetos.

@author  Helitom Silva
@since   25/05/2018
@version 1.0

/*/
Static Function ModifyObj()
	
	Local oTmpDlg 	  := Nil
	Local nX, nI  	  := 0
	Local cListObj    := ''
	Local oView		  := FwViewActive()
	Local oFtArialB12 := TFont():New( "Arial",0,-12,,.T.,0,,400,.F.,.F.,,,,,, )		
		
	If oView:IsActive() .and. ValType(oView:GetModel('ZHSMASTER')) = 'O'
		
		oTmpDlg := GetWndDefault()
		
		For nX := 1 to Len(oTmpDlg:aControls)

			If ValType(oTmpDlg:aControls[nX]) == 'O'
				cListObj += cValToChar(nX) + ' - ' + AllTrim(oTmpDlg:aControls[nX]:ClassName()) + CR
			EndIf
									
			If ValType(oTmpDlg:aControls[nX]) == 'O' .and. 'FWMULTIGET' $ AllTrim(oTmpDlg:aControls[nX]:ClassName()) .and. .not. oTmpDlg:aControls[nX]:cReadVar == 'M->ZHS_REGTOK'
				
				//oTmpDlg:aControls[nX]:Align := CONTROL_ALIGN_ALLCLIENT
				//oTmpDlg:aControls[nX]:SetFont(oFtArialB12)
				//oTmpDlg:aControls[nX]:EnableVScroll( .F. )
				oTmpDlg:aControls[nX]:lReadOnly := .T.
				oTmpDlg:aControls[nX]:Refresh()
				
			EndIf

		Next
		
		oTmpDlg:Refresh()
					
	EndIf
	
	//MemoWrite('C:\Temp\Obj-Classes.txt', cListObj)
		
Return
