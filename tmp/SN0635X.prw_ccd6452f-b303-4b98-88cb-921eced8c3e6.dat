#Include 	"Protheus.ch"
#Include	"Rwmake.ch"
#Include	"Totvs.ch"
#Include	"TopConn.CH"

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<SN0635X>                                                   |
|305 - Relatorio de Pagamentos - Manuais                              	   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
User Function SN0635X()
Local oReport
Private _cPerg 		:= "SN0635X" 		//Nome da pergunta cadastrado no SX1
Private _cAlias01 	:= GetNextAlias() 	// A variavel recebe um nome de uma tabela temporária sequencial
Private _aSM0 		:= {}
_aSM0 := GETAREA()
AjustaSX1(_cPerg)	//Valida as perguntas, atualizando sempre conforme a do código
If Pergunte(_cPerg,.T.) = .F.
	Return()
EndIf
oReport := ReportDef()
oReport:PrintDialog()
RESTAREA(_aSM0)		//Restaura a area salva
Return


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ReportDef>                                                 |
|305 - Relatorio de Pagamentos - Manuais					 			   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ReportDef()
Local oReport
Local cReport	:= "SN0635X"
Local cTitulo	:= "305 - Relatorio de Pagamentos - Manuais"
Local cDesc		:= cTitulo
//Verifica se existe a pergunta (.F. -> não chama a tela de parametros)
Pergunte(_cPerg,.F.)
oReport := TReport():New(cReport,cTitulo ,_cPerg,{|oReport| ReportPrint(oReport)},cDesc)
oSec01:=TRSection():New(oReport,"")
//New(oParent,cName,cAlias,cTitle,cPicture,nSize,lPixel,bBlock,cAlign,lLineBreak,cHeaderAlign,lCellBreak,nColSpace,lAutoSize,nClrBack,nClrFore,lBold)
TRCell():New(oSec01,"Unidade"		,,"Unidade"				,,20)
TRCell():New(oSec01,"Periodo"		,,"Periodo"				,,28)

oSec02:=TRSection():New(oSec01,"")
TRCell():New(oSec02,"Matricula"		,,"Matricula"			,, 10)
TRCell():New(oSec02,"Nome"			,,"Nome"				,, 40)
TRCell():New(oSec02,"CPF"			,,"CPF"					,, 18)
TRCell():New(oSec02,"Evento"		,,"Evento"				,, 08)
TRCell():New(oSec02,"Periodo"		,,"Periodo"				,, 09)
TRCell():New(oSec02,"Cal"			,,"Cal"					,, 03)
TRCell():New(oSec02,"Sessao"		,,"Sessao"				,, 10)
TRCell():New(oSec02,"APagar"		,,"A Pagar no Periodo"	,, 20)
TRCell():New(oSec02,"Devolucao"		,,"Devolucao/Nao Pagos"	,, 20)
TRCell():New(oSec02,"TotalPago"		,,"Total Pago"			,, 20)

//New(oCell,cName,cFunction,oBreak,cTitle,cPicture,uFormula,lEndSection,lEndReport,lEndPage,oParent,bCondition,lDisable,bCanPrint)
TRFunction():New(oSec02:Cell("Matricula")	,nil,"COUNT",,,"@E 999999"				,,.T.,.F.,.F.,oSec02)
TRFunction():New(oSec02:Cell("APagar")		,nil,"SUM"	,,,"@E 999,999,999,999.99"	,,.T.,.F.,.F.,oSec02)
TRFunction():New(oSec02:Cell("Devolucao")	,nil,"SUM"	,,,"@E 999,999,999,999.99"	,,.T.,.F.,.F.,oSec02)
TRFunction():New(oSec02:Cell("TotalPago")	,nil,"SUM"	,,,"@E 999,999,999,999.99"	,,.T.,.F.,.F.,oSec02)

oReport:SetTotalInLine(.F.)
Return(oReport)

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<ReportPrint>                                               |
|Relatorio de Pagamentos - Manuais. 						   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function ReportPrint(oReport)
Local _oSec01 		:= oReport:Section(1)
Local _oSec02 		:= oReport:Section(1):Section(1)
Local _nQReg		:= 0
Local _cUnid		:= ""
Local _cEvent		:= ""
Pergunte(_cPerg,.F.)
// Cabecalho
_oSec01:Cell("Unidade"	):SetBlock({|| FWFilName( cEmpAnt, (_cAlias01)->UNIDADE ) })
_oSec01:Cell("Periodo"	):SetBlock({|| "De "+DTOC((_cAlias01)->INICIO)+" ate "+DTOC((_cAlias01)->FIM)  })

_oSec02:Cell("Matricula"	):SetBlock({|| (_cAlias01)->MATRICULA  })
_oSec02:Cell("Nome"			):SetBlock({|| (_cAlias01)->NOME  })
_oSec02:Cell("CPF"			):SetBlock({|| Transform( (_cAlias01)->CPF, "@R 999.999.999-99")  })
_oSec02:Cell("Evento"		):SetBlock({|| (_cAlias01)->EVENTO  })
_oSec02:Cell("Periodo"		):SetBlock({|| (_cAlias01)->PERIODO  })
_oSec02:Cell("Cal"	   		):SetBlock({|| (_cAlias01)->ZP7_XSEG  })
_oSec02:Cell("Sessao"		):SetBlock({|| (_cAlias01)->ZP7_XSESSA  })
_oSec02:Cell("APagar"		):SetBlock({|| Transform( (_cAlias01)->A_PAGAR,"@E 999,999,999.99" ) })
_oSec02:Cell("APagar"		):SetHeaderAlign("RIGHT")
_oSec02:Cell("APagar"		):SetAlign("RIGHT")
_oSec02:Cell("Devolucao"	):SetBlock({|| Transform( (_cAlias01)->DEVOLVIDO,"@E 999,999,999.99" ) })
_oSec02:Cell("Devolucao"	):SetHeaderAlign("RIGHT")
_oSec02:Cell("Devolucao"	):SetAlign("RIGHT")
_oSec02:Cell("TotalPago"	):SetBlock({|| Transform( ( (_cAlias01)->A_PAGAR - (_cAlias01)->DEVOLVIDO),"@E 999,999,999.99" ) })
_oSec02:Cell("TotalPago"	):SetHeaderAlign("RIGHT")
_oSec02:Cell("TotalPago"	):SetAlign("RIGHT")
MsAguarde({|| CursorWait(), fQryManual(), CursorArrow()},"Selecionando Registros","Buscando Informacoes dos Eventos...")
MsAguarde({|| CursorWait(), (_cAlias01)->(DbEval({|| _nQReg++})), CursorArrow() }, "Registros", "Verificando a Quantidade de Registros...")
oReport:SetMeter(_nQReg)
(_cAlias01)->(dbGoTop())
While (_cAlias01)->(!EOF())
	// Sai caso seja pressionado botao cancelar
	If oReport:Cancel()
		Exit
	EndIf
	_oSec01:Init()
	_oSec01:PrintLine()
	_cUnid	:= (_cAlias01)->UNIDADE
	_oSec02:Init()
	While _cUnid == (_cAlias01)->UNIDADE .AND. (_cAlias01)->(!EOF())
		_oSec02:PrintLine()
		(_cAlias01)->(dbSkip())
		oReport:IncMeter() // Incrementa a regua de progressão
	EndDo
	_oSec02:Finish()
	_oSec01:Finish()
	oReport:SkipLine(3)
EndDo
(_cAlias01)->(dbCloseArea())
Return(Nil)


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fQryManual>                                                   |
|Monta query que busca os Pagamentos. 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function fQryManual()
Local _cQry 	:= ""
Pergunte(_cPerg,.F.)
_cQry += " SELECT ZP7_FILIAL UNIDADE, ZP7_XEVENT EVENTO, ZP4_XDTINI INICIO, ZP4_XDTFIM FIM, ZP7_XCPF CPF,   " + CRLF
_cQry += " ZP7_XMATRI MATRICULA, ZP7_XNOME NOME, ZP7_XPERIO PERIODO, ZP7_XSEG, ZP7_XSESSA ,ZP7_XVALOR A_PAGAR, ZP7_XDTPG DT_PAGAMENTO, ZP7_XDTPG DTPAGAMENTO," + CRLF
_cQry += " (SELECT ZP7_XVALOR"
_cQry += " FROM "+RetSqlName("ZP7") + " ZZP7  " + CRLF
_cQry += " WHERE ZZP7.D_E_L_E_T_ <> '*'  " + CRLF
_cQry += " AND ZZP7.ZP7_XSTATU not IN ('x') " + CRLF
_cQry += " AND ZZP7.ZP7_FILIAL = ZP7.ZP7_FILIAL " + CRLF
_cQry += " AND ZZP7.ZP7_XMATRI = ZP7.ZP7_XMATRI " + CRLF
_cQry += " AND ZZP7.ZP7_XPERIO = ZP7.ZP7_XPERIO " + CRLF
_cQry += " AND ZZP7.ZP7_XEVENT = ZP7.ZP7_XEVENT " + CRLF
// Considera os R=Rejeitados; N= Não Pagos; D=Devolvidos 
_cQry += " AND ZZP7.ZP7_XSTATU IN ('R','N','D') ) DEVOLVIDO " + CRLF
_cQry += " FROM " + RetSqlName("ZP7") + " ZP7 " + CRLF
_cQry += " LEFT JOIN " + RetSqlName("ZP4") + " ZP4 ON ZP4.D_E_L_E_T_ <> '*' AND ZP4_FILIAL = ZP7_FILIAL AND ZP4_XCOD = ZP7_XPERIO " + CRLF
_cQry += " Inner Join "+RetSqlName("ZP1")+" ZP1 on ZP1.D_E_L_E_T_ <> '*' and ZP1_FILIAL = ZP7_FILIAL and ZP1_XCONV = ZP7_XCONVE and ZP1_XTIPO = '2' " + CRLF
_cQry += " WHERE ZP7.D_E_L_E_T_ <> '*' " + CRLF
_cQry += " and ZP7.ZP7_FILIAL = '"+FwxFilial("ZP7")+"' " + CRLF
//-- Filtra por Periodo
If !Empty(Alltrim(Mv_par03))
	_cQry += " and ZP7.ZP7_XPERIO = '"+Mv_par03+"' " + CRLF
Endif
//-- Filtra por sessao
If !Empty(Alltrim(Mv_par04))
	_cQry += " and ZP7.ZP7_XSESSA = '"+Mv_par04+"' " + CRLF
Endif
_cQry += " AND ZP7.ZP7_XSTATU not IN ('x') " + CRLF
_cQry += " AND (ZP4_XDTINI = '"+Space(TamSX3("ZP4_XDTINI")[1])+"' or ZP4_XDTINI >= '"+DTOS(MV_PAR01)+"' AND ZP4_XDTFIM <= '"+DTOS(MV_PAR02)+"') " + CRLF
_cQry += " GROUP BY ZP7_FILIAL, ZP7_XEVENT ,ZP4_XDTINI ,ZP4_XDTFIM ,ZP7_XCPF, ZP7_XMATRI ,ZP7_XNOME, ZP7_XPERIO, ZP7_XSEG, ZP7_XSESSA,  ZP7_XVALOR ,ZP7_XDTPG  " + CRLF
_cQry += " ORDER BY UNIDADE, EVENTO, INICIO, FIM, NOME " + CRLF
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQry)
If Select(_cAlias01) > 0
	DBSelectArea(_cAlias01)
	(_cAlias01)->(DbCloseArea())
EndIf
dbUseArea(.T.,"TOPCONN",TcGenQry(,,ChangeQuery(_cQry)),_cAlias01,.T.,.F.)   
TCSETFIELD(_cAlias01,"INICIO"	,"D",8,0 )
TCSETFIELD(_cAlias01,"FIM"		,"D",8,0 )
Return()


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<AjustaSX1>                                                 |
|Cria as perguntas.					 	    							   |
|                                                                          |
|@Author<Diogo C. Barros>                                                  |
|@since<28/03/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
Static Function AjustaSX1(_cPerg)
Local _aHelp01 := {"Informe a Data da Matricula de/ate"}
Local _aHelp02 := {"Informa o Codigo do Periodo, e ou ..."}
Local _aHelp03 := {"Informa o Codigo da Sessão."}
DbSelectArea("SX1")
DbSetOrder(1)
//--------------------------------------------------------------------
//PutSX1 - cGrupo, cOrdem, _cPergunt, cPerSpa, cPerEng, cVar, cTipo, nTamanho, nDecimal, nPresel, cGSC, cValid, cF3, cGrpSxg, cPyme, cVar01, cDef01, cDefSpa1, cDefEng1, cCnt01, cDef02, cDefSpa2, cDefEng2, cDef03, cDefSpa3, cDefEng3, cDef04, cDefSpa4, cDefEng4, cDef05, cDefSpa5, cDefEng5, aHelpPor, aHelpEng, aHelpSpa, cHelp
u_SFPUTSX1(_cPerg, "01", "Data de	?","","","mv_ch1","D",08,00,00,"G","" ,""	 ,"","","mv_par01","","","","","","","","","","","","","","","","",_aHelp01,"","","")
u_SFPUTSX1(_cPerg, "02", "Data Ate	?","","","mv_ch2","D",08,00,00,"G","" ,""	 ,"","","mv_par02","","","","","","","","","","","","","","","","",_aHelp01,"","","")
u_SFPUTSX1(_cPerg, "03", "Periodo	?","","","mv_ch3","C",08,00,00,"G","" ,"ZP4REL" ,"","","mv_par03","","","","","","","","","","","","","","","","",_aHelp02,"","","")
u_SFPUTSX1(_cPerg, "04", "Sessão	?","","","mv_ch4","C",10,00,00,"G","" ,"ZP6"	 ,"","","mv_par04","","","","","","","","","","","","","","","","",_aHelp03,"","","")
Return(Nil)
