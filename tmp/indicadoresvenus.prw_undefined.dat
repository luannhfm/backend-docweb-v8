#include "totvs.ch"
#include "restful.ch"

//-------------------------------------------------------------------
/*/{Protheus.doc} Indicadores Vênus
Declaracao do GET de Indicadores Vênus
@author Walmir Junior
@since 29/01/2021
@version 1.0
/*/
//-------------------------------------------------------------------
WSRESTFUL indicadoresvenus DESCRIPTION 'endpoint Indicadores - VENUS ' FORMAT "application/json,text/html"
    WSDATA Page              AS INTEGER OPTIONAL
    WSDATA aQueryString      AS ARRAY    OPTIONAL
    
    WSMETHOD GET DESCRIPTION "Sincronização de dados via GET";
        	WsSyntax "/GET/{method}"
	    
END WSRESTFUL

//-------------------------------------------------------------------
/*/{Protheus.doc} GET Indicadores Vênus
Metodo GET
@author Walmir Junior
@since 29/01/2021
@version 1.0
/*/
//-------------------------------------------------------------------
WSMETHOD GET WSSERVICE indicadoresvenus
Local _lRet 	:= .T.
Local _cMsg		:= "..."
Local _cAlias	:= GetNextAlias()
Local _cQuery	:= ""

If Select(_cAlias) > 0
	(_cAlias)->(DbCloseArea())
EndIf
	
_cQuery := " SELECT  " + CRLF
_cQuery += " (SELECT COUNT(*) FROM (SELECT ZAR_FILORI FROM " + RetSqlName("ZAR") + " WHERE D_E_L_E_T_ = ' ' GROUP BY ZAR_FILORI)) AS NUMERO_FILIAIS, "
_cQuery += " (SELECT COUNT(*) FROM (SELECT ZAR_USREGI FROM " + RetSqlName("ZAR") + " WHERE D_E_L_E_T_ = ' ' GROUP BY ZAR_USREGI)) AS NUMERO_USUARIOS, "
_cQuery += " (SELECT COUNT(*) FROM " + RetSqlName("ZAR") + " WHERE D_E_L_E_T_ = ' '  AND ZAR_SITUAC = 'A') AS NUMERO_ESTORNOS "
_cQuery += " FROM DUAL " + CRLF

_cQuery := ChangeQuery(_cQuery)

dbUseArea(.T., "TOPCONN", TcGenQry(,,_cQuery), _cAlias, .F., .T.)

DbSelectArea(_cALias)
(_cALias)->(DbGoTop())

::SetContentType( 'application/json' )

If !(_cALias)->(Eof())

	cJSONRet := '{		"numero_usuarios":"' + AllTrim(Str((_cALias)->NUMERO_USUARIOS))	+ '"';
					+ ',"numero_filiais" :"' + AllTrim(Str((_cALias)->NUMERO_FILIAIS))	+ '"';
					+ ',"numero_estornos":"' + AllTrim(Str((_cALias)->NUMERO_ESTORNOS))	+ '"';
					+ ',"msg":"'   		+ EncodeUTF8(_cMsg, "cp1252")  + '"';
					+'}'

	::SetResponse(cJSONRet)
Else
	//Ou retorna o erro encontrado durante o processamento
	SetRestFault("oEst:GetCode()","oEst:GetMessage()")
	lRet := .F.
EndIf

(_cALias)->(dbClosearea())

Return _lRet
