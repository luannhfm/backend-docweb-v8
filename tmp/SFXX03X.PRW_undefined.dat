#INCLUDE "PROTHEUS.CH"
#INCLUDE "MSGRAPHI.CH"

/*/{Protheus.doc} SFXX03X
(long_description)
@type class
@author luiz_
@since 06/02/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

CLASS SFXX03X
	
	METHOD NEW() CONSTRUCTOR
	METHOD IMPGRAF() //-> API DEPRECIADA GOOGLE CHARTS      
	METHOD APIGRAF()	
	METHOD CHARTPRTH()
	METHOD CABEC()

ENDCLASS

/*/{Protheus.doc} NEW
(long_description)
@type class
@author luiz_
@since 06/02/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

METHOD NEW() CLASS SFXX03X
RETURN Self

/*/{Protheus.doc} IMPGRAF
(long_description)
@type class
@author luiz_
@since 06/02/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

METHOD IMPGRAF(oReport,pRisco,pTipo,pPerA,pPerRec,pPerVen,pTotAber,pTotRec,pTotVen,pDescA,pDescB,pDescC,pDescRel) CLASS SFXX03X

	Local cRisco   := pRisco  
	Local cTipo    := pTipo 
	Local nTotAber := pTotAber 
	Local nTotRec  := pTotRec 
	Local nTotVen  := pTotVen	
	Local nPerA    := pPerA 
	Local nPerRec  := pPerRec
	Local nPerVen  := pPerVen 
	Local cDescA   := pDescA 
	Local cDescB   := pDescB
	Local cDescC   := pDescC
	Local cURL     := ""
	Local oPNG     := Nil
	Local cNomeArq := ""
	Local cDescRel := pDescRel	
	
	Do Case 		            
		Case Upper(cTipo) == "P"
			cURL := "http://chart.apis.google.com/chart?cht=p3&chd=t:"+AllTrim(cValToChar(nPerA))+","+AllTrim(cValToChar(nPerRec))+","+AllTrim(cValToChar(nPerVen))+"&chs=700x300&chl="+AllTrim(TransForm(nTotAber,"@E 9,999,999,999,999.99"))+"|"+AllTrim(TransForm(nTotRec,"@E 9,999,999,999,999.99"))+"|"+AllTrim(TransForm(nTotVen,"@E 9,999,999,999,999.99"))+"|"+"&chco=4682B4&chdl="+cDescA+"|"+cDescB+"|"+cDescC+"&chtt="+cDescRel+"&chts=0000FF,20,r"
		Case Upper (cTipo) == "B"
			cURL :=  "http://chart.apis.google.com/chart?chxt=x,y&cht=bvs&chd=t:60,70,85,65,40&chco=76A4FB&chls=2.0&chs=180x150&chxl=0:|Jan|Fev|Mar|Abr|Mai"
	EndCase
	
	oPNG     := HttpGet(cURL) 
	      
	//Define o nome do arquivo de imagem 
	cNomeArq := GetTempPath() + "grafico.PNG" 
	
	//Salva na pasta TEMP 
	MemoWrite(cNomeArq,oPNG) 
	
	oReport:EndPage()
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:SkipLine()	
	oReport:SayBitmap(500,001,cNomeArq)

	//Constrói a URL com as características do gráfico 
	//cURL     := "http://chart.apis.google.com/chart?cht=p3&chd=t:10,20,30,40&chs=700x300&chl=Dado+1|Dado+2|Dado+3|Dado+4&chco=4682B4&chdl=Legenda+1|Legenda+2|Legenda+3|Legenda+4&chtt=Gr%C3%A1fico+de+teste&chts=0000FF,20,r"
	//_cURL     := "http://chart.apis.google.com/chart?chxt=x,y&cht=bvs&chd=t:60,70,85,65,40&chco=76A4FB&chls=2.0&chs=180x150&chxl=0:|Jan|Fev|Mar|Abr|Mai"
	//Conecta com a web, envia a URL e recebe a imagem do gráfico 	
	//_cURL     :="http://chart.apis.google.com/chart?cht=p3&chd=t:45,20,20,15&chs=700x300&chdl=Janeiro|Fevereiro|Março|Abril&chl=45%|20%|20%|15%&chco=67087b|e3007a|00a8eb|79c471"
	
	//->barra    
	//_cURL	:=   "http://chart.googleapis.com/chart?cht=bhs&chs=700x300&&chl=Dado+1|Dado+2|Dado+3|Dado+4&chd=t:10,50,60,80,40|50,60,100,40,20&chco=4d89f9,c6d9fd&chbh=20&&chdl=Legenda+1|Legenda+2|Legenda+3|Legenda+4&chtt=Gr%C3%A1fico+de+teste&chts=0000FF,20,r&chds=0,160" //URL do Google Charts API
 	
	//cJs := H_TESTE01()	 	
 	
 	//oPNG     := HttpGet(cURL)

RETURN SELF

/*/{Protheus.doc} APIGRAF
@author author
@since 07/02/2017
@version version
@example
(examples)
@see (links_or_references)
/*/

METHOD APIGRAF(oReport,pTipChar) CLASS SFXX03X

	Local cHtml    := ""
	Local cDomain  := ""
    Local cUser    := ""
    Local nTipChar := pTipChar  
    Local cGrafico := Replace(DToS(dDatabase)+ time(),':','')+".png" 

    If nTipChar = 1

		cHtml += " <html> "
		cHtml += " <head> "
		cHtml += " <script type='text/javascript' src='https://www.gstatic.com/charts/loader.js'></script> "
		cHtml += "     <script type='text/javascript'> "
		cHtml += "         google.charts.load('current', { "
		cHtml += "             packages: ['corechart'] "
		cHtml += "         }); "
		cHtml += "         google.charts.setOnLoadCallback(drawChart); "
		cHtml += "         function drawChart() { "
		cHtml += "             var data = google.visualization.arrayToDataTable([ "
		cHtml += "                 ['Element',         'Density', {role: 'style'}], "
		cHtml += "                 ['Copper',   8.94,  '#b87333',                ], "
		cHtml += "                 ['Silver',   10.49, 'silver'                  ], "
		cHtml += "                 ['Gold',     19.30, 'gold'                    ], "
		cHtml += "                 ['Platinum', 21.45, 'color: #e5e4e2'          ] "
		cHtml += "             ]); "
		cHtml += "             var view = new google.visualization.DataView(data); "
		cHtml += "             view.setColumns([0, 1, "
		cHtml += "                 { "
		cHtml += "                     calc: 'stringify', "
		cHtml += "                     sourceColumn: 1, "
		cHtml += "                     type: 'string', "
		cHtml += "                     role: 'annotation' "
		cHtml += "                 }, "
		cHtml += "                 2 "
		cHtml += "             ]); "
		cHtml += "             var options = { "
		cHtml += "                 title: 'Density of Precious Metals, in g/cm^3', "
		cHtml += "                 bar: { "
		cHtml += "                     groupWidth: '95%' "
		cHtml += "                 }, "
		cHtml += "                 legend: 'none', "
		cHtml += "   }; "
		cHtml += "             var chart = new google.visualization.BarChart(document.getElementById('chart_div')); "
		cHtml += "             google.visualization.events.addListener(chart, 'ready', function() { "
		cHtml += "                 chart_div.innerHTML = '<img src=' + chart.getImageURI() + '>'; "
		cHtml += "             }); "
		cHtml += "             chart.draw(view, options); "
		cHtml += "             SaveToDisk(chart.getImageURI(), '"+cGrafico+"'); "
		cHtml += "         } "
		cHtml += "         function SaveToDisk(fileURL, fileName) { "
		cHtml += "             console.log(fileURL); " 
		cHtml += "             console.log(fileName); "
		cHtml += "             var save = document.createElement('a'); "
		cHtml += "             save.href = fileURL; "
		cHtml += "             save.target = '_blank'; "
		cHtml += "             save.download = fileName || fileURL; "
		cHtml += "             var evt = document.createEvent('MouseEvents'); "
		cHtml += "             evt.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, "
		cHtml += "                 false, false, false, false, 0, null); "
		cHtml += "             save.dispatchEvent(evt); "
		cHtml += "             (window.URL || window.webkitURL).revokeObjectURL(save.href); "
		cHtml += "         } "
		cHtml += "     </script> "
		cHtml += "     <div id='chart_div' style='width: 900px; height: 300px;'></div> "		

	Else

		cHtml += " <html> "
		cHtml += " <head> "
		cHtml += " <script type='text/javascript' src='https://www.gstatic.com/charts/loader.js'></script> "
		cHtml += " <script type='text/javascript'> "
		cHtml += " google.charts.load('current',{packages:['corechart']}); "
		cHtml += " google.charts.setOnLoadCallback(drawChart); "
		cHtml += " function drawChart() { "
		cHtml += " var data = google.visualization.arrayToDataTable([ "
		cHtml += " ['Task', 'Hours per Day'], "
		cHtml += " ['Work',     11], "
		cHtml += " ['Eat',      2], "
		cHtml += " ['Commute',  2], "
		cHtml += " ['Watch TV', 2], "
		cHtml += " ['Sleep',    7] "
		cHtml += " ]); "
		cHtml += " var options = { "
		cHtml += " title: 'My Daily Activities', "
		cHtml += " is3D: true, "
		cHtml += " }; "
		cHtml += " var chart = new google.visualization.PieChart(document.getElementById('piechart_3d')); "
		cHtml += " chart.draw(data, options); "
		cHtml += " SaveToDisk(chart.getImageURI(),'"+cGrafico+"'); "
		cHtml += " } "
		cHtml += " function SaveToDisk(fileURL, fileName) { "
		cHtml += " console.log(fileURL); "
		cHtml += " console.log(fileName); "
		cHtml += " var save = document.createElement('a'); "
		cHtml += " save.href = fileURL; "
		cHtml += " save.target = '_blank'; "
		cHtml += " save.download = fileName || fileURL; "
		cHtml += " var evt = document.createEvent('MouseEvents'); "
		cHtml += " evt.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, "
		cHtml += " false, false, false, false, 0, null); "
		cHtml += " save.dispatchEvent(evt); "
		cHtml += " (window.URL || window.webkitURL).revokeObjectURL(save.href); "
		cHtml += " } "
		cHtml += " </script> "
		cHtml += " </head> "
		cHtml += " <body> "
		cHtml += " <div id='piechart_3d' style='width: 900px; height: 500px;'></div> '
		cHtml += " </body> "
		cHtml += " </html> "
	
	EndIf
	
	cNomeArq := GetTempPath() + "grafico.html" 	

	//Salva na pasta TEMP 
	MemoWrite(cNomeArq,cHtml) 	
	
	GetUserFromSID(GetCredential(), @cDomain, @cUser)
	
	ShellExecute("open",cNomeArq ,"","",0)
	
	oReport:EndPage()
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:SkipLine()	

	cDestino := GetTempPath() + cGrafico 
	cArqOr   := "C:\Users\"+cUser+"\Downloads\"+cGrafico
	__CopyFile(cArqOr, cDestino)
	If !File (cDestino, 1 ,.T.)
		lExist := .F.
		While !lExist
			__CopyFile(cArqOr, cDestino)
			If File (cDestino, 1 ,.T.)
				lExist := .T.
				ShellExecute("open","C:\Users\luiz_\Downloads\testebat.bat" ,"","",0)
			EndIf			
		EndDo
	EndIf

	oReport:SayBitmap(500,001,cDestino)	

RETURN

/*/{Protheus.doc} CHARTPRTH
//TODO Descrição auto-gerada.
@author luiz_
@since 09/02/2017
@version undefined
@example
(examples)
@see (links_or_references)
/*/

METHOD CHARTPRTH(oReport,oObj,cPngDir,pTipo,pPerAnt,pAntec,pPerPraz,pPrazo,pPerAtra,pAtraz,pTitulo) CLASS SFXX03X 

	Local oChart   := Nil       
	Local oFWChart := Nil		
	Local nPerAnt  := pPerAnt
	Local nAntec   := pAntec
	Local nPerPraz := pPerPraz
	Local nPrazo   := pPrazo
	Local nPerAtra := pPerAtra
	Local nAtraz   := pAtraz	
	Local cTipo    := pTipo
	Local cTitulo  := pTitulo
	//Local nQTDVen  := pQTDVen
	//Local nTickMed := pTickMed 
	Local nPos     := 0    
	Local oFont    := TFont():New('Courier New',,-9  ,,.F.)
	Local oFontN   := TFont():New('Courier New',,-10 ,,.T.)
	//Local cFilImp  := pFilial
	
	Do Case
	
		Case Upper(cTipo) == "P"
	    
			oChart := FWChartPie():New()
			oChart:init(oObj, .F.)
			oChart:setTitle (cTitulo, CONTROL_ALIGN_CENTER ) 
			oChart:addSerie ( "Total Vendido " , nPerVen   )
			oChart:addSerie ( "Total Recebido ", nPerRec   )
			oChart:addSerie ( "Total Aberto "  , nPerAbe   ) 
			oChart:setLegend( CONTROL_ALIGN_LEFT           ) 
			oChart:Build()
			oChart:saveToPng( 4, 4, 600, 400, cPngDir      )
			
			aAdd(aImg,{cPngDir})
			
		Case Upper(cTipo) == "B"

			oFWChart := FWChartFactory():New()
			oFWChart := oFWChart:getInstance( BARCHART ) // cria objeto FWChartBar
			
			//oFWChart:SetChartDefault(FUNNELCHART)
			//oFwChart:SetAlignSerieLabel(CONTROL_ALIGN_CENTER)
			
			/*
				Valores do  getInstance BARCHART  
			-   cria objeto FWChartBar  BARCOMPCHART 
			-   cria objeto FWChartBar  LINECHART 
			-   cria objeto FWChartLine PIECHART 
			-   cria objeto FWChartPie
			*/
			
			oFWChart:init(oObj, .T.)
			oFWChart:setTitle(cTitulo, CONTROL_ALIGN_CENTER)
			oFWChart:setLegend(CONTROL_ALIGN_LEFT)
			oFWChart:setMask("*@* %")
			oFWChart:setPicture("@E 99999")
			
			oFWChart:addSerie("Antecipado"  , nPerAnt )
			oFWChart:addSerie("Prazo"       , nPerPraz)			
			oFWChart:addSerie("Atraso"      , nPerAtra)
			
			oFWChart:build()
			
			/*
			_cDwTxt := "id=4561231233;"
			_cDwTxt += "pen-width=1;"
			_cDwTxt += "pen-color=#000000;"
			_cDwTxt += "font=Arial,1,1,3;"
			_cDwTxt += "text=teste de texto;"
			_cDwTxt += "top=0;"
			_cDwTxt += "left=0;"
			_cDwTxt += "width=0;"
			_cDwTxt += "height=0;"
			oFwChart:DrawText(_cDwTxt)
			*/
			
			
			For _nAb:= 1 to Len(oFWChart:aSeries)
				_nAdY := 10
				
				nAdjust := oFWChart:GetPosTTX(oFWChart:aSeries[_nAb]:uCargo[1], ;
				oFWChart:aSeries[_nAb]:uCargo[3])
				
				_cDwTxt := "id="+AllTrim(Str(oFWChart:aSeries[_nAb]:nID)) + "666"+";"
				_cDwTxt += "pen-width=1;"
				_cDwTxt += "pen-color=#000000;"
				_cDwTxt += "font=Arial,12,0,0,1;"
				_cDwTxt += "text=" + cValToChar(Round(oFWChart:aSeries[_nAb]:uValue,0)) + " %;"
				_cDwTxt += "top="  + cValToChar(oFWChart:aSeries[_nAb]:uCargo[2] - _nAdY)   + ";"
				_cDwTxt += "left=" + cValToChar(oFWChart:aSeries[_nAb]:uCargo[1] - nAdjust) + ";"
				_cDwTxt += "width=0;"
				_cDwTxt += "height=16;"
				oFwChart:DrawText(_cDwTxt)
				
				/*242,79166667
				579,667
				
				464,075
				143
				
				685
				739
				
				oFWChart:aSeries[_nAb]:uCargo[3,1] := ""
				
				Aviso("VarInfo", VarInfo("oFWChart:aSeries[_nAb]:uCargo[3]",oFWChart:aSeries[_nAb]:uCargo[3],,.F.) , {"ok"},3 )
				
				Alert(oFWChart:aSeries[_nAb]:uCargo[1])
				Alert(oFWChart:aSeries[_nAb]:uCargo[2])
				Alert(nAdjust)
				*/
				
				/*
				// seta a visibilidade da tooltip da barra 
				oFWChart:oOwner:SetVisible( Val(AllTrim(Str(oFWChart:aSeries[_nAb]:nID)) + "001"), .T. )
				oFWChart:oOwner:SetPosition( Val(AllTrim(Str(oFWChart:aSeries[_nAb]:nID)) + "001"),;
				oFWChart:aSeries[_nAb]:uCargo[1] - nAdjust,;
				oFWChart:aSeries[_nAb]:uCargo[2] - _nAdY)
				*/
			Next
			
			
			//oFWChart:saveToPng(01, 01, 1600, 1200, cPngDir)
			oFWChart:saveToPng( 4, 4, 800, 800, cPngDir      )
			aAdd(aImg,{cPngDir})
		
	EndCase	
	
	DbSelectArea("SE1")
	
	If !Empty(cPngDir)
	
		While !File(cPngDir)
		EndDo
		
		If Len(aPosPrt) > 0		
			If Len(aPosPrt) = 4
			 	oReport:EndPage()
			 	self:CABEC(oReport,cFilImp)
				aPosPrt := {}
				nPos := 1
			Else			
				nPos := Len(aPosPrt)+1							
				aAdd(aPosPrt,{nPos})				
			EndIf
		Else
			nPos := 1
			aAdd(aPosPrt,{1})
		EndIf
		
		//oReport:SayBitmap(800,800, cPngDir)
		
		oReport:SayBitmap(600,01,cPngDir, 1500,1500)
		
		/*
		Do Case
		    
			Case nPos = 1 
				
				oReport:Say(800 ,002 ,"Fatores"                                                 ,oFontN )
				oReport:Say(800 ,402 ,"Valores"                                                 ,oFontN )
				
				oReport:Say(860 ,002 ,"Quantidade de Vendas "                                   ,oFont  )				
				oReport:Say(860 ,402 , cValToChar(nQTDVen)                                      ,oFont  )				
				
				oReport:Say(920 ,002 ,"Ticket Medio "                                           ,oFont  )
				oReport:Say(920 ,402 ,AllTrim(TransForm(nTickMed,PesqPict("SE1","E1_VALOR")))   ,oFont  )
				
				oReport:Say(980 ,002 ,"Total Vendido "                                          ,oFont  )
				oReport:Say(980 ,402 ,AllTrim(TransForm(nTotVen,PesqPict("SE1","E1_VALOR")))    ,oFont  )
				
				oReport:Say(1040,002 ,"Vendido % "                                              ,oFont  )
				oReport:Say(1040,402 ,cValToChar(Round(nPerVen,2))  + "%"                       ,oFont  )
				
				oReport:Say(1100,002 ,"Total Recebido - Adp "                                   ,oFont  )
				oReport:Say(1100,402 ,AllTrim(TransForm(nTotRec,PesqPict("SE1","E1_VALOR")))    ,oFont  )
				
				oReport:Say(1160,002 ,"Adimplencia % "                                          ,oFont  )
				oReport:Say(1160,402 ,cValToChar(Round(nPerRec,2))  + "%"                       ,oFont  )
				
				oReport:Say(1220,002 ,"Total em aberto "                                        ,oFont  )
				oReport:Say(1220,402 ,AllTrim(TransForm(nTotAber,PesqPict("SE1","E1_VALOR")))   ,oFont  )
				
				oReport:Say(1280,002 ,"Em Aberto - % "                                          ,oFont  )
				oReport:Say(1280,402 ,cValToChar(Round(nPerAbe,2))  + "%"                       ,oFont  )
								
				oReport:SayBitmap(700,620, cPngDir)
				
			Case nPos = 2	 

				oReport:Say(800 ,1600 ,"Fatores"                                                ,oFontN )
				oReport:Say(800 ,2000 ,"Valores"                                                ,oFontN )
				
				oReport:Say(860 ,1600 ,"Quantidade de Vendas "                                  ,oFont  )				
				oReport:Say(860 ,2000 , cValToChar(nQTDVen)                                     ,oFont  )				
				
				oReport:Say(920 ,1600 ,"Ticket Medio "                                          ,oFont  )
				oReport:Say(920 ,2000 ,AllTrim(TransForm(nTickMed,PesqPict("SE1","E1_VALOR")))  ,oFont  )
				
				oReport:Say(980 ,1600 ,"Total Vendido "                                         ,oFont  )
				oReport:Say(980 ,2000 ,AllTrim(TransForm(nTotVen,PesqPict("SE1","E1_VALOR")))   ,oFont  )
				
				oReport:Say(1040,1600 ,"Vendido % "                                             ,oFont  )
				oReport:Say(1040,2000 ,cValToChar(Round(nPerVen,2))  + "%"                      ,oFont  )
				
				oReport:Say(1100,1600 ,"Total Recebido - Adp"                                   ,oFont  )
				oReport:Say(1100,2000 ,AllTrim(TransForm(nTotRec,PesqPict("SE1","E1_VALOR")))   ,oFont  )
				
				oReport:Say(1160,1600 ,"Adimplencia % "                                         ,oFont  )
				oReport:Say(1160,2000 ,cValToChar(Round(nPerRec,2))  + "%"                      ,oFont  )
				
				oReport:Say(1220,1600 ,"Total em aberto "                                       ,oFont  )
				oReport:Say(1220,2000 ,AllTrim(TransForm(nTotAber,PesqPict("SE1","E1_VALOR")))  ,oFont  )
				
				oReport:Say(1280,1600 ,"Em Aberto - % "                                         ,oFont  )
				oReport:Say(1280,2000 ,cValToChar(Round(nPerAbe,2))  + "%"                      ,oFont  )
			
				oReport:SayBitmap(700,2180, cPngDir) 

			Case nPos = 3
				
				oReport:Say(1380 ,002 ,"Fatores"                                                ,oFontN )
				oReport:Say(1380 ,402 ,"Valores"                                                ,oFontN )
				
				oReport:Say(1440 ,002 ,"Quantidade de Vendas "                                  ,oFont  )				
				oReport:Say(1440 ,402 , cValToChar(nQTDVen)                                     ,oFont  )				
				
				oReport:Say(1500 ,002 ,"Ticket Medio "                                          ,oFont  )
				oReport:Say(1500 ,402 ,AllTrim(TransForm(nTickMed,PesqPict("SE1","E1_VALOR")))  ,oFont  )
				
				oReport:Say(1560 ,002 ,"Total Vendido "                                         ,oFont  )
				oReport:Say(1560 ,402 ,AllTrim(TransForm(nTotVen,PesqPict("SE1","E1_VALOR")))   ,oFont  )
				
				oReport:Say(1620,002 ,"Vendido % "                                              ,oFont  )
				oReport:Say(1620,402 ,cValToChar(Round(nPerVen,2))  + "%"                       ,oFont  )
				
				oReport:Say(1680,002 ,"Total Recebido - Adp "                                   ,oFont  )
				oReport:Say(1680,402 ,AllTrim(TransForm(nTotRec,PesqPict("SE1","E1_VALOR")))    ,oFont  )
				
				oReport:Say(1740,002 ,"Adimplencia % "                                          ,oFont  )
				oReport:Say(1740,402 ,cValToChar(Round(nPerRec,2))  + "%"                       ,oFont  )
				
				oReport:Say(1800,002 ,"Total em aberto "                                        ,oFont  ) 
				oReport:Say(1800,402 ,AllTrim(TransForm(nTotAber,PesqPict("SE1","E1_VALOR")))   ,oFont  )
				
				oReport:Say(1860,002 ,"Em Aberto - % "                                          ,oFont  )
				oReport:Say(1860,402 ,cValToChar(Round(nPerAbe,2))  + "%"                       ,oFont  )
								
				oReport:SayBitmap(1350,620, cPngDir) 				  
				
			Case nPos = 4
				
				oReport:Say(1380 ,1600 ,"Fatores"                                               ,oFontN )
				oReport:Say(1380 ,2000 ,"Valores"                                               ,oFontN )
				
				oReport:Say(1440 ,1600 ,"Quantidade de Vendas "                                 ,oFont  )				
				oReport:Say(1440 ,2000 , cValToChar(nQTDVen)                                    ,oFont  )				
				
				oReport:Say(1500 ,1600 ,"Ticket Medio "                                         ,oFont  )
				oReport:Say(1500 ,2000 ,AllTrim(TransForm(nTickMed,PesqPict("SE1","E1_VALOR"))) ,oFont  )
				
				oReport:Say(1560 ,1600 ,"Total Vendido "                                        ,oFont  )
				oReport:Say(1560 ,2000 ,AllTrim(TransForm(nTotVen,PesqPict("SE1","E1_VALOR")))  ,oFont  )
				
				oReport:Say(1620,1600  ,"Vendido % "                                            ,oFont  )
				oReport:Say(1620,2000  ,cValToChar(Round(nPerVen,2))  + "%"                     ,oFont  )
				
				oReport:Say(1680,1600  ,"Total Recebido - Adp "                                 ,oFont  )
				oReport:Say(1680,2000  ,AllTrim(TransForm(nTotRec,PesqPict("SE1","E1_VALOR")))  ,oFont  )
				
				oReport:Say(1740,1600  ,"Adimplencia % "                                        ,oFont  )
				oReport:Say(1740,2000  ,cValToChar(Round(nPerRec,2))  + "%"                     ,oFont  )
				
				oReport:Say(1800,1600  ,"Total em aberto "                                      ,oFont  )
				oReport:Say(1800,2000  ,AllTrim(TransForm(nTotAber,PesqPict("SE1","E1_VALOR"))) ,oFont  )
				
				oReport:Say(1860,1600  ,"Em Aberto - % "                                        ,oFont  )
				oReport:Say(1860,2000  ,cValToChar(Round(nPerAbe,2))  + "%"                     ,oFont  )
				
				oReport:SayBitmap(1350,2180, cPngDir)
				
		EndCase		
		*/	
	EndIf  
	
RETURN

/*/{Protheus.doc} function_method_class_name
//TODO Descrição auto-gerada.
@author author
@since 24/02/2017
@version version
@example
(examples)
@see (links_or_references)
/*/

METHOD CABEC(oReport,pFilial) CLASS SFXX03X

	Local oFontN  := TFont():New('Courier New',,-12,,.T.)
	Local oFont   := TFont():New('Courier New',,-9 ,,.T.)
	Local oFontA  := TFont():New('Courier New',,-9 ,,.F.)
	Local aCrdA   := {} 
	Local oBrA    := Nil
	Local aCrdB   := {} 
	Local oBrB    := Nil
	Local aCrdC   := {} 
	Local oBrC    := Nil
	Local aCrdD   := {} 
	Local oBrD    := Nil
	Local aCrdE   := {} 
	Local oBrE    := Nil
	Local aCrdF   := {} 
	Local oBrF    := Nil
	Local cFilImp := pFilial
	
	DbSelectArea("SM0")
	DbGoTop()	
	While !SM0->(Eof()) 
		If AllTrim(SM0->M0_CODFIL) == AllTrim(cFilImp)				
			oReport:Say(300,1400 ,AllTrim(SM0->M0_FILIAL)+"("+AllTrim(cFilImp)+") RISK RATING",oFontN )
			Exit	
		EndIf
		SM0->(DbSkip())
	EndDo	
	
	oReport:Say(450,100 ,"Risco muito Baixo IAP - A"                                      ,oFont )				
	oReport:Say(450,600 ,"Risco Baixo - B"                                                ,oFont )
	oReport:Say(450,1100,"Risco Medio - C"                                                ,oFont )
	oReport:Say(450,1600,"Risco Alto - D"                                                 ,oFont )
	oReport:Say(450,2100,"Risco muito Alto IC - E"                                        ,oFont )
	oReport:Say(450,2600,"Risco de Inadimplencia Geral"                                   ,oFont )
	
	aCrdA := {550,100,500,550}  
	oBrA  := TBrush():New("",RGB(0,128,0))
	
	aCrdB := {550,600,500,1050}
	oBrB  := TBrush():New("",RGB(0,255,0))
	
	aCrdC := {550,1100,500,1550}
	oBrC  := TBrush():New("",RGB(255,255,0))
	
	aCrdD := {550,1600,500,2050}
	oBrD  := TBrush():New("",RGB(255,117,24))
	
	aCrdE := {550,2100,500,2550}			
	oBrE  := TBrush():New("",RGB(255,0,0))
	
	aCrdF := {550,2600,500,3050}			
	oBrF  := TBrush():New("",RGB(0,0,0))
	
	oReport:FillRect(aCrdA,oBrA)				
	oReport:FillRect(aCrdB,oBrB)				
	oReport:FillRect(aCrdC,oBrC)
	oReport:FillRect(aCrdD,oBrD)
	oReport:FillRect(aCrdE,oBrE)				
	oReport:FillRect(aCrdF,oBrF)

	oReport:Say(550,100  ,"1 a 30 "                                                       ,oFontA)
	oReport:Say(550,350  ,"1 a 30 dias"                                                   ,oFontA)

	oReport:Say(550,600  ,"31 a 180 "                                                     ,oFontA)
	oReport:Say(550,820  ,"31 a 180 dias"                                                 ,oFontA)				
 
	oReport:Say(550,1100 ,"181 a 539 "                                                    ,oFontA)
	oReport:Say(550,1290 ,"181 a 539 dias"                                                ,oFontA)

	oReport:Say(550,1600 ,"acima 540 "                                                    ,oFontA)
	oReport:Say(550,1800 ,"acima 540 dias"                                                ,oFontA)				

	oReport:Say(550,2100 ,"IC - R$"                                                       ,oFontA)
	oReport:Say(550,2440 ,"IC - %"                                                        ,oFontA)

	oReport:Say(550,2600 ,"IAG - R$"                                                      ,oFontA)
	oReport:Say(550,2920 ,"IAG - %"                                                       ,oFontA)
	//-> Calculo percentual de risco baixo
	//nPRisB := (nTotAbeB * 100)/nTotAbeT					
	//oReport:Say(600,2600 ,"0.00"                                                          ,oFontA)  
	//oReport:Say(600,2950 ,"0,00%"                                                         ,oFontA)

RETURN
