#include 'protheus.ch'

/*/{Protheus.doc} MT110ROT
Adiciona mais opções no aRotina
LOCALIZAÇÃO: Function MATA110 - Função da Solicitação de Compras.
EM QUE PONTO: No inico da rotina e antes da execução da Mbrowse da SC, utilizado para adicionar mais opções no aRotina.
@author Franklin B. Oliveira
@since 30/11/2017
@return aNewRotina, array,conteudo do novo aRotina com as nova rotinas adicionadas.
@type function
/*/
User Function MT110ROT()
Local aNewRotina    := {}
Return aNewRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_fBloqSC  ºAutor  ³Microsiga           º Data ³  26/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Consulta Saldo Orcamentario da SC                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function _fBloqSC(_lShow,_cNumSC,_cItemSC,_lRetSaldo)
Local _cArea       := SC1->(GetArea())
Local _cCubo       := ""
Local _aBloqs      := {}
Local _aChave      := {}
Local _cAreaSC1    := SC1->(GetArea())
Local _uRetorno    := .f.
Private _cNumProc  := "000051"
Private _cItProc   := "02"
Private oDlg
Private oTree
Default _cNumSC    := SC1->C1_NUM
Default _cItemSC   := ""
Default _lRetSaldo := .f.

AKH->(dbSetOrder(1))
IF AKH->(dbSeek(XFilial("AKH")+_cNumProc+_cItProc)) // Verifica se tem bloqueio cadastrado para a aprovacao da SC
	While AKH->(!Eof()) .And. xFilial("AKH")+_cNumProc+_cItProc == AKH->(AKH_FILIAL+AKH_PROCES+AKH_ITEM)
		
		If AKH->AKH_ATIVO == "LBOK"
			
			AKJ->(dbSetOrder(1))
			IF !AKJ->(MsSeek(xFilial("AKJ")+AKH->AKH_CODBLQ))
				AKH->(dbSKip())
				Loop
			EndIf
			
			_cCodCubo := Posicione("AL4", 1, xFilial("AL4")+AKJ->AKJ_PRVCFG, "AL4_CONFIG")
			
			// Posiciona AKI
			AKI->(dbSetOrder(1))
			AKI->(dbSeek(XFilial("AKI")+_cNumProc+_cItProc))
			
			While AKI->(!Eof()) .and. AKI->(AKI_FILIAL+AKI_PROCES+AKI_ITEM) == XFilial("AKI")+_cNumProc+_cItProc
				IF AKI->AKI_ATIVO == "LBOK"
					Exit
				ENDIF
				AKI->(dbSkip())
			Enddo
			
			/*
			IF &(Alltrim(AKI->AKI_VALOR1)) <= 0
			AKH->(dbSKip())
			Loop
			ENDIF
			*/
			
			AKW->(dbSetOrder(1))
			IF AKW->(MsSeek(xFilial("AKW")+_cCodCubo))
				Aadd(_aBloqs,{AKJ->AKJ_COD})
			ENDIF
			
			While AKW->(!Eof()) .And. xFilial("AKW")+_cCodCubo == AKW->(AKW_FILIAL+AKW_COD) .and. AKW->AKW_NIVEL <= AKJ->AKJ_NIVPR
				
				IF AKW->AKW_ALIAS == "CTT" //UO
					aAdd(_aChave,{"C1_CC",AKW->AKW_NIVEL,"SC1"})
				ELSEIF AKW->AKW_ALIAS == "CTD" // CR
					aAdd(_aChave,{"C1_ITEMCTA",AKW->AKW_NIVEL,"SC1"})
				ELSEIF AKW->AKW_ALIAS == "CTH" // CR
					aAdd(_aChave,{"C1_CLVL",AKW->AKW_NIVEL,"SC1"})
				ELSEIF AKW->AKW_ALIAS == "AK5" // Conta
					aAdd(_aChave,{"C1_CONTA",AKW->AKW_NIVEL,"SC1"})
				ELSEIF AKW->AKW_ALIAS == "CV0" // Operacao
					IF "ENT05" $ AKW->AKW_CHAVER
						aAdd(_aChave,{"C1_EC05DB",AKW->AKW_NIVEL,"SC1"})
					ELSEIF "ENT06" $ AKW->AKW_CHAVER
						aAdd(_aChave,{"C1_EC06DB",AKW->AKW_NIVEL,"SC1"})
					ELSEIF "ENT07" $ AKW->AKW_CHAVER
						aAdd(_aChave,{"C1_EC07DB",AKW->AKW_NIVEL,"SC1"})
					ELSEIF "ENT08" $ AKW->AKW_CHAVER
						aAdd(_aChave,{"C1_EC08DB",AKW->AKW_NIVEL,"SC1"})
					ELSEIF "ENT09" $ AKW->AKW_CHAVER
						aAdd(_aChave,{"C1_EC08DB",AKW->AKW_NIVEL,"SC1"})
					ENDIF
				ELSEIF AKW->AKW_ALIAS == "AKF" // Operacao
					aAdd(_aChave,{&(AKI->AKI_OPER),,"AKF"})
				ELSEIF AKW->AKW_ALIAS == "AK6" // Classe
					aAdd(_aChave,{&(AKI->AKI_CLASSE),,"AK6"})
				ELSEIF AKW->AKW_ALIAS == "AL2" // Tipo de Saldo
					aAdd(_aChave,{&(AKI->AKI_TPSALD),,"AL2"})
				ENDIF
				
				AKW->(dbSkip())
			EndDo
			
			Aadd(_aBloqs[Len(_aBloqs)],_aChave)
			
		ENDIF
		
		AKH->(dbSKip())
	End
ENDIF

IF Len(_aBloqs) == 0
	IF _lShow
		Aviso("Atencao","Não existe bloqueio ativo para o processo de SC ("+_cNumProc+"/"+_cItProc+").",{"Sair"})
		IF _lRetSaldo
			_uRetorno := {}
			Aadd(_uRetorno,"") // Chave de Bloqueio
			Aadd(_uRetorno,SC1->(C1_QUANT*C1_VUNIT)) // Saldo
		ENDIF
	ELSE
		IF _lRetSaldo
			_uRetorno := {}
			Aadd(_uRetorno,"") // Chave de Bloqueio
			Aadd(_uRetorno,SC1->(C1_QUANT*C1_VUNIT)) // Saldo
		ENDIF
	ENDIF
	Return(_uRetorno)
ENDIF

_aSaldos   := {}
_nSldComp  := 0
_cChaveSC1 := ""
_cChaveAKC := ""

For i := 1 to Len(_aBloqs)
	
	AKJ->(dbSetOrder(1))
	AKJ->(dbSeek(xFilial("AKJ")+_aBloqs[i][1]))
	
	For x := 1 to Len(_aBloqs[i,2])
		IF _aBloqs[i,2][x][3] == "SC1"
			_cChaveSC1 += IIF(Empty(_cChaveSC1),"","+")+_aBloqs[i,2][x][1]
		ELSE
			_cChaveAKC += _aBloqs[i,2][x][1]
		ENDIF
	Next
	
	SC1->(dbSetOrder(1))
	SC1->(dbSeek(XFilial("SC1")+_cNumSC+_cItemSC))
	
	_aProcs := {}
	
	While SC1->(!Eof()) .and. SC1->C1_FILIAL == XFilial("SC1") .and. SC1->C1_NUM == _cNumSC .and. IIF(Empty(_cItemSC),.t.,_cItemSC==SC1->C1_ITEM)
		
		IF (_nPos := Ascan(_aSaldos,{|x| x[2] == &("SC1->("+_cChaveSC1+")")+_cChaveAKC})) == 0
			Aadd(_aSaldos,{_aBloqs[i][1],&("SC1->("+_cChaveSC1+")")+_cChaveAKC,SC1->(C1_QUANT*C1_VUNIT),0})
		ELSE
			_aSaldos[_nPos,3] += SC1->(C1_QUANT*C1_VUNIT)
		ENDIF
		
		SZW->(dbSetOrder(1))
		IF SZW->(MsSeek(xFilial("SZW")+SC1->(C1_NUM+C1_ITEM)))
			_cFilBkp := cFilAnt
			While SZW->(!Eof()) .and. SZW->(ZW_FILIAL+ZW_NUMSC+ZW_ITEMSC) == XFilial("SZW")+SC1->(C1_NUM+C1_ITEM)
				// Altera empresa
				cFilAnt := SZW->ZW_CODEMP
				
				_nPos := Ascan(_aSaldos,{|x| x[2] == &("SC1->("+_cChaveSC1+")")+_cChaveAKC})
				_aSaldos[_nPos,4] += _fSldCubo()
				
				// Restaura filial
				cFilAnt := _cFilBkp
				
				SZW->(dbSkip())
			Enddo
		ELSE
			_nPos := Ascan(_aSaldos,{|x| x[2] == &("SC1->("+_cChaveSC1+")")+_cChaveAKC})
			IF Ascan(_aProcs,&("SC1->("+_cChaveSC1+")")+_cChaveAKC) == 0
				_aSaldos[_nPos,4] += _fSldCubo()
			ENDIF
		ENDIF
		
		Aadd(_aProcs,&("SC1->("+_cChaveSC1+")")+_cChaveAKC)
		
		SC1->(dbSkip())
	Enddo
	
Next

IF (_nPosBlq := Ascan(_aSaldos,{|x| x[3] > x[4]})) > 0 // Verifica se existem chaves sem saldo
	IF _lRetSaldo
		_uRetorno := {}
		Aadd(_uRetorno,_aSaldos[_nPosBlq,2]) // Chave de Bloqueio
		Aadd(_uRetorno,_aSaldos[_nPosBlq,4]) // Saldo
	ELSE
		_uRetorno := .t.
	ENDIF
ELSE
	IF _lRetSaldo
		_uRetorno := {}
		Aadd(_uRetorno,_aSaldos[1,2]) // Chave de Bloqueio
		Aadd(_uRetorno,_aSaldos[1,4]) // Saldo
	ENDIF
ENDIF

IF _lShow
	
	DEFINE MSDIALOG oDlg TITLE "Bloqueios" FROM 0,0 TO 400,700 PIXEL
	
	oPanel := TPanel():New(0,0,'',oDlg,, .T., .T.,, ,20,20,.T.,.T. )
	oPanel:Align := CONTROL_ALIGN_BOTTOM
	
	oTree:= Xtree():New(000,000,000,000, oDlg)
	oTree:Align := CONTROL_ALIGN_ALLCLIENT
	
	oTree:AddTree( "Tipos de Bloqueio","IndicatorCheckBox","IndicatorCheckBoxOver",,{|| .t. } )
	
	For i := 1 to Len(_aBloqs)
		
		AKJ->(dbSetOrder(1))
		AKJ->(dbSeek(xFilial("AKJ")+_aBloqs[i][1]))
		
		AL1->(dbSetOrder(1))
		AL1->(dbSeek(XFilial("AL1")+AKJ->AKJ_CONFIG))
		
		oTree:AddTree(AKJ->(AKJ_COD+" - "+Alltrim(AKJ_DESCRI))+" ( "+Alltrim(AL1->AL1_DESCRI)+" )","PCOCUBE","IndicatorCheckBoxOver",,)
		
		For x := 1 to Len(_aSaldos)
			IF _aSaldos[x,1] == _aBloqs[i][1]
				_nTotalSC  := Transform(_aSaldos[x,3],"@E 999,999,999.99")
				_nSaldoPCO := Transform(_aSaldos[x,4],"@E 999,999,999.99")
				
				_cObj := IIF(_aSaldos[x,3] > _aSaldos[x,4],"CADEADO","CHECKED")
				
				oTree:AddTree(_aSaldos[x,2]+" ==> VALOR SC: "+_nTotalSC+"  /  "+"SALDO: "+_nSaldoPCO,_cObj,"FOLDER6",,/*bAction*/,{||}/*bRClick*/,{||}/*bDblClick*/ )
				oTree:EndTree()
			ENDIF
		Next
		
		oTree:EndTree()
	Next
	
	oTree:EndTree()
	
	DEFINE SBUTTON FROM 005,320 TYPE 1 OF oPanel ENABLE ONSTOP "Sair" ACTION (oDlg:End())
	
	ACTIVATE MSDIALOG oDlg CENTERED
	
ENDIF

RestArea(_cAreaSC1)
RestArea(_cArea)
Return(_uRetorno)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_fConting ºAutor  ³Microsiga           º Data ³  20/04/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Solicitacao de Contingencia                                º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function _fConting()
Local _cArea      := SC1->(GetArea())
Local _cNumSC     := SC1->C1_NUM
Private _NPERCEMP := 0

If SC1->C1_APROV == "O"
	
	IF Aviso("Atencao","Confirma solicitação de contingência para a SC "+Alltrim(SC1->C1_NUM)+" ?",{"Sim","Não"}) == 1
		SC1->(dbSetOrder(1))
		SC1->(dbSeek(XFilial("SC1")+_cNumSC))
		
		Begin Transaction
		
		// Reavalia saldo da SC
		_lSaldoOk := !U__fBloqSC(.f.)
		
		While SC1->(!Eof()) .and. SC1->C1_FILIAL == XFilial("SC1") .and. SC1->C1_NUM == _cNumSC
			
			// Atualiza flag para LIBERADO
			RecLock("SC1",.F.)
			SC1->C1_APROV := IIF(_lSaldoOk,"L","C")
			SC1->(msUnlock())
			
			// Reavalia saldo da SC
			_aDadosBloq := U__fBloqSC(.f.,SC1->C1_NUM,SC1->C1_ITEM,.t.)
			IF _aDadosBloq[2] >= SC1->(C1_QUANT*C1_VUNIT)
				_lContinua := .t.
			ELSE
				_lContinua := .f.
			ENDIF
			
			SZW->(dbSetOrder(1))
			IF SZW->(MsSeek(xFilial("SZW")+SC1->(C1_NUM+C1_ITEM)))
				
				// Grava Contigencia total
				IF !_lContinua .and. !_fGRVCtg(_aDadosBloq)
					Return()
				ENDIF
				
				_cStatus := "C" // Contingencia
				
				_cFilBkp := cFilAnt
				While SZW->(!Eof()) .and. SZW->(ZW_FILIAL+ZW_NUMSC+ZW_ITEMSC) == XFilial("SZW")+SC1->(C1_NUM+C1_ITEM)
					// Altera empresa
					cFilAnt := SZW->ZW_CODEMP
					
					_NPERCEMP := SZW->ZW_PERC
					
					IF !_lContinua
						// Inicia lançamento para Empenho de saldo na contingencia
						PcoIniLan("000356",.F.)
						PcoDetLan("000356","02","PCOA530")
						PcoFinLan("000356",,,.F.)
					ELSE
						// Lançamento realizado
						PcoIniLan('000051')
						MsgRun("Gerando Movimentos da SC "+SC1->C1_NUM,"",{|| PcoDetLan('000051','02','MATA110') })
						PcoFinLan('000051')
					ENDIF
					
					// Restaura filial
					cFilAnt := _cFilBkp
					
					SZW->(dbSkip())
				Enddo
			ELSE
				PcoIniLan('000051')
				IF !_lContinua
					// Lançamento dos empenhos e contingencias da SC
					MsgRun("Gerando Contingência da SC "+SC1->C1_NUM,"",{|| PcoVldLan('000051','02','MATA110',,,.F.) })
				ELSE
					// Lançamento realizado
					MsgRun("Gerando Movimentos da SC "+SC1->C1_NUM,"",{|| PcoDetLan('000051','02','MATA110') })
				ENDIF
				PcoFinLan('000051')
			ENDIF
			
			_NPERCEMP := 0
			
			SC1->(dbSkip())
		Enddo
		
		// FSW - Alteração para o Gap097 - CNI
		// Se parametro SI_XMED for igual a 1 deve fazer a medição na liberação da solicitação de compras
		If _lSaldoOk .and. GetMv("SI_XMED", .F.) == "1"
			_aRecSC1 := SC1->(GetArea())
			U_CNI109AL(_cNumSc,"SC",2)
			RestArea(_aRecSC1)
		EndIf
		
		End Transaction
		
	ENDIF
	
ElseIf SC1->C1_APROV == "L"
	MsgAlert("Solicitação já Liberada")
ElseIf SC1->C1_APROV == "B"
	MsgAlert("Solicitação Bloqueada")
ElseIf SC1->C1_APROV == "C"
	MsgAlert("Aguardando Contingencia")
ElseIf SC1->C1_APROV == "F"
	MsgAlert("Solicitação Cancelada por Falta de Orçamento")
Else
	MsgAlert("Verifique a Solicitação.")
EndIf

RestArea(_cArea)
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_fPCOPar  ºAutor  ³Microsiga           º Data ³  23/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna saldo para funcao do Cubo                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function _fPCOPar(cConfig,cChave)
Local aRetSld := {}
Local nMoeda  := If(nMoedaCfg==1, AKJ->AKJ_MOEDPR, AKJ->AKJ_MOEDRZ)
Local nSldIni := 0
Local nSldFim := 0
Local _nRet   := 0

// Identifica periodo de bloqueio
Do Case
	Case AKJ->AKJ_TPSLD == "1"
		_dDataIni := dDataBase
		If DOW(dDataBase)<>1
			_dDataIni -= DOW(dDataBase)-1
		EndIf
		_dDataFim := _dDataIni+6
	Case AKJ->AKJ_TPSLD == "2"
		If DAY(dDataBase) <= 15
			_dDataIni := FirstDay(dDataBase)
			_dDataFim := CTOD("15/"+Str(Month(dDataBase),2,0)+"/"+Str(Year(dDataBase),2,0))
		Else
			_dDataIni := CTOD("16/"+Str(Month(dDataBase),2,0)+"/"+Str(Year(dDataBase),4,0))
			_dDataFim :=  LastDay(dDataBase)
		EndIf
	Case AKJ->AKJ_TPSLD == "3"
		_dDataIni := FirstDay(dDataBase)
		_dDataFim :=  LastDay(dDataBase)
	Case AKJ->AKJ_TPSLD == "4"
		_dDataIni := CTOD("01/"+Str((Round(MONTH(dDataBase)/2,0)*2)-1,2,0)+"/"+Str(Year(dDataBase),4,0))
		_dDataFim := LastDay(CTOD("01/"+Str((Round(MONTH(dDataBase)/2,0)*2),2,0)+"/"+Str(Year(dDataBase),4,0)))
	Case AKJ->AKJ_TPSLD == "5"
		If MONTH(dDataBase)<7  //1o. semestre
			_dDataIni := CTOD("01/01/"+Str(Year(dDataBase),4,0))
			_dDataFim := LastDay(CTOD("01/06/"+Str(Year(dDataBase),4,0)))
		Else //2o. semestre
			_dDataIni := CTOD("01/07/"+Str(Year(dDataBase),4,0))
			_dDataFim := LastDay(CTOD("01/12/"+Str(Year(dDataBase),4,0)))
		EndIf
	Case AKJ->AKJ_TPSLD == "6"
		_dDataIni := CTOD("01/01/"+Str(Year(dDataBase),4,0))
		_dDataFim := LastDay(CTOD("31/12/"+Str(Year(dDataBase),4,0)))
	Case AKJ->AKJ_TPSLD == "7"
		_dDataIni := CTOD("01/"+Str((Round(((MONTH(dDataBase)+1)/(12/4)),0))*(12/4)-2,2,0)+"/"+Str(Year(dDataBase),4,0))
		_dDataFim := LastDay(CTOD("01/"+Str((Round(((MONTH(dDataBase)+1)/(12/4)),0))*(12/4),2,0)+"/"+Str(Year(dDataBase),4,0)))
EndCase

IF AKJ->AKJ_SLDPER == "1" // Saldo por Periodo
	
	aRetIni := PcoRetSld(cConfig,cChave,_dDataIni-1)
	nCrdIni := aRetIni[1, nMoeda]
	nDebIni := aRetIni[2, nMoeda]
	
	aRetFim := PcoRetSld(cConfig,cChave,_dDataFim)
	nCrdFim := aRetFim[1, nMoeda]
	nDebFim := aRetFim[2, nMoeda]
	
	nSldIni := nCrdIni-nDebIni
	nMovCrd := nCrdFim-nCrdIni
	nMovDeb := nDebFim-nDebIni
	nMovPer := nMovCrd-nMovDeb
	
	_nRet += nMovPer
	
ELSE // Saldo Acumulado
	
	aRetFim := PcoRetSld(cConfig,cChave,dDataBase)
	nCrdFim := aRetFim[1, nMoeda]
	nDebFim := aRetFim[2, nMoeda]
	
	nSldFim  := nCrdFim-nDebFim
	_nRet := nSldFim-nSldIni
	
ENDIF

Return {_nRet}
