#INCLUDE "PROTHEUS.CH"
#INCLUDE "MSOLE.CH"
#INCLUDE "TOPCONN.CH"
#include "tbiconn.ch"
#INCLUDE "FILEIO.CH"

User Function DTFINR01()
/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> :  Função responsável pela impressão da carta de cobrança dos clientes
<Autor> : Fábrica DOIT SP
<Data> : 26/05/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Carta de Cobrança dos Clientes
<Tipo> Menu
<Obs> : 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/
Local _cMSg 		:= ""
Local nOP   		:= 1  
Local nModelo		:= 0
Private cPerg 		:= "DTFIN01"
Private cCadastro	:= "Carta de Cobrança"
Private aSays		:= {}
Private aButtons	:= {}
Private nOpca 		:= 0

// Funcao para criacao das perguntas.
fCriaSx1()

// Forca o usuario a preencher as perguntas.
Pergunte(cPerg,.T.)

AADD(aSays,"Esta rotina tem como objetivo imprimir a Carta de Cobrança de" 			)
AADD(aSays,"títulos vencidos, pode-se selecionar o modelo a ser impresso" 			)
AADD(aSays,"assim como as opções de impressão da Carta com Envelope ou Etiqueta." 	)


AADD(aButtons, { 5,.T.,{|| Pergunte(cPerg,.T. )}})
AADD(aButtons, { 1,.T.,{|o| nOpca := 1,FechaBatch()}})
AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

FormBatch( cCadastro, aSays, aButtons )

If Select("QRY") > 0
	DbSelectArea("QRY")
	DbCloseArea()
EndIf

MakeSQLExpr(cPerg)

MV_PAR09 := StrTran(MV_PAR09,"IN(","SE1.E1_TIPO IN(")
MV_PAR09 := StrTran(MV_PAR09,"BETWEEN","SE1.E1_TIPO BETWEEN")

// Count() para contar a quantidade de titulos a serem impressos
cQuery := "SELECT COUNT(*) nQtd "
cQuery += " FROM "+RetSqlName('SE1')+" SE1, " +RetSqlName('SA1')+" SA1 "
cQuery += " WHERE SE1.D_E_L_E_T_ = ' '  "
cQuery += " AND E1_FILIAL = '"+FWxFilial("SE1")+"' "
cQuery += " AND E1_CLIENTE BETWEEN '"+mv_par01+"' AND '"+mv_par02+"'"
cQuery += " AND E1_LOJA BETWEEN '"+mv_par03+"' AND '"+mv_par04+"'"
cQuery += " AND E1_VENCREA BETWEEN '"+Dtos(mv_par05)+"' AND '"+Dtos(mv_par06)+"'"
cQuery += " AND E1_SALDO > 0 "
cQuery += " AND E1_TIPO NOT IN ('" + MVISS + "','" + MVTAXA + "','" + MVTXA + "','" + MVINSS +"','SES','AB-','IR-','CF-','CS-','IN-','IS-','PI-','PIS','COF','CSL')"
If .Not. Empty(MV_PAR09)
	cQuery += " AND "+MV_PAR09
EndIf 
cQuery += " AND SA1.D_E_L_E_T_ = ' '  "
cQuery += " AND A1_FILIAL = '"+FWxFilial("SA1")+"' "
cQuery += " AND A1_COD = E1_CLIENTE "
cQuery += " AND A1_LOJA = E1_LOJA "
cQuery := ChangeQuery(cQuery)
dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), 'QRY', .F., .T.)
DbSelectArea("QRY")
DbGotop()
nQtdTit := nQtd

If Select("QRY") > 0
	DbSelectArea("QRY")
	DbCloseArea()
EndIf

cQuery := "SELECT * "
cQuery += " FROM "+RetSqlName('SE1')+" SE1, " +RetSqlName('SA1')+" SA1 "
cQuery += " WHERE SE1.D_E_L_E_T_ = ' '  "
cQuery += " AND E1_FILIAL = '"+FWxFilial("SE1")+"' "
cQuery += " AND E1_CLIENTE BETWEEN '"+mv_par01+"' AND '"+mv_par02+"'"
cQuery += " AND E1_LOJA BETWEEN '"+mv_par03+"' AND '"+mv_par04+"'"
cQuery += " AND E1_VENCREA BETWEEN '"+Dtos(mv_par05)+"' AND '"+Dtos(mv_par06)+"'"
cQuery += " AND E1_SALDO > 0 "
cQuery += " AND E1_TIPO NOT IN ('" + MVISS + "','" + MVTAXA + "','" + MVTXA + "','" + MVINSS +"','SES','AB-','IR-','CF-','CS-','IN-','IS-','PI-','PIS','COF','CSL')"
If .Not. Empty(MV_PAR09)
	cQuery += " AND "+MV_PAR09
EndIf 
cQuery += " AND SA1.D_E_L_E_T_ = ' '  "
cQuery += " AND A1_FILIAL = '"+FWxFilial("SA1")+"' "
cQuery += " AND A1_COD = E1_CLIENTE "
cQuery += " AND A1_LOJA = E1_LOJA "
cQuery += " ORDER BY E1_FILIAL, E1_CLIENTE, E1_LOJA, E1_PREFIXO, E1_NUM, E1_PARCELA "

cQuery := ChangeQuery(cQuery)
dbUseArea(.T., "TOPCONN", TCGenQry(,,cQuery), 'QRY', .F., .T.)
TcSetField("QRY","E1_VENCREA","D",08,00)

DbSelectArea("QRY")
DbGotop()

If Eof()
	_cMSg	:= "Não existem títulos vencidos para este cliente." + QRY->E1_CLIENTE+"-"+QRY->E1_LOJA+" "+QRY->A1_NOME + Chr(10) + Chr(13)
	nOp := Aviso("Atenção",_cMSg, {"Sair"})
	Return
Endif

If nOpca == 1
	If ApMsgYesNo("Confirma impressao da(s) Carta(s) de Cobrança?","Confirmar")
		Processa({|| WordImp()})
	EndIf
EndIf


Return


Static Function WordImp()
/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> :  Função responsável pela impressão da carta de cobrança dos clientes
<Autor> : Fábrica DOIT SP
<Data> : 26/05/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Carta de Cobrança dos Clientes
<Tipo> Menu
<Obs> : 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/
Local cFilAux 		:= ""
Local i := 0

Private cPathDot	:= Alltrim(GetMV("DT_DIRDOT")) //Diretorio do Arquivo Modelo
Private cPathDoc	:= Alltrim(GetMV("DT_DIRDOC")) //Diretorio dos Arquivos onde as Cartas serão Gravadas
Private _cLocDocC	:= Alltrim(GetMV("DT_LOCDOC")) //Diretorio LOCAL onde serão gravadas as cartas de cobranca
Private aNome 	:= {}
Private _cNome 	:= ""
Private aDepto 	:= {}
Private _cDepto 	:= ""
Private _cEmpresa := ""
Private cBarra 	:= If(isSrvUnix(),"/","\")
//Private _cLocDotC := "\TEMP"
//Private _cLocDocC := "\TEMP"
Private	hWord
Private nTamTit  := TamSX3("E1_NUM")[1]
Private cPictVal := PesqPict("SE1","E1_VALOR")
Private cSeq := "001"
Private cTime := Subs(time(),1,2)+Subs(time(),4,2)+Subs(time(),7,2)
Private	_nLinhas := 10
Private _nQtdLin := 0
Private _nTotal  := 0   
Private _cMailEmp := GetMv("DT_MAILCOB")
Private _cTabArray :="TITULO                               VALOR                    VENCIMENTO"+CRLF
		_cTabArray +="________________________________________________________________________"+CRLF

// retira o drive caso o usuario tenha cadastrado no parametro
If ":" $ _cLocDocC
	_cLocDocC := Subs(_cLocDocC,3,Len(Alltrim(_cLocDocC))-2)
Endif		
/*
If mv_par07 == 2
	_nLinhas := 4
Endif	
*/

If mv_par07 == 1 .and. mv_par08 == 1
	cArqDot	:= Alltrim(SuperGetMV("DT_DOTCAR1",.F.,,SubStr(cFilAnt,1,4))) //Nome do Arquivo Modelo1 - Frente e Verso
Elseif mv_par07 == 1 .and. mv_par08 == 2
	cArqDot	:= Alltrim(SuperGetMV("DT_DOTCARA",.F.,,SubStr(cFilAnt,1,4))) //Nome do Arquivo Modelo1 - Somente Carta
Elseif mv_par07 == 2 .and. mv_par08 == 1
	cArqDot	:= Alltrim(SuperGetMV("DT_DOTCAR2",.F.,,SubStr(cFilAnt,1,4))) //Nome do Arquivo Modelo2 - Frente e Verso
Elseif mv_par07 == 2 .and. mv_par08 == 2
	cArqDot	:= Alltrim(SuperGetMV("DT_DOTCARB",.F.,,SubStr(cFilAnt,1,4))) //Nome do Arquivo Modelo2 - Somente Carta
Endif

// Verifica/Cria a pasta do arquivo .DOT

If !cPathDot $ Upper("system")
	_cLocDot := GetSrvProfString("StartPath","")+If(Right(GetSrvProfString("StartPath",""),1) == cBarra,"",cBarra)+cPathDot
Endif


If !File("K:"+_cLocDocC)
	MAKEDIR("K:"+_cLocDocC)
EndIf


If !CpyS2T(_cLocDot+cArqDot,"K:"+_cLocDocC,.T.)
//Else
	MsgStop("Não foi possível copiar o arquivo "+cArqDot+" para a pasta C:"+_cLocDocC)
	Return
EndIf

// Verifica/Cria a pasta do arquivo .DOC
If !cPathDoc $ Upper("system")
	_cLocDoc := GetSrvProfString("StartPath","")+If(Right(GetSrvProfString("StartPath",""),1) == cBarra,"",cBarra)+IIF(Right(cPathDoc,1) == cBarra,Subs(cPathDoc,1,Len(Alltrim(cPathDoc))-1),cPathDoc)
Endif

If !File("K:"+_cLocDocC)
	MAKEDIR("K:"+_cLocDocC)
EndIf

// Dados do Cabeçalho
_cData	:= AllTrim(Str(Day(dDataBase),2))+' de '+AllTrim(MesExtenso(dDataBase))+' de '+AllTrim(Str(Year(dDataBase),4))

// Assinatura
PswOrder(2)
If PswSeek(Alltrim(cUserName))
	aNome := PswRet(1)
	_cNome:= aNome[1][4]
	_cDepto:= aNome[1][12]
EndIf

DbSelectArea("QRY")
DbGotop()
While !Eof()
	
	// Inicializa variavel de controle 
	cSeq := "001"
	_nQtdLin := 0
	_nTotal  := 0
	_cTabArray :="TITULO                               VALOR                    VENCIMENTO"+CRLF
	_cTabArray +="________________________________________________________________________"+CRLF

	// Dados do Destinatario/Cliente
	_cCodigo		:= QRY->A1_COD
	_cCliente		:= QRY->A1_NOME
	_cloja			:= QRY->A1_LOJA
	_cEndereco		:= QRY->A1_END
	_cComplemento	:= QRY->A1_COMPLEM
	_cBairro		:= QRY->A1_BAIRRO
	_cCep	  		:= QRY->A1_CEP
	_cCidade		:= QRY->A1_MUN
	_cUF			:= QRY->A1_EST
	_cCGC			:= QRY->A1_CGC
	
	
// Dados do Remetente/Unidade
//	If Empty(_cEmpresa)
	_cEmpresa := ""
	For i:=1 to Len(SM0->M0_FILIAL)
		_cEmpresa += Subs(SM0->M0_FILIAL,i,1)
		If Empty(Subs(SM0->M0_FILIAL,i,1))
			Exit
		Endif
	Next
//	EndIf
	_cCidEmp	:= SM0->M0_CIDENT
	_cEndEmp	:= SM0->M0_ENDENT
	_cBaiEmp	:= SM0->M0_BAIRENT
	_cCepEmp	:= SM0->M0_CEPENT
	_cUFEmp		:= SM0->M0_ESTENT
	_cFaxEmp    := Alltrim(SM0->M0_FAX)+Iif(!Empty(SM0->M0_FAX_PO),' / '+Alltrim(SM0->M0_FAX_PO),'')
	_cTelEmp    := Iif(!Empty(SM0->M0_TEL_PO), AllTrim(SM0->M0_TEL_PO), Alltrim(SM0->M0_TEL))
	
	While !Eof() .and. _cCodigo == QRY->A1_COD .and. _cloja == QRY->A1_LOJA		
		_cTabArray += Alltrim(QRY->E1_NUM)+Space(nTamTit - Len(Alltrim(QRY->E1_NUM)))+Space(10)+Space(Len(cPictVal) - Len(AllTrim(Transform(QRY->E1_SALDO,"@e 999,999,999.99"))))+AllTrim(Transform(QRY->E1_SALDO,"@e 999,999,999.99")) +Space(20) + Dtoc(QRY->E1_VENCREA) + CRLF
		                             
		/*BEGINDOC
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//Gravação do histórico da cobrança na tabela ZD2³
		//ÀÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÙ
		ENDDOC*/
		FSalvaCob()
		
		//---------------------------------------------
		//-- Grava Historicio de cobrança
		//---------------------------------------------
		ProcHistor()
  	
		_nTotal += QRY->E1_SALDO
		_nQtdLin++
	 
			If _cCodigo <> QRY->A1_COD .and. _cloja <> QRY->A1_LOJA	//_nQtdLin == _nLinhas .and. nQtdTit > _nLinhas
			FImpCarta()
			_nTotal  := 0
			_nQtdLin := 0
			cSeq := Soma1(cSeq)
			_cTabArray :="TITULO                               VALOR                    VENCIMENTO"+CRLF
			_cTabArray +="________________________________________________________________________"+CRLF
		Endif	
		
		DbSelectArea("QRY")
		DbSkip()
	End

//	If nQtdTit < _nLinhas

	
	FImpCarta()

//	Endif		

End

Return

Static Function FImpCarta()	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Funcao que faz o Word aparecer na Area de Transferencia do Windows,     ³
	//³sendo que para habilitar/desabilitar e so colocar .T. ou .F.            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	OLE_SetProperty(hWord, oleWdVisible  ,.F. )
	OLE_SetProperty(hWord, oleWdPrintBack,.T. )
	
	//Conecta ao word
	hWord	:= OLE_CreateLink()
	//OLE_NewFile(hWord, _cLocDot+cArqDot)

	OLE_NewFile(hWord, "K:" + _cLocDocC + "\" + cArqDot)
	
	//Montagem das variaveis do cabecalho
	OLE_SetDocumentVar(hWord, 'cCidade'		, _cCidEmp)
	OLE_SetDocumentVar(hWord, 'cData'		, _cData)
	OLE_SetDocumentVar(hWord, 'cCliente'	, _cCliente)
	OLE_SetDocumentVar(hWord, 'cTotal'		, Alltrim(Transform(_nTotal,"@E 999,999,999.99")))
	OLE_SetDocumentVar(hWord, 'cTabArray'	, _cTabArray)
	OLE_SetDocumentVar(hWord, 'cEmpresa'	, _cEmpresa)
	OLE_SetDocumentVar(hWord, 'cNome'		, _cNome)
//	OLE_SetDocumentVar(hWord, 'cDepto'		, _cDepto)
	OLE_SetDocumentVar(hWord, 'cDepto'		, FWFilialName(cEmpAnt,cFilAnt,2))
	OLE_SetDocumentVar(hWord, 'cEndCli'		, _cEndereco)
	OLE_SetDocumentVar(hWord, 'cComplemento', _cComplemento)
	OLE_SetDocumentVar(hWord, 'cBaiCli'		, _cBairro)
	OLE_SetDocumentVar(hWord, 'cCepCli'		, _cCep)
	OLE_SetDocumentVar(hWord, 'cCidCli'		, _cCidade)
	OLE_SetDocumentVar(hWord, 'cUFCli'		, _cUF)
	OLE_SetDocumentVar(hWord, 'cEndEmp'		, _cEndEmp)
	OLE_SetDocumentVar(hWord, 'cBaiEmp'		, _cBaiEmp)
	OLE_SetDocumentVar(hWord, 'cCepEmp'		, _cCepEmp)
	OLE_SetDocumentVar(hWord, 'cUFEmp'		, _cUFEmp)
	OLE_SetDocumentVar(hWord, 'cTelEmp'		, _cTelEmp)
	OLE_SetDocumentVar(hWord, 'cFaxEmp'		, _cFaxEmp)
	OLE_SetDocumentVar(hWord, 'cMailEmp'	, _cMailEmp)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Funcao que atualiza os campos da memoria para o Documento, utilizada logo apos a   ³
	//³funcao OLE_SetDocumentVar().														  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	OLE_UpdateFields(hWord)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Salva os Termos Gerados                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If mv_par07 == 1 .and. mv_par08 == 1
		cNomeDoc := "CARTA_MOD1_VERSO_"+Alltrim(_cCGC)+"_"+cTime+"_"+cSeq+".DOC"
	Elseif mv_par07 == 1 .and. mv_par08 == 2
		cNomeDoc := "CARTA_MOD1_ETIQ_"+Alltrim(_cCGC)+"_"+cTime+"_"+cSeq+".DOC"
	Elseif mv_par07 == 2 .and. mv_par08 == 1
		cNomeDoc := "CARTA_MOD2_VERSO_"+Alltrim(_cCGC)+"_"+cTime+"_"+cSeq+".DOC"
	Elseif mv_par07 == 2 .and. mv_par08 == 2
		cNomeDoc := "CARTA_MOD2_ETIQ_"+Alltrim(_cCGC)+"_"+cTime+"_"+cSeq+".DOC"
	Endif

	OLE_SaveAsFile(hWord,"K:"+_cLocDocC+"\"+cNomeDoc)

	If CpyT2S("K:"+_cLocDocC+"\"+cNomeDoc,_cLocDoc,.T.)
		//	MsgInfo("Copia do arquivo "+cNomeDoc+" para o a pasta da rede "+_cLocDoc+" realizada com sucesso.")
	Else
		//	MsgStop("Não foi possível copiar o arquivo "+cNomeDoc+" para o a pasta da rede "+_cLocDoc)
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Imprime documento gerado                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//If MsgYesNo("Imprime o Documento ?")
	//Ole_PrintFile(hWord,"ALL",,,1)
	//EndIf
	
	//If MsgYesNo("Fecha o Word e Corta o Link ?")
	OLE_CloseFile( hWord )
	OLE_CloseLink( hWord )
	//Endif
		
Return()

/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> :  Função responsável pela criacao da pergunta
<Autor> : Fábrica DOIT SP
<Data> : 26/05/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Carta de Cobrança dos Clientes
<Tipo> Menu
<Obs> : 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/
Static Function fCriaSx1()

Local aHelpPor01 := {'Código do cliente inicial ', 'a ser impresso.'      , ''}
Local aHelpEsp01 := {'Código do cliente inicial ', 'a ser impresso.'      , ''}
Local aHelpEng01 := {'Código do cliente inicial ', 'a ser impresso.'      , ''}

Local aHelpPor02 := {'Código do último cliente ', 'a ser impresso.'      , ''}
Local aHelpEsp02 := {'Código do último cliente ', 'a ser impresso.'      , ''}
Local aHelpEng02 := {'Código do último cliente ', 'a ser impresso.'      , ''}

Local aHelpPor03 := {'Loja inicial do cliente ', 'a ser impresso.'      , ''}
Local aHelpEsp03 := {'Loja inicial do cliente ', 'a ser impresso.'      , ''}
Local aHelpEng03 := {'Loja inicial do cliente ', 'a ser impresso.'      , ''}

Local aHelpPor04 := {'Loja final do cliente ', 'a ser impresso.'      , ''}
Local aHelpEsp04 := {'Loja final do cliente ', 'a ser impresso.'      , ''}
Local aHelpEng04 := {'Loja final do cliente ', 'a ser impresso.'      , ''}

Local aHelpPor05 := {'Data inicial do vencimento ', 'a ser impresso.'      , ''}
Local aHelpEsp05 := {'Data inicial do vencimento ', 'a ser impresso.'      , ''}
Local aHelpEng05 := {'Data inicial do vencimento ', 'a ser impresso.'      , ''}

Local aHelpPor06 := {'Data final do vencimento ', 'a ser impresso.'      , ''}
Local aHelpEsp06 := {'Data final do vencimento ', 'a ser impresso.'      , ''}
Local aHelpEng06 := {'Data final do vencimento ', 'a ser impresso.'      , ''}

Local aHelpPor07 := {'Modelo da Carta de Cobrança ', 'a ser gerada e impressa.'      , ''}
Local aHelpEsp07 := {'Modelo da Carta de Cobrança ', 'a ser gerada e impressa.'      , ''}
Local aHelpEng07 := {'Modelo da Carta de Cobrança ', 'a ser gerada e impressa.'      , ''}

Local aHelpPor08 := {'Layout da Carta de cobrança. ', 'Carta com impressão do verso ou '      , 'somente impressão da carta.'}
Local aHelpEsp08 := {'Layout da Carta de cobrança. ', 'Carta com impressão do verso ou '      , 'somente impressão da carta.'}
Local aHelpEng08 := {'Layout da Carta de cobrança. ', 'Carta com impressão do verso ou '      , 'somente impressão da carta.'}

Local aHelpPor09 := {'Tipo de Titulo a ser consi- ', 'derado na Carta de Cobrança      ' }
Local aHelpEsp09 := {'Tipo de Titulo a ser consi- ', 'derado na Carta de Cobrança      ' }
Local aHelpEng09 := {'Tipo de Titulo a ser consi- ', 'derado na Carta de Cobrança      ' }

u_SFPUTSX1( cPerg, '01','Cliente de?','Cliente de?','Cliente de?' ,'mv_ch1','C',TamSX3("A1_COD")[1],0,0,'G','','CLI','','','mv_par01','','','','','','','','','','','','','','','','', aHelpPor01, aHelpEsp01, aHelpEng01)
u_SFPUTSX1( cPerg, '02','Cliente ate?','Cliente ate?','Cliente ate?','mv_ch2','C',TamSX3("A1_COD")[1],0,0,'G','','CLI','','','mv_par02','','','','','','','','','','','','','','','','', aHelpPor02, aHelpEsp02, aHelpEng02)
u_SFPUTSX1( cPerg, '03','Loja de?','Loja de?','Loja de?' ,'mv_ch3','C',TamSX3("A1_LOJA")[1],0,0,'G','','','','','mv_par03','','','','','','','','','','','','','','','','', aHelpPor03, aHelpEsp03, aHelpEng03)
u_SFPUTSX1( cPerg, '04','Loja ate?','Loja ate?','Loja ate?','mv_4h2','C',TamSX3("A1_LOJA")[1],0,0,'G','','','','','mv_par04','','','','','','','','','','','','','','','','', aHelpPor04, aHelpEsp04, aHelpEng04)
u_SFPUTSX1( cPerg, '05','Vencimento de?','Vencimento de?','Vencimento de?' ,'mv_ch5','D',8,0,0,'G','NaoVazio().and.mv_par05<date()','','','','mv_par05','','','','','','','','','','','','','','','','', aHelpPor05, aHelpEsp05, aHelpEng05)
u_SFPUTSX1( cPerg, '06','Vencimento ate?','Vencimento ate?','Vencimento ate?','mv_ch6','D',8,0,0,'G','NaoVazio().and.mv_par06>=mv_par05.and.mv_par06<date()','','','','mv_par06','','','','','','','','','','','','','','','','', aHelpPor06, aHelpEsp06, aHelpEng06)
u_SFPUTSX1( cPerg, '07','Modelo da Carta?','Modelo da Carta?','Modelo da Carta?','mv_ch7','N',1,0,1,'C','','','','','mv_par07','Modelo 1','Modelo 1','Modelo 1','','Modelo 2','Modelo 2','Modelo 2','','','','','','','','','', aHelpPor07, aHelpEsp07, aHelpEng07)
u_SFPUTSX1( cPerg, '08','Layout da Carta?','Layout da Carta?','Layout da Carta?','mv_ch8','N',1,0,1,'C','','','','','mv_par08','Frente e Verso','Frente e Verso','Frente e Verso','','Somente Carta','Somente Carta','Somente Carta','','','','','','','','','', aHelpPor08, aHelpEsp08, aHelpEng08)
u_SFPUTSX1( cPerg, '09','Tipo?','Tipo?','Tipo?','mv_ch9','C',50,0,1,'R','','05','','','mv_par09','','','','','','','','','','','','','','','','', aHelpPor09, aHelpEsp09, aHelpEng09)

Return Nil       

/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> :  Função responsável pela gravação do histórico da cobrança na tabela ZD2
<Autor> : Pathy Pessoa
<Data> : 10/07/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Carta de Cobrança dos Clientes
<Tipo> Menu
<Obs> : 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

Static Function FSalvaCob()
Local aArea := GetArea()

dbSelectArea("ZD2")  

Reclock("ZD2", .T.)
	ZD2->ZD2_FILIAL := QRY->E1_FILIAL 
	ZD2->ZD2_CODCLI := _cCodigo
	ZD2->ZD2_USER	:= SUBSTR(cUsuario,7,15)
	ZD2->ZD2_LOJA	:= _cloja
	ZD2->ZD2_NOMCLI := _cCliente
	ZD2->ZD2_DATA	:= dDataBase
	ZD2->ZD2_HORA	:= SUBSTR(TIME(), 1, 5)
	ZD2->ZD2_NUM	:= QRY->E1_NUM
	ZD2->ZD2_VALOR	:= QRY->E1_VALOR
	ZD2->ZD2_DTVENC := QRY->E1_VENCREA
	ZD2->ZD2_MODELO := mv_par07
MsunLock()	

RestArea(aArea)
Return Nil


//------------------------------------------------------
/*/{Protheus.doc} ProcHistor
Grava Historico de cobrança 

@author Allan da Silva Faria
@since 25/04/2016
@version 1.0
/*/
//------------------------------------------------------
Static Function ProcHistor()

Local _aHistCob := Array(9)

_aHistCob[1]:= QRY->E1_CLIENTE
_aHistCob[2]:= QRY->E1_LOJA
_aHistCob[3]:= QRY->E1_PREFIXO 
_aHistCob[4]:= QRY->E1_NUM
_aHistCob[5]:= QRY->E1_PARCELA
_aHistCob[6]:= QRY->E1_TIPO 
_aHistCob[7]:= STOD("//")
_aHistCob[8]:= "EMISSÃO DE CARTA DE COBRANÇA" + CRLF + IIF(mv_par07 == 1,"Modelo 1","Modelo 2") + "," + IIF(mv_par08 == 1,"Frente e Verso","Somente Carta")
_aHistCob[9]:= "01"

//---------------------------------------
//-- Chama Função que grava historico
//---------------------------------------
U_SF06A74X(_aHistCob,"DTFINR01",NIL)
Return Nil
