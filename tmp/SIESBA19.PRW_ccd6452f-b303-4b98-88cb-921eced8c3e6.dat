#INCLUDE "PROTHEUS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIESBA19   ºAutor  ³Microsiga          º Data ³  22/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Receptor de EAI - Rateio Off-Line                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP 11.5 - Sistema Industria                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function SIESBA19(_cXML)
Local _cError   := ""
Local _cWarning := ""
Local _cDelimit := "_"
Local _lInput   := GetRemoteType() == -1 //-1 = sem remote/ 0 = delphi/ 1 = QT windows/ 2 = QT Linux
Default _cXML   := ""
Conout(_cXML)
IF !_lInput // Chamada via ESB/EAI
	Return
ENDIF

//Gera o Objeto XML com a estrutura recebida
oXml := XmlParser(_cXML, _cDelimit, @_cError, @_cWarning)

//Verifica se a estrutura foi criada
IF !(Empty(_cError) .and. Empty(_cWarning))
	Return()
ENDIF

_nOperac := Val(oXml:_CTBA270:_OPERATION:TEXT)
_cIDESB  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_XIDESB:REALNAME") <> "U",&("oXml:_CTBA270:_CTQMASTER:_CTQ_XIDESB:_VALUE:TEXT"),"")

// Verifica se mensagem trata-se de Pedido de Venda
IF Type('oXml:_CTBA270:_CTQMASTER') == "U" .or. Type("oXml:_CTBA270:_CTQMASTER:_CTQDETAIL") == "U"
	_cMotivo := "Mensagem invalida para a rotina CTBA270 - Rateio Off-Line"
	// Gera XML de retorno
	U_SIXMLMSG("CTBA270","Rateio Off-line",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	Return()
ENDIF

_cCRATEIO := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_RATEIO") == "U",CriaVar("CTQ_RATEIO"),oXml:_CTBA270:_CTQMASTER:_CTQ_RATEIO:_VALUE:TEXT)
_cCDESC	  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_DESC") == "U",CriaVar("CTQ_DESC"),oXml:_CTBA270:_CTQMASTER:_CTQ_DESC:_VALUE:TEXT)
_cCTIPO	  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_TIPO") == "U",CriaVar("CTQ_TIPO"),oXml:_CTBA270:_CTQMASTER:_CTQ_TIPO:_VALUE:TEXT)
_cCCTPAR  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_CTPAR") == "U",CriaVar("CTQ_CTPAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_CTPAR:_VALUE:TEXT)
_cCCCPAR  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_CCPAR") == "U",CriaVar("CTQ_CCPAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_CCPAR:_VALUE:TEXT)
_cCITPAR  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_ITPAR") == "U",CriaVar("CTQ_ITPAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_ITPAR:_VALUE:TEXT)
_cCCLPAR  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_CLPAR") == "U",CriaVar("CTQ_CLPAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_CLPAR:_VALUE:TEXT)
_cCCTORI  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_CTORI") == "U",CriaVar("CTQ_CTORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_CTORI:_VALUE:TEXT)
_cCCCORI  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_CCORI") == "U",CriaVar("CTQ_CCORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_CCORI:_VALUE:TEXT)
_cCITORI  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_ITORI") == "U",CriaVar("CTQ_ITORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_ITORI:_VALUE:TEXT)
_cCCLORI  := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_CLORI") == "U",CriaVar("CTQ_CLORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_CLORI:_VALUE:TEXT)
_nCPERBAS := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_PERBAS") == "U",CriaVar("CTQ_PERBAS"),Val(oXml:_CTBA270:_CTQMASTER:_CTQ_PERBAS:_VALUE:TEXT))
_cCMSBLQL := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_MSBLQL") == "U",CriaVar("CTQ_MSBLQL"),oXml:_CTBA270:_CTQMASTER:_CTQ_MSBLQL:_VALUE:TEXT)  

_cE05PAR	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E05PAR") == "U",CriaVar("CTQ_E05PAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_E05PAR:_VALUE:TEXT)
_cE06PAR	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E06PAR") == "U",CriaVar("CTQ_E06PAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_E06PAR:_VALUE:TEXT)
_cE07PAR	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E07PAR") == "U",CriaVar("CTQ_E07PAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_E07PAR:_VALUE:TEXT)
_cE08PAR	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E08PAR") == "U",CriaVar("CTQ_E08PAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_E08PAR:_VALUE:TEXT)
_cE09PAR	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E09PAR") == "U",CriaVar("CTQ_E09PAR"),oXml:_CTBA270:_CTQMASTER:_CTQ_E09PAR:_VALUE:TEXT)
_cE05ORI	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E05ORI") == "U",CriaVar("CTQ_E05ORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_E05ORI:_VALUE:TEXT)
_cE06ORI	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E06ORI") == "U",CriaVar("CTQ_E06ORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_E06ORI:_VALUE:TEXT)
_cE07ORI	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E07ORI") == "U",CriaVar("CTQ_E07ORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_E07ORI:_VALUE:TEXT)
_cE08ORI	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E08ORI") == "U",CriaVar("CTQ_E08ORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_E08ORI:_VALUE:TEXT)
_cE09ORI	:= IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQ_E09ORI") == "U",CriaVar("CTQ_E09ORI"),oXml:_CTBA270:_CTQMASTER:_CTQ_E09ORI:_VALUE:TEXT)

         
If _nCPERBAS <=0
	_cMotivo := "Informe o campo Percentual Base. Verifique!"
	// Gera XML de retorno
	U_SIXMLMSG("CTBA270","Rateio Off-line",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	Return()
Endif


CTQ->(dbSetOrder(1))
IF CTQ->(dbSeek(XFilial("CTQ")+_cCRATEIO))
	_cMotivo := "A regra "+Alltrim(_cCRATEIO)+" ja existe. Verifique!"
	// Gera XML de retorno
	U_SIXMLMSG("CTBA270","Rateio Off-line",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	Return()
ENDIF

_cCRATEIO := Padr(_cCRATEIO,TamSX3("CTQ_RATEIO")[1])
_cCDESC	  := Padr(_cCDESC,TamSX3("CTQ_DESC")[1])
_cCTIPO	  := Padr(_cCTIPO,TamSX3("CTQ_TIPO")[1])
_cCCTPAR  := Padr(_cCCTPAR,TamSX3("CTQ_CTPAR")[1])
_cCCCPAR  := Padr(_cCCCPAR,TamSX3("CTQ_CCPAR")[1])
_cCITPAR  := Padr(_cCITPAR,TamSX3("CTQ_ITPAR")[1])
_cCCLPAR  := Padr(_cCCLPAR,TamSX3("CTQ_CLPAR")[1])
_cCCTORI  := Padr(_cCCTORI,TamSX3("CTQ_CTORI")[1])
_cCCCORI  := Padr(_cCCCORI,TamSX3("CTQ_CCORI")[1])
_cCITORI  := Padr(_cCITORI,TamSX3("CTQ_ITORI")[1])
_cCCLORI  := Padr(_cCCLORI,TamSX3("CTQ_CLORI")[1])
_cCMSBLQL := Padr(_cCMSBLQL,TamSX3("CTQ_MSBLQL")[1])
_cE05PAR  := Padr(_cE05PAR,TamSX3("CTQ_E05PAR")[1])
_cE06PAR := Padr(_cE06PAR,TamSX3("CTQ_E06PAR")[1])
_cE07PAR := Padr(_cE07PAR,TamSX3("CTQ_E07PAR")[1])
_cE08PAR := Padr(_cE08PAR,TamSX3("CTQ_E08PAR")[1])
_cE09PAR := Padr(_cE09PAR,TamSX3("CTQ_E09PAR")[1])
_cE05ORI := Padr(_cE05ORI,TamSX3("CTQ_E05ORI")[1])
_cE06ORI := Padr(_cE06ORI,TamSX3("CTQ_E06ORI")[1])
_cE07ORI := Padr(_cE07ORI,TamSX3("CTQ_E07ORI")[1])
_cE08ORI := Padr(_cE08ORI,TamSX3("CTQ_E08ORI")[1])
_cE09ORI := Padr(_cE09ORI,TamSX3("CTQ_E09ORI")[1])


_aCab := {{"CTQ_RATEIO"	,_cCRATEIO	,	NIL},;	// 01 Codigo do Rateio
{"CTQ_DESC"		,_cCDESC	,	NIL},;	// 02 Descricao
{"CTQ_TIPO"		,_cCTIPO	,	NIL},;	// 03 Tipo ( 1-Movimento Mes ; 2-Saldo Acumulado )
{"CTQ_CTPAR"	,_cCCTPAR	,	NIL},;	// 04 Conta de Partida
{"CTQ_CCPAR"	,_cCCCPAR	,	NIL},;	// 05 Centro de Custo de Partida
{"CTQ_ITPAR"	,_cCITPAR	,	NIL},;	// 06 Item Contabil   de Partida
{"CTQ_CLPAR"	,_cCCLPAR	,	NIL},;	// 07 Classe de Valor de Partida
{"CTQ_CTORI"	,_cCCTORI	,	NIL},;	// 08 Conta de Origem
{"CTQ_CCORI"	,_cCCCORI	,	NIL},;	// 09 Centro de Custo de Origem
{"CTQ_ITORI"	,_cCITORI	,	NIL},;	// 10 Centro de Custo de Origem
{"CTQ_CLORI"	,_cCCLORI	,	NIL},;	// 11 Centro de Custo de Origem
{"CTQ_PERBAS"	,_nCPERBAS	,	NIL},;	// 12 Percentual Base
{"CTQ_MSBLQL"	,_cCMSBLQL	,	NIL},;	// 13 Bloqueado (1=Sim;2=Nao)
{"CTQ_E05PAR"	,_cE05PAR	,	NIL},;	// 14 Entidade 5 Partida
{"CTQ_E06PAR"	,_cE06PAR	,	NIL},;	// 15 Entidade 6 Partida
{"CTQ_E07PAR"	,_cE07PAR	,	NIL},;	// 16 Entidade 7 Partida
{"CTQ_E08PAR"	,_cE08PAR	,	NIL},;	// 17 Entidade 8 Partida
{"CTQ_E09PAR"	,_cE09PAR	,	NIL},;	// 18 Entidade 9 Partida
{"CTQ_E05ORI"	,_cE05ORI	,	NIL},;	// 19 Entidade 5 Origem
{"CTQ_E06ORI"	,_cE06ORI	,	NIL},;	// 20 Entidade 6 Origem
{"CTQ_E07ORI"	,_cE07ORI	,	NIL},;	// 21 Entidade 7 Origem
{"CTQ_E08ORI"	,_cE08ORI	,	NIL},;	// 22 Entidade 8 Origem
{"CTQ_E09ORI"	,_cE09ORI	,	NIL}}	// 23 Entidade 9 Origem

_aItem    := {}
_aTotItem := {}

_nLaco := IIF(Type("oXml:_CTBA270:_CTQMASTER:_CTQDETAIL:_ITEMS:_ITEM") == "A",Len(oXml:_CTBA270:_CTQMASTER:_CTQDETAIL:_ITEMS:_ITEM),1)

For i := 1 to _nLaco
	
	SX3->(dbSetOrder(1))
	SX3->(dbGoTop())
	SX3->(dbSeek("CTQ"))
	
	// Carrega vetor com os campos
	While SX3->(!Eof()) .and. SX3->X3_ARQUIVO == "CTQ"
		
		IF Type("oXml:_CTBA270:_CTQMASTER:_CTQDETAIL:_ITEMS:_ITEM"+IIF(_nLaco>1,"["+Alltrim(Str(i))+"]:",":")+"_"+Alltrim(SX3->X3_CAMPO)+":REALNAME") <> "U"
			// Carrega conteudo do variavel
			_cCampo := &("oXml:_CTBA270:_CTQMASTER:_CTQDETAIL:_ITEMS:_ITEM"+IIF(_nLaco>1,"["+Alltrim(Str(i))+"]:",":")+"_"+Alltrim(SX3->X3_CAMPO)+":TEXT")
			
			// Faz tratamento do dado
			IF SX3->X3_TIPO == "C"
				_cCampo := PadR(_cCampo,SX3->X3_TAMANHO)
			ELSEIF SX3->X3_TIPO == "N"
				_cCampo := Val(_cCampo)
			ELSEIF SX3->X3_TIPO == "D"
				_cCampo := Stod(_cCampo)
			ENDIF
			IF SX3->X3_CONTEXT == "V"
				SX3->(dbSkip())
				Loop
			ENDIF
			
			// Carrega vetor para rotina automatica
			Aadd(_aItem,{Alltrim(SX3->X3_CAMPO),_cCampo,NIL} )
		ENDIF
		SX3->(dbSkip())
	Enddo
	
	Aadd(_aTotItem, _aItem )
	_aItem := {}
Next

INCLUI         := .T.
lMsErroAuto    := .F.
lMsHelpAuto    := .T.
lAutoErrNoFile := .T.

Begin Transaction

MSExecAuto( {|X,Y,Z| CTBA270(X,Y,Z)}, _aCab , _aTotItem , _nOperac)

If lMsErroAuto
	
	If (__lSX8)
		RollBackSX8()
	EndIf
	
	DisarmTransaction()
	
	// Tratamento da Mensagem de erro do MSExecAuto
	aLogErr  := GetAutoGRLog()
	aLogErr2 := U_SIESBID(aLogErr)
	_cMotivo := ""
	
	For i := 1 to Len(aLogErr2)
		_cMotivo += aLogErr2[i]
	Next
	
	// Gera XML de retorno
	U_SIXMLMSG("CTBA270","Rateio Off-line",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	
	Break
Else
	If (__lSX8)
		ConfirmSX8()
	EndIf
	
	// Gera XML de retorno
	U_SIXMLMSG("CTBA270","Rateio Off-line",Alltrim(Str(_nOperac)),_cIDESB,"0","")
	
EndIf

End Transaction

Return()
