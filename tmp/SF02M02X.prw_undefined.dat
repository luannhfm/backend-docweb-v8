#include 'protheus.ch'
#include 'parmtype.ch'

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CTFI006C  ºAutor  ³Caio renan          º Data ³  10/05/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³funcao utlizada em cosulta especifica permite               º±±
±±º          ³escolher varios itens em uma cosulta do f3                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static _cRet

User function SF02M02X()

	local _cVarRet := ""
	local _cTitulo := "Filial"
	local aItens := {}                 
	local cStrRet := ""
	local _nTamCpo := 8
	local cResult := ""
	Local _aArea := GetArea()
	Local _aAreaSM0 := {"SM0", SM0->(IndexOrd()), SM0->(Recno())}// array com alias , ordem , numero do registro
	
	_cRet := "" //inicializando a variavel de retorno

	Dbselectarea("SM0")
	dbGoTop()

	_cMVar := &( Alltrim( ReadVar() ) )//variavel da memoria no momento

	While !SM0->(Eof())
		aadd(aItens, AllTrim(SM0->M0_FILIAL))
		cStrRet += AllTrim(SM0->M0_CODFIL)
		If AllTrim(SM0->M0_CODFIL) $ _cMVar//verifica quais opcoes estao no campo para carregar tais opcoes ja marcadas.
			_cVarRet += AllTrim(SM0->M0_CODFIL)//caso o que esta digitado no campo ativo tenha na chave, adiciona para carregar ja marcado as opcoes
		Else
			_cVarRet += "*"//opcoes que nao estao na variavel de memoria
		EndIf
		SM0->(DbSkip())
	End

	iF F_Opcoes(@_cVarRet, _cTitulo , aItens , cStrRet ,,, .F. ,_nTamCpo,Len(aItens)) //Chamada da Funcao Opcoes

		For nx := 1 to len(_cVarRet)
			if .not. "*" $ SubStr(_cVarRet,nx,1) // $ esta contido
				cResult += (Substr(_cVarRet,nx, 1))
			EndIf
		next

		For nx := 1 to len(cResult) step _nTamCpo
			if .not. SubStr(cResult,nx,_nTamCpo) == "      "
				_cRet += SubStr(cResult,nx,_nTamCpo)+";"
			EndIF
		next
	EndIf 
	
	//integridade do sistema
	DbSelectArea(_aAreaSM0[1]) ; SM0->(DbSetOrder(_aAreaSM0[2])) ; SM0->(DbGoTo(_aAreaSM0[3]))
	RestArea(_aArea)
Return !(Empty(_cRet))

User Function R_SF02M02X()
Return _cRet
