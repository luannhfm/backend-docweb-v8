#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "PARMTYPE.CH"
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"
/*
--------------------------------------------------------------------------------
{Protheus.doc} <SS7338X>
 38 - Metas de Visitas   

@author<Antonio Dantas>
@since<06/04/2015>
@version<1.00>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
User Function SS7338X()
Local _oReport			:= Nil     
Private _lCancel		:= .f.  
Private _cPerg 			:= ""
Private _cAlias			:= GetNextAlias()   
Private _cAceAll   	:= SuperGetMv("MV_XACEALL",,"")       
//+------------------------------------------------------------------+
//| Verifica se o operador esta logado na filail DR que tem acesso   |
//| a todas as filiais, ou somente na filial em que esta logada.     |
//+------------------------------------------------------------------+
_cPerg	:= FunName()			//-- Define o Grupo de Perguntas   
//+------------------------------------------------------------------+
//|   Interface de impressao                                         |
//+------------------------------------------------------------------+
_oReport := ReportDef()
If !_lCancel
	_oReport:PrintDialog()
Endif	    
Return


/*
--------------------------------------------------------------------------------
{Protheus.doc} <ReportDef>
 38 - Metas de Visitas.   

@author<Antonio Dantas>
@since<12/02/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function ReportDef()
Local _cTitulo		:= "38 - Metas de Visitas"
Local _cSubTit		:= ""  
Local _oReport		:= Nil
//--
Local _oVisitas		:= Nil
Local _aMeses 		:= {"JANEIRO","FEVEREIRO","MARCO","ABRIL","MAIO","JUNHO","JULHO","AGOSTO","SETEMBRO","OUTUBRO","NOVEMBRO","DEZEMBRO"}
Local _cMaskNumb		:= "@E 9,999.99"
Local _nTamMASK		:= Len(_cMaskNumb)-2
//+------------------------------------------------------------------+
//| Carrega as perguntas relativas aos parametros de Impressao       |
//|   Mv_par01 = Filial DE?                                          |
//|   Mv_par02 = Filial ATE?                                         |
//|   Mv_par03 = Unid. Venda DE?                                     |
//|   Mv_par04 = Unid. Venda ATE?                                    |
//|   Mv_par05 = Vendedor DE?                                        |
//|   Mv_par06 = Vendedor ATE?                                       |
//|   Mv_par07 = Ano ?                                               |
//|   Mv_par08 = Mês DE ?                                            |
//|   Mv_par09 = Mês ATE ?                                           |
//|   Mv_par10 = Imprime Realizado ?                                 |
//+------------------------------------------------------------------+
//xParPerg(_cPerg)
CriaSX1(_cPerg)
//+------------------------------------------------------------------+
//|  Monta tela de paramentos para usuario, se cancelar sair         |
//+------------------------------------------------------------------+
If !Pergunte(_cPerg,.t.)  
	_lCancel := .T. 
   Return
Endif 
If Mv_par08 > Mv_par09
	Aviso(FunName()+"/"+ProcName(),"Favor corrigir, o Mês inicial informado ["+Mv_par08+"] é maior que o Mês Final informado ["+Mv_par09+"]!",{"OK"})
	_lCancel := .T. 
   Return
Endif 
//+------------------------------------------------------------------+
//| Verifica se o operador esta logado na filail DR que tem acesso   |
//| a todas as filiais, ou somente na filial em que esta logada.     |
//+------------------------------------------------------------------+
If !(cFilAnt $ _cAceAll)
	Mv_par01	:= cFilAnt
	Mv_par02	:= cFilAnt
Endif 
//-- Defini o sub-titulo do Relatorio 
_cSubTit := " - Periodo: "+Mv_par07+" dos mêses [De: "+_aMeses[Val(Mv_par08)]+" Ate: "+_aMeses[Val(Mv_par09)]+"] "  
//+------------------------------------------------------------------+
//|   Seleciona a tabela temporaria que sera referencia              | 
//+------------------------------------------------------------------+
FWMsgRun(, {|| u_fGetVisi() }, "Processando a Consulta aos Apontamentos de Visita!", "Aguarde...")
//+------------------------------------------------------------------+
//|    Construcao do Objeto de Impressao do Relatorio                |
//+------------------------------------------------------------------+
//                    New(cReport,cTitle,uParam,bAction,cDescription,lLandscape,uTotalText,lTotalInLine,cPageTText,lPageTInLine,lTPageBreak,nColSpace)
_oReport := TReport():New(_cPerg,_cTitulo+_cSubTit,_cPerg,{|_oReport|  ReportPrint(_oReport) },_cSubTit,.t.)
_oReport:SetLandScape() 					//-- Modo Paisagem 
//&&--  _oReport:SetPortrait() 			//-- Modo Retrato 
//+------------------------------------------------------------------+
//|    *****      S e c a o  -  2      *****                         |
//+------------------------------------------------------------------+
_oVisitas := TRSection():New(_oReport,"Apontamentos",{"AD5"} )
TRCell():New(_oVisitas,"VENDEDOR"	,"" 	,"Representante"	,"@!"			,70				,.F.)
TRCell():New(_oVisitas,"AD5JAN"		,"" 	,"Janeiro"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5FEV"		,"" 	,"Fevereiro"		, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5MAR"		,"" 	,"Marco"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5ABR"		,"" 	,"Abril"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5MAI"		,"" 	,"Maio"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5JUN"		,"" 	,"Junho"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5JUL"		,"" 	,"Julho"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5AGO"		,"" 	,"Agosto"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5SET"		,"" 	,"Setembro"		, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5OUT"		,"" 	,"Outubro"			, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5NOV"		,"" 	,"Novembro"		, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5DEZ"		,"" 	,"Dezembro"		, _cMaskNumb	, _nTamMASK	,.F.)    
TRCell():New(_oVisitas,"AD5TOT"		,"" 	,"Total"			, _cMaskNumb	, _nTamMASK	,.F.)    
Return _oReport

/*
+--------------------------------------------------------------------------+
 {Protheus.doc}<ReportPrint>
  38 - Metas de Visitas

@Author<Antonio Dsantas>
@since<28/03/2014>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
+--------------------------------------------------------------------------+
*/
Static Function ReportPrint(_oReport)
Local _oVisitas		:= _oReport:Section(1)
Local _cDescProd		:= ""
Local _nTamCompl		:= 0
Local _aMetas			:= {}
Local _nRecs			:= 0
Local _nTotal			:= 0.00
Local _cCodVend 		:= ""
Local _lFirstTime		:= .t. 
Local _lImpVend		:= .t.
//-- 
Private _aMes			:= {"JAN","FEV","MAR","ABR","MAI","JUN","JUL","AGO","SET","OUT","NOV","DEZ"} 
//+------------------------------------------------------------------+
//| Posiciona no inicio o Arquivo Resultado da Consulta Sql          | 
//+------------------------------------------------------------------+
dbSelectArea(_cAlias)  
(_cAlias)->(dbgotop())    
//-- Conta o numero do Registro da Tabela Temporaria
(_cAlias)->(dbEval({|| _nRecs++ }))
_oReport:SetMeter(_nRecs)
//-- 
dbSelectArea(_cAlias)  
(_cAlias)->(dbgotop())
//+------------------------------------------------------------------+
//| Inicializa com Codigo do Vendedor atual                          |
//+------------------------------------------------------------------+
_cCodVend 	:= (_cAlias)->AD5_VEND
//+------------------------------------------------------------------+
//| Inicializa o Objeto do Relatorio, definie margem do relatorio.   |
//+------------------------------------------------------------------+
_oVisitas:Init()
_oReport:SetLeftMargin(5)		//-- Seta a Margem a partir da posição 5
//+------------------------------------------------------------------+
//| Inicia Laco para impressao do Relatorio                          |
//+------------------------------------------------------------------+
Do While (_cAlias)->(!eof())   
	_oReport:IncMeter()    
	//+------------------------------------------------------------------+
	//|  Imprime a IDENTIFICAÇÃO DO VENDEDOR                             |
	//+------------------------------------------------------------------+
	If _lImpVend  
		If !_lFirstTime
			//-- Salta linha dupla 
			_oReport:SkipLine()
			_oReport:SkipLine()
			_oReport:SkipLine()
		Endif    
		_lImpVend := .f.
	Endif 
	//-- 
	_aMetas := {}
	_aMetas := fGetMetas((_cAlias)->AD5_VEND,Mv_par07,Mv_par08,Mv_par09)
	//-- 
	_nCtaA := 0
	For _nCtaA := 1 to Len(_aMetas)
		//+------------------------------------------------------------------+
		//|  Imprime a Previsão para o PRODUTO                               |
		//+------------------------------------------------------------------+
		_oVisitas:Cell( "VENDEDOR"	):SetBlock({|| _aMetas[_nCtaA,01]	})
		_oVisitas:Cell( "AD5JAN"		):SetBlock({|| _aMetas[_nCtaA,02]	})    
		_oVisitas:Cell( "AD5FEV"		):SetBlock({|| _aMetas[_nCtaA,03]	})    
		_oVisitas:Cell( "AD5MAR"		):SetBlock({|| _aMetas[_nCtaA,04]	})    
		_oVisitas:Cell( "AD5ABR"		):SetBlock({|| _aMetas[_nCtaA,05]	})    
		_oVisitas:Cell( "AD5MAI"		):SetBlock({|| _aMetas[_nCtaA,06]	})    
		_oVisitas:Cell( "AD5JUN"		):SetBlock({|| _aMetas[_nCtaA,07]	})    
		_oVisitas:Cell( "AD5JUL"		):SetBlock({|| _aMetas[_nCtaA,08]	})    
		_oVisitas:Cell( "AD5AGO"		):SetBlock({|| _aMetas[_nCtaA,09]	})    
		_oVisitas:Cell( "AD5SET"		):SetBlock({|| _aMetas[_nCtaA,10]	})    
		_oVisitas:Cell( "AD5OUT"		):SetBlock({|| _aMetas[_nCtaA,11]	})    
		_oVisitas:Cell( "AD5NOV"		):SetBlock({|| _aMetas[_nCtaA,12]	})    
		_oVisitas:Cell( "AD5DEZ"		):SetBlock({|| _aMetas[_nCtaA,13]	})    
		//+------------------------------------------------------------------+
		//|  Totaliza a coluna                                               |
		//+------------------------------------------------------------------+
		_nTotal	:= 0  
		_nCtaB 	:= 0
		For _nCtaB := 2 to Len(_aMetas[_nCtaA])
			_nTotal	+= _aMetas[_nCtaA,_nCtaB]
		Next 
		/*Jose Leite - 11-06-15
			Ajuste para na linha de acumulado informar o valor que foi realizado em dezembro e nao o total
		*/
		If _nCtaA == 1
			_oVisitas:Cell( "AD5TOT"		):SetBlock({|| _nTotal	})    
		Elseif _nCtaA == 2
			_oVisitas:Cell( "AD5TOT"		):SetBlock({||  _aMetas[_nCtaA,13]	})    
		Endif 
		_oVisitas:PrintLine()		//-- Imprime e alinha   
	Next _nCtaA
	//+------------------------------------------------------------------+
	//|  Imprime o Realizado                                             |
	//+------------------------------------------------------------------+
	If Mv_par10 == 1 			//-- Imprime Realizado ?  
		_oVisitas:Cell( "VENDEDOR"	):SetBlock({|| "Realizado"+Replicate(".",61)	})
		_oVisitas:Cell( "AD5JAN"		):SetBlock({|| (_cAlias)->MES01 })
		_oVisitas:Cell( "AD5FEV"		):SetBlock({|| (_cAlias)->MES02 })
		_oVisitas:Cell( "AD5MAR"		):SetBlock({|| (_cAlias)->MES03 })
		_oVisitas:Cell( "AD5ABR"		):SetBlock({|| (_cAlias)->MES04 })
		_oVisitas:Cell( "AD5MAI"		):SetBlock({|| (_cAlias)->MES05 })
		_oVisitas:Cell( "AD5JUN"		):SetBlock({|| (_cAlias)->MES06 })
		_oVisitas:Cell( "AD5JUL"		):SetBlock({|| (_cAlias)->MES07 })
		_oVisitas:Cell( "AD5AGO"		):SetBlock({|| (_cAlias)->MES08 })
		_oVisitas:Cell( "AD5SET"		):SetBlock({|| (_cAlias)->MES09 })
		_oVisitas:Cell( "AD5OUT"		):SetBlock({|| (_cAlias)->MES10 })
		_oVisitas:Cell( "AD5NOV"		):SetBlock({|| (_cAlias)->MES11 }) 
		_oVisitas:Cell( "AD5DEZ"		):SetBlock({|| (_cAlias)->MES12 })
		//+------------------------------------------------------------------+
		//|  Totaliza as Visitas realizadas                                  | 
		//+------------------------------------------------------------------+
		_nTotal	:= 0  
		_nCtaA 	:= 0
		For _nCtaA := 1 to 12
			_nTotal	+= (_cAlias)->(FieldGet(FieldPos("MES"+Strzero(_nCtaA,2))))
		Next _nCtaA
		//+------------------------------------------------------------------+
		//|  Imprime o Total das Visitas realizadas                          | 
		//+------------------------------------------------------------------+
		_oVisitas:Cell( "AD5TOT"		):SetBlock({|| _nTotal	})    
		_oVisitas:PrintLine()		//-- Imprime e alinha   
		_oReport:SkipLine()
	Endif 		
	//+------------------------------------------------------------------+
	//|    Vai para o Proximo Registro da TABELA TEMPORARIA              | 
	//+------------------------------------------------------------------+
	(_cAlias)->(dbskip()) 	
	If (_cAlias)->AD5_VEND != _cCodVend
		_cCodVend	:= (_cAlias)->AD5_VEND
		_lImpVend	:= .t.   
	Endif 
Enddo 
//+------------------------------------------------------------------+
//|     Finaliza todas as sessões por definitivo                     |
//+------------------------------------------------------------------+
_oVisitas:Finish()
//+------------------------------------------------------------------+
//|     Fecha o Arquivo de Trabalho                                  |
//+------------------------------------------------------------------+
(_cAlias)->(dbCloseArea())
//+------------------------------------------------------------------+
//|     Finaliza as sessoes                                          |
//+------------------------------------------------------------------+
Return


/*
+--------------------------------------------------------------------------+
{Protheus.doc}<fGetVisi>
 Monta query de Apontamento das Visitas 

@Author<Antonio Dsantas>
@since<07/04/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
+--------------------------------------------------------------------------+
*/
User Function fGetVisi()
Local _cQuery		:= "" 
Local _nCtaA 		:= 0
_cQuery := "" 
_cQuery += "Select AD5.AD5_VEND "+CRLF 
For _nCtaA := 1 to 12 
	_cQuery += " ,SUM(CASE WHEN Substr(AD5.AD5_DATA,5,2) = '"+Strzero(_nCtaA,2)+"' THEN 1 ELSE 0 END) AS MES"+Strzero(_nCtaA,2)+" "+CRLF 
Next _nCtaA
_cQuery += "From AD5010 AD5 
_cQuery += "Inner Join "+RetSqlName("SA3")+" SA3 on SA3.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "             And SA3.A3_FILIAL = '"+FwxFilial("SA3")+"' "+CRLF 
_cQuery += "              And SA3.A3_COD = AD5.AD5_VEND "+CRLF
_cQuery += "             And SA3.A3_UNIDAD Between '"+Mv_par03+"' And '"+Mv_par04+"' "+CRLF
_cQuery += "Where AD5.D_E_L_E_T_ = ' ' 
_cQuery += "And Substr(AD5.AD5_FILIAL,1,4) = '"+Substr(cFilAnt,1,4)+"' "+CRLF 
_cQuery += "And AD5.AD5_FILIAL Between '"+Mv_par01+"' And '"+Mv_par02+"' "+CRLF 
_cQuery += "And AD5.AD5_VEND Between '"+Mv_par05+"' And '"+Mv_par06+"' "+CRLF 
_cQuery += "And Substr(AD5.AD5_DATA,1,4) = '"+Mv_par07+"' "+CRLF
_cQuery += "And Substr(AD5.AD5_DATA,5,2) Between '"+Mv_par08+"' And '"+Mv_par09+"' "+CRLF 
_cQuery += "Group By AD5.AD5_VEND "+CRLF 
_cQuery += "Order By AD5.AD5_VEND "+CRLF 
//+------------------------------------------------------------------+
//| Grava o Resultado da Query para consulta                         |
//+------------------------------------------------------------------+
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
If Select(_cAlias)>0
	(_cAlias)->(DbCloseArea())
Endif
DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),_cAlias,.t.,.t.)
Return .t.


/*
--------------------------------------------------------------------------------
{Protheus.doc} <xParPerg>
 Cria as perguntas.	  

@author<Antonio Dantas>
@since<13/02/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function xParPerg()	
Local _aPerg := {}
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//   //-- MAPEAMENTOS DOS CAMPOS DE SX1
//   aAdd (_aPerg,{"X1_PERGUNT","X1_PERPA","X1_PERENG","MV_CHL","C",5,0,0,"X1_GSC","X1_VALID",;
//								"X1_VAR01",("X1_DEF01" e "X1_PYNE"),"X1_DEFSPA1","X1_DEFENG1","X1_CNT01",;
//								"X1_VAR02","X1_DEF02","X1_DEFSPA2","X1_DEFENG2","X1_CNT02",;
//								"X1_VAR03","X1_DEF03","X1_DEFSPA3","X1_DEFENG3","X1_CNT03",;
//								"X1_VAR04","X1_DEF04","X1_DEFSPA4","X1_DEFENG4","X1_CNT04",;
//								"X1_VAR05","X1_DEF05","X1_DEFSPA5","X1_DEFENG5","X1_CNT05",;
//								"X1_F3","X1_GRPSXG","","X1_HELP","X1_PICTURE",{"Descricao para Tela PTG"},{"Descricao para Tela EPA"},{"Descricao para Tela USA"}})
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//+------------------------------------------------------------------+
//| Verifica se o operador esta logado na filail DR que tem acesso   |
//| a todas as filiais, ou somente na filial em que esta logada.     |
//+------------------------------------------------------------------+
//-- Mv_par01 =     Filial DE?
aAdd(_aPerg, {"Filial DE?","Filial DE?","Filial DE?","MV_CH1","C",TamSX3("AD5_FILIAL")[1],0,0,"G","u_fVldfil()",;
					"MV_PAR01","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SM0EPU","","","","",{"Codigo da Filial"},{"Codigo da Filial"},{"Codigo da Filial"}})

//-- Mv_par02 =     Filial ATE?
aAdd(_aPerg, {"Filial ATE?","Filial ATE?","Filial ATE?","MV_CH2","C",TamSX3("AD5_FILIAL")[1],0,0,"G","u_fVldfil()",;
					"MV_PAR02","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SM0EPU","","","","",{"Codigo da Filial"},{"Codigo da Filial"},{"Codigo da Filial"}})

//-- Mv_par03 =     Unid. Venda DE?
aAdd(_aPerg, {"Unid. Venda DE?","Unid. Venda DE?","Unid. Venda DE??","MV_CH3","C",TamSX3("ADK_COD")[1],0,0,"G","",;
					"MV_PAR03","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"ADK","","","","",{"Unidade de Venda DE"},{"Unidade de Venda DE"},{"Unidade de Venda DE"}})

//-- Mv_par04 =     Unid. Venda ATE?
aAdd(_aPerg, {"Unid. Venda ATE?","Unid. Venda ATE?","Unid. Venda ATE?","MV_CH4","C",TamSX3("ADK_COD")[1],0,0,"G","",;
					"MV_PAR04","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"ZCD","","","","",{"Unidade de Venda ATE"},{"Unidade de Venda ATE"},{"Unidade de Venda ATE"}})

//-- Mv_par05 =     Vendedor DE?
aAdd(_aPerg, {"Vendedor DE?","Vendedor DE?","Vendedor DE?","MV_CH5","C",TamSX3("A3_COD")[1],0,0,"G","",;
					"MV_PAR05","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SA3","","","","",{"Codigo do Vendedor"},{"Codigo do Vendedor"},{"Codigo do Vendedor"}})

//-- Mv_par06 =     Vendedor ATE?
aAdd(_aPerg, {"Vendedor ATE?","Vendedor ATE?","Vendedor ATE?","MV_CH6","C",TamSX3("A3_COD")[1],0,0,"G","",;
					"MV_PAR06","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SA3","","","","",{"Codigo do Vendedor"},{"Codigo do Vendedor"},{"Codigo do Vendedor"}})
				
//-- Mv_par07 =     Ano ?
aAdd(_aPerg, {"ANO ?","ANO ?","ANO ?","MV_CH7","C",04,0,0,"G","u_fVAnoMes('A')",;
					"MV_PAR07","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Ano de referência do Periodo."},{"Ano de referência do Periodo."},{"Ano de referência do Periodo."}})

//-- Mv_par08 =     Mês DE ?
aAdd(_aPerg, {"Mês DE ?","Mês DE ?","Mês DE ?","MV_CH8","C",2,0,0,"G","u_fVAnoMes('M')",;
					"MV_PAR08","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Mês de referência DE ?"},{"Mês de referência DE ?"},{"Mês de referência DE ?"}})

//-- Mv_par09 =     Mês ATE ?
aAdd(_aPerg, {"Mês ATE ?","Mês ATE ?","Mês ATE ?","MV_CH9","C",2,0,0,"G","u_fVAnoMes('M')",;
					"MV_PAR09","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Mês de referência ATE ?"},{"Mês de referência ATE ?"},{"Mês de referência ATE ?"}})

//-- Mv_par10 =     Imprime Realizado ?
aAdd(_aPerg, {"Imprime Realizado ?","Imprime Realizado ?","Imprime Realizado ?","MV_CHA","N",1,0,1,"C",,;
					"MV_PAR10","Sim","Sim","Sim","",;
					"","Não","Não","Não","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Imprime Realizado ?"},{"Imprime Realizado ?"},{"Imprime Realizado ?"}})

u_SFAJUSX1(_cPerg,_aPerg) 
Return 

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fGetMetas>
	Monta array com as metas de visitas por Representante conforme o 
	parametros fornececidos como argumento.

@author<Antonio Dantas>
@since<07/04/2015>
@version<1.00>
@receive
< _cVendedor (c) - Codigo do Vendedor 
       _cAno (c) - Ano de Referencia  
    _cMesINI (c) - Mês inicial do Periodo de Referencia 
    _cMesFIM (c) - Mês Final do Periodo de Referencia
>
@return
<  _aMetas (a) - Array bi-dimencional com as Metas 
    _aMetas[1,N] (a) - Array das Metas Mes a Mes Para Periodo       
     _aMetas[1,N,01] (c) - Nome do Representante        
     _aMetas[1,N,02] (n) - Valor da Meta para Janeiro       
     _aMetas[1,N,03] (n) - Valor da Meta para Feveiro       
     _aMetas[1,N,04] (n) - Valor da Meta para Março       
     _aMetas[1,N,05] (n) - Valor da Meta para Abril        
     _aMetas[1,N,06] (n) - Valor da Meta para Maio       
     _aMetas[1,N,07] (n) - Valor da Meta para Junho       
     _aMetas[1,N,08] (n) - Valor da Meta para Julho       
     _aMetas[1,N,09] (n) - Valor da Meta para Agosto       
     _aMetas[1,N,10] (n) - Valor da Meta para Setembro       
     _aMetas[1,N,11] (n) - Valor da Meta para Outubro        
     _aMetas[1,N,12] (n) - Valor da Meta para Novembro        
     _aMetas[1,N,13] (n) - Valor da Meta para Dezembro         
    _aAcumula[1,N] (a) - Array das Metas ACUMULADAS        
     _aAcumula[1,N,01] (c) - Nome do Representante        
     _aAcumula[1,N,02] (n) - Acumulado até  Janeiro       
     _aAcumula[1,N,03] (n) - Acumulado até  Feveiro       
     _aAcumula[1,N,04] (n) - Acumulado até  Março       
     _aAcumula[1,N,05] (n) - Acumulado até  Abril        
     _aAcumula[1,N,06] (n) - Acumulado até  Maio       
     _aAcumula[1,N,07] (n) - Acumulado até  Junho       
     _aAcumula[1,N,08] (n) - Acumulado até  Julho       
     _aAcumula[1,N,09] (n) - Acumulado até  Agosto       
     _aAcumula[1,N,10] (n) - Acumulado até  Setembro       
     _aAcumula[1,N,11] (n) - Acumulado até  Outubro        
     _aAcumula[1,N,12] (n) - Acumulado até  Novembro        
     _aAcumula[1,N,13] (n) - Acumulado até  Dezembro         
>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function fGetMetas(_cVendedor,_cAno,_cMesINI,_cMesFIM)
Local _aArea		:= GetArea()
Local _aMetas		:= {0,0,0,0,0,0,0,0,0,0,0,0} 
Local _aMeta		:= {}
Local _aAcumula	:= {}
Local _cNomeVend	:= ""
Local _cAtiva 	:= ""
Local _nTamCompl	:= 0
Local _nCtaA 		:= 0
Local _cQuery 	:= "" 

//+------------------------------------------------------------------+
//|  Localiza o cadastro do vendedor                                 |
//+------------------------------------------------------------------+
dbSelectArea("SA3")
SA3->(dbSetOrder(1))
If (SA3->(dbSeek(FwxFilial("SA3")+_cVendedor)))
	_cNomeVend	:= Rtrim(SA3->A3_NOME)
Else
	_cNomeVend	:= "Desconhecido"
Endif		
_nTamCompl	:= 70 - Len(_cNomeVend)
_cNomeVend	:= _cNomeVend+Replicate(".",_nTamCompl)	
//+------------------------------------------------------------------+
//| - Adiciona o Nome do Vendedor na Primeira coluna do Array _aMeta |
//| - Adiciona a Descricao no array do Acumulado                     |
//+------------------------------------------------------------------+
aAdd(_aMeta,_cNomeVend)
aAdd(_aAcumula,"Acumulado"+Replicate(".",61))
//+------------------------------------------------------------------+
//| Executa consulta SQL nas Metas do Vendedor                       | 
//+------------------------------------------------------------------+
_cQuery := "" 
_cQuery += "Select "+CRLF
_cQuery += "ZCC.ZCC_FILIAL, ZCC.ZCC_VENDED, ZCC.ZCC_JAN, ZCC.ZCC_FEV, ZCC.ZCC_MAR, ZCC.ZCC_ABR, "+CRLF 
_cQuery += "ZCC.ZCC_MAI, ZCC.ZCC_JUN, ZCC.ZCC_JUL, ZCC.ZCC_AGO, ZCC.ZCC_SET, ZCC.ZCC_OUT, ZCC.ZCC_NOV, ZCC.ZCC_DEZ "+CRLF
_cQuery += "From "+RetSqlName("ZCC")+" ZCC "+CRLF
_cQuery += "Inner Join "+RetSqlName("ZCB")+" ZCB on ZCB.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "                         And ZCB.ZCB_FILIAL = ZCC.ZCC_FILIAL "+CRLF
_cQuery += "                         And ZCB.ZCB_CODIGO = ZCC.ZCC_META "+CRLF 
_cQuery += "                         And ZCB.ZCB_ANO = '"+_cAno+"' "+CRLF
_cQuery += "                         And ZCB.ZCB_ATIVA = 'S' "+CRLF 
_cQuery += "where ZCC.D_E_L_E_T_ = ' ' "+CRLF 
_cQuery += "And ZCC.ZCC_VENDED = '"+_cVendedor+"' "+CRLF 
//+------------------------------------------------------------------+
//| Grava o Resultado da Query para consulta                         |
//+------------------------------------------------------------------+
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
If Select("TMPZCC")>0
	TMPZCC->(DbCloseArea())
Endif
DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),"TMPZCC",.t.,.t.)
TMPZCC->(dbGotop())
If TMPZCC->(!Eof()) .And. TMPZCC->(!Bof()) 
	//+------------------------------------------------------------------+
	//| Monta o Array com as Metas do Vendedor                           |
	//+------------------------------------------------------------------+
	_nCtaA := 0
	For _nCtaA := 1 to 12
		If _nCtaA >= Val(_cMesINI) .and. _nCtaA <= Val(_cMesFIM)
			aAdd(_aMeta,TMPZCC->(FieldGet(FieldPos("ZCC_"+_aMes[_nCtaA]))))
		Else
			aAdd(_aMeta,0)
		Endif
	Next _nCtaA
	//+------------------------------------------------------------------+
	//| Monta o Array com as Metas ACUMULADAS do Vendedor                |
	//+------------------------------------------------------------------+
	_nCtaA := 0
	For _nCtaA := 2 to 13
		If _nCtaA > 2  
			aAdd(_aAcumula,_aAcumula[_nCtaA-1]+_aMeta[_nCtaA])
		Else
			aAdd(_aAcumula,_aMeta[_nCtaA])
		Endif
	Next _nCtaA
Else
	_nCtaA := 0
	For _nCtaA := 1 to 12
		aAdd( _aMeta		,0	)
		aAdd( _aAcumula	,0 	)
	Next _nCtaA
Endif 
_aMetas := {_aMeta,_aAcumula}
TMPZCC->(DbCloseArea())
RestArea(_aArea)
Return _aMetas

/*/{Protheus.doc} CriaSx1
	Função para criar as perguntas/parâmetros de relatório
	
@author Franklin B. Oliveira
@since 26/04/2018
@param cPerg, characters, grupo de perguntas 
@type function
/*/
Static Function CriaSx1(cPerg)

Local nI		:= 0
Local nJ		:= 0
Local lSX1		:= .F.
Local aSaveArea	:= GetArea()
Local aPergs	:= {}
Local aEstrut	:= {}
Local aHelpEng	:= {}
Local aHelpSpa	:= {}
Local aHelpPor	:= {}
	
	//				X1_GRUPO   X1_ORDEM   X1_PERGUNT X1_PERSPA X1_PERENG  X1_VARIAVL X1_TIPO    X1_TAMANHO X1_DECIMAL X1_PRESEL
	//				X1_GSC     X1_VALID   X1_VAR01   X1_DEF01  X1_DEFSPA1 X1_DEFENG1 X1_CNT01   X1_VAR02   X1_DEF02
	//				X1_DEFSPA2 X1_DEFENG2 X1_CNT02   X1_VAR03  X1_DEF03   X1_fDEFSPA3 X1_DEFENG3 X1_CNT03   X1_VAR04   X1_DEF04
	// 				X1_DEFSPA4 X1_DEFENG4 X1_CNT04   X1_VAR05  X1_DEF05   X1_DEFSPA5 X1_DEFENG5 X1_CNT05   X1_F3      X1_GRPSXG X1_PYME
	
	aEstrut := { "X1_GRUPO","X1_ORDEM"  ,"X1_PERGUNT","X1_PERSPA" ,"X1_PERENG" ,"X1_VARIAVL","X1_TIPO" ,"X1_TAMANHO","X1_DECIMAL","X1_PRESEL" ,;
	"X1_GSC"    ,"X1_VALID","X1_VAR01"  ,"X1_DEF01"  ,"X1_DEFSPA1","X1_DEFENG1","X1_CNT01","X1_VAR02"  ,"X1_DEF02"  ,"X1_DEFSPA2",;
	"X1_DEFENG2","X1_CNT02","X1_VAR03"  ,"X1_DEF03"  ,"X1_DEFSPA3","X1_DEFENG3","X1_CNT03","X1_VAR04"  ,"X1_DEF04"  ,"X1_DEFSPA4",;
	"X1_DEFENG4","X1_CNT04","X1_VAR05"  ,"X1_DEF05"  ,"X1_DEFSPA5","X1_DEFENG5","X1_CNT05","X1_F3"     ,"X1_GRPSXG" ,"X1_PYME"}
	
	//-- Mv_par01 =     Filial DE?
	aAdd(aPergs,{cPerg,"01","Filial DE?"	,"","","MV_CH1","C",TamSX3("AD5_FILIAL")[1],00,00,"G","u_fVldfil()","MV_PAR01","","","","","","","","","","","","","","","","","","","","","","","","","SM0EPU",""})
	
	//-- Mv_par02 =     Filial ATE?
	aAdd(aPergs,{cPerg,"02","Filial ATE?"	,"","","MV_CH2","C",TamSX3("AD5_FILIAL")[1],00,00,"G","u_fVldfil()","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","SM0EPU",""})
	
	//-- Mv_par03 =     Unid. Venda DE?
	aAdd(aPergs,{cPerg,"03","Unid. Venda DE?","","","MV_CH3","C",TamSX3("ADK_COD")[1],00,00,"G","","MV_PAR03","","","","","","","","","","","","","","","","","","","","","","","","","ADK",""})

	//-- Mv_par04 =     Unid. Venda ATE?
	aAdd(aPergs,{cPerg,"04","Unid. Venda ATE?","","","MV_CH4","C",TamSX3("ADK_COD")[1],00,00,"G","","MV_PAR04","","","","","","","","","","","","","","","","","","","","","","","","","ADK",""})

	//-- Mv_par05 =     Vendedor DE?
	aAdd(aPergs,{cPerg,"05","Vendedor DE?"	,"","","MV_CH5","C",TamSX3("A3_COD")[1],00,00,"G","","MV_PAR05","","","","","","","","","","","","","","","","","","","","","","","","","SA3",""})
	
	//-- Mv_par06 =     Vendedor ATE?
	aAdd(aPergs,{cPerg,"06","Vendedor ATE?"	,"","","MV_CH6","C",TamSX3("A3_COD")[1],00,00,"G","","MV_PAR06","","","","","","","","","","","","","","","","","","","","","","","","","SA3",""})
	
	//-- Mv_par07 =     Ano ?
	aAdd(aPergs,{cPerg,"07","ANO ?"			,"","","MV_CH7","C",04,00,00,"G","u_fVAnoMes('A')","MV_PAR07","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	
	//-- Mv_par08 =     Mês DE ?
	aAdd(aPergs,{cPerg,"08","Mês DE ?"		,"","","MV_CH8","C",02,00,00,"G","u_fVAnoMes('M')","MV_PAR08","","","","","","","","","","","","","","","","","","","","","","","","","",""})

	//-- Mv_par09 =     Mês ATE ?
	aAdd(aPergs,{cPerg,"09","Mês ATE ?"		,"","","MV_CH9","C",02,00,00,"G","u_fVAnoMes('M')","MV_PAR09","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	
	//-- Mv_par10 =     Imprime Realizado ?
	aAdd(aPergs,{cPerg,"10","Imprime Realizado ?","","","MV_CHA","N",01,00,01,"C","","MV_PAR10","Sim","","","","","Não","","","","","","","","","","","","","","","","","","","",""})

	ProcRegua(Len(aPergs))
	dbSelectArea("SX1")
	dbSetOrder(1)
	IF ! dbSeek(cPerg)
		For nI:= 1 To Len(aPergs)
			If !Empty(aPergs[nI][1])
				If !dbSeek(aPergs[nI,1]+aPergs[nI,2])
					lSX1 := .T.
					RecLock("SX1",.T.)
					For nJ:=1 To Len(aPergs[nI])
						If !Empty(FieldName(FieldPos(aEstrut[nJ])))
							FieldPut(FieldPos(aEstrut[nJ]),aPergs[nI,nJ])
						EndIf
					Next nJ
					MsUnLock()
					dbCommit()
					IncProc("Atualizando Perguntas de Relatorios" + "...")		//"Atualizando Perguntas de Relatorios"
				EndIf
			EndIf
		Next nI
	EndIf
	
	/*
	Inclusao do "help" 
	*/
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Unidade de Venda DE"				)
	AADD(aHelpPor,"Unidade de Venda ATE"			)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Ano de referência do Periodo."	)
	AADD(aHelpPor,"Mês de referência DE ?"			)
	AADD(aHelpPor,"Mês de referência ATE ?"			)
	AADD(aHelpPor,"Imprime Realizado ?"				)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	
	PutSX1Help("P." + cPerg + "01.",aHelpPor,aHelpEng,aHelpSpa,.T.)
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {}
	/*..*/
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Unidade de Venda DE"				)
	AADD(aHelpPor,"Unidade de Venda ATE"			)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Ano de referência do Periodo."	)
	AADD(aHelpPor,"Mês de referência DE ?"			)
	AADD(aHelpPor,"Mês de referência ATE ?"			)
	AADD(aHelpPor,"Imprime Realizado ?"				)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {}
	/*..*/
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Unidade de Venda DE"				)
	AADD(aHelpPor,"Unidade de Venda ATE"			)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Ano de referência do Periodo."	)
	AADD(aHelpPor,"Mês de referência DE ?"			)
	AADD(aHelpPor,"Mês de referência ATE ?"			)
	AADD(aHelpPor,"Imprime Realizado ?"				)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	PutSX1Help("P." + cPerg + "03.",aHelpPor,aHelpEng,aHelpSpa,.T.)
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {} 
	
	RestArea(aSaveArea)
	
Return