#include "Protheus.ch"

#DEFINE VLR_RESIDUAL		1
#DEFINE VLR_ORIGINAL		2
#DEFINE VLR_CORRECAO		3
#DEFINE VLR_DEP_MES 		4
#DEFINE VLR_COR_DEP 		5
#DEFINE VLR_COR_EXE  		6
#DEFINE VLR_DEP_EXE     	7
#DEFINE VLR_COR_DEP_EXE		8
#DEFINE VLR_COR_ACU  		9
#DEFINE VLR_DEP_ACU     	10
#DEFINE VLR_COR_DEP_ACU		11

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFR04 ºAutor  ³ Leonardo Soncin    º Data ³  20/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Ficha do Ativo                                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function SIATFR04
Local oReport
Private dUltDepr	:= GetMV("MV_ULTDEPR")

If FindFunction("TRepInUse") .And. TRepInUse()
	oReport := ReportDef()
	oReport:PrintDialog()
Else
	MsgInfo("Relatório não disponivel para R3")
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ReportDef ºAutor  ³Carlos A. Gomes Jr. º Data ³  06/07/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Definicao do objeto do relatorio personalizavel e das      º±±
±±º          ³ secoes que serao utilizadas                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ReportDef()

Local oReport,oSectionT,oSectionD
Local oSectionM1,oSectionM2,oSectionM3,oSectionM4,oSectionM5

Local cNomeSec := ""

Local cReport := "SIATFR04"
Local cTitulo := OemToAnsi("Ficha do Ativo Imobilizado")
Local cDescri := OemToAnsi("Este programa ir  emitir a ficha dos ativos") + " " + OemToAnsi( "imobilizados, apresentando todas as ocorrˆncias") + " " + OemToAnsi("desde sua aquisi‡„o.")
Local aOrdem  := {" Por Situação" }

Local nMoeda   := 1
Local cMoeda   := ""
Local cMSimbol := ""

Local cPerg := "SIATF4"
           
AtuSx1(cPerg)
Pergunte( cPerg , .F. )

oReport  := TReport():New( cReport, cTitulo, cPerg , { |oReport| ATFR030Imp( oReport ) }, cDescri )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a secao Dados do Ativo                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSectionT := TRSection():New( oReport, "Dados do Ativo", {"SN3","SN1","SN2","SA2"} , aOrdem )
TRCell():New( oSectionT, "N1_CBASE"   , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_ITEM"    , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_DESCRIC" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_CHAPA"   , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_GRUPO"   , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_LOCAL"   , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_AQUISIC" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_BAIXA"   , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_PROJETO" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_NFISCAL" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_NSERIE"  , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_QUANTD"  , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_PLACA"   , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_CSEGURO" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_APOLICE" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_DTVENC"  , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_TIPOSEG" , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_FORNEC"  , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N1_LOJA"    , "SN1" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "A2_NOME"    , "SA2" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionT, "N2_HISTOR"  , "SN2" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)

oSectionT:SetLineBreak()
oSectionT:SetHeaderPage()

oSectionT:SetNoFilter({"SN1","SN2","SA2"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a secao Movimentacao                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSectionD := TRSection():New( oSectionT, "Movimentação", {"SN3","SN1","SN2","SA2"} , aOrdem )
TRCell():New( oSectionD, "N3_TIPO"    , "SN3" ,/*X3Titulo*/,/*Picture*/, 18 /*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
//TRCell():New( oSectionD, "cOcorr"     , /* */ ,"Desc."     ,/*Picture*/,14         ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_HISTOR"  , "SN3" ,/*X3Titulo*/,/*Picture*/,40         ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_CCONTAB" , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_CCORREC" , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_CDEPREC" , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_CCDEPR"  , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_CDESP"   , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_CCUSTO"  , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_DINDEPR" , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N3_DTBAIXA" , "SN3" ,/*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSectionD, "N4_QUANTD"  , "SN4" ,"Quant. Baixa" /*X3Titulo*/,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
oSectionD:SetNoFilter({"SN1","SN2","SA2"})

For nMoeda := 1 To 5
	cMoeda := StrZero(nMoeda,1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define a secao Moedas                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNomeSec := "oSectionM"+cMoeda
	
	&(cNomeSec) := TRSection():New( oSectionD,  "Valores na moeda " + SuperGetMV("MV_SIMB"+cMoeda), {"SN3","SN1","SN2","SA2"} , aOrdem )
	
	cMSimbol := '{|| "' + SuperGetMV("MV_SIMB"+cMoeda)+'" }'
	// "MOEDA"
	TRCell():New( &(cNomeSec), "cMoeda"           , /* */  ,	Capital(OemToAnsi("MOEDA"))	,/*Picture*/,  6 ,/*lPixel*/, &cMSimbol )
	// "Vl Orig.+Ampliacao"
	TRCell():New( &(cNomeSec), "nCalc001"         , /* */  ,	"Vl Orig.+Ampliação" /*X3Titulo*/	,/*Picture*/, 19 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	// "Tx. Depr"
	TRCell():New( &(cNomeSec), "N3_TXDEPR"+cMoeda , "SN3" ,	"Tx. Depr" /*X3Titulo*/	,/*Picture*/,  8 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	// "Indice"
	TRCell():New( &(cNomeSec), "N3_INDICE"+cMoeda , "SN3" ,	"Indice" /*X3Titulo*/	,/*Picture*/,  8 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	// "Correcao no mes"
	TRCell():New( &(cNomeSec), "N3_VRCMES1"       , "SN3" ,	"Correção"+CRLF+;
	"no mês" /*X3Titulo*/	,/*Picture*/, 17 ,/*lPixel*/, Iif( nMoeda != 1 , {|| 0 } , ) )
	// "Depreciacao no mes"
	TRCell():New( &(cNomeSec), "N3_VRDMES"+cMoeda , "SN3" ,	"Depreciação"+CRLF+;
	"no mês" /*X3Titulo*/	,/*Picture*/, 17 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	// "Correcao da Deprec. no mes"
	TRCell():New( &(cNomeSec), "N3_VRCDM1"        , "SN3" ,	"Correção da "+CRLF+;
	"Deprec. no mês" /*X3Titulo*/	,/*Picture*/, 16 ,/*lPixel*/, Iif( nMoeda != 1 , {|| 0 } , ) )
	// "Correcao no Exercicio"
	TRCell():New( &(cNomeSec), "N3_VRCBAL1"       , "SN3" ,	"Correção no "+CRLF+;
	"no Exercício" /*X3Titulo*/	,/*Picture*/, 20 ,/*lPixel*/, Iif( nMoeda != 1 , {|| 0 } , ) )
	// "Depreciacao no Exercício"
	TRCell():New( &(cNomeSec), "N3_VRDBAL"+cMoeda , "SN3" ,	"Depreciação"+CRLF+;
	"no Exercício" /*X3Titulo*/	,/*Picture*/, 20 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	// "Correcao da Deprec. no Exerc"
	TRCell():New( &(cNomeSec), "N3_VRCDB1"        , "SN3" ,	"Correção da "+CRLF+;
	"Deprec. no Exerc" /*X3Titulo*/	,/*Picture*/, 18 ,/*lPixel*/, Iif( nMoeda != 1 , {|| 0 } , ) )
	// "Correcao Acumulada"
	TRCell():New( &(cNomeSec), "N3_VRCACM1"       , "SN3" ,	"Correção"+CRLF+;
	"Acumulada" /*X3Titulo*/	,/*Picture*/, 21 ,/*lPixel*/, /*{|| code-block de impressao }*/ )
	// "Depreciacao Acumulada"
	TRCell():New( &(cNomeSec), "N3_VRDACM"+cMoeda , "SN3" ,	"Depreciação"+CRLF+;
	"Acumulada" /*X3Titulo*/	,/*Picture*/, 21 ,/*lPixel*/, /*{|| code-block de impressao }*/ )
	// "Correcao da Depreciação Acum."
	TRCell():New( &(cNomeSec), "N3_VRCDA1"        , "SN3" ,	"Correção da "+CRLF+;
	"Depreciação Acum." /*X3Titulo*/	,/*Picture*/, 19 ,/*lPixel*/,/*{|| code-block de impressao }*/)
	
	
	If nMoeda != 1
		&(cNomeSec):SetHeaderSection(.F.)
	EndIf
	&(cNomeSec):SetNoFilter({"SN1","SN2","SA2"})
	&(cNomeSec):SetColSpace(1)
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a secao "D" - Residual                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSectionR := TRSection():New( oSectionD, OemToAnsi("Vlr Residual ")  )
TRCell():New( oSectionR, "cDescValor" ,/*Alias*/	,OemToAnsi("Vlr Residual ")	,/*Picture*/, 01,/*lPixel*/,/*{|| code-block de impressao }*/)
oSectionR:Cell("cDescValor"):SetAlign("LEFT")
oSectionR:Cell("cDescValor"):SetCellBreak(.T.)

For nMoeda := 1 To 5
	TRCell():New( oSectionR, "nValMoeda" + AllTrim( Str( nMoeda ) ),/*Alias*/, " "/*SuperGetMV("MV_SIMB" + AllTrim( Str( nMoeda ) ) )*/,""/*Picture*/,27,/*lPixel*/,/*{|| code-block de impressao }*/)	// Valor Moeda1
	oSectionR:Cell( "nValMoeda" + AllTrim( Str( nMoeda ) ) ):lAutoSize := .F.
	oSectionR:Cell( "nValMoeda" + AllTrim( Str( nMoeda ) ) ):SetCellBreak(.T.)
	oSectionR:Cell( "nValMoeda" + AllTrim( Str( nMoeda ) ) ):SetAlign("RIGHT")
	oSectionR:Cell( "nValMoeda" + AllTrim( Str( nMoeda ) ) ):SetHeaderAlign("LEFT")
Next

oSectionR:SetColSpace( 1 )
oSectionR:SetLineStyle()
oSectionR:SetCharSeparator("")

oReport:SetTotalInLine(.F.)
oReport:SetLandScape()

Return oReport

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ATFR250ImpºAutor  ³Carlos A. Gomes Jr. º Data ³  06/05/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Query de impressao do relatorio                             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ATFR030Imp( oReport )

Local oSectionT  := oReport:Section(1)
Local oSectionD  := oSectionT:Section(1)
Local oSectionR  := oSectionD:Section(6)

Local cNomeSec := ""
Local cNomeBrk := ""

Local cAliasSN3 := "SN3"
Local cAliasSN1 := "SN1"
Local cAliasSA2 := "SA2"

Local nMoeda    := 1
Local cMoeda    := ""
Local cMoPar    := ""
Local cBCalc

Local aContab  := {"N3_CCORREC","N3_CDEPREC","N3_CCDEPR","N3_CDESP"}
Local nTroca   := 0
Local nOrdem	:= oSectionT:GetOrder()
Local aOcor		:= {}
Local nAscan
Local lImpTot	:= .F.
Local lTotBS	:= .F.
Local aTotBs  	:= Array(5, 11)
Local aTotal 	:= Array(5, 11)
Local cFilDe  := cFilAnt
Local cFilAte := cFilAnt
Local cFilOld := cFilAnt
Local cTitAux
Local aOrdem  := { " Por Situação"}
Local	cFilterUser := oSectionT:GetAdvplExp("SN3")
Local nVlBase	:= 0
Local nInc		:= 0
Local aSM0		:= AdmAbreSM0()                 
Local aSituac := {"Cedido","Comodato","Emprestado","Próprio",""}

Private oSectionM1 := oSectionD:Section(1)
Private oSectionM2 := oSectionD:Section(2)
Private oSectionM3 := oSectionD:Section(3)
Private oSectionM4 := oSectionD:Section(4)
Private oSectionM5 := oSectionD:Section(5)

If mv_par16 <= 4 .and. mv_par17 <= 4 .and. mv_par16 == mv_par17
	MsgInfo("As colunas para Item Contabil e Classe de Valor não podem ser iguais !") // "As colunas para Item Contabil e Classe de Valor não podem ser iguais !"
	Return
EndIf

If oSectionT:GetOrder() == 1
	cChave := "N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ"
EndIf

aOcor := {}
// Carrega tabela de tipos
SX5->(MsSeek(xFilial("SX5")+"G1"))
While SX5->X5_FILIAL == xFilial("SX5") .And. Alltrim(SX5->X5_TABELA) == "G1"
	Aadd(aOcor, { Alltrim(SX5->X5_CHAVE), AllTrim(X5Descri()) + IIf(Alltrim(SX5->X5_CHAVE) == "05", "  (-)","") } )
	SX5->(DbSkip())
End

//TRPosition():New(oSectionT,"SN1",1,{|| xFilial("SN1") + SN3->(N3_CBASE+N3_ITEM) })
TRPosition():New(oSectionT,"SA2",1,{|| xFilial("SA2") + SN1->(N1_FORNEC+N1_LOJA) })
TRPosition():New(oSectionT,"SN2",1,{|| xFilial("SN2") + SN3->(N3_CBASE+N3_ITEM+N3_TIPO) })
TRPosition():New(oSectionT,"SN4",1,{|| xFilial("SN4") + SN3->(N3_CBASE+N3_ITEM+N3_TIPO)+DtoS(SN3->N3_DTBAIXA)+"01" })

If mv_par16 <= 4
	/// POSSIBILIDADES DA PERGUNTA: 1=Cta.Correção, 2=Cta.Depreciacao, 3=Cta.Corr.Depreciacao., 4=Desp.Deprec, 5=Nenhuma
	oSectionD:Cell(aContab[mv_par16]):SetTitle("Item Contabil        ")						/// A COLUNA SERA SUBSTITUÍDA PELO ITEM
	oSectionD:Cell(aContab[mv_par16]):SetBlock( {|| (cAliasSN3)->N3_SUBCTA } )
EndIf
If mv_par17 <= 4
	/// POSSIBILIDADES DA PERGUNTA: 1=Cta.Correção, 2=Cta.Depreciacao, 3=Cta.Corr.Depreciacao., 4=Desp.Deprec, 5=Nenhuma
	oSectionD:Cell(aContab[mv_par17]):SetTitle("Classe de Valor      ")					/// A COLUNA SERA SUBSTITUÍDA PELA CLASSE DE VALOR
	oSectionD:Cell(aContab[mv_par17]):SetBlock( {|| (cAliasSN3)->N3_CLVL } )
EndIf

oSectionT:Cell("N1_FORNEC"):SetBlock({|| IIf(!Empty((cAliasSN1)->N1_FORNEC),(cAliasSA2)->A2_NOME,"")  })

If mv_par15 = 1
	If oSectionT:GetOrder() != 1
		MsgAlert("Só é possível sub-totalizar na ordem de codigo base.") // 'Só é possível sub-totalizar na ordem de codigo base.'
		mv_par15 := 2
	EndIF
EndIf

If mv_par09 != 1
	oSectionR:Cell("nValMoeda1"):Disable()
Endif
If mv_par10 != 1
	oSectionR:Cell("nValMoeda2"):Disable()
Endif
If mv_par11 != 1
	oSectionR:Cell("nValMoeda3"):Disable()
Endif
If mv_par12 != 1
	oSectionR:Cell("nValMoeda4"):Disable()
Endif
If mv_par13 != 1
	oSectionR:Cell("nValMoeda5"):Disable()
Endif
oSectionD:Cell("N4_QUANTD"):SetPicture("@Z"+PesqPict("SN4","N4_QUANTD",12))
oSectionR:Cell("nValMoeda1"):SetAlign("RIGHT")
oReport:NoUserFilter()

For nMoeda := 1 To 5
	cMoeda := StrZero(nMoeda,1)
	cMoPar := StrZero(nMoeda+8,2)
	
	cNomeSec := "oSectionM"+cMoeda
	cNomeBrk := "oBreakM"+cMoeda
	
	&(cNomeSec):Cell("nCalc001"        ):SetPicture(PesqPict("SN3", "N3_VORIG"+cMoeda , 19, nMoeda))
	&(cNomeSec):Cell("N3_VRCMES1"      ):SetPicture(PesqPict("SN3", "N3_VRCMES1"      , 17, nMoeda))
	&(cNomeSec):Cell("N3_VRDMES"+cMoeda):SetPicture(PesqPict("SN3", "N3_VRDMES"+cMoeda, 17, nMoeda))
	&(cNomeSec):Cell("N3_VRCDM1"       ):SetPicture(PesqPict("SN3", "N3_VRCDM1"       , 16, nMoeda))
	&(cNomeSec):Cell("N3_VRCBAL1"      ):SetPicture(PesqPict("SN3", "N3_VRCBAL1"      , 20, nMoeda))
	&(cNomeSec):Cell("N3_VRDBAL"+cMoeda):SetPicture(PesqPict("SN3", "N3_VRDBAL"+cMoeda, 20, nMoeda))
	&(cNomeSec):Cell("N3_VRCDB1"       ):SetPicture(PesqPict("SN3", "N3_VRCDB1"       , 18, nMoeda))
	&(cNomeSec):Cell("N3_VRCACM1"      ):SetPicture(PesqPict("SN3", "N3_VRCACM1"      , 21, nMoeda))
	&(cNomeSec):Cell("N3_VRDACM"+cMoeda):SetPicture(PesqPict("SN3", "N3_VRDACM"+cMoeda, 21, nMoeda))
	&(cNomeSec):Cell("N3_VRCDA1"       ):SetPicture(PesqPict("SN3", "N3_VRCDA1"       , 19, nMoeda))
Next

If mv_par18 == 1 // considera filiais
	cFilDe := mv_par19
	cFilAte := mv_par20
Endif

cTitAux := oReport:Title()

For nMoeda := 1 To Len(aTotal)
	Afill(aTotal[nMoeda], 0.00)
	Afill(aTotBs[nMoeda], 0.00)
Next

For nInc := 1 To Len( aSM0 )
	If aSM0[nInc][1] == cEmpAnt .AND. aSM0[nInc][2] >= cFilDe .AND. aSM0[nInc][2] <= cFilAte
		cFilAnt := aSM0[nInc][2]
		
		oReport:SetTitle(Alltrim(cTitAux + " - " + Alltrim(aOrdem[nOrdem])))
		
		dbSelectArea("SN1")
		dbOrderNickName("SISN109")
		SN1->(dbSeek(xFilial("SN1"),.T.) )
		
		cN1_sitant := 'X'
		
		While !oReport:Cancel() .And.;
			SN1->(!Eof()) .And.  ;
			SN1->N1_FILIAL = xFilial("SN1")  
			
			
			If !(SN1->N1_CBASE >= mv_par01 .and. SN1->N1_CBASE <= mv_par02)			        
			 	SN1->(dbSkip())    
				Loop
			Endif
						
			
			SN3 -> ( dbSetOrder (1) )
			DbSelectArea("SN3")
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Localiza registro inicial                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			SN3->( dbSeek(xFilial("SN3")+SN1->N1_CBASE+SN1->N1_ITEM) )
			cCond1 := " N3_CCONTAB >= mv_par07 .And. N3_CCONTAB <= mv_par08 "
			cCond1 += " .and. N3_CCUSTO >= mv_par05 .And. N3_CCUSTO <= mv_par06 "
			
			oReport:SetMeter(SN3->(RecCount()))
			
			cN3_Filant := 'XX'
			cN3_Basant := 'XXXXXXXXXX'
			cN3_Iteant := 'XXXX'
			
			For nMoeda:=2 To 5
				cPar   :=StrZero(nMoeda+8,2)
				cMoeda :=Str(nMoeda,1)
				cNomeSec := "oSectionM"+cMoeda
				&(cNomeSec):Init()
			Next
			
			While !oReport:Cancel() .And.;
				SN3->(!Eof()) .And.  ;
				SN3->N3_FILIAL = xFilial("SN3") .AND. SN3->N3_CBASE == SN1->N1_CBASE .and.  SN3->N3_ITEM == SN1->N1_ITEM
				
				If SN3->N3_TIPO == '33'
					SN3->( dbSkip() )
					Loop
				EndIf
				
				Begin Sequence
				// Incrementa regua
				oReport:IncMeter()
				
				If !(&cCond1)
					SN3->(dbSkip())
					Break
				EndIf
				
				
				If !Empty(cFilterUser).and.!(&cFilterUser)
					SN3->(dbSkip())
					Break
				Endif
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Localiza item no SN1                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				//dbSelectArea("SN1")
				//SN1->( dbSeek(xFilial("SN1")+SN3->N3_CBASE+SN3->N3_ITEM) )
				
				dbSelectArea("SN3")
				
				//Adiciona espacos em branco, pois possui bens normais sem preenchimento no campo de penhora.
				If ALLTRIM( SN1->N1_PENHORA ) == '' .and. !SN1->N1_PENHORA $ ALLTRIM( mv_par21 )
					mv_par21 := ALLTRIM( mv_par21 ) + SN1->N1_PENHORA
				EndIf
				
				If !SN1->N1_PENHORA $ mv_par21
					Break
				Endif
				
				lLoop := .F.
				lLoop := IIF(N3_CBASE   < mv_par01 .or. N3_CBASE  > mv_par02, .T., lLoop)
				lLoop := IIF(N3_ITEM    < mv_par03 .or. N3_ITEM   > mv_par04, .T., lLoop)
				lLoop := IIF(N3_CCUSTO  < mv_par05 .Or. N3_CCUSTO > mv_par06, .T., lLoop)
				lLoop := IIF(N3_CCONTAB < mv_par07 .Or. N3_CCONTAB> mv_par08, .T., lLoop)
				lLoop := IIF(mv_par14 = 2 .and. Val(N3_BAIXA) != 0, .T.,lLoop)
				
				If lLoop
					Break
				Endif
				
				nSit := IIf(!Empty(SN1->N1_XSITUAC),Val(SN1->N1_XSITUAC),5)          
				  
				If cN1_sitant != SN1->N1_XSITUAC
					oReport:SkipLine()
					oReport:PrintText("Situação: "+SN1->N1_XSITUAC +" - "+aSituac[nSit])
					oReport:SkipLine()
				Endif
				
				
				oSectionD:Init()
				oSectionT:Init()
				
				IF	cN3_Filant != SN3->N3_FILIAL .Or. cN3_Basant != SN3->N3_CBASE .Or. cN3_Iteant != SN3->N3_ITEM
					
					cN3_Filant := SN3->N3_FILIAL
					cN3_Basant := SN3->N3_CBASE
					cN3_Iteant := SN3->N3_ITEM
					
					oSectionT:Cell("N1_CBASE"):SetBlock( { || SN1->N1_CBASE } )
					oSectionT:Cell("N1_ITEM"):SetBlock( { || SN1->N1_ITEM } )
					oSectionT:Cell("N1_DESCRIC"):SetBlock( { || SubS(SN1->N1_DESCRIC, 1,40) } )
					oSectionT:Cell("N1_CHAPA"):SetBlock( { || SubS(SN1->N1_CHAPA  , 1,10) } )
					oSectionT:Cell("N1_GRUPO"):SetBlock( { || SubS(SN1->N1_GRUPO  , 1, 6) } )
					oSectionT:Cell("N1_LOCAL"):SetBlock( { || SubS(SN1->N1_LOCAL  , 1,15) } )
					oSectionT:Cell("N1_AQUISIC"):SetBlock( { || SN1->N1_AQUISIC } )
					oSectionT:Cell("N1_BAIXA"):SetBlock( { || SN1->N1_BAIXA } )
					oSectionT:Cell("N1_PROJETO"):SetBlock( { || 	SubS(SN1->N1_PROJETO, 1,12) } )
					oSectionT:Cell("N1_NFISCAL"):SetBlock( { || SN1->N1_NFISCAL } )
					oSectionT:Cell("N1_NSERIE"):SetBlock( { || SN1->N1_NSERIE } )
					oSectionT:Cell("N1_QUANTD"):SetBlock( { || SN1->N1_QUANTD  } )
					oSectionT:Cell("N1_PLACA"):SetBlock( { || SN1->N1_PLACA } )
					oSectionT:Cell("N1_CSEGURO"):SetBlock( { || SubS(SN1->N1_CSEGURO,1,30) } )
					oSectionT:Cell("N1_APOLICE"):SetBlock( { || SN1->N1_APOLICE } )
					oSectionT:Cell("N1_DTVENC"):SetBlock( { || SN1->N1_DTVENC } )
					oSectionT:Cell("N1_TIPOSEG"):SetBlock( { || SN1->N1_TIPOSEG } )
					oSectionT:Cell("N1_FORNEC"):SetBlock( { || SN1->N1_FORNEC } )
					oSectionT:Cell("N1_LOJA"):SetBlock( { || SN1->N1_LOJA } )
					oSectionT:Cell("A2_NOME"):SetBlock( { || SA2->A2_NREDUZ } )
					oSectionT:Cell("N2_HISTOR"):SetBlock( { || cHistor := af010Texto(xFilial("SN2")+SN1->(N1_CBASE+N1_ITEM)+SN3->N3_TIPO), DbSelectArea("SN3"), cHistor } )
					oSectionT:PrintLine()
					
				Endif
				
				dbSelectArea("SN3")
				
				IF	Val( SN3->N3_BAIXA ) # 0
					dbSelectArea("SN4")
					SN4->( dbSeek(xFilial("SN4")+SN3->N3_CBASE+SN3->N3_ITEM+SN3->N3_TIPO+DtoS(SN3->N3_DTBAIXA)+"01") )
					dbSelectArea("SN3")
				Endif
				
				oSectionD:Cell("N3_TIPO"):SetBlock( { ||	SN3->N3_TIPO + "-" + (nAscan := Ascan(aOcor, {|e| e[1] == SN3->N3_TIPO } ) ,;
				IIf(nAscan > 0, Left(aOcor[nAscan][2],14), "Não encontrado")) } )
				oSectionD:Cell("N3_HISTOR"):SetBlock( { || Subst(SN3->N3_HISTOR,1,40) } )
				oSectionD:Cell("N3_CCONTAB"):SetBlock( { || SN3->N3_CCONTAB } )
				oSectionD:Cell("N3_CCORREC"):SetBlock( { || &(aContab[1]) } )
				oSectionD:Cell("N3_CDEPREC"):SetBlock( { || &(aContab[2]) } )
				oSectionD:Cell("N3_CCDEPR"):SetBlock( { || &(aContab[3]) } )
				oSectionD:Cell("N3_CDESP"):SetBlock( { || &(aContab[4]) } )
				oSectionD:Cell("N3_CCUSTO"):SetBlock( { || SN3->N3_CCUSTO } )
				oSectionD:Cell("N3_DINDEPR"):SetBlock( { || SN3->N3_DINDEPR } )
				oSectionD:Cell("N3_DTBAIXA"):SetBlock( { || IIF(	Val( SN3->N3_BAIXA ) # 0, SN3->N3_DTBAIXA, "" ) } )
				oSectionD:Cell("N4_QUANTD"):SetBlock( { || IIF(	Val( SN3->N3_BAIXA ) # 0, SN4->N4_QUANTD, 0 ) } )
				oSectionD:PrintLine()
				
				oReport:SkipLine()
				oSectionM1:Init()
				oSectionM2:Init()
				oSectionM3:Init()
				oSectionM4:Init()
				oSectionM5:Init()
				
				For nMoeda:=1 To 5
					
					cPar   :=StrZero(nMoeda+8,2)
					cMoeda :=Str(nMoeda,1)
					cNomeSec := "oSectionM"+cMoeda
					
					If	MV_PAR&cPar = 1
						&(cNomeSec):Cell("cMoeda"):SetBlock({ || GETMV("MV_SIMB"+cMoeda) } )
						
						If MesAnoAtf( N3_DINDEPR ) <> MesAnoAtf( dUltDepr )
							//Calcula o custo de aquisicao atualizado
							nVlBase := ( N3_VORIG1 + N3_AMPLIA1 + N3_VRCACM1 ) + ( N3_VRCMES1 * (-1) )
							nVlBase := xMoeda(nVlBase, 1, Val(cMoeda), dUltDepr)
						Else
							nVlBase := N3_VORIG1 + N3_AMPLIA1
							nVlBase := xMoeda(nVlBase, 1, Val(cMoeda), N3_DINDEPR)
						Endif
						
						&(cNomeSec):Cell("nCalc001"):SetBlock({ || nVlBase } )
						&(cNomeSec):Cell("N3_TXDEPR"+cMoeda):SetBlock({ || N3_TXDEPR&cMoeda } )
						&(cNomeSec):Cell("N3_INDICE"+cMoeda):SetBlock({ || N3_INDICE&cMoeda } )
						
						// Valores de Depreciacao
						&(cNomeSec):Cell("N3_VRDMES"+cMoeda):SetBlock({ || N3_VRDMES&cMoeda } )
						&(cNomeSec):Cell("N3_VRDBAL"+cMoeda):SetBlock({ || N3_VRDBAL&cMoeda + xMoeda(SN3->N3_VRCDB1, 1, Val(cMoeda), dUltDepr) } )
						&(cNomeSec):Cell("N3_VRDACM"+cMoeda):SetBlock({ || N3_VRDACM&cMoeda + xMoeda(SN3->N3_VRCDA1, 1, Val(cMoeda), dUltDepr) } )
						
						// Valores da Correcao Monetaria
						&(cNomeSec):Cell("N3_VRCMES1"):SetBlock({ || xMoeda(SN3->N3_VRCMES1, 1, Val(cMoeda), dUltDepr) } )
						&(cNomeSec):Cell("N3_VRCBAL1"):SetBlock({ || xMoeda(SN3->N3_VRCBAL1, 1, Val(cMoeda), dUltDepr) } )
						&(cNomeSec):Cell("N3_VRCACM1"):SetBlock({ || xMoeda(SN3->N3_VRCACM1, 1, Val(cMoeda), dUltDepr) } )
						
						// Valores da Correcao s/Depreciacao Acumulada
						&(cNomeSec):Cell("N3_VRCDM1"):SetBlock({ || xMoeda(SN3->N3_VRCDM1, 1, Val(cMoeda), dUltDepr) } )
						&(cNomeSec):Cell("N3_VRCDB1"):SetBlock({ || xMoeda(SN3->N3_VRCDB1, 1, Val(cMoeda), dUltDepr) } )
						&(cNomeSec):Cell("N3_VRCDA1"):SetBlock({ || xMoeda(SN3->N3_VRCDA1, 1, Val(cMoeda), dUltDepr) } )
						
						nValResid1 := (SN3->N3_VORIG1+SN3->N3_VRCACM1+SN3->N3_AMPLIA1)-(SN3->N3_VRDACM1+SN3->N3_VRCDA1)
						If cMoeda <> "1"
							//nValResid&cMoeda :=&('SN3->N3_VORIG'+cMoeda)+&('SN3->N3_AMPLIA'+cMoeda)-&('SN3->N3_VRDACM'+cMoeda)
							nValResid&cMoeda := xMoeda(nValResid1, 1, Val(cMoeda), dUltDepr)
						Endif
						
						// Totalizacao para apresentacao de resumo
						If ! N3_TIPO $ "07,08,09,10,12,50,51,52,53,54" // Não considerar o item de depreciação acelerada incentivada
							aTotal[nMoeda][VLR_ORIGINAL] 		+= nVlBase
						Endif
						
						If ! N3_TIPO $ "08,09,10,12,50,51,52,53,54" // Não considerar o item de depreciação acelerada incentivada
							aTotal[nMoeda][VLR_RESIDUAL] 		+= nValResid&cMoeda
							// Valores de Depreciacao
							aTotal[nMoeda][VLR_DEP_MES] 		+= N3_VRDMES&cMoeda
							aTotal[nMoeda][VLR_DEP_EXE] 		+= ( N3_VRDBAL&cMoeda + xMoeda(SN3->N3_VRCDB1, 1, Val(cMoeda), dUltDepr) )
							aTotal[nMoeda][VLR_DEP_ACU] 		+= ( N3_VRDACM&cMoeda + xMoeda(SN3->N3_VRCDA1, 1, Val(cMoeda), dUltDepr) )
							// Valores da Correcao Monetaria
							aTotal[nMoeda][VLR_CORRECAO] 		+= xMoeda(SN3->N3_VRCMES1, 1, Val(cMoeda), dUltDepr)
							aTotal[nMoeda][VLR_COR_EXE] 		+= xMoeda(SN3->N3_VRCBAL1, 1, Val(cMoeda), dUltDepr)
							aTotal[nMoeda][VLR_COR_ACU] 		+= xMoeda(SN3->N3_VRCACM1, 1, Val(cMoeda), dUltDepr)
							// Valores da Correcao s/Depreciacao Acumulada
							aTotal[nMoeda][VLR_COR_DEP] 		+= xMoeda(SN3->N3_VRCDM1, 1, Val(cMoeda), dUltDepr)
							aTotal[nMoeda][VLR_COR_DEP_EXE] 	+= xMoeda(SN3->N3_VRCDB1, 1, Val(cMoeda), dUltDepr)
							aTotal[nMoeda][VLR_COR_DEP_ACU] 	+= xMoeda(SN3->N3_VRCDA1, 1, Val(cMoeda), dUltDepr)
						Endif
						
						If mv_par15 = 1
							If ! N3_TIPO $ "07,08,09,10,12,50,51,52,53,54" // Não considerar o item de depreciação acelerada incentivada
								aTotBs[nMoeda][VLR_ORIGINAL] 	+= nVlBase
							Endif
							
							If ! N3_TIPO $ "08,09,10,12,50,51,52,53,54" // Não considerar o item de depreciação acelerada incentivada
								aTotBs[nMoeda][VLR_RESIDUAL] 		+= nValResid&cMoeda
								// Valores da Depreciacao
								aTotBs[nMoeda][VLR_DEP_MES] 		+= N3_VRDMES&cMoeda
								aTotBs[nMoeda][VLR_DEP_EXE] 		+= ( N3_VRDBAL&cMoeda + xMoeda(SN3->N3_VRCDB1, 1, Val(cMoeda), dUltDepr) )
								aTotBs[nMoeda][VLR_DEP_ACU] 		+= ( N3_VRDACM&cMoeda + xMoeda(SN3->N3_VRCDA1, 1, Val(cMoeda), dUltDepr) )
								// Valores da Correcao Monetaria
								aTotBs[nMoeda][VLR_CORRECAO] 		+= xMoeda(SN3->N3_VRCMES1, 1, Val(cMoeda), dUltDepr)
								aTotBs[nMoeda][VLR_COR_EXE] 		+= xMoeda(SN3->N3_VRCBAL1, 1, Val(cMoeda), dUltDepr)
								aTotBs[nMoeda][VLR_COR_ACU] 		+= xMoeda(SN3->N3_VRCACM1, 1, Val(cMoeda), dUltDepr)
								// Valores da Correcao s/Depreciacao Acumulada
								aTotBs[nMoeda][VLR_COR_DEP] 		+= xMoeda(SN3->N3_VRCDM1, 1, Val(cMoeda), dUltDepr)
								aTotBs[nMoeda][VLR_COR_DEP_EXE] 	+= xMoeda(SN3->N3_VRCDB1, 1, Val(cMoeda), dUltDepr)
								aTotBs[nMoeda][VLR_COR_DEP_ACU] 	+= xMoeda(SN3->N3_VRCDA1, 1, Val(cMoeda), dUltDepr)
							Endif
						Endif
						
						&(cNomeSec):PrintLine()
						lTotBS := .T.
						lImpTot := .T.
					End
				Next
				
				oSectionR:Init()
				
				If mv_par09 == 1
					oSectionR:Cell("nValMoeda1"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB1") ), 8 ) + Pad(Transform(nValResid1, PesqPict("SN3","N3_VORIG1",19, 1)),19) } )
				Endif
				If mv_par10 == 1
					oSectionR:Cell("nValMoeda2"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB2") ), 8 ) + Pad(Transform(nValResid2, PesqPict("SN3","N3_VORIG2",19, 2)),19) } )
				Endif
				If mv_par11 == 1
					oSectionR:Cell("nValMoeda3"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB3") ), 8 ) + Pad(Transform(nValResid3, PesqPict("SN3","N3_VORIG3",19, 3)),19) } )
				Endif
				If mv_par12 == 1
					oSectionR:Cell("nValMoeda4"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB4") ), 8 ) + Pad(Transform(nValResid4, PesqPict("SN3","N3_VORIG4",19, 4)),19) } )
				Endif
				If mv_par13 == 1
					oSectionR:Cell("nValMoeda5"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB5") ), 8 ) + Pad(Transform(nValResid5, PesqPict("SN3","N3_VORIG5",19, 5)),19) } )
				Endif
				
				oSectionR:PrintLine()
				oSectionR:Finish()
				oSectionD:Finish()
				oSectionT:Finish()
				oSectionM1:Finish()
				oReport:ThinLine()
				
				End Sequence
				
				SN3->( dbSkip() )
				
				// Somente imprimo o total do codigo base se tiver o que ser impresso eh
				// For impresso por ordem de bem
				If lTotBS .And. nOrdem = 1 .And. mv_par15 = 1 .And. cN3_Basant != SN3->N3_CBASE
					
					lTotBS := .F.
					
					oReport:SkipLine()
					
					oReport:PrintText("TOTAL DO CODIGO BASE - " + cN3_Basant) 
					oReport:SkipLine()
					oSectionM1:Init()
					oSectionM2:Init()
					oSectionM3:Init()
					oSectionM4:Init()
					oSectionM5:Init()
					For nMoeda:=1 To 5
						
						cPar   :=StrZero(nMoeda+8,2)
						cMoeda :=Str(nMoeda,1)
						cNomeSec := "oSectionM"+cMoeda
						
						If	MV_PAR&cPar = 1
							&(cNomeSec):Cell("N3_TXDEPR"+cMoeda):SetPicture("@Z"+PesqPict("SN3","N3_TXDEPR"+cMoeda) )
							&(cNomeSec):Cell("N3_INDICE"+cMoeda):SetPicture("@Z"+PesqPict("SN3","N3_INDICE"+cMoeda) )
							&(cNomeSec):Cell("cMoeda"):SetBlock({ || GETMV("MV_SIMB"+cMoeda) } )
							&(cNomeSec):Cell("nCalc001"):SetBlock({ || aTotBs[nMoeda][VLR_ORIGINAL] } )
							&(cNomeSec):Cell("N3_TXDEPR"+cMoeda):SetBlock({ || 0 } )
							&(cNomeSec):Cell("N3_INDICE"+cMoeda):SetBlock({ || 0 } )
							&(cNomeSec):Cell("N3_VRCMES1"):SetBlock({ || aTotBs[nMoeda][VLR_CORRECAO] } )
							&(cNomeSec):Cell("N3_VRDMES"+cMoeda):SetBlock({ || aTotBs[nMoeda][VLR_DEP_MES] } )
							&(cNomeSec):Cell("N3_VRCDM1"):SetBlock({ ||  aTotBs[nMoeda][VLR_COR_DEP] } )
							&(cNomeSec):Cell("N3_VRCBAL1"):SetBlock({ || aTotBs[nMoeda][VLR_COR_EXE] } )
							&(cNomeSec):Cell("N3_VRDBAL"+cMoeda):SetBlock({ || aTotBs[nMoeda][VLR_DEP_EXE] } )
							&(cNomeSec):Cell("N3_VRCDB1"):SetBlock({ ||  aTotBs[nMoeda][VLR_COR_DEP_EXE]} )
							&(cNomeSec):Cell("N3_VRCACM1"):SetBlock({ || aTotBs[nMoeda][VLR_COR_ACU] } )
							&(cNomeSec):Cell("N3_VRDACM"+cMoeda):SetBlock({ || aTotBs[nMoeda][VLR_DEP_ACU] } )
							&(cNomeSec):Cell("N3_VRCDA1"):SetBlock({ || aTotBs[nMoeda][VLR_COR_DEP_ACU] } )
							&(cNomeSec):PrintLine()
						Endif
					Next
					oSectionM1:Finish()
					oSectionM2:Finish()
					oSectionM3:Finish()
					oSectionM4:Finish()
					oSectionM5:Finish()
					oSectionR:Init()
					oSectionR:Cell("nValMoeda1"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB1") ), 8 ) + Pad(Transform(aTotBs[1][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG1",19, 1)),19) } )
					oSectionR:Cell("nValMoeda2"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB2") ), 8 ) + Pad(Transform(aTotBs[2][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG2",19, 2)),19) } )
					oSectionR:Cell("nValMoeda3"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB3") ), 8 ) + Pad(Transform(aTotBs[3][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG3",19, 3)),19) } )
					oSectionR:Cell("nValMoeda4"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB4") ), 8 ) + Pad(Transform(aTotBs[4][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG4",19, 4)),19) } )
					oSectionR:Cell("nValMoeda5"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB5") ), 8 ) + Pad(Transform(aTotBs[5][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG5",19, 5)),19) } )
					oSectionR:PrintLine()
					oSectionR:Finish()
					oReport:ThinLine()
					For nMoeda := 1 To Len(aTotBs)
						Afill(aTotBs[nMoeda], 0.00)
					Next
				Endif
			EndDo
			
			For nMoeda:=1 To 5
				cPar   :=StrZero(nMoeda+8,2)
				cMoeda :=Str(nMoeda,1)
				cNomeSec := "oSectionM"+cMoeda
				&(cNomeSec):Finish()
			Next
			// Se o arquivo for compartilhado, processa apenas uma vez
			If Empty(xFilial("SN3"))
				Exit
			Endif
			
			cN1_sitant := SN1->N1_XSITUAC    
			
			SN1->(dbSkip())
			
		Enddo
		
	EndIf
Next

cFilAnt := cFilOld

oSectionM1:Init()
oSectionM1:Init()
oSectionM2:Init()
oSectionM3:Init()
oSectionM4:Init()
oSectionM5:Init()

If lImpTot
	
	oReport:SkipLine()
	oReport:PrintText("RESUMO GERAL")
	oReport:SkipLine()
	
	For nMoeda:=1 To 5
		
		cPar   :=StrZero(nMoeda+8,2)
		cMoeda :=Str(nMoeda,1)
		cNomeSec := "oSectionM"+cMoeda
		
		If	MV_PAR&cPar = 1
			&(cNomeSec):Cell("N3_TXDEPR"+cMoeda):SetPicture("@Z"+PesqPict("SN3","N3_TXDEPR"+cMoeda) )
			&(cNomeSec):Cell("N3_INDICE"+cMoeda):SetPicture("@Z"+PesqPict("SN3","N3_INDICE"+cMoeda) )
			&(cNomeSec):Cell("cMoeda"):SetBlock({ || GETMV("MV_SIMB"+cMoeda) } )
			&(cNomeSec):Cell("nCalc001"):SetBlock({ || aTotal[nMoeda][VLR_ORIGINAL] } )
			&(cNomeSec):Cell("N3_TXDEPR"+cMoeda):SetBlock({ || 0 } )
			&(cNomeSec):Cell("N3_INDICE"+cMoeda):SetBlock({ || 0 } )
			&(cNomeSec):Cell("N3_VRCMES1"):SetBlock({ || aTotal[nMoeda][VLR_CORRECAO] } )
			&(cNomeSec):Cell("N3_VRDMES"+cMoeda):SetBlock({ || aTotal[nMoeda][VLR_DEP_MES] } )
			&(cNomeSec):Cell("N3_VRCDM1"):SetBlock({ ||  aTotal[nMoeda][VLR_COR_DEP] } )
			&(cNomeSec):Cell("N3_VRCBAL1"):SetBlock({ || aTotal[nMoeda][VLR_COR_EXE] } )
			&(cNomeSec):Cell("N3_VRDBAL"+cMoeda):SetBlock({ || aTotal[nMoeda][VLR_DEP_EXE] } )
			&(cNomeSec):Cell("N3_VRCDB1"):SetBlock({ ||  aTotal[nMoeda][VLR_COR_DEP_EXE]} )
			&(cNomeSec):Cell("N3_VRCACM1"):SetBlock({ || aTotal[nMoeda][VLR_COR_ACU] } )
			&(cNomeSec):Cell("N3_VRDACM"+cMoeda):SetBlock({ || aTotal[nMoeda][VLR_DEP_ACU] } )
			&(cNomeSec):Cell("N3_VRCDA1"):SetBlock({ || aTotal[nMoeda][VLR_COR_DEP_ACU] } )
			&(cNomeSec):PrintLine()
		Endif
	Next
Endif
oSectionM1:Finish()
oSectionM2:Finish()
oSectionM3:Finish()
oSectionM4:Finish()
oSectionM5:Finish()
oSectionR:Init()
oSectionR:Cell("nValMoeda1"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB1") ), 8 ) + Pad(Transform(aTotal[1][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG1",19, 1)),19) } )
oSectionR:Cell("nValMoeda2"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB2") ), 8 ) + Pad(Transform(aTotal[2][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG2",19, 2)),19) } )
oSectionR:Cell("nValMoeda3"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB3") ), 8 ) + Pad(Transform(aTotal[3][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG3",19, 3)),19) } )
oSectionR:Cell("nValMoeda4"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB4") ), 8 ) + Pad(Transform(aTotal[4][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG4",19, 4)),19) } )
oSectionR:Cell("nValMoeda5"):SetBlock( { || PadR( AllTrim( SuperGetMV("MV_SIMB5") ), 8 ) + Pad(Transform(aTotal[5][VLR_RESIDUAL], PesqPict("SN3","N3_VORIG5",19, 5)),19) } )
oSectionR:PrintLine()
oSectionR:Finish()

dbClearFilter( )

SN3 -> ( DbSetOrder ( 1 ) )
SN1 -> ( DbSetOrder ( 1 ) )

Return


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AdmAbreSM0³ Autor ³ Orizio                ³ Data ³ 22/01/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna um array com as informacoes das filias das empresas ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AdmAbreSM0()
Local aArea			:= SM0->( GetArea() )
Local aAux			:= {}
Local aRetSM0		:= {}
Local lFWLoadSM0	:= FindFunction( "FWLoadSM0" )
Local lFWCodFilSM0 	:= FindFunction( "FWCodFil" )

If lFWLoadSM0
	aRetSM0	:= FWLoadSM0()
Else
	DbSelectArea( "SM0" )
	SM0->( DbGoTop() )
	While SM0->( !Eof() )
		aAux := { 	SM0->M0_CODIGO,;
		IIf( lFWCodFilSM0, FWGETCODFILIAL, SM0->M0_CODFIL ),;
		"",;
		"",;
		"",;
		SM0->M0_NOME,;
		SM0->M0_FILIAL }
		
		aAdd( aRetSM0, aClone( aAux ) )
		SM0->( DbSkip() )
	End
EndIf

RestArea( aArea )
Return aRetSM0

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Programa ³ AtuSX1   º Autor ³ TOTVS Protheus     º Data ³  22/12/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Descricao³ Atualizacao do SX1 - Perguntas                             ³±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³ Uso      ³ AtuSX1     - Gerado por EXPORDIC / Upd. V.4.10.5 EFS       ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AtuSX1(cPerg)
Local aArea    := GetArea()
Local aAreaDic := SX1->( GetArea() )
Local aEstrut  := {}
Local aStruDic := SX1->( dbStruct() )
Local aDados   := {}
Local nI       := 0
Local nJ       := 0
Local nTam1    := Len( SX1->X1_GRUPO )
Local nTam2    := Len( SX1->X1_ORDEM )

aEstrut := { "X1_GRUPO"  , "X1_ORDEM"  , "X1_PERGUNT", "X1_PERSPA" , "X1_PERENG" , "X1_VARIAVL", "X1_TIPO"   , ;
             "X1_TAMANHO", "X1_DECIMAL", "X1_PRESEL" , "X1_GSC"    , "X1_VALID"  , "X1_VAR01"  , "X1_DEF01"  , ;
             "X1_DEFSPA1", "X1_DEFENG1", "X1_CNT01"  , "X1_VAR02"  , "X1_DEF02"  , "X1_DEFSPA2", "X1_DEFENG2", ;
             "X1_CNT02"  , "X1_VAR03"  , "X1_DEF03"  , "X1_DEFSPA3", "X1_DEFENG3", "X1_CNT03"  , "X1_VAR04"  , ;
             "X1_DEF04"  , "X1_DEFSPA4", "X1_DEFENG4", "X1_CNT04"  , "X1_VAR05"  , "X1_DEF05"  , "X1_DEFSPA5", ;
             "X1_DEFENG5", "X1_CNT05"  , "X1_F3"     , "X1_PYME"   , "X1_GRPSXG" , "X1_HELP"   , "X1_PICTURE", ;
             "X1_IDFIL"   }

//
// Perguntas cPerg
//
aAdd( aDados, {cPerg,'01','Do Codigo ?','¿De Codigo ?','From Code ?','mv_ch1','C',10,0,0,'G','','mv_basede','','','','','','','','','','','','','','','','','','','','','','','','','SN1','S','','','',''} )
aAdd( aDados, {cPerg,'02','Ate Codigo ?','¿A Codigo ?','To Code ?','mv_ch2','C',10,0,0,'G','','mv_baseate','','','','','','','','','','','','','','','','','','','','','','','','','SN1','S','','','',''} )
aAdd( aDados, {cPerg,'03','Do Item ?','¿De Item ?','From Item ?','mv_ch3','C',4,0,0,'G','','mv_itemde','','','','','','','','','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'04','Até Item ?','¿A Item ?','To Item ?','mv_ch4','C',4,0,0,'G','','mv_itemate','','','','ZZZZ','','','','','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'05','Do Centro de Custo ?','¿De Centro de Costo ?','From Cost Center ?','mv_ch5','C',15,0,0,'G','','mv_custode','','','','','','','','','','','','','','','','','','','','','','','','','CTT','S','004','','',''} )
aAdd( aDados, {cPerg,'06','Ate Centro Custo ?','¿A Centro de Costo ?','To Cost Center ?','mv_ch6','C',15,0,0,'G','','mv_custoate','','','','ZZZZZZZZZ','','','','','','','','','','','','','','','','','','','','','CTT','S','004','','',''} )
aAdd( aDados, {cPerg,'07','Da Conta Contabil ?','¿De Cuenta Contable ?','From Ledger Account ?','mv_ch7','C',20,0,0,'G','','mv_contabde','','','','','','','','','','','','','','','','','','','','','','','','','CT1','S','003','','',''} )
aAdd( aDados, {cPerg,'08','Ate Conta Contabil ?','¿A Cuenta Contable ?','To Ledger Account ?','mv_ch8','C',20,0,0,'G','','mv_contabate','','','','ZZZZZZZZZZZZZZZ','','','','','','','','','','','','','','','','','','','','','CT1','S','003','','',''} )
aAdd( aDados, {cPerg,'09','Moeda 1 ?','¿Moneda 1 ?','Currency 1 ?','mv_ch9','N',1,0,1,'C','','mv_par05','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'10','Moeda 2 ?','¿Moneda 2 ?','Currency 2 ?','mv_cha','N',1,0,2,'C','','mv_par06','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'11','Moeda 3 ?','¿Moneda 3 ?','Currency 3 ?','mv_chb','N',1,0,2,'C','','mv_par07','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'12','Moeda 4 ?','¿Moneda 4 ?','Currency 4 ?','mv_chc','N',1,0,2,'C','','mv_par08','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'13','Moeda 5 ?','¿Moneda 5 ?','Currency 5 ?','mv_chd','N',1,0,2,'C','','mv_par09','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'14','Considera Baixados ?','¿Considera dados de baja ?','Consider Posted ?','mv_che','N',1,0,1,'C','','mv_par14','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'15','Total p/codigo base ?','¿Total p/codigo base ?','Total for base code ?','mv_chf','N',1,0,2,'C','','mv_par15','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'16','Substuir Item Ctb. na Coluna ?','¿Reempl.Item Cont. en Columna','Repl.Acc.Item in Column ?','MV_CHG','N',1,0,5,'C','','mv_par16','Conta Correcao','Cta. correccion','Correct. acct.','','','Cta Desp. Depre','Cta Gast. Depr.','Depr.Exp.Acct.','','','Cta Depr. Acum.','Cta Depr. Acum.','Accr.Depr.Acct.','','','Cta Corr.Deprec','Cta Corr. Depr.','Depr.Corr.Acct.','','','Nenhuma','Ninguna','None','','','S','','','',''} )
aAdd( aDados, {cPerg,'17','Substuir Cl.Valor na Coluna ?','¿Reempl.Cl.Valor en Columna ?','Repl.Value Ct. in Column ?','MV_CHH','N',1,0,5,'C','','mv_par17','Conta Correcao','Cta. correccion','Correct. acct.','','','Cta Desp. Depre','Cta Gast. Depr.','Depr.Exp.Acct.','','','Cta Depr. Acum.','Cta Depr. Acum.','Accr.Depr.Acct.','','','Cta Corr.Deprec','Cta Corr. Depr.','Depr.Corr.Acct','','','Nenhuma','Ninguna','None','','','S','','','',''} )
aAdd( aDados, {cPerg,'18','Cons Filiais Abaixo ?','¿Cons.suc.siguientes ?','Consider branches below ?','MV_CHI','N',1,0,2,'C','','mv_par18','Sim','Si','Yes','','','Nao','No','No','','','','','','','','','','','','','','','','','','S','','','',''} )
aAdd( aDados, {cPerg,'19','Filial De ?','¿De Sucursal ?','From Branch ?','MV_CHJ','C',2,0,0,'G','','mv_par19','','','','','','','','','','','','','','','','','','','','','','','','','SM0_01','S','033','','',''} )
aAdd( aDados, {cPerg,'20','Filial Ate ?','¿A Sucursal ?','To Branch ?','MV_CHK','C',2,0,0,'G','','mv_par20','','','','ZZ','','','','','','','','','','','','','','','','','','','','','SM0_01','S','033','','',''} )
aAdd( aDados, {cPerg,'21','Sit. Penhora ?','¿Sit. Empeno ?','Pledge Status ?','MV_CHL','C',5,0,0,'G','','mv_par21','','','','0123','','','','','','','','','','','','','','','','','','','','','','S','','','',''} )


//
// Atualizando dicionário
//
dbSelectArea( "SX1" )
SX1->( dbSetOrder( 1 ) )

For nI := 1 To Len( aDados )
	If !SX1->( dbSeek( PadR( aDados[nI][1], nTam1 ) + PadR( aDados[nI][2], nTam2 ) ) )
		RecLock( "SX1", .T. )
		For nJ := 1 To Len( aDados[nI] )
			If aScan( aStruDic, { |aX| PadR( aX[1], 10 ) == PadR( aEstrut[nJ], 10 ) } ) > 0
				SX1->( FieldPut( FieldPos( aEstrut[nJ] ), aDados[nI][nJ] ) )
			EndIf
		Next nJ
		MsUnLock()
	EndIf
Next nI

// Atualiza Helps
AtuSX1Hlp()

RestArea( aAreaDic )
RestArea( aArea )

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Programa ³ AtuSX1Hlpº Autor ³ TOTVS Protheus     º Data ³  22/12/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Descricao³ Funcao de processamento da gravacao dos Helps de Perguntas ³±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³ Uso      ³ AtuSX1Hlp  - Gerado por EXPORDIC / Upd. V.4.10.5 EFS       ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AtuSX1Hlp()
Local aHlpPor   := {}
Local aHlpEng   := {}
Local aHlpSpa   := {}


//
// Helps Perguntas AFR030
//
aHlpPor := {}
aAdd( aHlpPor, 'Informe o bem a partir do qual se deseja' )
aAdd( aHlpPor, 'imprimir o relatório. Caso queira' )
aAdd( aHlpPor, 'imprimir todos os bens, deixe esse campo' )
aAdd( aHlpPor, 'em branco.' )
aAdd( aHlpPor, 'Utilize <F3> para escolher.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF401.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o bem final até o qual se deseja' )
aAdd( aHlpPor, 'imprimir o relatório. Caso queira' )
aAdd( aHlpPor, 'imprimir todos os bens, preencha esse' )
aAdd( aHlpPor, "campo com 'ZZZZZZZZZZ'." )
aAdd( aHlpPor, 'Utilize <F3> para escolher.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF402.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o item partir do qual se deseja' )
aAdd( aHlpPor, 'imprimir o relatório. Caso queira' )
aAdd( aHlpPor, 'imprimir todos os itens, deixe esse' )
aAdd( aHlpPor, 'campo em branco.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF403.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o item final até o qual se' )
aAdd( aHlpPor, 'deseja imprimir o relatório. Caso queira' )
aAdd( aHlpPor, 'imprimir todos os itens, preencha esse' )
aAdd( aHlpPor, "campo com 'ZZZZ'." )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF404.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o centro de custo inicial a' )
aAdd( aHlpPor, 'partir do qual se deseja imprimir o' )
aAdd( aHlpPor, 'relatório. Caso queira imprimir todos os' )
aAdd( aHlpPor, 'centro de custos, deixe esse campo em' )
aAdd( aHlpPor, 'branco.' )
aAdd( aHlpPor, 'Utilize <F3> para escolher.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF405.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o centro de custo final até o' )
aAdd( aHlpPor, 'qual se deseja imprimir o relatório.' )
aAdd( aHlpPor, 'Caso queira imprimir todos os centro de' )
aAdd( aHlpPor, 'custos, preencha esse campo com' )
aAdd( aHlpPor, "'ZZZZZZZZZ'." )
aAdd( aHlpPor, 'Utilize <F3> para escolher.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF406.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe a conta inicial a partir da qual' )
aAdd( aHlpPor, 'se deseja imprimir o relatório. Caso' )
aAdd( aHlpPor, 'queira imprimir todas as contas, deixe' )
aAdd( aHlpPor, 'esse campo em branco.' )
aAdd( aHlpPor, 'Utilize <F3> para escolher.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF407.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe a conta final até qual se deseja' )
aAdd( aHlpPor, 'imprimir o relatório. Caso queira' )
aAdd( aHlpPor, 'imprimir todas as contas preencha com' )
aAdd( aHlpPor, "'ZZZZZZZZZZZZZZZZZZZZ'." )
aAdd( aHlpPor, 'Utilize <F3> para escolher.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF408.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Identifica se deve ser listados valores' )
aAdd( aHlpPor, 'referentes a moeda 1.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF409.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Identifica se deve ser listados valores' )
aAdd( aHlpPor, 'referentes a moeda 2.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF410.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Identifica se deve ser listados valores' )
aAdd( aHlpPor, 'referentes a moeda 3.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF411.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Identifica se deve ser listados valores' )
aAdd( aHlpPor, 'referentes a moeda 4.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF412.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Identifica se deve ser listados valores' )
aAdd( aHlpPor, 'referentes a moeda 5.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF413.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Caso a pergunta seja indicada como Sim' )
aAdd( aHlpPor, 'os bens já baixados (N3_BAIXA diferente' )
aAdd( aHlpPor, "de '0') serão listados independente de" )
aAdd( aHlpPor, 'qual data o bem foi baixado.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF414.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Caso pergunta seja indicada como Sim,' )
aAdd( aHlpPor, 'será apresentado total por Código Base' )
aAdd( aHlpPor, '(Somente se o relatório for impresso por' )
aAdd( aHlpPor, 'ordem de Bem).' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF415.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o código inicial.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF416.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Selecione se vai substituir a classe' )
aAdd( aHlpPor, 'valor na coluna' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF417.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, "Selecione neste parâmetro a opção 'Sim'" )
aAdd( aHlpPor, 'para que o sistema considere as filiais' )
aAdd( aHlpPor, 'a serem informadas nos parâmetros' )
aAdd( aHlpPor, "seguintes, ou selecione 'Não' em caso" )
aAdd( aHlpPor, 'contrário.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF418.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o código inicial do intervalo de' )
aAdd( aHlpPor, 'filiais da empresa a serem consideradas' )
aAdd( aHlpPor, 'pelo sistema, quando o parâmetro' )
aAdd( aHlpPor, "anterior 'Considera Filiais Abaixo?'" )
aAdd( aHlpPor, 'estiver ' + CRLF + 'Sim' + CRLF + '' + CRLF+CRLF  + '.' )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF419.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe o código final do intervalo de' )
aAdd( aHlpPor, 'filiais da empresa a serem consideradas' )
aAdd( aHlpPor, 'pelo sistema, quando o parâmetro' )
aAdd( aHlpPor, "anterior 'Considera Filiais Abaixo?'" )
aAdd( aHlpPor, "estiver 'Sim'." )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF420.", aHlpPor, aHlpEng, aHlpSpa, .T. )

aHlpPor := {}
aAdd( aHlpPor, 'Informe quais as situações de penhora' )
aAdd( aHlpPor, 'serão consideradas no relatório.' )
aAdd( aHlpPor, '0-Normal, 1-Em Garantia, 2-Em Penhora e' )
aAdd( aHlpPor, '3-Penhorado. Caso não queira fazer' )
aAdd( aHlpPor, 'nenhuma distinção de penhora, mantenha o' )
aAdd( aHlpPor, "campo preenchido com '0123'." )
aHlpEng := {}
aHlpSpa := {}

PutHelp( "P.SIATF421.", aHlpPor, aHlpEng, aHlpSpa, .T. )

Return NIL