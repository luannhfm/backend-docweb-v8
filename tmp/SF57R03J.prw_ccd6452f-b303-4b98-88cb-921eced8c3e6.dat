#Include 'Protheus.ch'

/*/{Protheus.doc} SF57R03J
Relatorio PCO - Rateio da Folha
Empregados por Lotação

@author 	Jose Leite de Barros Neto
@since 	10/09/2014
@version 	1.0

@return Nil, Nulo

/*/
User Function SF57R03J()

	Local _lRet := .T.
	
	Private _cPerg 	:= "SF57R03J"
		
	//Alias	
	Private _cTmp		:= GetNextAlias()
	
	Private cCadastro	:= "Impressão do Relatorio PCO - Empregados por Lotação"
	Private aSays		:= {}
	Private aButtons	:= {}
	Private nOpca 		:= 0
	Private _cCCAuth	:= ""
	
	AjustaSx1(_cPerg)
	
	If .Not. Pergunte(_cPerg,.T.)
		Return( Nil )
	EndIf
	
	AADD(aSays,"Este programa irá realizar a Impressão do Relatório PCO - Rateio da Folha" )
	AADD(aSays,"Empregados por Lotação." )

	AADD(aButtons, { 5,.T.,{|| Pergunte(_cPerg,.T. )}})
	AADD(aButtons, { 1,.T.,{|o| nOpca := 1,FechaBatch()}})
	AADD(aButtons, { 2,.T.,{|o| FechaBatch() }} )

	FormBatch( cCadastro, aSays, aButtons )

	If nOpca == 1
		
		_cCCAuth := U_SF57E01J(mv_par01)
			
		If .Not. Empty(_cCCAuth)
			
			//Gera Excel
			Processa({|| FGeraExcel()})
			
		Endif
	
	EndIf
Return( Nil )

/** {Protheus.doc} FGeraExcel
Funcao para que gera o Excel

@param: 	<Nil>
@author 	Jose Leite de Barros Neto
@since 	10/09/2014
@Uso: 		SFIEMT
*/
Static Function FGeraExcel()
	
	Local oExcel 		:= FWMSEXCEL():New()
	Local _cFilial		:= AllTrim(Posicione("SM0",1,FWGrpCompany()+MV_PAR01,"M0_FILIAL"))
	Local _cQuery 		:= ""
	Local _cPlanilha 	:= "Empregados por Lotacao"
	Local _cTitulo		:= "Empregados por Lotacao - " + _cFilial
	Local _cCodFil		:= ""
	Local _cCodCus 		:= ""
	Local 	_cDesCus		:= ""
	Local 	_cMatr			:= ""
	Local 	_cNome 		:= "" 
	Local 	_cCargo 		:= ""
	Local 	_cDCargo		:= ""
	Local 	_dDtAdmi		:= ""
	Local 	_cCodCR 		:= ""
	Local 	_cDesCR 		:= "" 
	Local	_cDesCR 		:= ""
	Local _nRegs			:= 0
	Local 	_nPerc			:= 0
		
	_cQuery := " SELECT	"
	_cQuery += "  ZDA_FILIAL, ZDA_CTCUST, ZDA_ITCONT, ZDA_FUNCIO, ZDA_DFUNCI, ZDA_RATEIO, ZDA_PRCRAT, SUM(ZDA_VALOR) ZDA_VALOR "
	_cQuery += " FROM " + RetSqlName("ZDA")
	_cQuery += " WHERE ZDA_FILIAL 	= '"+mv_par01+"' 				"
	_cQuery += " AND ZDA_CODIGO  	= '"+mv_par02+"' 				"
	_cQuery += " AND ZDA_VERSAO    	= '"+mv_par03+"'				"
	_cQuery += " AND ZDA_TIPO 		= '3'								"	
	_cQuery += " AND ZDA_CTCUST		IN (" + _cCCAuth + ")			"
	_cQuery += " AND D_E_L_E_T_ <> '*'									"
	_cQuery += " GROUP BY ZDA_FILIAL, ZDA_ITCONT, ZDA_CTCUST, ZDA_FUNCIO, ZDA_DFUNCI, ZDA_RATEIO, ZDA_PRCRAT	"
	_cQuery += " ORDER BY ZDA_FILIAL, ZDA_FUNCIO, ZDA_DFUNCI,ZDA_ITCONT,  ZDA_CTCUST, ZDA_RATEIO, ZDA_PRCRAT 	"
	
	_cQuery := ChangeQuery( _cQuery )

	dbUseArea( .T., "TOPCONN", TcGenQry(,,_cQuery), _cTmp, .T., .T. )
	
	If (_cTmp)->( Eof() )
		Alert( "Não há dados para emissão do relatorio!" )
		(_cTmp)->( dbCloseArea() )
		Return( Nil )
	Else
		While .Not. (_cTmp)->( EOF() )
			_nRegs++
			(_cTmp)->( DbSkip() )
		End
	EndIf
	
	ProcRegua(_nRegs)
	
	(_cTmp)->( DbGoTop() )
	
	_cCodFil := (_cTmp)->( ZDA_FILIAL )
	
	oExcel:AddworkSheet(_cPlanilha)
	oExcel:AddTable(_cPlanilha,_cTitulo)
	
	oExcel:AddColumn(_cPlanilha,_cTitulo,"Cod UO"		,1,1) 
	oExcel:AddColumn(_cPlanilha,_cTitulo,"UO"			,1,1) 
	oExcel:AddColumn(_cPlanilha,_cTitulo,"Matrícula"	,1,1) 
	oExcel:AddColumn(_cPlanilha,_cTitulo,"Funcionário",1,1) 
	oExcel:AddColumn(_cPlanilha,_cTitulo,"Cargo"		,1,1) 
	oExcel:AddColumn(_cPlanilha,_cTitulo,"Admitido"	,1,1) 
	oExcel:AddColumn(_cPlanilha,_cTitulo,"Cod CR"		,1,1)
	oExcel:AddColumn(_cPlanilha,_cTitulo,"CR"			,1,1)
	oExcel:AddColumn(_cPlanilha,_cTitulo,"%"				,1,2)
	
	While .Not. (_cTmp)->( EOF() )
		
		IncProc("Processando...")
		
		_cCodCus 	:= (_cTmp)->( ZDA_CTCUST )
		_cDesCus	:= AllTrim(Posicione("CTT",1,xFilial("CTT")+_cCodCus,"CTT_DESC01"))
		_cMatr		:= (_cTmp)->( ZDA_FUNCIO )
		_cNome 	:= (_cTmp)->( ZDA_DFUNCI ) 
		_cCargo 	:= Posicione("SRA",1,_cCodFil+_cMatr,"RA_CODFUNC")
		_cDCargo	:= AllTrim(Posicione("SRJ",1,xFilial("SRJ")+_cCargo,"RJ_DESC"))
		_dDtAdmi	:= DtoC(Posicione("SRA",1,_cCodFil+_cMatr,"RA_ADMISSA"))
		_cCodCR 	:= (_cTmp)->( ZDA_ITCONT )
		_cDesCR 	:= AllTrim(Posicione("CTD",1,xFilial("CTD")+_cCodCR,"CTD_DESC01")) 
			
		If Empty(_cDesCR)
			_cDesCR := AllTrim(Posicione("ZZX",1,xFilial("ZZX")+_cCodCus+_cCodCR,"ZZX_DITEM"))
		EndIf
			
		_nPerc		:= (_cTmp)->( ZDA_PRCRAT )
		
		If _nPerc == 0
			_nPerc	 := 100
		EndIf
		
		oExcel:AddRow(_cPlanilha,_cTitulo,{_cCodCus, _cDesCus, _cMatr, _cNome, _cDCargo, _dDtAdmi, _cCodCR, _cDesCR, _nPerc})
		
		(_cTmp)->( DbSkip() )
	End
	
	oExcel:Activate()
	
	cPlaNew := Upper(cGetFile('Arquivos XLS (*.xls) |*.xls|', 'Salvar Planilha Como',,'C:\UTIL\',.T.,nOR( GETF_LOCALHARD, GETF_LOCALFLOPPY, GETF_RETDIRECTORY ),.F.))
	
	If .Not. Empty(cPlaNew)
		oExcel:GetXMLFile(cPlaNew+".xls")
		MsgInfo("O Arquivo foi salvo em: "+cPlaNew+".xls")
	EndIf

Return( Nil )

/** {Protheus.doc} AjustaSx1
Funcao para criacao das perguntas

@param: 	<Nil>
@author 	Jose Leite de Barros Neto
@since 	10/09/2014
@Uso: 		SFIEMT
*/
Static Function AjustaSx1()
	
	Local aHelp := {}

	AAdd(aHelp, {{"Informe a Filial. Ex.: 02MT0001"						}, {""}, {""}})
	AAdd(aHelp, {{"Informe o Codigo do Orçamento." 						}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Versão do Orçamento." 						}, {""}, {""}})
	
	//????????????????????????????????
	//?MV_PAR01  Filial              ?
	//?MV_PAR02  Codigo do Orcamento ?
	//?MV_PAR03  Versao do Orcamento ?
	//????????????????????????????????
	
	u_SFPUTSX1( _cPerg, "01","Filial:		","","","mv_ch1","C",08								,0,0,"G","","SM0"	,"","","mv_par01"		,""			,"","","",""			,"","","","","","","","","","","",aHelp[1,1],aHelp[1,2],aHelp[1,3],"")
	u_SFPUTSX1( _cPerg, "02","Codigo:		","","","mv_ch2","C",TamSX3("ZDA_CODIGO")[1]	,0,0,"G","","ZDA"	,"","","mv_par02"		,""			,"","","",""			,"","","","","","","","","","","",aHelp[2,1],aHelp[2,2],aHelp[2,3],"")
	u_SFPUTSX1( _cPerg, "03","Versao:		","","","mv_ch3","C",TamSX3("ZDA_VERSAO")[1]	,0,0,"G","",""		,"","","mv_par03"		,""			,"","","",""			,"","","","","","","","","","","",aHelp[3,1],aHelp[3,2],aHelp[3,3],"")

Return( Nil )