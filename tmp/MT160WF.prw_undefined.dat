#Include "Protheus.ch"
#Include "Topconn.ch"
#Include "Rwmake.ch"

/*/{Protheus.doc} MT160WF
	Após a gravação dos pedidos de compras pela analise da cotação e antes dos eventos de contabilização, utilizado 
para os processos de workflow posiciona a tabela SC8 e passa como parametro o numero da cotação.                    
	Trativa da 'Unidade de Aprovação' - Quando um gestor apenas tiver permissão de aprovação em uma dada filial 
através do campo AL_XUNIDAP, o registro de alçada na SCR não deverá ser gerado em outras filiais.
@author Peder Munksgaard (Do.it Sistemas)
@since 15/10/2020
@return Nil
@type function
@history 07/08/2014, -, Carregar a data da necessidade oriunda da solicitação de compras (C1_DATPRF) para os respectivos campos das cotações (C8_DATPRF) e pedido de compras (C7_DATPRF).
@history 07/08/2014, -, Exibida mensagem ao fim da analise com os números da solicitação de compras e cotação de origem bem como o número do pedido de compras gerado.
@history 30/09/2014, -, Removida a variável _cAlias da função principal devido a error_log apresentado em alguns casos. Passou a ser utilizado o alias TMP à fim de sanar a inconsistência.
@history 30/09/2014, -, Removida a chamada: U_CWKFA003({_cCodigo,_cCodFil},TMP->C8_NUMPED) e colocado no lugar a chamada: StaticCall(CWKFA003,_WFSendPC,TMP->C8_FILENT,TMP->C8_NUMPED)
@history 15/10/2020, Franklin de Brito de Oliveira, Adicionado verificação de preenchimento nos campos C8_NUMPED e C8_ITEMPED.
@history 26/01/2021, Franklin de Brito de Oliveira, Removido mensagem informativa da geração de pedidos.
/*/
User Function MT160WF()
Local _cFil    := SC8->C8_FILIAL  	
Local _cNumCot := SC8->C8_NUM
Local _aArea   := GetArea()
Local _aAreaC7 := SC7->(GetArea())
Local _aAreaCE := SCE->(GetArea())
Local _aAreaC1 := SC1->(GetArea())
Local _cQry    := ""
Local _cCodigo := ""
Local _cCodFil := ""
Local _cCotKey := SC8->(C8_FILIAL+C8_NUM)

	If !Empty(SC8->C8_NUMPED ) .And. !Empty(SC8->C8_ITEMPED)
	/*
	* Inicio da trativa de 'Unidade de Aprovação' excluindo os registros de 
	* alçadas gerados para aprovadores que possuem o campo AL_XUNIDAP preenchido
	* diferentes do campo CR_FILIAL.
	*/   
	   
	_cQry := "SELECT DISTINCT C8_FILENT, C8_NUMPED FROM " + RetSqlName("SC8")  + CRLF
	_cQry += "WHERE D_E_L_E_T_ <> '*'"                                         + CRLF
	_cQry += "AND   C8_FILIAL   = '" + _cFil + "'"                             + CRLF
	_cQry += "AND   C8_NUM      = '" + _cNumCot + "'"                          + CRLF
	_cQry += "GROUP BY C8_FILENT, C8_NUMPED"                                   + CRLF
	    
	If Select("TMP") > 0
		TMP->(dbCloseArea())
	Endif
	   
	_cQry := ChangeQuery(_cQry)
	   
	TcQuery _cQry Alias "TMP" New
	   
	While TMP->(!Eof())
	   
		Processa({|| _fAceAlc(TMP->C8_FILENT,TMP->C8_NUMPED, _cFil)}, "Tratando unidade de aprovação")
		    
		_cCodigo := cEmpAnt
		_cCodFil := Posicione("SM0",1,cEmpAnt+TMP->C8_FILENT,"M0_CODFIL")
		  
		/*
		* Substituição da chamada de CWKFA003 pela chamada _WFSendPC (função estática do mesmo fonte)
		* devido a error_log exibido para alguns usuários devido a uma chamada de prepare environment
		* realizada.
		*/
	  
		//U_CWKFA003({_cCodigo,_cCodFil},TMP->C8_NUMPED)
		_WFSendPC(_cCodFil,TMP->C8_NUMPED)
	                  
		TMP->(dbSkip())   
	      
		End
	
		/* Fim da tratativa de 'Unidade de Aprovação'. */
	
		/*
		* Inicio da trativa para alterar a 'Data da Necessidade' 
		* buscando a informação de C1_DATPRF e levando para C8_DATPRF,
		* C7_DATPRF e CE_ENTREGA.
		*/
	   
	dbSelectArea("SC8")
	SC8->(dbSetOrder(1))
	If SC8->(dbSeek(SC8->(C8_FILIAL+C8_NUM)))
	
		While SC8->(!Eof()) .And. SC8->(C8_FILIAL+C8_NUM) == _cCotKey
	
			dbSelectArea("SCE")
			SCE->(dbSetOrder(1))
			If SCE->(dbSeek(SC8->(C8_FILIAL+C8_NUM+C8_ITEM)))
	
				dbSelectArea("SC1")
				SC1->(dbSetOrder(1))
				If SC1->(dbSeek(SC8->(C8_FILIAL+C8_NUMSC+C8_ITEMSC)))
					RecLock("SCE",.F.)
					Replace CE_ENTREGA With SC1->C1_DATPRF
					SCE->(MsUnlock())
	
				Endif
	
			Endif
	 
			dbSelectArea("SC7")
			SC7->(dbSetOrder(1))
			If SC7->(dbSeek(SC8->(C8_FILENT+C8_NUMPED+C8_ITEMPED)))
	
				RecLock("SC7",.F.)
				Replace C7_DATPRF With SC1->C1_DATPRF
				SC7->(MsUnlock())
	    
			Endif
	 
			RecLock("SC8",.F.)
			Replace C8_DATPRF With SC1->C1_DATPRF
			SC8->(MsUnlock())
	         
			SC8->(dbSkip())
	                 
		End
	      
	Endif
	   
	/* Fim da tratativa da 'Data da Necessidade' */
	   
	/*
	* Exibição de mensagem com as informações da 'Solicitação de Compras'
	* de origem, 'Cotação' analisada e 'Pedido de Compras' gerado.
	*/
	/*      
	If !IsBlind()
	   
		_cQry := "SELECT DISTINCT C8_FILIAL, C8_NUM, C8_NUMPED, C8_NUMSC, C8_FILENT FROM " + RetSqlName("SC8")   + CRLF
		_cQry += "WHERE  C8_FILIAL   = '" + _cFil    + "'"                                                       + CRLF
		_cQry += "AND    C8_NUM      = '" + _cNumCot + "'"                                                       + CRLF
		_cQry += "AND    C8_NUMPED  <> '" + Replicate('X',TamSX3("C8_NUMPED")[1])   + "'"                        + CRLF
		_cQry += "AND    C8_ITEMPED <> '" + Replicate('X',TamSX3("C8_ITEMPED")[1])  + "'"                        + CRLF
		_cQry += "AND    D_E_L_E_T_ <> '*'"                                                                      + CRLF 
		_cQry += "GROUP BY C8_FILIAL, C8_NUM, C8_NUMPED, C8_NUMSC, C8_FILENT"                                    + CRLF  
	
		If Select("TMP") > 0
			TMP->(dbCloseArea())
		Endif
	  
		_cQry := ChangeQuery(_cQry)
	  
		TcQuery _cQry Alias "TMP" New
	  
		While TMP->(!Eof())       
	     
			_cFilEnt := Posicione("SM0",1,cEmpAnt+TMP->C8_FILENT,"M0_FILIAL")
	       
			_cMsg := " Prezado(a) " + Alltrim(cUserName)                                                + CRLF        
			_cMsg += CRLF
			_cMsg += " Foi gerado o Pedido de Compras número: "       + Alltrim(TMP->C8_NUMPED)         + CRLF               
			_cMsg += " a partir da Cotação de número: "               + Alltrim(TMP->C8_NUM)            + CRLF          
			_cMsg += " e a partir da Solicitação de Compras número: " + Alltrim(TMP->C8_NUMSC)          + CRLF
			_cMsg += CRLF
			_cMsg += "Na filial : "                                   + Alltrim(_cFilEnt)               + CRLF
	
			MsgInfo(OemToAnsi(_cMsg),"[MT160WF]")
	         
			TMP->(dbSkip())
	                             
		End
	                    
	Endif   
	*/   
	/* Fim do trecho para exibição de mensagem */
	EndIf
	RestArea(_aAreaC1)
	RestArea(_aAreaC7)
	RestArea(_aAreaCE)
	RestArea(_aArea)
Return NiL

Static Function _fAceAlc(_cFil, _cNumPed, _cFilOrig)

 Local _aArea   := GetArea()
 Local _cQry    := ""
 Local _cAlias  := GetNextAlias()
 Local _cSuper  := GetNewPar( "MV_XSUPER", " ")

	DbSelectArea("SC7")
	SC7->( DbSetOrder(1) )
	
	If SC7->( DbSeek(_cFil + _cNumPed) )
		_cQry := "SELECT SCR.CR_FILIAL,	" + CRLF
		_cQry += "	SCR.CR_TIPO,		" + CRLF
		_cQry += "	SCR.CR_NUM,			" + CRLF
		_cQry += "	SCR.CR_USER			" + CRLF
		_cQry += "FROM " + RetSqlName("SC7") + " SC7			" + CRLF
		_cQry += "INNER JOIN " + RetSqlName("SAL") + " SAL		" + CRLF
		_cQry += "ON SAL.D_E_L_E_T_ = ' '						" + CRLF	
		_cQry += "AND SAL.AL_FILIAL = '" + xFilial("SAL") + "'	" + CRLF
		_cQry += "AND SAL.AL_COD    = SC7.C7_APROV				" + CRLF
		_cQry += "INNER JOIN " + RetSqlName("SCR") + " SCR		" + CRLF
		_cQry += "ON SCR.D_E_L_E_T_ = ' '						" + CRLF
		_cQry += "AND SCR.CR_FILIAL = SC7.C7_FILIAL				" + CRLF
		_cQry += "AND SCR.CR_NUM    = SC7.C7_NUM				" + CRLF
		_cQry += "AND SCR.CR_USER   = SAL.AL_USER				" + CRLF
		_cQry += "AND SCR.CR_TIPO   = 'PC'						" + CRLF
		_cQry += "INNER JOIN " + RetSqlName("ZDB") + " ZDB		" + CRLF
		_cQry += "ON ZDB.D_E_L_E_T_        = ' '				" + CRLF
		_cQry += "AND ZDB.ZDB_FILIAL       = '" + xFilial("ZDB") + "'	" + CRLF
		_cQry += "AND ZDB.ZDB_CODIGO       = SAL.AL_XUNIDAP				" + CRLF
		_cQry += "AND TRIM(ZDB.ZDB_UNIDAP) = SUBSTR(CR_FILIAL, 1, 4)	" + CRLF
		_cQry += "WHERE SC7.D_E_L_E_T_     = ' '						" + CRLF
		_cQry += "AND SC7.C7_FILIAL        = '" + SC7->C7_FILIAL +"'	" + CRLF
		_cQry += "AND SC7.C7_NUM           = '" + SC7->C7_NUM    +"'	" + CRLF
		
		If Select((_cAlias)) > 0
			(_cAlias)->( DbCloseArea() )
		EndIf
		
		MemoWrite( 'C:\Temp\' + funName() + "_" + procName() + ".TXT", _cQry)
		
		_cQry := ChangeQuery(_cQry)
		
		TcQuery _cQry Alias (_cAlias) New
		
		DbSelectArea("SCR")
		DbSetOrder(2)

		If SCR->( DbSeek((_cAlias)->CR_FILIAL + (_cAlias)->CR_TIPO + (_cAlias)->CR_NUM) )
			While .Not. SCR->( EoF() ) .And. ( SCR->(CR_FILIAL + CR_TIPO + CR_NUM) == (_cAlias)->(CR_FILIAL + CR_TIPO + CR_NUM) )
				If .Not. ( (_cAlias)->CR_USER == SCR->CR_USER ) .And. SCR->CR_APROV != _cSuper
					If RecLock("SCR", .F.)
						Replace SCR->CR_OBS With '[MT160WF]DEL.XUNIDAP.DIF.FILIAL'
						SCR->( DbDelete() )
						SCR->( MsUnLock() )
					EndIf
				EndIf
				
				Incproc()
				SCR->( DbSkip() )
			EndDo
		EndIf
	EndIf

	RestArea(_aArea)

Return NiL

Static Function _WFSendPC(_cFil,_cPC)

Local cQuery   := ""
Local _nTotal    := 0
Local _nTotICM   := 0
Local _nTotIPI   := 0
Local _nTotFRE   := 0
Local _nTotDSP   := 0
Local _nTotSEG   := 0
Local _cWfDir    := Iif ( Right(RTrim(GetNewPar("MV_WFDIRWF","workflow\")),1)=="\",;
                          GetNewPar("MV_WFDIRWF","workflow\"),;
                          GetNewPar("MV_WFDIRWF","workflow\") + "\" )
Local cHtmlModel := ""
Local cFuncName  := "_WFSendPC"
Local cWFHTTP    := Iif ( Right(RTrim(GetNewPar("MV_XWFHTTP","http://192.168.1.100:8089/workflow/")),1)=="/",;
                          GetNewPar("MV_XWFHTTP","http://192.168.1.100:8089/workflow/"),;
                          GetNewPar("MV_XWFHTTP","http://192.168.1.100:8089/workflow/") + "/" )
Local aDirHtml   := {}
Local cDirHtml   := "html\"
Local cDirPasta  := "aprovpc\"
Local cDescProd  := ""
Local i
Local cFunc		 := "_WFSendPC"
Local _cSituaca  := ""
Local lOracle	 := "ORACLE"$Upper(TCGetDB())
Local cUndNeg		:= FWUnitBusiness()
Local xNomEmp 	 := "" //Adic. Fabrica Doit SP - 06/03/2014

U_Console("Inicializando o Envio Pedido de Compra para aprovacao",cFunc)

Private oHTML
Private cItem,cCod,cDesc,cUM,nQtde,nUprc,nTot,nToler,cUComp,dEnt,cCC,cCCDesc
Private lProcesso := .f.
Private xNomFil := "" //Adic. Fabrica Doit SP - 06/03/2014

If Select("TSC7") > 0
	TSC7->(dbCloseArea())
Endif

cQuery := " select "
cQuery += "    C7_FILIAL ,C7_NUM ,min(C7_USER) as C7_USER ,min(C7_EMISSAO) as C7_EMISSAO ,min(C7_CONTATO) as C7_CONTATO "
cQuery += "   ,min(A2_NOME) as A2_NOME   ,min(A2_END) as A2_END  ,min(A2_BAIRRO) as A2_BAIRRO  ,min(A2_MUN) as A2_MUN  ,min(A2_EST) as A2_EST "
cQuery += "   ,min(E4_DESCRI) as E4_DESCRI, min(A2_CGC) as A2_CGC, min(C7_CC) as C7_CC, min(C7_NUMPR) as C7_NUMPR "
If lOracle
	cQuery += " 	,nvl(min(C1_XCODCOM),' ') as C1_XCODCOM ,nvl(min(Y1_USER),' ') as Y1_USER "
Else
	cQuery += " 	,isnull(min(C1_XCODCOM),' ') as C1_XCODCOM ,isnull(min(Y1_USER),' ') as Y1_USER "
EndIf                                                                                                 
cQuery += " from " + RetSqlName("SC7") + " SC7 "
cQuery += " inner join " + RetSqlName("SA2") + " SA2 on SA2.D_E_L_E_T_ = ' ' and A2_FILIAL = '" + xFilial("SA2") + "' and A2_COD    = C7_FORNECE and A2_LOJA = C7_LOJA "
cQuery += "  left join " + RetSqlName("SE4") + " SE4 on SE4.D_E_L_E_T_ = ' ' and E4_FILIAL = '" + xFilial("SE4") + "' and E4_CODIGO = C7_COND "
cQuery += "  left join " + RetSqlName("SC1") + " SC1 on SC1.D_E_L_E_T_ = ' ' and C1_FILIAL = C7_FILIAL  and C1_NUM    = C7_NUMSC and C1_ITEM   = C7_ITEMSC "
cQuery += "  left join " + RetSqlName("SY1") + " SY1 on SY1.D_E_L_E_T_ = ' ' and Y1_FILIAL = '" + xFilial("SY1") + "' and Y1_COD    = C1_XCODCOM "
cQuery += " where SC7.D_E_L_E_T_ = ' ' and C7_FILIAL  = '" + xFilial("SC7") + "' "
cQuery += "   and C7_WFE         = 'F' and C7_CONAPRO = 'B' "
// Condicao para identificar se trata-se de envio para primeiro ou proximo nivel
If _cPC == Nil	// primeiro nivel executado pelo Scheduler Protheus nao passa Num. do PC
  cQuery += " and C7_FILIAL      = '"+_cFil+"' "
Else			// proximos niveis executados via retorno
  cQuery += " and C7_FILIAL      = '"+_cFil+"' and C7_NUM = '"+_cPC+"' "
EndIf
cQuery += " group by C7_FILIAL ,C7_NUM "
cQuery += " order by C7_FILIAL ,C7_NUM "

TCQuery cQuery New Alias "TSC7"
TSC7->(dbGoTop())

While TSC7->(!Eof())

	U_Console("PC encontrado para processamento. Filial/PC no." + TSC7->C7_FILIAL+"/"+TSC7->C7_NUM,cFunc)
	lProcesso := .t.

	SCR->(dbSetOrder(1))
	SCR->(dbSeek(xFilial("SCR")+"PC"+TSC7->C7_NUM))

	_aLogApr  := {}

	While SCR->(!Eof()) .and. SCR->CR_FILIAL == XFilial("SCR") .and. Alltrim(SCR->CR_NUM) == Alltrim(TSC7->C7_NUM) .and. SCR->CR_TIPO == "PC"
		U_Console("Alcada encontrada para processamento(1). Filial/Num no." + SCR->CR_FILIAL+"/"+SCR->CR_NUM,cFunc)
		_cSituaca := ""
		IF SCR->CR_STATUS == "01"
			_cSituaca := OemToAnsi("Aguardando")
		ELSEIF SCR->CR_STATUS == "02"
			_cSituaca := OemToAnsi("Em Aprovacao")
		ELSEIF SCR->CR_STATUS == "03"
			_cSituaca := "Pedido Aprovado"
		ELSEIF SCR->CR_STATUS == "04"
			_cSituaca := "Pedido Bloqueado"
		ELSEIF SCR->CR_STATUS == "05"
			_cSituaca := OemToAnsi("Nivel Liberado ")
		ENDIF
		Aadd(_aLogApr,{SCR->CR_NIVEL,UsrFullName(SCR->CR_USER),_cSituaca,Dtoc(SCR->CR_DATALIB),SCR->CR_OBS})
		SCR->(dbSkip())
	Enddo

	SCR->( dbGoTop() )
	SCR->( dbSetOrder(1) )
	SCR->( dbSeek( xFilial("SCR") + "PC" + TSC7->C7_NUM ) )

	While SCR->(!Eof()) .and. SCR->CR_FILIAL == XFilial("SCR") .and. Alltrim(SCR->CR_NUM) == Alltrim(TSC7->C7_NUM) .and. SCR->CR_TIPO == "PC"
		U_Console("Alcada encontrada para processamento(2). Filial/Num no." + SCR->CR_FILIAL+"/"+SCR->CR_NUM,cFunc)

		IF SCR->CR_STATUS <> "02" // nivel 02 indica proxima que recebe e-mail
			SCR->(dbSkip())
			Loop
		ENDIF

		//Abre o HTML
		
		xNomEmp := U_retDesc("FILIAL", TSC7->C7_FILIAL) //Adic. Fabrica Doit SP - 06/03/2014		
		oProcess := TWFProcess():New( "PEDIDO", "Pedido de Compras" )
		oProcess:NewTask( "000001", _cWfDir+"aprovacaopc.htm" )  //Alterado o nome para não interferir na rotina existente em produção durante os testes - Fabrica Doit SP - 06/03/2014
		oProcess:cSubject := "Aprovação do Pedido de Compra " + TSC7->C7_NUM + " - " + xNomEmp //Alt. Fabrica Doit SP - 06/03/2014			
		oProcess:bReturn  := "U__fWFRetPC()"
		oProcess:UserSiga := TSC7->C7_USER
		oProcess:NewVersion(.T.)
		oHTML   := oProcess:oHTML

		oHtml:ValByName( "FILIAL"     , TSC7->C7_FILIAL )
		oHtml:ValByName( "EMPRESA"    , xNomFil )  //Adic. Fabrica Doit SP - 06/03/2014			
		oHtml:ValByName( "NUMPC"      , TSC7->C7_NUM )
		oHtml:ValByName( "c7_emissao" , Dtoc(StoD(TSC7->C7_EMISSAO)) )
		oHtml:ValByName( "a2_nome"    , TSC7->A2_NOME )
		oHtml:ValByName( "a2_end"     , TSC7->A2_END	)
		oHtml:ValByName( "a2_bairro"  , TSC7->A2_BAIRRO )
		oHtml:ValByName( "a2_mun"     , TSC7->A2_MUN )
		oHtml:ValByName( "a2_est"     , TSC7->A2_EST )
		oHtml:ValByName( "c7_user"    , Iif(Empty(TSC7->Y1_USER),UsrFullName(TSC7->C7_USER),UsrFullName(TSC7->Y1_USER)) )
		oHtml:ValByName( "CAPROV"     , SCR->CR_USER )
		oHtml:ValByName( "APROVADOR"  , UsrFullName(SCR->CR_USER) )
		oHtml:ValByName( "c7_contato" , TSC7->C7_CONTATO )
		oHtml:ValByName( "e4_descri"  , TSC7->E4_DESCRI )

		//Tratamento Exclusivo para a FIRJAN pois possui novos campos
		If Upper( AllTrim( Substr( TSC7->C7_FILIAL,3,2) ) ) == 'RJ'
			oHtml:ValByName( "a2_cgc"	, TSC7->A2_CGC )
			oHtml:ValByName( "c7_filial"	, TSC7->C7_FILIAL + " - " + U_retDesc("FILIAL", TSC7->C7_FILIAL) )
			oHtml:ValByName( "cc"        , TSC7->C7_CC )
			oHtml:ValByName( "desccc"	, Posicione("CTT", 1, xFilial("CTT") + TSC7->C7_CC, "CTT_DESC01") )
			oHtml:ValByName( "c7_numpr"	, TSC7->C7_NUMPR )
		Endif

		_nSubTot := 0
		_nFrete  := 0
		_nTotal  := 0

		SC7->(dbSetOrder(1))
		SC7->(dbSeek(xFilial("SC7")+Alltrim(TSC7->C7_NUM)))
		//ConOut(cFuncName+":: Processando PC Filial/No.: "+SC7->C7_FILIAL+"/"+SC7->C7_NUM)
		U_Console(cFuncName+":: Processando PC Filial/No.: "+SC7->C7_FILIAL+"/"+SC7->C7_NUM)        

		While !SC7->(Eof()) .and. SC7->C7_FILIAL == XFilial("SC7") .and. SC7->C7_NUM == Alltrim(TSC7->C7_NUM)

			//ConOut(cFuncName+":: Processando Item da PC Filial/No./Item: "+SC7->C7_FILIAL+"/"+SC7->C7_NUM+"/"+SC7->C7_ITEM)
			U_Console(cFuncName+":: Processando Item da PC Filial/No./Item: "+SC7->C7_FILIAL+"/"+SC7->C7_NUM+"/"+SC7->C7_ITEM)
			
			SB1->(dbSetOrder(1))
			SB1->(dbSeek(XFilial("SB1")+SC7->C7_PRODUTO))

			cDescProd  := Posicione("SB5",1,xFilial("SB5")+SB1->B1_COD,"B5_CEME")
			DbSelectArea("SB1")

			AAdd( (oHtml:ValByName( "prod.cItem"    )),SC7->C7_ITEM )
			AAdd( (oHtml:ValByName( "prod.cCod"     )),SC7->C7_PRODUTO )
			AAdd( (oHtml:ValByName( "prod.cDesc"    )),Iif(Empty(cDescProd),RTrim(SB1->B1_DESC),RTrim(SB1->B1_DESC) + " - " + RTrim(cDescProd)) ) // Cfme Solic.p/ Lucas Uchasky - Kley 20Mar2013
			// Comentado por Peder Munksgaard (Do.it Sistemas) em 02/09/2014
			//AAdd( (oHtml:ValByName( "prod.cNrSC"    )),SC7->C7_NUMSC )  //Adic. Fabrica Doit SP - 06/03/2014
			AAdd( (oHtml:ValByName( "prod.cUM"      )),SC7->C7_UM )
			AAdd( (oHtml:ValByName( "prod.nQuant"   )),TRANSFORM( SC7->C7_QUANT,'@E 999,999,999.99' ) )
			AAdd( (oHtml:ValByName( "prod.nVrUnit"  )),TRANSFORM( SC7->C7_PRECO,'@E 999,999,999.99' ) )
			AAdd( (oHtml:ValByName( "prod.nVrTotal" )),TRANSFORM( SC7->C7_TOTAL,'@E 999,999,999.99' ) )
			AAdd( (oHtml:ValByName( "prod.dEntrega" )),Dtoc(SC7->C7_DATPRF) )
			AAdd( (oHtml:ValByName( "prod.cObs" )),SC7->C7_OBS )
			WFSalvaID('SC7','SC7->C7_WFE', .T.)

			_nSubTot += SC7->C7_TOTAL
			_nFrete  += SC7->C7_VALFRE
			_nTotal  += SC7->(C7_TOTAL+C7_VALFRE)

			SC7->(DbSkip())
		Enddo

		oHtml:ValByName( "vlrtotal" , TRANSFORM( _nSubTot,'@E 999,999,999.99' ) )
		oHtml:ValByName( "vlrfrete" , TRANSFORM( _nFrete ,'@E 999,999,999.99' ) )
		oHtml:ValByName( "totgeral" , TRANSFORM( _nTotal ,'@E 999,999,999.99' ) )

		For i := 1 to Len(_aLogApr)
			AAdd( (oHtml:ValByName( "proc.nivel"   )),_aLogApr[i,1] )
			AAdd( (oHtml:ValByName( "proc.cApov"   )),_aLogApr[i,2] )
			AAdd( (oHtml:ValByName( "proc.cSit"    )),_aLogApr[i,3] )
			AAdd( (oHtml:ValByName( "proc.dDtLib"  )),_aLogApr[i,4] )
			AAdd( (oHtml:ValByName( "proc.cObs"    )),_aLogApr[i,5] )
		Next

		//oProcess:cTo := "APROVPC"
		oProcess:cTo := Nil

		// Verifica e cria, se necessario, o diretorio para gravacao do HTML
		aDirHtml   := Directory(_cWfDir+"emp"+cEmpAnt+"\*.*", "D",Nil,.T.)
		If aScan( aDirHtml, {|aDir| aDir[1] == Upper( Iif(Right(cDirHtml,1)=="\", Left(cDirHtml,Len(cDirHtml)-1), cDirHtml) ) } ) == 0
			If MakeDir(_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml)	 == 0
				//ConOut(cFuncName+":: Diretorio dos HTML's criado com sucesso. -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml )
				U_Console(cFuncName+":: Diretorio dos HTML's criado com sucesso. -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml)
			Else
				//ConOut(cFuncName+":: Erro na criacao do diretorio dos HTML's! -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml )
				U_Console(cFuncName+":: Erro na criacao do diretorio dos HTML's! -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml )
				cDirHtml := "temp\"
			EndIf
		EndIf

		// Verifica e cria, se necessario, a pasta especifica do Workflow para gravacao do HTML
		aDirHtml   := Directory(_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml+"*.*", "D",Nil,.T.)
		If aScan( aDirHtml, {|aDir| aDir[1] == Upper(Iif(Right(cDirPasta,1)=="\", Left(cDirPasta,Len(cDirPasta)-1), cDirPasta) ) } ) == 0
			If MakeDir(_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml+cDirPasta) == 0
				//ConOut(cFuncName+":: Diretorio de Pasta dos HTML's criado com sucesso. -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml+cDirPasta )
				U_Console(cFuncName+":: Diretorio de Pasta dos HTML's criado com sucesso. -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml+cDirPasta )
			Else
				//ConOut(cFuncName+":: Erro na criacao do diretorio dos HTML's! -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml+cDirPasta )
				U_Console(cFuncName+":: Erro na criacao do diretorio dos HTML's! -> "+_cWfDir+"emp"+cEmpAnt+"\"+cDirHtml+cDirPasta )
				cDirPasta := ""
			EndIf
		EndIf

		cDirHtml2  := "emp"+cEmpAnt+"\" + cDirHtml + cDirPasta
		cMailID    := oProcess:Start(_cWfDir+cDirHtml2,.T.)
		
		If File(_cWfDir+cDirHtml2+cMailID+".htm")
			//ConOut(cFuncName+":: Arquivo HTML copiado com sucesso: "+_cWfDir+cDirHtml2+cMailID+".htm" )
			U_Console(cFuncName+":: Arquivo HTML copiado com sucesso: "+_cWfDir+cDirHtml2+cMailID+".htm" )
			
			Reclock("SCR",.F.)
			SCR->CR_WF		:= "1" //--Enviado
			SCR->CR_WFID	:= cMailID  //-- Campo CR_WFID deve estar com tamanho 20
			SCR->(MSUnlock())
			
		Else
			//ConOut(cFuncName+":: ATENCAO! Arquivo HTML NAO copiado: "+_cWfDir+cDirHtml2+cMailID+".htm")
			U_Console(cFuncName+":: ATENCAO! Arquivo HTML NAO copiado: "+_cWfDir+cDirHtml2+cMailID+".htm")
		EndIf

		cHtmlModel := _cWfDir+"LinkPC.htm"
		cAssunto   := "Pedido de Compras Nr. " +TSC7->C7_NUM

		oProcess:NewTask(cAssunto, cHtmlModel)
		//ConOut(cFuncName+":: (INICIO|WFLINK)Processo: " + oProcess:fProcessID + " / Task: " + oProcess:fTaskID )
		U_Console(cFuncName+":: (INICIO|WFLINK)Processo: " + oProcess:fProcessID + " / Task: " + oProcess:fTaskID )
		oProcess:cSubject := cAssunto
		//oProcess:cTo := "gerson.soeltl@doitsistemas.com.br" //Alltrim(UsrRetMail( SCR->CR_USER ))
		oProcess:cTo := Alltrim(UsrRetMail( SCR->CR_USER ))
		U_Console(cFuncName+":: (INICIO|WFLINK)Email: " + oProcess:cTo)

		oProcess:ohtml:ValByName("CAPROVADOR",UsrRetname(SCR->CR_USER))
		
		//Adicionado após numero da SC a que filial a qual pertence. Por Walmir Junior em 14/11/2016.
		_cFilX := cFilAnt
		U_SF0205X(cEmpAnt,TSC7->C7_FILIAL)
		oProcess:ohtml:ValByName("CNUMPC",TSC7->C7_NUM + " | FILIAL: " + TSC7->C7_FILIAL + "-" + SM0->M0_FILIAL)
		U_SF0205X(cEmpAnt,_cFilX)

		oProcess:ohtml:ValByName("proc_link",StrTran(cWFHTTP+cDirHtml2+cMailID+".htm","\","/"))
		oProcess:Start()

		SCR->(dbSkip())
	Enddo
	TSC7->(dbSkip())
Enddo

TSC7->(dbCloseArea())

If !lProcesso
	//ConOut(cFuncName+":: Nao Houve Processamento (Envio)")
	U_Console(cFuncName+":: Nao Houve Processamento (Envio)")
Else
	//ConOut(cFuncName+":: Processamento (Envio) finalizado")
	U_Console(cFuncName+":: Processamento (Envio) finalizado")
EndIf

Return
