#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "APWIZARD.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "PARMTYPE.CH"     
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"  

#DEFINE CRLF chr(13)+chr(10)  
/*
----------------------------------------------------------------------------
{Protheus.doc}<SF735IX>     
  #CONTROLE_DN - FINALIZACAO DA REMESSA DE [CNE-PRODUTOS DOS CONTRATOS DE VENDA]                                              
   FINALIZA OK DA REMESSA: Para Remessa das [CNE-Produtos dos contratos de Venda]  
                                                                          
@author<Antonio Dantas> 
@since<01/03/2016>                                                        
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
----------------------------------------------------------------------------
*/
User Function SF735IX()

Local cEstat := U_SFGN001A(ProcName(0), "SF735IX")
Local _lReturn			:= .f. 
Local _cMensagem		:= ""
Local _cNamField		:= ""
Local _cNamField 		:= ""
Local _aExceptio		:= {}
Local _nCtaA 			:= 0
Local _cTitulo			:= "Finaliza OK a Remessa "
//-- 
Private _oDlgCNE		:= Nil 
Private _bCpo 			:= {|nField| Field(nField)}
Private _cJustif 		:= Space(100)
//-- Monta as Definicoes das Dimensoes da Tela 
Private _aSize			:= MsAdvSize()
Private _aInfo			:= {_aSize[1],_aSize[2],_aSize[3],_aSize[4],3,3}
Private _aObjects		:= { {100,70,.T.,.T.},{100,30,.T.,.T.} }
Private _APosObj		:= MsObjSize(_aInfo,_aObjects)
Private _APosGet		:= MsObjGetPos((_aSize[3]-_aSize[1]),315,{{004,024,240,270}})
//--
Private _cCasa 		:= ZCK->ZCK_CASA 
//-- Inicializa os Obejetos da interface 
SetPrvt("_oMemoOBJ","_oSayMsg","_oGetMsg","_oFontMsg","_oBoxSN")
//+------------------------------------------------------------------+
//| Valida a execucao da Devolucao                                   | 
//+------------------------------------------------------------------+
If ZCK->ZCK_STATUS != "V"		//-- V=Validada 
	Aviso(FunName()+"/"+ProcName(),"Remessa não esta VALIDADA. Remessa fora da condição para [FINALIZAÇÃO OK]!",{"OK"})
	Return _lReturn
Endif 
//+------------------------------------------------------------------+
//| Cria e Inicializa as Variaves PRIVATES que seram Utilizadas pela |
//| Funcao [EnChoice].                                               |
//+------------------------------------------------------------------+
_nCtaA := 0
For _nCtaA := 1 To ZCK->(FCount())
	_nPos		:= 0 
	_nPos 		:= Ascan( _aExceptio, {|X| UPPER(X) == UPPER(ZCK->(FieldName(_nCtaA))) } ) 	 
	If _nPos > 0 
		Loop 
	Endif 
	//-- Inicializa as Variaveis com o Conteudo encontrado no Registro Atual 
  	M->&(Eval(_bCpo,_nCtaA)) := ZCK->(FieldGet(_nCtaA))
Next _nCtaA
//-- Define a Fonte da Say do protocolo   
_oFontMsg	:= TFont():New( "MS Sans Serif",0,-12,,.t.,0,,400,.F.,.F.,,,,,, )
//+------------------------------------------------------------------+
//| Monta a Interfase (Tela) que sera apresentada ao usuario         | 
//+------------------------------------------------------------------+
DEFINE MSDIALOG _oDlgCNE TITLE _cTitulo FROM _aSize[7],_aSize[1] TO _aSize[6],_aSize[5] OF oMainWnd PIXEL
//-- Apresenta Informacoes de Remessa 
EnChoice("ZCK",,2,,,,,_APosObj[1],,3,,,,,,,,,.T.)
//-- Apresenta a mensagem da Justificativa
_oSayMsg 	:= TSay():New( _APosObj[2,1],_APosGet[1,1],{||"Protocolo:"	},_oDlgCNE,,_oFontMsg,.F.,.F.,.F.,.T.,CLR_BLUE,CLR_WHITE,030,008)
_oGetMsg 	:= TGet():New( _APosObj[2,1],_APosGet[1,2],{|u| If(PCount()>0,_cJustif:=u,_cJustif)},_oDlgCNE,200,008,"",/*Valid*/,CLR_BLACK,CLR_WHITE,,,,.T.,"",,,.F.,.F.,,.F.,.F.,"","_cJustif",,)
//-- 
ACTIVATE MSDIALOG _oDlgCNE ON INIT EnchoiceBar(_oDlgCNE,{|| _lReturn := fValida(_cJustif),Iif(_lReturn,_oDlgCNE:End(),"")},{||_oDlgCNE:End()})
Return _lReturn

/*
----------------------------------------------------------------------------
{Protheus.doc}<fValida>                                                   
  Grava o Protocolo da Validacao do Arquivo de Remessa
                                                                          
@author<Antonio Dantas> 
@since<01/03/2016>                                                        
@version<1.00>
@receive
<  _cJustif (C) - comentario da Validacao (Protocolo)  
>
@return<Nil>
@example<Nil>
@see<Nil>
----------------------------------------------------------------------------
*/
Static Function fValida(_cJustif)

Local cEstat := U_SFGN001A(ProcName(0), "SF735IX")
Local _lReturn 		:= .f. 
_lReturn := fMK_CNE()
If _lReturn 
	//-- Implementa o Historico
	_lReturn := u_fMarkRem("F",RTrim(_cJustif))
Endif 	
Return 	_lReturn

/*
----------------------------------------------------------------------------
{Protheus.doc}<fMK_CNE>                                                   
   Rotina marca como enviada as PRODUTOS DOS CONTRATOS DE VENDA incluidas 
   no ultimo Arquivo Remessa Gerado. 
																		   
@Author<Antonio Dantas>                                                   
@since<01/03/2016>                                                        
@version<Nil>                                                             
@Receive<Nil>                                                                   
@return
<    _lReturn (l) - (.t.) - Marcados OK; (.f.) - Nao Concluiu a Marcacao 
>                                                                
@example<Nil>
@see<Nil>
----------------------------------------------------------------------------
*/
Static Function fMK_CNE()

Local cEstat := U_SFGN001A(ProcName(0), "SF735IX")
Local _lReturn 		:= .f. 
Local _cIDREM		:= ""
Local _nCtaA 		:= 0  
Local _nRegs		:= 0
Local _cMensagem	:= ""
//+-----------------------------------------------------------------------+
//| Monta a mensagem para o AVISO.                                        |
//+-----------------------------------------------------------------------+
_cMensagem	:= "--- ATENÇÃO: "+Chr(13)+Chr(10)
_cMensagem	+= "O Rotina a seguir marca os PRODUTOS DOS CONTRATOS DE VENDA que "
_cMensagem	+= "foram enviados ao [ DN ], para integração, cada um com sua "
_cMensagem	+= "condição de remessa, INCLUIDOS, ALTERADOS e EXCLUIDOS. "
_cMensagem	+= "Porem, NÃO EXISTE rotina de Reversão! "+Chr(13)+Chr(10)
_cMensagem	+= "ENTÃO, verifique antes de encerrar; Se o arquivo de Remessa foi "
_cMensagem	+= "gerado corretamente. Se houve confirmaçãopor parte do [ DN ] da "
_cMensagem	+= "perfeita recepção e integração dos registro, antes de executar "
_cMensagem	+= "esta confirmação."+Chr(13)+Chr(10) 
_cMensagem	+= " "+Chr(13)+Chr(10)
_cMensagem	+= "TEM CERTEZA que deseja Confirma a Remessa?"
If (Aviso(FunName()+"/"+ProcName(),_cMensagem,{"Sim","Não"},3))==1
	Begin Transaction
		//+-----------------------------------------------------------------------+
		//| MARCA os PRODUTOS DAS PROP. DE VENDA [[INCLUIDOS]] e Integradas ao DN |
		//+-----------------------------------------------------------------------+
		_cQuery := ""
		_cQuery := "Update "+RetSqlName("CNE")+" CNE Set CNE.CNE_XREM = '"+Dtos(dDataBase)+":"+Substr(Time(),1,5)+"' "+CRLF
		_cQuery += "Where CNE.D_E_L_E_T_ = ' ' "+CRLF  
		If !Empty(Alltrim(_cCasa))		//-- Somente a FILIAL ATUAL ?
			_cQuery += "And Substr(CNE.CNE_FILIAL,1,4) ='"+Alltrim(_cCasa)+"' "+CRLF 
		Endif 
		_cQuery += "And (Substr(CNE.CNE_XOPER,1,15) = '               ' Or (Substr(CNE.CNE_XOPER,1,15) > Substr(CNE.CNE_XREM,1,15))) "+CRLF
		TCSqlExec(_cQuery)
		TcSqlExec("COMMIT")
		//+-----------------------------------------------------------------------+
		//| MARCA os PRODUTOS DAS PROP. DE VENDA [[ALTERADOS]] e Integradas ao DN |
		//+-----------------------------------------------------------------------+
		_cQuery := ""
		_cQuery := "Update "+RetSqlName("CNE")+" CNE Set CNE.CNE_XREM = Substr(CNE.CNE_XREM,1,15) || '"+Dtos(dDataBase)+":"+Substr(Time(),1,5)+"' "+CRLF
		_cQuery += "Where CNE.D_E_L_E_T_ = ' ' "+CRLF 
		If !Empty(Alltrim(_cCasa))		//-- Somente a FILIAL ATUAL ?
			_cQuery += "And Substr(CNE.CNE_FILIAL,1,4) ='"+Alltrim(_cCasa)+"' "+CRLF 
		Endif 
		_cQuery += "And Substr(CNE.CNE_XOPER,1,15) <> '               ' "+CRLF
		_cQuery += "And Substr(CNE.CNE_XOPER,16,15) > Substr(CNE.CNE_XREM,16,15) "+CRLF
		TCSqlExec(_cQuery)
		TcSqlExec("COMMIT")
		//+-----------------------------------------------------------------------+
		//| MARCA os PRODUTOS DAS PROP. DE VENDA [[EXCLUIDOS]] e Integradas ao DN |
		//+-----------------------------------------------------------------------+
		_cQuery := ""
		_cQuery := "Update "+RetSqlName("CNE")+" CNE Set CNE.CNE_XREM = Substr(CNE.CNE_XREM,1,30) || '"+Dtos(dDataBase)+":"+Substr(Time(),1,5)+"' "+CRLF
		_cQuery += "Where CNE.D_E_L_E_T_ = '*' "+CRLF
		If !Empty(Alltrim(_cCasa))		//-- Somente a FILIAL ATUAL ?
			_cQuery += "And Substr(CNE.CNE_FILIAL,1,4) = '"+Alltrim(_cCasa)+"'"+CRLF
		Endif 
		_cQuery += "And Substr(CNE.CNE_XOPER,1,15) <> '               ' "+CRLF 
		_cQuery += "And Substr(CNE.CNE_XOPER,31,15) > Substr(CNE.CNE_XREM,31,15) "+CRLF 
		TCSqlExec(_cQuery)
		TcSqlExec("COMMIT")
		_lReturn := .t. 
	End Transaction
Endif 
Return _lReturn