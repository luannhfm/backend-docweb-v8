#Include 'Protheus.ch'
#Include 'TopConn.ch'
#Include 'FWPrintSetup.ch'
#Include 'RptDef.ch'

/*/{Protheus.doc} SF0101X
	Relatório de Transferência/Baixa de Bens Materiais

@author	Walmir Gonçalves da Silva Junior
@since	22/04/2016
@version 1.0

@return Nil

/*/

User Function SF0101X(_aMovs)
Local aOrdem		:= {"Padrão"}															//Array com ordem de impressão do relatório
Local aDevice		:= {"DISCO","SPOOL","EMAIL","EXCEL","HTML","PDF"}						//Array com dispositivos para impressão do relatório
Local cDevice		:= ""																	//Dispositivo selecionado para impressão
Local cPathDest		:= GetSrvProfString("StartPath","\system\")								//Caminho da pasta \system\
Local cRelName		:= "SF0101X"															//Nome do relatório
Local cSession		:= GetPrinterSession()													//Sessão do usuário logado
Local lAdjust		:= .F.																	//Possibilita ajustes de impressão
Local nFlags		:= PD_ISTOTVSPRINTER+PD_DISABLEORIENTATION+PD_DISABLEPAPERSIZE			//Opções para setup de impressão
Local nLocal		:= 1																	//Local de impressão
Local nOrdem		:= 1																	//Ordem de impressão	
Local nOrient		:= 1																	//Orientação da impressão
Local nPrintType	:= 6																	//Tipo da impressora
Local oPrinter		:= Nil																	//Objeto de impressão			
Local oSetup		:= Nil																	//Objeto de configuração da impressão

Private nMaxLin		:= 800																	//Numero máximo de linhas
Private nMaxCol		:= 600																	//Numero máximo de colunas

Private _cRazCli	:= ""
Private _cCNPJ		:= ""
//Private _dDataMv	:= dDataBase
Private _cObDevPr	:= "" //fCarObs()
Private _lTrans		:= .T.
Private _cAlias		:= GetNextAlias()
Private _aMovSel	:= _aMovs

	cSession	:= GetPrinterSession()
	cDevice		:= If(Empty(fwGetProfString(cSession,"PRINTTYPE","SPOOL",.T.)),"PDF",fwGetProfString(cSession,"PRINTTYPE","SPOOL",.T.))
	nLocal		:= If(fwGetProfString(cSession,"LOCAL","SERVER",.T.)=="SERVER",1,2 )
	nPrintType	:= aScan(aDevice,{|x| x == cDevice })     

	oPrinter	:= FWMSPrinter():New(cRelName, nPrintType, lAdjust, /*cPathDest*/, .T.)
	oSetup		:= FWPrintSetup():New (nFlags,cRelName)

	oSetup:SetPropert(PD_PRINTTYPE   	, nPrintType)
	oSetup:SetPropert(PD_ORIENTATION 	, nOrient)
	oSetup:SetPropert(PD_DESTINATION 	, nLocal)
	oSetup:SetPropert(PD_MARGIN			, {0,0,0,0})
	oSetup:SetPropert(PD_PAPERSIZE		, 2)
	oSetup:SetOrderParms(aOrdem,@nOrdem)

	If oSetup:Activate() == PD_OK 

		oPrinter:lServer			:= oSetup:GetProperty(PD_DESTINATION) == AMB_SERVER	
		oPrinter:SetDevice(oSetup:GetProperty(PD_PRINTTYPE))
		oPrinter:SetPortrait()
		oPrinter:SetPaperSize(oSetup:GetProperty(PD_PAPERSIZE))
		oPrinter:setCopies(Val(oSetup:cQtdCopia))
		
		If oSetup:GetProperty(PD_PRINTTYPE) == IMP_SPOOL

			oPrinter:nDevice		:= IMP_SPOOL
			oPrinter:cPrinter		:= oSetup:aOptions[PD_VALUETYPE]

		Else 

			oPrinter:nDevice		:= IMP_PDF
			oPrinter:cPathPDF		:= oSetup:aOptions[PD_VALUETYPE]
			oPrinter:SetViewPDF(.T.)

		Endif
		
		RptStatus({|lEnd| SF0101FImp(@lEnd,@oPrinter)},"Imprimindo Relatorio...")

	Else 

		MsgInfo("Relatório cancelado pelo usuário.")
		oPrinter:Cancel()

	EndIf

	oSetup		:= Nil
	oPrinter	:= Nil
		
Return (Nil)

/*/{Protheus.doc} SF0101FImp
	Função para impressão do relatório.

@author Franklin de Brito de Oliveira
@since 26/06/2015
@version 1.0
@param lEnd, logico 
@param oPrinter, objeto, Objeto de impressão

@return Nil

/*/
//-------------------------------------------------------------------------
/*
Modificações:
	14/10/2015 - Franklin B Oliveira:
	->Adicionado tratamento para impressão quando o programa de origem for 
	transferência multipla. 

*/
//--------------------------------------------------------------------------
Static Function SF0101FImp(lEnd,oPrinter)

Local nMaxLinha		:= 60												
Local nLinCount		:= 0
Local aArea			:= GetArea()
Local cQuery		:= ""

Private _cAliasTMP	:= GetNextAlias()
Private dDataEmi	:= dDataBase
Private nMargDir	:= 15
Private nMargEsq	:= 20
Private nColPro		:= nMargEsq+30
Private nColDes		:= nColPro+80
Private nColQtd		:= nColDes+80
Private nColDtA		:= nColQtd+190
Private nColVlA		:= nColDtA+100
Private nColFim		:= nColVlA+80
Private nLiItm		:= 0
Private nPag		:= 0
Private nWidtLin	:= 0
Private nNumItem	:= 0
Private nColLeft	:= nMargDir
Private nColCent	:= nColLeft+190
Private nColRigh	:= nColCent+190
Private oFontA7		:= TFont():New('Arial',,7,.T.)
Private oFontA12	:= TFont():New('Arial',,12,.T.)
Private oFontC8		:= TFont():New('Courier new',,9,.T.)
Private _oFnt9N		:= TFont():New('Courier new',,9,.T.)
Private _oFntC8		:= TFont():New('Courier new',,8,.T.)
Private li			:= 10
 
oFontA12:Bold := .T.
_oFnt9N:Bold := .T.

_cAliasTMP := GerQuery()

_lTrans := (_cAliasTMP)->ZEC_TPMOV == 'T'

SetRegua((_cAliasTMP)->(LastRec()))

(_cAliasTMP)->( DbGoTop() )
	 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicia a impressao do relatorio ³ 
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(_cAliasTMP)->(Eof())
	
	IncRegua()
	nLiItm		:= 140
	nLinCount	:= 0
	nPag++
	
	oPrinter:StartPage()
	CabPagina(@oPrinter)
	CabItem(@oPrinter)

	nWidtLin = 15 //MlCount( (cAliasTMP)->B1_DESC )
	
	While !(_cAliasTMP)->(Eof())
		// Imprime os itens
		nNumItem++
		ImpItem(@oPrinter)
		li += 15
		(_cAliasTMP)->(DBSkip())
	EndDo
		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza a pagina se a quantidade de itens for diferente da quantidade ³ 
	//³ maxima, para evitar que a pagina seja finalizada mais de uma vez.      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If nLinCount <> nMaxLinha
		oPrinter:Line(750,nMargDir, 750, nMaxCol-nMargEsq,, "-2")
		oPrinter:EndPage()
	EndIf

Else
	Aviso("Atenção", "Nenhum registro encontrado, verifique as informações de contrato.", {"Ok"})
	Return (Nil)
EndIf

nLiItm += 20

fCarObs()

/* Impressão do rodapé - Observação */
oPrinter:Box(li+nLiItm, nMargDir, li+nLiItm+20 + (MlCount(_cObDevPr) * 7), nMaxCol-nMargEsq)
oPrinter:SayAlign(li+nLiItm+5, nMargDir+5, "Observação :"			, oFontA7,  nMaxCol-nMargEsq, 200, 2, 0)
oPrinter:SayAlign(li+nLiItm+15, nMargDir+5, _cObDevPr						, oFontA7,  nMaxCol-nMargEsq, 200, 2, 0) 

nLiItm += 40

/* Impressão do rodapé - Assinatura */
oPrinter:Box(li+nLiItm, nColLeft, li+nLiItm+60, nColCent)
oPrinter:SayAlign(li+nLiItm+5	, nColLeft+1	, "Data: __/__/__"								, oFontA7, 180, 10, , 0, 1) 
oPrinter:SayAlign(li+nLiItm+45	, nColLeft		, "Responsavel pela entrega"					, oFontA7, 180, 10, , 2, 2) 


oPrinter:Box(li+nLiItm, nColCent, li+nLiItm+60, nColRigh)
oPrinter:SayAlign(li+nLiItm+5	, nColCent+1	, "Data: __/__/__"						, oFontA7, 180, 10, , 0, 1) 
oPrinter:SayAlign(li+nLiItm+45	, nColCent		, "Dir. Regional/Super./Gerência/Coord."	, oFontA7, 180, 10, , 2, 2) 

oPrinter:Box(li+nLiItm, nColRigh, li+nLiItm+60, nMaxCol-nMargEsq)
oPrinter:SayAlign(li+nLiItm+5	, nColRigh+1	, "Data: __/__/__"								, oFontA7, 180, 10, , 0, 1) 	
oPrinter:SayAlign(li+nLiItm+45	, nColRigh		, "Responsável pelo recebimento"				, oFontA7, 180, 10, , 2, 2) 	

//Ultima Sessão
oPrinter:SayAlign(li+nLiItm+65	, nColLeft+1	, "Ciência da CALOG/Patrimônio"				, oFontA7, 180, 10, , 0, 1) 	
oPrinter:Box(li+nLiItm+75, nColLeft, li+nLiItm+105, nMaxCol-nMargEsq)
oPrinter:SayAlign(li+nLiItm+95	, nColLeft+1	, "Data: __/__/__"							, oFontA7, 180, 10, , 0, 1) 	
oPrinter:SayAlign(li+nLiItm+95	, nColCent		, "Assinatura e identificação:"				, oFontA7, 180, 10, , 2, 2) 	



oPrinter:Print()

(_cAliasTMP)->(dbCloseArea())
RestArea(aArea)
	
Return (Nil)


/*/
Modificações realizadas:
Franklin B. Oliveira - 12/05/2017
Removida opção para carregar histórico para cada item.
/*/
Static Function fCarObs()
Local _cAuxObs	:= ""

(_cAliasTMP)->(DBGoTop())

If !(Empty((_cAliasTMP)->ZEC_CODIGO)) 
	DbSelectArea("ZEC")
	ZEC->( DbSetOrder(1) )

	If ZEC->( DBSeek(xFilial("ZEC") + (_cAliasTMP)->ZEC_CODIGO))
		_cAuxObs += AllTrim(ZEC->ZEC_HISTMV)
	EndIf

	_cAuxObs += CRLF
EndIf
(_cAliasTMP)->(DBSkip())

_cObDevPr := Iif(Empty(_cAuxObs), _cObDevPr, _cAuxObs)

Return

/*/{Protheus.doc} ImpItem
	Função para imprimir os itens do relatório, na seguinte ordem:
	 	
@author Walmir Junior
@since 22/04/2016
@version 1.00
@param oPrinter, objeto de impressão instanciado

@return Nil

/*/
Static Function ImpItem(oPrinter)

	oPrinter:Box(li+nLiItm, nMargDir, li+nLiItm+nWidtLin	, nColPro)
	oPrinter:SayAlign(li+nLiItm, nMargDir+5	, StrZero(nNumItem, 3)				, oFontC8, 200					, nWidtLin, , 0, 2)

	oPrinter:Box(li+nLiItm, nColPro	, li+nLiItm+nWidtLin	, nColDes)
	oPrinter:SayAlign(li+nLiItm, nColPro		, (_cAliasTMP)->ZEA_CODIGO		, oFontC8, 200					, nWidtLin, , 0, 2)
	
	oPrinter:Box(li+nLiItm, nColDes	, li+nLiItm+nWidtLin	, nColQtd)
	oPrinter:SayAlign(li+nLiItm, nColDes		, " "		, oFontC8		, nColQtd-nColDes-10	, nWidtLin, , 0, 2)

	oPrinter:Box(li+nLiItm, nColQtd	, li+nLiItm+nWidtLin	, nColDtA)
	oPrinter:SayAlign(li+nLiItm, nColQtd		, (_cAliasTMP)->ZEA_DESC		, oFontC8, 200					, nWidtLin, , 0, 2)
	
	oPrinter:Box(li+nLiItm, nColDtA	, li+nLiItm+nWidtLin	, nColVlA)
	oPrinter:SayAlign(li+nLiItm, nColDtA		, DToC(StoD((_cAliasTMP)->ZEA_DTAQUI)), oFontC8, 100					, nWidtLin, , 1, 2)
	
	oPrinter:Box(li+nLiItm, nColVlA	, li+nLiItm+nWidtLin	, nColFim)
	oPrinter:SayAlign(li+nLiItm, nColVlA		, Alltrim(Transform((_cAliasTMP)->ZEA_PRCAQS,X3PICTURE("ZEA_PRCAQS")))		, oFontC8, 80					, nWidtLin, , 1, 2)

Return (Nil)

/*/{Protheus.doc} CabPagina
	Função para impressão do cabeçalho da página

@author Franklin de Brito de Oliveira
@since 26/06/2015
@version 1.0
@param oPrinter, objeto, Objeto de impressão

@return Nil

/*/
Static Function CabPagina(oPrinter)

Private nCol1Dir	:= 498-nMargDir   
Private nCol2Dir	:= 540-nMargDir

oPrinter:Box(li+5, nMargDir, li+50, nMargDir+75)
oPrinter:SayBitmap(li+6, nMargDir+1, "lgrl01.bmp", 70, 40 )

oPrinter:Box(li+5, nMargDir+75, li+50, nCol1Dir-5)
oPrinter:SayAlign(li+20, nMargDir+200, Iif(_lTrans, "Transferência Definitiva", "Baixa de Bens Definitiva"), oFontA12, nMaxCol-nMargEsq, 200, 2, 0)

oPrinter:Box(li+5, nCol1Dir-5, li+50, nMaxCol-nMargEsq)
oPrinter:SayAlign(li+10, nCol1Dir, "Mov. Código : "	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+20, nCol1Dir, "Dt. Emissão : "	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+30, nCol1Dir, "Emissor ....: "	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+40, nCol1Dir, "Folha ......: "	, oFontA7, 200, 200, , 0)

oPrinter:SayAlign(li+10, nCol2Dir, (_cAliasTMP)->ZEC_CODIGO		, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+20, nCol2Dir, DToC( dDataEmi )				, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+30, nCol2Dir, UsrRetName( RetCodUsr() )	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+40, nCol2Dir, AllTrim(STR(nPag))			, oFontA7, 200, 200, , 0)

oPrinter:Line(li+50, nMargDir, li+50, nMaxCol-nMargEsq, , "-8")

Return (Nil)

/*/{Protheus.doc} CabItem
	Função para impressão do cabeçalho dos itens

@author Franklin de Brito de Oliveira
@since 26/06/2015
@version 1.0
@param oPrinter, objeto, Objeto de impressão

@return Nil

/*/
//-------------------------------------------------------------------------
/*
Modificações:
	14/10/2015 - Franklin B Oliveira:
	->Adicionado tratamento para impressão da Unidade Destino, quando o programa
	de origem for transferência multipla.

*/
//--------------------------------------------------------------------------
Static Function CabItem(oPrinter)
//Tabela
Local _nColTwo	:= 50
Local _nColThree:= 130
Local _nColFour	:= 210
Local _nColFive	:= 400
Local _nColSix	:= 500
Local _nColFnl	:= 580
Local _nWidtLi	:= 12
Local _nPLin	:= 220
//Entidade...
Local _nLinC1	:= 75
Local _nCl1C1	:= 200
Local _nCl2C1	:= 395
Local _nCl3C1	:= 580
Local _nHeigC1	:= 30
//Unid Dest...
Local _nLinC2	:= 110
Local _nCl1C2	:= 300
Local _nCl2C2	:= 580
//Tit Tabela
Local _nLi0C3	:= 145
Local _nLinC3	:= 160
Local _nLi2C3	:= 185
Local _nCl1C3	:= 205
Local _nCl2C3	:= 395
Local _nHeigC3	:= 20
//Variaveis Informações
Local _cMotBx	:= Iif(_lTrans,"DEFINITIVA", AllTrim(Posicione("SX5", 1, xFilial("SX5") + "16" + (_cAlias)->ZEC_MOTBX, "X5_DESCRI")))
Local _cInfo	:= Iif(_lTrans,	"Os bens patrimoniais abaixo relacionados estão sendo transferidos"+;
								", delegando assim a responsabilidade pelos mesmos ao destinatário.";
						,"Relação dos Bens a Serem Baixados.")
Local _UndDes	:= Iif(Empty((_cAlias)->ZEC_FILDES), Replicate("-", 10), (_cAlias)->ZEC_FILDES)
Local _StrDes	:= Iif(Empty((_cAlias)->LOCALDES)  , Replicate("-", 10), SubStr(Posicione("SNL", 1, xFilial("SNL") + (_cAlias)->LOCALDES, "NL_DESCRIC"), 1, 30))

// Entidade / Unidade Cedente / Setor Cedente
oPrinter:Box(li+_nLinC1	, nMargDir	, li+_nLinC1+_nHeigC1	, _nCl1C1)
oPrinter:SayAlign(li+80, nMargDir+60	, "Entidade"		, _oFntC8, 160, 200, , 0)
oPrinter:SayAlign(li+88, nMargDir+60	, (_cAlias)->ZEC_MSFIL		, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nLinC1	, _nCl1C1	, li+_nLinC1+_nHeigC1	, _nCl2C1)
oPrinter:SayAlign(li+80, _nCl1C1+50	, "Unidade Cedente"		, _oFntC8, 160, 200, , 0)
oPrinter:SayAlign(li+88, _nCl1C1+50	,  RTrim(Posicione("SM0",1, cEmpAnt + (_cAlias)->ZEC_MSFIL,"M0_FILIAL"))				, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nLinC1	, _nCl2C1	, li+_nLinC1+_nHeigC1	, _nCl3C1)
oPrinter:SayAlign(li+80, _nCl2C1	, "Setor Cedente"		, _oFntC8, 180, 200, 2, 2)
oPrinter:SayAlign(li+88, _nCl2C1	, SubStr(Posicione("SNL", 1, xFilial("SNL") + (_cAlias)->LOCALORI, "NL_DESCRIC"), 1, 30), _oFntC8, 180, 200, 2, 2)

// Unidade de destino / Setor de destino
oPrinter:Box(li+_nLinC2	, nMargDir	, li+_nLinC2+_nHeigC1	, _nCl1C2)
oPrinter:SayAlign(li+115, nMargDir	, "Unidade de Destino"	, _oFntC8, 260, 200, 2, 2)
oPrinter:SayAlign(li+123, nMargDir	, _UndDes				, _oFntC8, 260, 200, 2, 2)

oPrinter:Box(li+_nLinC2	, _nCl1C2	, li+_nLinC2+_nHeigC1	, _nCl2C2)
oPrinter:SayAlign(li+115, _nCl1C2	, "Setor de Destino"	, _oFntC8, 260, 200, 2, 2)
oPrinter:SayAlign(li+123, _nCl1C2	, _StrDes				, _oFntC8, 260, 200, 2, 2)

//Sessao Tit Tabela / Motivo
oPrinter:SayAlign(li+_nLi0C3, nMargDir+5	, "Autorização de saída de bens em caráter: ", oFontC8, 500, 200, , 0)

oPrinter:Box(li+_nLinC3	, _nCl1C3	, li+_nLinC3+_nHeigC3	, _nCl2C3)
oPrinter:SayAlign(li+_nLinC3+5, _nCl1C3	, _cMotBx	, _oFnt9N, 195, 20, 2, 2)

oPrinter:Box(li+_nLi2C3, nMargDir	, li+_nLi2C3+_nHeigC1	, 580)
oPrinter:SayAlign(li+_nLi2C3+5, nMargDir+5	, _cInfo	, _oFnt9N, 550, 200, , 0)

// Títulos Tabela //
oPrinter:Box(li+_nPLin	, nMargDir			, li+_nPLin+_nWidtLi	, _nColTwo)
oPrinter:SayAlign(li+_nPLin+2, nMargDir		, "Item "				, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nPLin	, _nColTwo			, li+_nPLin+_nWidtLi	, _nColThree)
oPrinter:SayAlign(li+_nPLin+2, nMargDir+35	, "Cod Bem "	, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nPLin	, _nColThree		, li+_nPLin+_nWidtLi	, _nColFour)
oPrinter:SayAlign(li+_nPLin+2, nMargDir+115	, "Série "		, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nPLin	, _nColFour			, li+_nPLin+_nWidtLi	, _nColFive)
oPrinter:SayAlign(li+_nPLin+2, nMargDir+195	, "Descrição "			, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nPLin	, _nColFive			, li+_nPLin+_nWidtLi	, _nColSix)
oPrinter:SayAlign(li+_nPLin+2, nMargDir+385	, "Dt Aquisição "			, _oFntC8, 160, 200, , 0)

oPrinter:Box(li+_nPLin	, _nColSix			, li+_nPLin+_nWidtLi	, _nColFnl)
oPrinter:SayAlign(li+_nPLin+2, nMargDir+485	, "Vlr Aquisição "			, _oFntC8, 160, 200, , 0)

li += 90

Return (Nil)

Static Function GerQuery()
Local _cQuery	:= ""
Local _nx		:= 0
Local _nCnt		:= .F.

/*
_cQuery := " Select SNM.NM_FILIAL, SNM.NM_CODIGO, SN1.N1_CBASE, SN1.N1_DESCRIC, SNM.NM_CDHSOL, SN3.N3_CCUSTO " + CRLF
_cQuery += " , SNM.NM_FILDEST, SNM.NM_CCUSTO, SNL.NL_DESCRIC, SNM.NM_CDHSOL, SX5.X5_DESCRI, SNM.NM_TIPOSOL " + CRLF
_cQuery += " , SN1.N1_AQUISIC, SN1.N1_VLAQUIS, SN1.N1_XSERIEP " + CRLF
_cQuery += " From "+RetSQLName("SNM")+" SNM INNER JOIN " + CRLF
_cQuery += " "+RetSQLName("SN1")+" SN1 ON SNM.NM_FILIAL = SN1.N1_FILIAL AND SNM.NM_CBASE = SN1.N1_CBASE INNER JOIN" + CRLF
_cQuery += " "+RetSQLName("SN3")+" SN3 ON SN3.N3_FILIAL = SN1.N1_FILIAL AND SN3.N3_CBASE = SN1.N1_CBASE AND SN3.N3_ITEM = SN1.N1_ITEM LEFT JOIN" + CRLF
_cQuery += " "+RetSQLName("SNL")+" SNL ON SNM.NM_TIPOSOL = '2' AND SNM.NM_LOCAL	= SNL.NL_CODIGO LEFT JOIN" + CRLF
_cQuery += " "+RetSQLName("SX5")+" SX5 ON Trim(SX5.X5_FILIAL) = SubStr(SNM.NM_FILIAL,1,4) AND SX5.X5_TABELA = '16    ' AND SX5.X5_CHAVE = SNM.NM_MOTBX " + CRLF
_cQuery += " WHERE " + CRLF
_cQuery += " ( " + CRLF
For _nx := 1 To Len(_aMovSel)
	_cQuery += Iif( !_nCnt, " ( ", " Or ( ")
	_cQuery += " 	SNM.NM_FILIAL	= '"+ _aMovSel[_nx, 1]+"' AND " + CRLF
	_cQuery += " 	SNM.NM_CBASE	= '"+ _aMovSel[_nx, 2]+"' AND " + CRLF
	_cQuery += " 	SNM.NM_ITEM		= '"+ _aMovSel[_nx, 3]+"' AND " + CRLF
	_cQuery += " 	SNM.NM_TIPO		= '"+ SN3->N3_TIPO	+"' " + CRLF
	_cQuery += " ) " + CRLF
	_nCnt := .T.
Next
_cQuery += " ) AND " + CRLF
_cQuery += " 	SNM.D_E_L_E_T_ = ' ' AND " + CRLF
_cQuery += " 	SN1.D_E_L_E_T_ = ' ' AND" + CRLF
_cQuery += " 	SN3.D_E_L_E_T_ = ' ' " + CRLF
_cQuery += " Order By	1,2,3 "
*/

_cQuery := " SELECT ZEA.ZEA_DTAQUI," + CRLF
_cQuery += " 	ZEA.ZEA_PRCAQS," 	+ CRLF
_cQuery += " 	ZEA.ZEA_CODIGO," 	+ CRLF
_cQuery += " 	ZEA.ZEA_DESC," 		+ CRLF
_cQuery += " 	ZEA.ZEA_LOCAL AS LOCALORI," + CRLF
_cQuery += " 	ZEC.ZEC_CODIGO," 	+ CRLF
_cQuery += " 	ZEC.ZEC_TPMOV," 	+ CRLF
_cQuery += " 	ZEC.ZEC_MSFIL," 	+ CRLF
_cQuery += " 	ZEC.ZEC_FILDES," 	+ CRLF
_cQuery += " 	ZEC.ZEC_LOCDES AS LOCALDES," + CRLF
_cQuery += " 	ZEC.ZEC_MOTBX" + CRLF
_cQuery += " FROM " + RetSQLName("ZEC") + " ZEC INNER JOIN " + CRLF
_cQuery += " " + RetSQLName("ZED") + " ZED ON ZEC.ZEC_FILIAL  = ZED.ZED_FILIAL AND ZEC.ZEC_CODIGO = ZED.ZED_CODIGO AND ZED.D_E_L_E_T_ = ' ' INNER JOIN" + CRLF
_cQuery += " " + RetSQLName("ZEA") + " ZEA ON ZED.ZED_FILORI  = ZEA.ZEA_FILORI AND ZED.ZED_CODBEM = ZEA.ZEA_CODIGO AND ZEA.D_E_L_E_T_ = ' ' " + CRLF
_cQuery += " WHERE " + CRLF
_cQuery += " ( " + CRLF
For _nx := 1 To Len(_aMovSel)
	_cQuery += Iif( !_nCnt, " ( ", " Or ( ")
	_cQuery += " 	ZEC.ZEC_MSFIL	= '" + _aMovSel[_nx, 1] + "' AND " + CRLF
	_cQuery += " 	ZEC.ZEC_CODIGO	= '" + _aMovSel[_nx, 2] + "' AND " + CRLF
	_cQuery += " 	ZED.ZED_CODBEM	= '" + _aMovSel[_nx, 3] + "' AND " + CRLF
	_cQuery += " 	ZED.ZED_ITEM	= '" + _aMovSel[_nx, 4] + "' " + CRLF
	_cQuery += " ) " + CRLF
	_nCnt := .T.
Next
_cQuery += " ) AND " + CRLF
_cQuery += " 	ZEC.D_E_L_E_T_ = ' ' " + CRLF
_cQuery += " ORDER BY	1,2,3 "

MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)

DBUseArea(.T., "TOPCONN", TcGenQry(,,ChangeQuery(_cQuery)),_cAlias, .F.,.F.)

Return (_cAlias)