#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"  
#INCLUDE "PARMTYPE.CH"     
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"    
/*
--------------------------------------------------------------------------------
{Protheus.doc} <SF0701X>
   Browser MVC para lancamentos dos [ZFB-Registros de Afastamento]

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/                                                                       
User Function SF0701X()
Local _oBrowse 		:= FWMBrowse():New()
Private aRotina 	:= MenuDef() 

DbSelectArea("ZFB")                                                                                  	
DbSetOrder(1)
ZFB->(DbGoTop())
//-- Define o Alias
_oBrowse:SetAlias("ZFB")
//-- Descricao
_oBrowse:SetDescription("Registros de Afastamento")
//-- Ativa o browse
_oBrowse:Activate()
Return Nil

/*
--------------------------------------------------------------------------------
{Protheus.doc} <MenuDef>
   Responsavel pela criacao dos botoes, alterar, incluir, excluir e demais. 

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/                                                                       
Static Function MenuDef()
Local _aRotina 	:= {}
ADD OPTION _aRotina TITLE "Pesquisar"  			ACTION "PESQBRW"         	OPERATION 1 ACCESS 0
ADD OPTION _aRotina TITLE "Visualizar" 			ACTION "VIEWDEF.SF0701X" 	OPERATION 2 ACCESS 0
ADD OPTION _aRotina TITLE "Incluir"    			ACTION "VIEWDEF.SF0701X" 	OPERATION 3 ACCESS 0
ADD OPTION _aRotina TITLE "Alterar"    			ACTION "VIEWDEF.SF0701X" 	OPERATION 4 ACCESS 0
ADD OPTION _aRotina TITLE "Excluir"   				ACTION "VIEWDEF.SF0701X" 	OPERATION 5 ACCESS 0
ADD OPTION _aRotina TITLE "Imprimir"   			ACTION "VIEWDEF.SF0701X" 	OPERATION 8 ACCESS 0
ADD OPTION _aRotina TITLE "Copiar"     			ACTION "VIEWDEF.SF0701X" 	OPERATION 9 ACCESS 0
ADD OPTION _aRotina TITLE "Cad. Justificativas"	ACTION "u_SF0702X()" 		OPERATION 9 ACCESS 0

Return _aRotina

/*
--------------------------------------------------------------------------------
{Protheus.doc} <ModelDef>
   Contem  a  construcao e a definicao do Model, lembrando que o Modelo de
   dados (Model) contem as regras de negocio.

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/  
Static Function ModelDef()
Local _oModel	:= Nil 
Local _oStZFB	:= FWFormStruct(1,"ZFB")
//-- Objeto de modelo de dados
_oModel := MPFormModel():New("SF0701XX",/*PreValid*/,{|_oMod| fVldForm(_oMod)},/*Commit*/,/*Cancel*/)
//-- A  estrutura  do  modelo  de  dados  (Model) 
_oModel:AddFields("ZFBMASTER",/*cOwner*/,_oStZFB)
//-- Chave Primaria
_oModel:SetPrimaryKey({"ZFB_FILIAL","ZFB_MATRIC","DTOS(ZFB_DATAIN)"})
Return _oModel

/*
--------------------------------------------------------------------------------
{Protheus.doc} <ViewDef>
   Contem a construcao e a definicao da View, ou seja, contrucao da interface

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/  
Static Function ViewDef()
Local _oModel 		:= FWLoadModel("SF0701X")
Local _oStZFBV		:= FWFormStruct(2,"ZFB") 
Local _oView   	:= FWFormView():New()
//-- Defino modelo da view
_oView:SetModel(_oModel)
//-- Mesma regra do modeldef
_oView:AddField("VW_ZFB",_oStZFBV,"ZFBMASTER")
//-- Crio a tela
_oView:CreateHorizontalBox("AFASTAR",100)
//-- Defino owner da tela
_oView:SetOwnerView("VW_ZFB","AFASTAR")
Return _oView

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVldHs>
   Valida a Hora informada como parametro.

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive
<   _cTime (c) - Valor das Horas fornecida como Argumento
>
@return
< _lReturn (L) - (.t.) - Valor valido para Horas; (.f.) - Valor Invalido  
>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/  
User Function fVldHs(_cTime)
Local _lReturn		:= .t. 
Local _chora		:= Substr(_cTime,1,2)
Local _cMimuto		:= Substr(_cTime,3,2)
Local _cSegundo		:= Substr(_cTime,5,2)
If _chora > '23'
	_lReturn := .f.	
Endif 
If _lReturn .And. _cMimuto > '59'
	_lReturn := .f.	
Endif 
If _lReturn .And. _cSegundo > '59'
	_lReturn := .f.	
Endif 
Return _lReturn 

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVldDts>
   Valida o Periodo Data e Hora informados como parametros.

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive
<  _dDataINI (d) - Data Inicial do Afastamento 
   _cHoraINI (c) - Hora Inicial do Afastamento [HHMMSS]
   _dDataFIM (d) - Data Final do Afastamento
   _cHoraFIM (c) - Hora Final do Afastamento [HHMMSS]
>

@return
<  _lReturn (l) - (.t.) - Perido Valido; (.f.) Periodo Invalido.  
>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/  
User Function fVldDts(_dDataINI,_cHoraINI,_dDataFIM,_cHoraFIM)
Local _lReturn		:= .t. 
If _dDataINI > _dDataFIM
	_lReturn := .f. 
	Help(,,"HELP",,"Período Invalido: Data Inicial maior que a Data Final!",1,0)
Endif 
If _dDataINI == _dDataFIM
	If _cHoraINI > _cHoraFIM
		_lReturn := .f. 
		Help(,,"HELP",,"Período Invalido: HORA Inicial maior que a HORA Final!",1,0)
	Endif 	
Endif 
If _lReturn
	_nPeriodo := _dDataFIM - _dDataINI
	If _nPeriodo >= 15 
		_lReturn := .f. 
		Help(,,"HELP",,"Período Invalido: O intervalo é Superior ou igua a 15 dias!",1,0)
	Endif 
Endif
If _lReturn
	_lReturn := u_fVldDtFi()
Endif 	
Return _lReturn 

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVldForm>
   Validacao PADRAO do Fomulario MVC:   
   Valida o Periodo Data e Hora informados como parametros.

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/ 
Static Function fVldForm(_oModel)
Local _lReturn 		:= .t. 
Local _nOper		:= _oModel:GetOperation()
Local _oStruZFB		:= _oModel:GetModel("ZFBMASTER")
//-- 
Local _cMatric		:= _oStruZFB:GetValue("ZFB_MATRIC")
Local _dDataINI		:= _oStruZFB:GetValue("ZFB_DATAIN")
Local _cHoraINI		:= _oStruZFB:GetValue("ZFB_HORAIN")
Local _dDataFIM		:= _oStruZFB:GetValue("ZFB_DATAFI")
Local _cHoraFIM		:= _oStruZFB:GetValue("ZFB_HORAFI")
Local _lExecVld		:= .f.
//-- 
Do Case
	Case _nOper == 3 		//-- Incluir
		_lReturn 	:= .t.
		_lExecVld	:= .t.
	Case _nOper == 4 		//-- Alterar
		_lReturn 	:= .t.
		_lExecVld	:= .t.
	Case _nOper == 5 		//-- Excluir 
		_lReturn 	:= .t.
	Case _nOper == 8 		//-- Imprimir 
		_lReturn 	:= .t.
	Case _nOper == 9 		//-- Copiar  
		_lReturn 	:= .t.
EndCase
//-- 
If _lExecVld
	_lReturn	:= u_fVldDts(_dDataINI,_cHoraINI,_dDataFIM,_cHoraFIM)
	If _lReturn
		//+------------------------------------------------------------------+
		//| Valida o periodo de Afastamento; Nao deve haver uma outra        |
		//| justificativa neste mesmo periodo ou mesmo intercalado.          |
		//+------------------------------------------------------------------+
		_lReturn	:= u_fVldJus(cFilAnt,_cMatric,_dDataINI,_cHoraINI,_dDataFIM,_cHoraFIM) 
		If !_lReturn
			Help(,,"HELP",,"Periodo informado invalido. Já existe outra Justificativa informado neste mesmo periodo ou intercalado!",1,0)
		Endif 	
	Endif 
Endif 
Return _lReturn 

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fPutDFim>
	Funcao que sera utilizada no gatilho conforme segue abaixo. Preenche 
	a data final do afastamento conforme as condicoes das Justificativas. 
    -------------------------------------------------------
	Dominio    : ZFB_DATAIN
	Seguencia  : 001 
	Regra      : u_fPutDFim(M->ZFB_JUSTIF,M->ZFB_DATAIN)
	C Dominio  : ZFB_DATAFI

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive
<   _cJustif (c) - Codigo da Justificativa utilizada
   _dDataINI (d) - data Inicial do Afastamento. 
>
@return
<  _dDataFim (d) - Data FINAL do Afastamento
>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/ 
User Function fPutDFim(_cJustif,_dDataINI) 
Local _aSaveArea	:= GetArea()
Local _dDataFim		:= _dDataINI  
dbSelectArea("ZFA")
ZFA->(dbSetOrder(1))
ZFA->(dbSeek(FwxFilial("ZFA")+_cJustif))
_cObriga 	:= ZFA->ZFA_OBRIGA                                       
If ZFA->ZFA_OBRIGA == "S"
	_dDataFim := _dDataINI+ZFA->ZFA_DIAS
Endif 
RestArea(_aSaveArea)
Return _dDataFim

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVldDtFi>
   Valida a Tada Final Informada Pelo Operador 

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive<Nil>
@return
<   _lReturn (l) - (.t.) - Data Valida ; (.f.) - Data Invalida  
>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/ 
User Function fVldDtFi()
Local _aSaveArea	:= GetArea()
Local _lReturn 		:= .t. 
Local _oModel		:= FWModelActive()
Local _oStruZFB		:= _oModel:GetModel("ZFBMASTER")
//-- 
Local _cJustif		:= _oStruZFB:GetValue("ZFB_JUSTIF")
Local _dDataINI		:= _oStruZFB:GetValue("ZFB_DATAIN")
Local _dDataFIM		:= _oStruZFB:GetValue("ZFB_DATAFI")
If _dDataINI > _dDataFIM
	_lReturn := .f. 
Endif 
If _lReturn 
	//+------------------------------------------------------------------+
	//| Busca a Condicao para Data Final em ZFA->ZFA_OBRIGA.             |
	//+------------------------------------------------------------------+
	dbSelectArea("ZFA")
	ZFA->(dbSetOrder(1))
	ZFA->(dbSeek(FwxFilial("ZFA")+_cJustif))
	If ZFA->ZFA_OBRIGA == "S"
		If (_dDataINI+ZFA->ZFA_DIAS) <> _dDataFIM
			_lReturn := .f.
			Help(,,"HELP",,"Período Invalido: Justificativa com Prazo OBRIGATORIO!",1,0)
		Endif 
	Endif 
Endif 
//-- 
RestArea(_aSaveArea)
Return _lReturn

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVldJus>
   Funcao para validacao do periodo informado na justificativa. 

@author Antonio Dantas 
@since 23/09/2015
@version<1.00>
@receive
<   _cFilial (C) - Filial do Lancamento 
    _cMatric (C) - Codigo da Matricula do Funcionario
    _dDataIN (D) - Data Inicial do Afastamento 
    _cHoraIN (c) - Hora Inicial do Afastamento [HHMMSS]
    _dDataFI (D) - Data Final do Afastamento
    _cHoraFI (c) - Hora Final do Afastamento [HHMMSS]
>
@return
<  _lReturn (L) - (.t.) Diponivel para Apontamento; (.f.) - Nao DISPONIVEL
>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/ 
User Function fVldJus(_cFilial,_cMatric,_dDataIN,_cHoraIN,_dDataFI,_cHoraFI) 
Local _lReturn 		:= .t. 
Local _cQuery		:= ""
_cQuery := ""
_cQuery += "Select * "+CRLF
_cQuery += "From "+RetSqlName("ZFB")+" ZFB "+CRLF
_cQuery += "Where ( "+CRLF
_cQuery += "        ZFB.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "        And ZFB.ZFB_FILIAL = '"+_cFilial+"' "+CRLF
_cQuery += "        And ZFB.ZFB_MATRIC = '"+_cMatric+"' "+CRLF
_cQuery += "        And '"+DtoS(_dDataIN)+"' Between ZFB.ZFB_DATAIN And ZFB.ZFB_DATAFI "+CRLF
_cQuery += "        And '"+_cHoraIN+"' Between ZFB.ZFB_HORAIN And ZFB.ZFB_HORAFI ) "+CRLF
_cQuery += "Or "+CRLF
_cQuery += "      ( ZFB.D_E_L_E_T_ = ' ' "+CRLF 
_cQuery += "        And ZFB.ZFB_FILIAL = '"+_cFilial+"' "+CRLF
_cQuery += "        And ZFB.ZFB_MATRIC = '"+_cMatric+"' "+CRLF
_cQuery += "        And '"+DtoS(_dDataFI)+"' Between ZFB.ZFB_DATAIN And ZFB.ZFB_DATAFI "+CRLF
_cQuery += "        And '"+_cHoraFI+"' Between ZFB.ZFB_HORAIN And ZFB.ZFB_HORAFI ) "+CRLF
//+------------------------------------------------------------------+
//| Grava o Resultado da Query para consulta                         |
//+------------------------------------------------------------------+
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
If Select("	TMPZFB")>0
	TMPZFB->(DbCloseArea())
Endif
DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),"TMPZFB",.t.,.t.)
//-- 
TMPZFB->(DbGotop())
If TMPZFB->(!Eof()) .And. TMPZFB->(!Bof())
	//+------------------------------------------------------------------+
	//| Se encontrar qualquer registro. Existe Registro de Justificativa |
	//| No periodo, entao, devolve (.f.) O PERIODO NAO ESTA DISPONIVEL!  |
	//+------------------------------------------------------------------+
	_lReturn := .f.
Endif 
TMPZFB->(DbCloseArea())
Return _lReturn

/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVldSRA>
   Funcao para validação do Codigo de Matricula do Funcionario informado 

@author Antonio Dantas 
@since 11/11/2015
@version<1.00>
@receive
<   _cMatricula (C) - Codigo da Matricula  
>
@return
<  _lReturn (L) - (.t.) Codigo Valido; (.f.) - Codigo Invalido
>
@example<Nil>
@see<Nil>
-------------------------------------------------------------------------------
*/ 
User Function fVldSRA(_cMatricula)
Local _aSaveArea	:= GetArea()
Local _lReturn 		:= .t. 
dbSelectArea("SRA")
SRA->(dbSetOrder(1))
If !(SRA->(dbSeek(FwxFilial()+_cMatricula)))
	Aviso(FunName()+"/"+ProcName(),"Matricula informada é invalida!",{"OK"})
	_lReturn := .f. 
Endif 
//-- 
RestArea(_aSaveArea)
Return _lReturn