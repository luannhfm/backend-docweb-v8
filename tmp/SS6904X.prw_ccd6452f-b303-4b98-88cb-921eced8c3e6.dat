#Include 'Protheus.ch'
/*
--------------------------------------------------------------------------------
{Protheus.doc} <SS6904X> Cadastro de Minutas (GCT)

@author Jonas Nascimento 
@since 08/09/2015
@version<1.00>
@return
@example
@see
--------------------------------------------------------------------------------
*/
User Function SS6904X()
	Local _cAlias	:= "ZG3"
	Local aCores	:= {}
	Private cCadastro := "Cadastro de Minutas"
	Private aRotina	:= MenuDef()
	
	aadd(aCores,{"ZG3_STATUS == '1'", "BR_VERDE"})
	aadd(aCores,{"ZG3_STATUS <> '1'", "BR_VERMELHO"})
	
	dbSelectArea(_cAlias)
	dbSetOrder(1)
	mBrowse(6,1,22,75,_cAlias,,,,,,aCores)
	
Return

/*
--------------------------------------------------------------------------------
{Protheus.doc} <ZG3Legen> Legenda

@author Jonas Nascimento 
@since 08/09/2015
@version<1.00>
@return NULO
@example
@see
--------------------------------------------------------------------------------
*/
User Function ZG3Legen()
	Local _aLegenda := {}
	
	aadd(_aLegenda,{"BR_VERDE"		, "Minuta ativa"})
	aadd(_aLegenda,{"BR_VERMELHO"	, "Minuta inativa"})
	BrwLegenda(cCadastro, "Legenda"	, _aLegenda)
	
Return Nil


/*
--------------------------------------------------------------------------------
{Protheus.doc} <MenuDef> Botoes de funcionalidades

@author Jonas Nascimento 
@since 08/09/2015
@version<1.00>
@return Array
@example
@see
--------------------------------------------------------------------------------
*/
Static Function MenuDef()
	Local aRotina	:= {}
	
	aadd(aRotina, {"Pesquisar"		, "AxPesqui"	, 0, 1})
	aadd(aRotina, {"Visualizar"		, "AxVisual"	, 0, 2})
	aadd(aRotina, {"Incluir"		, "AxInclui"	, 0, 3})
	aadd(aRotina, {"Alterar"		, "AxAltera"	, 0, 4})
	//aadd(aRotina, {"Excluir"		, "AxDeleta"	, 0, 5})
	aadd(aRotina, {"Legenda"		, "U_ZG3Legen"	, 0, 3})
	
Return aRotina


/*
--------------------------------------------------------------------------------
{Protheus.doc} <fZG3Vld> Funcao para realizar as validacoes do Cadastro de Minutas

@author Jonas Nascimento 
@since 08/09/2015
@version<1.00>
@return 
@example
@see
--------------------------------------------------------------------------------
*/
User Function fZG3Vld(cVal)
	Local _lRet			:= .T.
	Local _cMsgErro		:= ""
	local cExtencoes	:= ".dotx|.dotm|.dot|.html"
	
	/* Validar o nome do arquivo no campo ZG3_ARQUIV */
	If cVal == "ZG3_ARQUIV"	// U_fZG3Vld("ZG3_ARQUIV")
		If !(Substr(AllTrim(M->ZG3_ARQUIV), Len(AllTrim(M->ZG3_ARQUIV))-3, 4)) $ cExtencoes
			_cMsgErro := "Informe o nome do arquivo e sua extensÃ£o!"+CRLF+"Exemplo: '03_PrestacaoServicoPadrao.dot' ou '03_PrestacaoServicoPadrao.html'."
			_lRet := .F.
		EndIf
	EndIf

	/* Validar as macros informadas no campo ZG3_MACROS */
	If cVal == "ZG3_MACROS"	// U_fZG3Vld("ZG3_MACROS")
		If SUBSTR(AllTrim(M->ZG3_MACROS), Len(AllTrim(M->ZG3_MACROS)), 1) <> ";"
			_cMsgErro := "Utilize o seprador ';' entre os nomes das macros e no final!"+CRLF+"Exemplo: TbProd;TbParcela;"
			_lRet := .F.
		EndIf
	EndIf
		
	If !_lRet
		Aviso(FunName()+"/"+ProcName(), _cMsgErro, {"OK"})
	EndIf		
	
Return _lRet
