#include 'protheus.ch'
#include 'dbtree.ch'

/*/{Protheus.doc} MTA110MNU
	Acréscimo de botões ao menu principal.
	LOCALIZAÇÃO : Executado pela rotina MATA110 ( Rotina de atualizacao manual das solicitacoes de compra).
	FINALIDADE : O ponto de entrada 'MTA110MNU' é utilizado para adicionar botões ao Menu Principal através 
		do array aRotina.
	
@author Franklin B. Oliveira
@since 30/11/2017

@type function
/*/
/*/
Alterações realizadas:
Franklin B. Oliveira em 30/11/2017:
	Foi realizado junção dos fontes MT110ROT com o MTA110MNU pois 
	os fontes incluidos no MT110ROT não aparecem na rotina de
	privilégios.
Franklin B. Oliveira - 07/05/2018:
	Foi realizado tratamento para a versão 12.
/*/

User Function MTA110MNU()
Local _aMutuo   := {{"Incluir","U_SICOMA27(3,'SC')",0,4},{"Alterar","U_SICOMA27(4,'SC')",0,4},{"Excluir","U_SICOMA27(5,'SC')",0,4},{"Visualizar","U_SICOMA27(2,'SC')",0,4},{"Imprimir","U_SICOMR03()",0,6}}  // Mutuo
Local _aConting := {{"Consulta Saldo","MsgRun('Consultando saldo. Aguarde...',, {|| U__fBloqSC(.t.) } )",0,2},{"Solicitar","U__fConting",0,4}}  // Contingencia
Local _aModoSC  := {{"Transferir","U_SICOMA51(1)",0,4},{"Consultar","U_SICOMA52(1)",0,4},{"Estornar","U_SICOMA52(2)",0,4}}  // Solicitacao de Compra Compartilhada
//Local lCompraC  := GetMv("SI_COMPRAC")

aAdd(aRotina, {"Contingência",_aConting,0,6}) // Contingência
aAdd(aRotina, {"Mútuo",_aMutuo,0,6}) // Rateio do Mutuo
aAdd(aRotina, {"Modalidade/Entidades","U_SICOMA36",0,4})

aAdd(aRotina, {"Consulta Just.Compras","U_M110JC",0,4})
aAdd(aRotina, {"Proposta Detalhe","U_DTCOMR02",0,4})


//Adic. por Eduardo(DOIT) em 03/03/14
//aAdd(aRotina, {"Enviar WF","U_ENVWF_SC",0,4})

//If (lCompraC)
	//aAdd(aRotina, {"Compra Compartilhada",_aModoSC,0,6})  // Solicitacao de Compra Compartilhada
//Endif

/* Franklin B. Oliveira: Opções existentes no P.E. MT110ROT */
//Adic. por Marcelo Coutinho(DOIT) em 21/03/14
aAdd(aRotina, {"Rel.Gerencial"		, "U_DTCOMR03"  			, 0, 1, 1, nil } )

//Adicionado outras duas opcoes ao menu - Newton Silva 
aAdd(aRotina, {"Anexar TR"			, "U_SF0215X(SC1->C1_NUM)"	, 0, 1, 1, nil } )
aAdd(aRotina, {"Analisar TR"		, "U_SF0216X(SC1->C1_NUM)"  , 0, 1, 1, nil } )
aAdd(aRotina, {"Justificativas" 	, "U_SF0220X(SC1->C1_NUM)"  , 0, 1, 1, nil } )
aAdd(aRotina, {"Estorno Analise TR" , "U_SF0221X(SC1->C1_NUM)"  , 0, 1, 1, nil } )

//Adic. por Do.It MG em 09/10/2014
nPos := aScan(aRotina,{|x| Upper(AllTrim(x[2]))  == Upper('A110ImprI')})  
aRotina[nPos][2] := 'U_DTCOMR05'

//Log de processos
nPos := aScan(aRotina,{|x| Upper(AllTrim(x[2]))  == Upper('COMA100')})
If nPos > 0
	aRotina[nPos][2] := 'U_SF0218X()'
Else
	aAdd(aRotina, {"Log dos Processos", "U_SF0218X()"  , 0, 2, 1, nil } )
EndIf

	aAdd(aRotina, {"Atualizar Filtros","U_SF110AFL()",0,4})

Return aRotina

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_fSldCubo ºAutor  ³Microsiga           º Data ³  06/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Consulta de Saldo Orçamentario                             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function _fSldCubo()
Local _nRet      := 0
Local _cCuboPrv  := Posicione("AL4", 1, xFilial("AL4")+AKJ->AKJ_PRVCFG, "AL4_CONFIG")
Local _cCuboReal := Posicione("AL4", 1, xFilial("AL4")+AKJ->AKJ_REACFG, "AL4_CONFIG")
Local _lSeekAKI  := .f.

AKW->(dbSetOrder(1))
AKW->(MsSeek(xFilial("AKW")+_cCuboPrv))
cChav	  := ""
cChavOri  := ""
aFiltro	  := {}
aCfgAux   := {}
aItCfgBlq := {}
nTamChav  := 0

AKI->(dbSetOrder(1))
AKI->(dbSeek(XFilial("AKI")+_cNumProc+_cItProc))

While AKI->(!Eof()) .and. AKI->(AKI_FILIAL+AKI_PROCES+AKI_ITEM) == XFilial("AKI")+_cNumProc+_cItProc
	IF AKI->AKI_ATIVO == "LBOK"
		_lSeekAKI := .t.
		Exit
	ENDIF
	AKI->(dbSkip())
Enddo

// Se nao existe AKI nao processa
IF !_lSeekAKI
	Return SC1->(C1_QUANT*C1_VUNIT) * (SZW->ZW_PERC/100)
ENDIF

While AKW->(!Eof()) .And. xFilial("AKW")+_cCuboPrv == AKW->(AKW_FILIAL+AKW_COD) .and. AKW->AKW_NIVEL <= AKJ->AKJ_NIVPR
	nTamChav	+=	AKW->AKW_TAMANH
	
	IF AKW->AKW_ALIAS == "CTT" //UO
		aAdd(aFiltro,SC1->C1_CC)
		cChaveAtu := SC1->C1_CC
	ELSEIF AKW->AKW_ALIAS == "CTD" // CR
		aAdd(aFiltro,SC1->C1_ITEMCTA)
		cChaveAtu := SC1->C1_ITEMCTA
	ELSEIF AKW->AKW_ALIAS == "CTH" // CR
		aAdd(aFiltro,SC1->C1_CLVL)
		cChaveAtu := SC1->C1_CLVL
	ELSEIF AKW->AKW_ALIAS == "AK5" // Conta
		aAdd(aFiltro,SC1->C1_CONTA)
		cChaveAtu := SC1->C1_CONTA
	ELSEIF AKW->AKW_ALIAS == "AKF" // Operacao
		aAdd(aFiltro,&(AKI->AKI_OPER))
		cChaveAtu := &(AKI->AKI_OPER)
	ELSEIF AKW->AKW_ALIAS == "CV0" // Operacao
		IF "ENT05" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT05)
		ELSEIF "ENT06" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT06)
		ELSEIF "ENT07" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT07)
		ELSEIF "ENT08" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT08)
		ELSEIF "ENT09" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT09)
		ENDIF
		aAdd(aFiltro,cChaveAtu)
	ELSEIF AKW->AKW_ALIAS == "AK6" // Classe
		aAdd(aFiltro,&(AKI->AKI_CLASSE))
		cChaveAtu := &(AKI->AKI_CLASSE)
	ELSEIF AKW->AKW_ALIAS == "AL2" // Tipo de Saldo
		aAdd(aFiltro,&(AKI->AKI_TPSALD))
		cChaveAtu := &(AKI->AKI_TPSALD)
	ELSE
		aAdd(aFiltro,&(AKW->AKW_CHAVER))
		cChaveAtu := &(AKW->AKW_CHAVER)
	ENDIF
	
	cChaveRel := If(!Empty(AKW->AKW_CODREL),&(AKW->AKW_CODREL),cChaveAtu)
	
	If Empty(cChaveRel)
		cChaveRel := &(AKW->AKW_CHAVER)
	EndIf
	
	cChav	+=	If(!Empty(cChaveRel),cChaveRel,PadR(cChaveAtu,AKW->AKW_TAMANH))
	cChavOri := Padr(cChavOri+cChaveAtu,nTamChav)
	
	If AKJ->AKJ_NIVPR==AKW->AKW_NIVEL
		cChaveR := &(AKW->AKW_CONCCH)
		aAdd(aItCfgBlq,{cChav,{Nil},AKW->AKW_CONCDE,AKW->AKW_ALIAS,AKW->AKW_ALIAS,&(AKW->AKW_DESCRE),0,Val(AKW->AKW_NIVEL),cChavOri,.F.,0,.F.,"",Iif(!Empty(cChaveRel),cChaveRel,PadR(cChaveAtu,AKW->AKW_TAMANH))})
	EndIf
	
	AKW->(dbSkip())
EndDo

nMoedaCfg := AKJ->AKJ_MOEDPR

aProcPrv := PcoRunCube(_cCuboPrv, 1, "U__fPCOPar", AKJ->AKJ_PRVCFG, 0,,.F.,aFiltro,aFiltro,.T.,aCfgAux,/*lProcessa*/,/*lVerAcesso*/,/*lForceNoSint*/,aItCfgBlq,/*aFiltCfg*/,/*cArqAKT*/,/*lLimpArqAKT*/,/*lVisao*/,.T./*lBloqueio*/)

IF Len(aProcPrv) <> 0
	_nValPrv := IIF(ValType(aProcPrv[1][2][1]) == "N",aProcPrv[1][2][1],0)
ELSE
	_nValPrv := 0
ENDIF

AKW->(MsSeek(xFilial("AKW")+_cCuboReal))

aFiltro	  := {}
aCfgAux   := {}
aItCfgBlq := {}
cChav	  := ""
cChavOri  := ""
nTamChav  := 0

While AKW->(!Eof()) .and. xFilial("AKW")+_cCuboReal == AKW->(AKW_FILIAL+AKW_COD) .and. AKW->AKW_NIVEL <= AKJ->AKJ_NIVRE
	nTamChav	+=	AKW->AKW_TAMANH
	
	IF AKW->AKW_ALIAS == "CTT" //UO
		aAdd(aFiltro,SC1->C1_CC)
		cChaveAtu := SC1->C1_CC
	ELSEIF AKW->AKW_ALIAS == "CTD" // CR
		aAdd(aFiltro,SC1->C1_ITEMCTA)
		cChaveAtu := SC1->C1_ITEMCTA
	ELSEIF AKW->AKW_ALIAS == "CTH" // CR
		aAdd(aFiltro,SC1->C1_CLVL)
		cChaveAtu := SC1->C1_CLVL
	ELSEIF AKW->AKW_ALIAS == "AK5" // Conta
		aAdd(aFiltro,SC1->C1_CONTA)
		cChaveAtu := SC1->C1_CONTA
	ELSEIF AKW->AKW_ALIAS == "AKF" // Operacao
		aAdd(aFiltro,&(AKI->AKI_OPER))
		cChaveAtu := &(AKI->AKI_OPER)
	ELSEIF AKW->AKW_ALIAS == "CV0" // Operacao
		IF "ENT05" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT05)
		ELSEIF "ENT06" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT06)
		ELSEIF "ENT07" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT07)
		ELSEIF "ENT08" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT08)
		ELSEIF "ENT09" $ AKW->AKW_CHAVER
			cChaveAtu := &(AKI->AKI_ENT09)
		ENDIF
		aAdd(aFiltro,cChaveAtu)
	ELSEIF AKW->AKW_ALIAS == "AK6" // Classe
		aAdd(aFiltro,&(AKI->AKI_CLASSE))
		cChaveAtu := &(AKI->AKI_CLASSE)
	ELSEIF AKW->AKW_ALIAS == "AL2" // Tipo de Saldo
		aAdd(aFiltro,&(AKI->AKI_TPSALD))
		cChaveAtu := &(AKI->AKI_TPSALD)
	ELSE
		aAdd(aFiltro,&(AKW->AKW_CHAVER))
		cChaveAtu := &(AKW->AKW_CHAVER)
	ENDIF
	
	cChaveRel := If(!Empty(AKW->AKW_CODREL),&(AKW->AKW_CODREL),cChaveAtu)
	
	If Empty(cChaveRel)
		cChaveRel := &(AKW->AKW_CHAVER)
	EndIf
	
	cChav	+=	If(!Empty(cChaveRel),cChaveRel,PadR(cChaveAtu,AKW->AKW_TAMANH))
	cChavOri := Padr(cChavOri+cChaveAtu,nTamChav)
	If AKJ->AKJ_NIVRE==AKW->AKW_NIVEL
		cChaveR := &(AKW->AKW_CONCCH)
		cChaveRD := AKW->AKW_CONCDE
		
		If AKJ->AKJ_NIVPR==AKW->AKW_NIVEL
			cChaveR := &(AKW->AKW_CONCCH)
			aAdd(aItCfgBlq, {cChav,{Nil},AKW->AKW_CONCDE,AKW->AKW_ALIAS,AKW->AKW_ALIAS,&(AKW->AKW_DESCRE),0,Val(AKW->AKW_NIVEL),cChavOri,.F.,0,.F.,"",If(!Empty(cChaveRel),cChaveRel,PadR(cChaveAtu,AKW->AKW_TAMANH))})
		EndIf
		
	EndIf
	
	AKW->(dbSkip())
EndDo

nMoedaCfg := AKJ->AKJ_MOEDRZ

aProcReal := PcoRunCube(_cCuboReal, 1, "U__fPCOPar", AKJ->AKJ_REACFG, 0,,.F.,aFiltro,aFiltro,.T.,aCfgAux,/*lProcessa*/,/*lVerAcesso*/,/*lForceNoSint*/,aItCfgBlq,/*aFiltCfg*/,/*cArqAKT*/,/*lLimpArqAKT*/,/*lVisao*/,.T./*lBloqueio*/)

IF Len(aProcReal) <> 0
	_nValReal := IIF(ValType(aProcReal[1][2][1]) == "N",aProcReal[1][2][1],0)
ELSE
	_nValReal := 0
ENDIF

_nRet := _nValPrv - _nValReal

Return(IIF(_nRet<0,0,_nRet))

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³_fGRVCont ºAutor  ³Microsiga           º Data ³  23/04/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Gravacao da Contingencia                                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11 - SISTEMA INDUSTRIA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function _fGRVCtg(_aDadosBloq)
Local _cNumProc  := "000051"
Local _cItProc   := "02"
Local _cIDCtg 	 := _cNumProc+_cItProc+SC1->C1_NUM // Chave da Pesquisa
Local _cChaveBlq := _aDadosBloq[1] // Chave do Bloqueio
Local _nValPrv 	 := _aDadosBloq[2] // Valor "Previsto"
Local _nValReal  := SC1->(C1_QUANT*C1_VUNIT) // Valor "Realizado"
Local _nMoedaCfg := 1 // Moeda
Local _nIndicAKB := Posicione("AKB",1,XFilial("AKB")+_cNumProc+_cItProc,"AKB_INDICE")
Local _aCodBloq  := {}
Local lRetorno  := .t.

// Pesquisa codigo de bloqueio
AKH->(dbSetOrder(1))
IF AKH->(dbSeek(XFilial("AKH")+_cNumProc+_cItProc))
	While AKH->(!Eof()) .And. xFilial("AKH")+_cNumProc+_cItProc == AKH->(AKH_FILIAL+AKH_PROCES+AKH_ITEM)
		
		If AKH->AKH_ATIVO == "LBOK"
			
			AKJ->(dbSetOrder(1))
			IF AKJ->(MsSeek(xFilial("AKJ")+AKH->AKH_CODBLQ))
				Aadd(_aCodBloq,AKJ->AKJ_COD)
			EndIf
			
		ENDIF
		
		AKH->(dbSkip())
	Enddo
ENDIF

IF Len(_aCodBloq) == 0
	MsgInfo("Nenhum bloqueio ativo foi localizado. Verifique!")
	Return .f.
ELSEIF Len(_aCodBloq) > 1
	MsgInfo("Deve existir apenas um bloqueio ativo para o processo de Solicitação de Compras. Verifique!")
	Return .f.
ENDIF

AKJ->(dbSetOrder(1))
AKJ->(MsSeek(xFilial("AKJ")+_aCodBloq[1]))

ALI->(dbOrderNickName("SIALI01"))
IF ALI->(dbSeek(xFilial("ALI")+SC1->C1_NUM))
	_cSeqCTG := U_ALJNextID(ALI->ALI_CDCNTG)
ELSE
	lRetorno := PCOA530ALC(1,_aCodBloq[1],{_cNumProc,_nValReal,_nValPrv,_nMoedaCfg,_cChaveBlq,_cIDCtg,/*cObs*/})
	_cSeqCTG := StrZero(1,TamSX3('ALJ_ID' )[1])
ENDIF

If lRetorno
	// Posiciona AKI
	AKI->(dbSetOrder(1))
	AKI->(dbSeek(XFilial("AKI")+_cNumProc+_cItProc))
	
	While AKI->(!Eof()) .and. AKI->(AKI_FILIAL+AKI_PROCES+AKI_ITEM) == XFilial("AKI")+_cNumProc+_cItProc
		IF AKI->AKI_ATIVO == "LBOK"
			Exit
		ENDIF
		AKI->(dbSkip())
	Enddo
	
	// Gravacao da Contingencia
	RecLock('ALJ',.T.)
	ALJ->ALJ_FILIAL  := xFilial('ALJ')
	ALJ->ALJ_CO		 := SC1->C1_CONTA
	ALJ->ALJ_DATA	 := &(AKI->AKI_DATA)
	ALJ->ALJ_CLASSE	 := &(AKI->AKI_CLASSE)
	ALJ->ALJ_OPER	 := &(AKI->AKI_OPER)
	ALJ->ALJ_TIPO	 := &(AKI->AKI_TIPO)
	ALJ->ALJ_HIST	 := &(AKI->AKI_HIST)
	ALJ->ALJ_PROCES	 := _cNumProc
	ALJ->ALJ_CHAVE	 := "SC1"+&("SC1->("+SC1->(IndexKey())+")")
	ALJ->ALJ_ITEM	 := _cItProc
	ALJ->ALJ_SEQ	 := "01"
	ALJ->ALJ_USER	 := ALI->ALI_USER
	ALJ->ALJ_COSUP	 := Posicione("AK5",1,XFilial("AK5")+SC1->C1_CONTA,"AK5_COSUP")
	ALJ->ALJ_CC		 := SC1->C1_CC
	ALJ->ALJ_ITCTB	 := SC1->C1_ITEMCTA
	ALJ->ALJ_CLVLR	 := SC1->C1_CLVL
	ALJ->ALJ_ENT05	 := SC1->C1_EC05DB
	ALJ->ALJ_ENT06	 := SC1->C1_EC06DB
	ALJ->ALJ_ENT07	 := SC1->C1_EC07DB
	ALJ->ALJ_ENT08	 := SC1->C1_EC08DB
	ALJ->ALJ_ENT09	 := SC1->C1_EC09DB
	ALJ->ALJ_ID		 := _cSeqCTG
	ALJ->ALJ_CDCNTG	 := ALI->ALI_CDCNTG
	ALJ->ALJ_LOTEID	 := _cIDCtg
	ALJ->ALJ_TPSALDO := "CT" //LANCANDO EM SALDO DE CONTINGENCIA
	ALJ->ALJ_VALOR1	 := _nValReal-_nValPrv
	ALJ->(MsUnLock())
	
	// Grava Nr. da contingencia na SC
	RecLock("SC1",.F.)
	SC1->C1_XCDCNTG := ALJ->ALJ_CDCNTG
	SC1->(msUnLock())
	
	//ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
	//º Lançamento de Empenho de Contingencia     º
	//ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
	If ALJ->(FieldPos("ALJ_EMPVAL")) > 0
		RecLock('ALJ',.F.)
		ALJ_EMPVAL	:= _nValPrv
		MsUnLock()
	EndIf
	
Else
	IF GetRemoteType() == -1
		Conout("BLOQUEIO DE SC: Nao existe aprovador cadastrado para liberacao deste bloqueio (tipo de bloqueio, chave e valores).")
	ELSE
		Aviso("Atencao","Nao existe aprovador cadastrado para liberacao deste bloqueio (tipo de bloqueio, chave e valores).",{"Ok"})
	ENDIF
	
	DisarmTransaction()
	Break
Endif

Return(lRetorno)

User Function EnvWF_SC()
/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Valida Envio Manual do WF de Solicitacao Compras
<Autor> : Eduardo Fernandes
<Data> : 04/03/2014
<Parametros> : Nenhum
<Retorno> : Nenhum
<Processo> : Solicitacao Compras
<Tipo> (Especificas ) : M
<Obs> : Valida/Executa WF de SC (U_CWKFA001) 
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/
Local aArea := GetArea()

If SC1->C1_APROV == "L" // verifica se ja foi liberado
	MsgStop("Esta solicitação já foi liberada, para reenviar é necessário bloquear a solicitação novamente!")
//ElseIf SC1->C1_XWFSTAT # '2' //pendente p/ envio
//	MsgStop("O STATUS dessa solicitação é SOMENTE SALVAR, para enviar modifique p/ SALVAR e ENVIAR WF")
Else
	// executa rotina Envio WF
	MsgRun('Enviando solicitação para aprovação...',, {|| U_CWKFA001(,XFilial("SC1"),SC1->C1_NUM) } )
EndIf

RestArea(aArea)
Return                                 


/*/f/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> : Exibe informaçoes de justificativa de compra             
<Autor> : Antonio Cordeiro. 
<Data> : 08/05/2014
<Parametros> : Nenhum
<Retorno> : Nenhum
<Processo> : Solicitacao Compras
<Tipo> (Especificas ) : M
<Obs> :  
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/

User Function M110JC()

Local cJustCom:= SC1->C1_XJUSTIF
Local cObserv  := ""
Local cTexto   := ""
Local oMemo
Local oFont
Local cFileLog := ""
Local cMask    := ""

cTexto += Replicate( "-", 65 ) +chr(13)+chr(10)
cTexto += Replicate( "*", 65 ) +chr(13)+chr(10)
cTexto += "   Conteúdo do campo Justificativa de Compras "+chr(13)+chr(10)
cTexto += Replicate( "*", 65 ) +chr(13)+chr(10)
cTexto += Replicate( "-", 65 ) + CRLF + CRLF + CRLF


for i:=1 to len(cJustCom)
	
	cObserv += substr(cJustCom,i,1)
	
	if i % 80 == 0
		cObserv += chr(13)+chr(10)
	endif
	
next i

If !Empty(alltrim(cObserv))
	
	cTexto += cObserv
	
	cFileLog := MemoWrite( CriaTrab( , .F. ) + ".log", cTexto )
	
	Define Font oFont Name "Arial" Size 8, 12 
	
	Define MsDialog oDlg Title "Totvs" From 3, 0 to 340, 725 Pixel
	
	@ 5, 5 Get oMemo Var cTexto Memo When .F. Size 352, 145 Of oDlg Pixel //FONT oDlg:oFont COLOR CLR_BLACK,CLR_HGRAY 
	oMemo:bRClicked := { || AllwaysTrue() }
	oMemo:oFont     := oFont 
	
	Define SButton From 153, 275 Type  1 Action oDlg:End() Enable Of oDlg Pixel // Apaga
	
	Activate MsDialog oDlg Center
	
EndIf

Return()


