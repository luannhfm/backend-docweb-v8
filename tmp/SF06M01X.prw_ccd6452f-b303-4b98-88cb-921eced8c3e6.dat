#Include 'Protheus.ch'

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SF06M01X  ºAutor  ³Walmir Junior       º Data ³  23/03/17   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Fonte da customização de Integração Nota Control.          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ J2A                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

User Function SF06M01X()
Local _oDlg
Local _cBKPFile := "/system/SF06M01X_param_" + __cUserId + ".TXT"
Local _cBKPPAr := ""
Local _cA2De := Space(TamSX3("A2_COD")[1])
Local _cLjDe := Space(TamSX3("A2_LOJA")[1])
Local _cA2At := Space(TamSX3("A2_COD")[1])
Local _cLjAt := Space(TamSX3("A2_LOJA")[1])
Local _lOk:=.F.

Local _dEmDe := CToD('  /  /  ')
Local _dEmAt := CToD('  /  /  ')

Local _oForOut

Local _oTpA2
Local _cTpA2 := Space(TamSX3("A2_TIPO")[1])
Local _aTpA2 := {"F-Pessoa Física","J-Pessoa Jurídica","A-Ambas"}

Local _oCnFl
Local _cCnFl := " "
Local _aCnFl := {"N-Não", "S-Sim"}

Local _cFil := Space(TamSX3("A2_FILIAL")[1])
Local _cDoc := Space(200)
Local _cForOut := Space(200)

Private _cA2Alt

// Restaura variaveis
_cBKPPar := MemoRead(_cBKPFile)
_aBkpPar := StrTokArr(_cBKPPar, CRLF)
If Len(_aBkpPar) == 10
	_cFil    := _aBkpPar[01]
	_cTpA2   := _aBkpPar[02]
	_cA2De   := _aBkpPar[03]
	_cLjDe   := _aBkpPar[04]
	//_cA2At   := _aBkpPar[05]
	//_cLjAt   := _aBkpPar[06]
	_dEmDe   := SToD(_aBkpPar[07])
	_dEmAt   := SToD(_aBkpPar[08])
	_cForOut := PadR(_aBkpPar[09],200)
	_cDoc    := PadR(_aBkpPar[10],200)
EndIf

//+-------------+
//|	Monta Tela	|
//+-------------+
DEFINE DIALOG _oDlg FROM 0,0 TO 280,400 TITLE "Parâmetros para Geração do Arquivo" OF oMainWnd PIXEL

@ 002,002 GROUP TO 118,200 LABEL "" OF _oDlg PIXEL

@ 004,004 Say "Informe os parâmetros desejados."	SIZE 197,008 OF _oDlg PIXEL
//Filial De Até
@ 015,004 Say "Filial" 		SIZE 197,008 OF _oDlg PIXEL //015
@ 024,004 MsGet _cFil SIZE 50,8 OF _oDlg PIXEL HASBUTTON F3 "SM0" WHEN .T. //024
//Tipo Fornecedor
@ 036,004 Say "Tipo Fornecedor"	SIZE 197,008 OF _oDlg PIXEL //036
@ 044,004 COMBOBOX _oTpA2 VAR _cTpA2 ITEMS _aTpA2 SIZE 120, 009 OF _oDlg PIXEL //044

/* j2a.caiolima - 21/08/2017 - retirado os campos fornecedo de-até
//Fornecedor De
@ 056,004 Say "Do Fornecedor" 	SIZE 197,008 OF _oDlg PIXEL //056
@ 064,004 MsGet _cA2De SIZE 50,8 OF _oDlg PIXEL HASBUTTON F3 "SA2A" WHEN .T. //064
@ 056,070 Say "Lj Fornecedor"	SIZE 197,008 OF _oDlg PIXEL //056
@ 064,070 MsGet _cLjDe SIZE 50,8 OF _oDlg PIXEL //064
//Fornecedor Até
@ 076,004 Say "Até Fornecedor" 	SIZE 197,008 OF _oDlg PIXEL //076
@ 084,004 MsGet _cA2At SIZE 50,8 OF _oDlg PIXEL HASBUTTON F3 "SA2A" WHEN .T. //084
@ 076,070 Say "Lj Fornecedor"	SIZE 197,008 OF _oDlg PIXEL //076
@ 084,070 MsGet _cLjAt SIZE 50,8 OF _oDlg PIXEL //084
*/

//Emissão De
@ 056,004 Say "De Emissão" 		SIZE 197,008 OF _oDlg PIXEL //096
@ 064,004 MsGet _dEmDe PICTURE "@D" SIZE 50,8 OF _oDlg PIXEL HASBUTTON //104
//Emissão Até
@ 056,070 Say "Até Emissão"		SIZE 197,008 OF _oDlg PIXEL //116
@ 064,070 MsGet _dEmAt PICTURE "@D" SIZE 50,8 OF _oDlg PIXEL HASBUTTON //124

// Fornecedores outros documentos
@ 076,004 Say "CNPJ/CPF Fornecedor tipo Outros (Separados por ';')"	SIZE 197,008 OF _oDlg PIXEL //116
@ 084,004 MsGet _oForOut VAR _cForOut PICTURE SIZE 150,8 OF _oDlg PIXEL HASBUTTON //124
_oForOut:cToolTip := "Caso os fornecedores informados nesse campo possuam notas" + CRLF + ;
                     "com a espécie igual a NFS a mesma irar para o arquivo" + CRLF + ;
                     "com tipo igual a 3 (Outros documentos)"

/*Cons. Filiais Abaixo
@ 116,004 Say "Cons. Filiais Abaixo"		SIZE 197,008 OF _oDlg PIXEL
@ 124,004 COMBOBOX _oCnFl VAR _cCnFl ITEMS _aCnFl SIZE 120, 009 OF _oDlg PIXEL;*/

//Excluir Documentos
@ 096,004 Say "Excluir Nº Documentos (Separados por ';')" 		SIZE 197,008 OF _oDlg PIXEL 
@ 104,004 MsGet _cDoc SIZE 150,8 OF _oDlg PIXEL WHEN .T. 

//Botão Fornecedores S/ Insc
@ 125,003 BUTTON "Sem Inscrição" SIZE 050,013 PIXEL OF _oDlg ACTION (fA2SVld())

//Botão de Ação
@ 125,130 BUTTON "Ok" SIZE 030,013 PIXEL OF _oDlg ACTION ( Iif(fFltRg(_cA2De, _cLjDe, _cA2At, _cLjAt, _dEmDe, _dEmAt, _cTpA2, _cCnFl, _cFil, _cForOut, _cDoc),(_oDlg:End(),_lOk:=.T.),) )
//Botão de Cancelar
@ 125,170 BUTTON "Cancelar" SIZE 030,013 PIXEL OF _oDlg ACTION (_oDlg:End())

ACTIVATE MSDIALOG _oDlg

If _lOk
	// tratativa para salvar os parametros digitados na tela
	
	_cBKPPar := _cFil + CRLF
	_cBKPPar += _cTpA2 + CRLF
	_cBKPPar += _cA2De + CRLF
	_cBKPPar += _cLjDe + CRLF
	_cBKPPar += _cA2At + CRLF
	_cBKPPar += _cLjAt + CRLF
	_cBKPPar += DToS(_dEmDe) + CRLF
	_cBKPPar += DToS(_dEmAt) + CRLF
	_cBKPPar += _cForOut + CRLF
	_cBKPPar += _cDoc
	
	MemoWrite(_cBKPFile, _cBKPPar )
EndIf

Return

Static Function fA2SVld()
Local _oDlg
Local _cA2NVl	:= Iif(VALTYPE(_cA2Alt) == "U",Replace(SuperGetMv("MV_XA2NVLD",,""), ",", ";"),_cA2Alt)
Local _cA2S 	:= PADR(_cA2NVl,250," ")

//+-------------+
//|	Monta Tela	|
//+-------------+
DEFINE DIALOG _oDlg FROM 0,0 TO 200,400 TITLE "Fornecedores S/ Insc Municipal/Prestador ISSQN" OF oMainWnd PIXEL

@ 002,002 GROUP TO 70,200 LABEL "" OF _oDlg PIXEL

@ 004,004 Say "Código dos fornecedores sem 'insc. municipal' ou 'insc. prestador' no ISSQN."	SIZE 197,008 OF _oDlg PIXEL
@ 013,004 Say "ATENÇÃO: Os códigos devem ser separados por ';'."	SIZE 197,008 OF _oDlg PIXEL
//Fornecedor De
@ 024,004 Say "CNPJ/CPF Fornecedores" 	SIZE 197,008 OF _oDlg PIXEL
@ 033,004 MsGet _cA2S SIZE 180,8 OF _oDlg PIXEL WHEN .T.

//Botão de Ação
@ 80,130 BUTTON "Ok" SIZE 030,013 PIXEL OF _oDlg ACTION ( fPutA2(_cA2S), _oDlg:End() )
//Botão de Cancelar
@ 80,170 BUTTON "Cancelar" SIZE 030,013 PIXEL OF _oDlg ACTION (_oDlg:End())

ACTIVATE MSDIALOG _oDlg

Return

Static Function fPutA2(_cA2S)

_cA2S := AllTrim(_cA2S)

_cA2S := Iif( subStr(_cA2S, Len(_cA2S),1) == ";", subStr(_cA2S, 1,Len(_cA2S)-1),_cA2S)
_cA2S := Iif( subStr(_cA2S,1,1) == ";", subStr(_cA2S, 2,Len(_cA2S)),_cA2S)

PutMv( "MV_XA2NVLD", _cA2S )

_cA2Alt :=  PADR(_cA2S,250," ")

Return .T.

Static Function fFltRg(_cA2De, _cLjDe, _cA2At, _cLjAt, _dEmDe, _dEmAt, _cTpA2, _cCnFl, _cFil, _cForOut, _cDoc)
Local _cMask    := "Arquivos Texto (*.*) |*.*|"
Local _cDir		
//Local _cSrISS	:= GetMV("MV_XSERISS",,"")
Local _aSrISS	:= {}

Local _cQuery	:=	""
Local _cArq		:=	""
Local _cTxtAux	:=	""
Local _nOpen
Local _lRet		:= .T.
Local _aSmIns	:=	{}

//Tratativa Fornecedores sem Insc Municipal ou Insc Prestador no ISSQN
Local _cA2NVl := Alltrim(Iif(VALTYPE(_cA2Alt) == "U",Replace(SuperGetMv("MV_XA2NVLD",,""), ",", ";"),_cA2Alt))

_cA2NVl := Iif( subStr(_cA2NVl, Len(_cA2NVl),1) == ";", subStr(_cA2NVl, 1,Len(_cA2NVl)-1),_cA2NVl)
_cA2NVl := Iif( subStr(_cA2NVl,1,1) == ";", subStr(_cA2NVl, 2,Len(_cA2NVl)-1),_cA2NVl)

_cDoc	:= Iif( subStr(_cDoc, Len(_cDoc),1) == ";", subStr(_cDoc, 1,Len(_cDoc)-1),_cDoc)
_cDoc	:= Iif( subStr(_cDoc,1,1) == ";", subStr(_cDoc, 2,Len(_cDoc)-1),_cDoc)

If fVldFil(_cA2De, _cLjDe, _cA2At, _cLjAt, _dEmDe, _dEmAt, _cTpA2, _cCnFl, _cFil)
Else
	Return .F.
EndIf
/*
If Empty(_cSrISS)
	Aviso("Atenção", "É obrigatório que o parâmetro [MV_XSERISS] esteja configurado.",{"Ok"})
	Return
EndIf*/ 
//Tratamento dos valores do parâmetro de series de NFS.
/*_aSrISS := StrTokArr(_cSrISS, ";")
_cSrISS := ""
For _nx := 1 to Len(_aSrISS)
	_cSrISS += _aSrISS[_nx] + Iif(_nx == Len(_aSrISS),"",";")
Next*/ 

If !Empty(_cForOut)
	_cForOut :=  "('" + StrTran(AllTrim(_cForOut), ";", "','") + "')"
EndIf

//Geração do Nome do Arquivo.
_cArq := "NCTRL_" + AllTrim(Str(Day(Date()))) + subStr(MesExtenso(Month(Date())),1,3) + StrTran(time(),":","") + ".txt"

//Efetua Consulta de Funcionários.
_cQuery += "	Select "
_cQuery += "	(CASE WHEN RTRIM(F1_ESPECIE) = 'RPS' THEN '6' "
If !Empty(_cForOut)
	_cQuery += "	     WHEN RTRIM(F1_ESPECIE) = 'NFS' AND RTRIM(F1_FORNECE) IN "+ _cForOut +" THEN '3' "
EndIf
_cQuery += "	     WHEN A2_MUN != 'CUIABA' THEN '4' "
_cQuery += "	     ELSE '13' END )  As MODELO "
_cQuery += "	,F1_FILIAL "
_cQuery += "	,F1_DOC "
_cQuery += "	,F1_SERIE "
_cQuery += "	,F1_FORNECE "
_cQuery += "	,F1_LOJA "
_cQuery += "	,F1_EMISSAO "
_cQuery += "	,F1_DTDIGIT "
_cQuery += "	,F1_ESPECIE "
_cQuery += "	,F1_PREFIXO "
_cQuery += "	,F1_HORA "
_cQuery += "	,A2_CGC "
_cQuery += "	,A2_NOME "
_cQuery += "	,A2_END "
_cQuery += "	,A2_BAIRRO "
_cQuery += "	,A2_EST "
_cQuery += "	,A2_MUN "
_cQuery += "	,A2_CEP "
_cQuery += "	,(Case When A2_RECISS = 'S' Then '0' Else '1' End) As A2_RECISS "
_cQuery += "	,(CASE WHEN F1_ESPECIE = 'RPS' THEN A2_INSCRM "
_cQuery += "	     WHEN A2_MUN != 'CUIABA' THEN A2_XINSCPR "
_cQuery += "	     ELSE A2_INSCRM END ) As A2_INSCRM "
_cQuery += "	,A2_NR_END "
_cQuery += "	,A2_DDD, '1' As TRIB "
_cQuery += "	,Replace(TO_CHAR(F1_VALBRUT, '99999999999999999D99'),',','.') As F1_VALBRUT "
_cQuery += "	,Replace(TO_CHAR(D1_ALIQISS, '99999999999999999D99'),',','.') As D1_ALIQISS "
_cQuery += "	,Replace(TO_CHAR(SUM(D1_BASEISS), '99999999999999999D99'),',','.') As D1_BASEISS "
_cQuery += "	,A2_COD "
//_cQuery += "	,Replace(TO_CHAR(D1_TOTAL, '99999999999999999D99'),',','.') As D1_TOTAL "
_cQuery += "	From "+RetSqlName("SF1")+" SF1 INNER JOIN"
_cQuery += "	  "+RetSqlName("SA2")+" SA2 ON SA2.D_E_L_E_T_ = ' ' AND SA2.A2_COD = SF1.F1_FORNECE AND SA2.A2_LOJA = SF1.F1_LOJA INNER JOIN "
_cQuery += "	  "+RetSqlName("SD1")+" SD1 ON SD1.D_E_L_E_T_ = ' ' AND SD1.D1_FILIAL = SF1.F1_FILIAL AND SD1.D1_DOC = SF1.F1_DOC AND "
_cQuery += "	                SD1.D1_SERIE = SF1.F1_SERIE AND SD1.D1_FORNECE = SF1.F1_FORNECE AND SD1.D1_LOJA = SF1.F1_LOJA "
//_cQuery += "	  "+RetSqlName("SF4")+" SF4 ON SF4.D_E_L_E_T_ = ' ' AND SF4.F4_CODIGO = SD1.D1_TES "
_cQuery += "	Where "
_cQuery += "	  SF1.D_E_L_E_T_ = ' ' "
_cQuery += "	  AND SF1.F1_ESPECIE IN ('NFS', 'RPS') "
_cQuery += "	  AND SF1.F1_TIPO = 'N' "
_cQuery += "	  AND SF1.F1_STATUS = 'A' "
_cQuery += "	  AND SD1.D1_BASEISS != 0 "
_cQuery += "	  AND SD1.D1_VALISS != 0 "
//_cQuery += "	  AND SF1.F1_SERIE IN ('"+ StrTran(_cSrISS, ";", "','") + "') "

If !Empty(_cA2De) .And. !Empty(_cA2At)
	_cQuery += "	AND  SF1.F1_FORNECE Between '"+ _cA2De +"' AND '"+ _cA2At +"' "
	If !Empty(_cLjDe) .And. !Empty(_cLjAt)
		_cQuery += "	AND  SF1.F1_LOJA Between '"+ _cLjDe +"' AND '"+ _cLjAt +"' "
	EndIf
EndIf

If !Empty(_dEmDe) .And. !Empty(_dEmAt)
	_cQuery += "	AND  SF1.F1_EMISSAO Between '"+ dToS(_dEmDe) +"' AND '"+ dToS(_dEmAt) +"' "
EndIf

If !Empty(_cTpA2) .And. SubStr(_cTpA2,1,1) $ 'F#J'
	_cQuery += "	AND  (SA2.A2_TIPO = '"+ SubStr(_cTpA2,1,1) +"' "
ElseIf  !Empty(_cTpA2)
	_cQuery += "	AND  (SA2.A2_TIPO in ('F','J') "
EndIf

If !Empty(_cForOut)
	_cQuery += " OR A2_CGC IN "+ _cForOut +" ) "
Else
	_cQuery += ") "
EndIf


If !Empty(_cFil)
	_cQuery += "	AND  SF1.F1_FILIAL = '"+ _cFil +"' "
Else
	_cQuery += "	AND  SF1.F1_FILIAL = '"+ xFilial("SF1") +"' "
EndIf

If !Empty(_cDoc)
	_cQuery += "	AND  LTRIM(RTRIM(SF1.F1_DOC)) not in ('"+ Replace(AllTrim(_cDoc),";","','") + "') "
EndIf

_cQuery += " Group By  F1_ESPECIE, A2_MUN, F1_FILIAL,  F1_DOC,  F1_SERIE, F1_FORNECE, F1_LOJA, F1_EMISSAO,F1_VALBRUT, F1_DTDIGIT, F1_ESPECIE, F1_PREFIXO,"
_cQuery += "  F1_HORA,  A2_COD,  A2_CGC,  A2_NOME,  A2_END,  A2_BAIRRO,  A2_EST,  A2_MUN,  A2_CEP, A2_RECISS, A2_INSCRM, A2_XINSCPR, A2_NR_END, A2_DDD, D1_ALIQISS"

_cQuery += " Order By F1_ESPECIE, A2_MUN, F1_FILIAL,  F1_DOC,  F1_SERIE, F1_FORNECE, F1_LOJA, F1_EMISSAO,F1_VALBRUT, F1_DTDIGIT, F1_ESPECIE, F1_PREFIXO,"
_cQuery += "  F1_HORA,  A2_COD,  A2_CGC,  A2_NOME,  A2_END,  A2_BAIRRO,  A2_EST,  A2_MUN,  A2_CEP, A2_RECISS, A2_INSCRM, A2_XINSCPR,  A2_NR_END, A2_DDD, D1_ALIQISS"


MemoWrite("D:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)

If Select("TMP")>0
	TMP->(DbCloseArea())
EndIf

DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),"TMP",.t.,.t.)  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Seleciona a Tabela temporaria e Inicia Loop para Tratar os Dados |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("TMP")
TMP->(dbGoTop())

If TMP->(!Eof())
	Do While TMP->(!Eof())
		If Empty(TMP->(A2_INSCRM)) .AND. !(AllTrim(TMP->(A2_COD)) $ _cA2NVl)
			aAdd(_aSmIns, {TMP->(A2_COD), TMP->(A2_CGC), TMP->(A2_NOME), TMP->(A2_EST), TMP->(A2_MUN)})
			_lRet := .F.
		EndIf		
		TMP->(DbSkip())
	EndDo
EndIf 

If _lRet == .F.
	U_SF06M02X(_aSmIns)
	Aviso("Atenção", "Operação cancelada por falta de informações!", {"Ok"})
	Return _lRet
EndIf

TMP->(dbGoTop())

If TMP->(!Eof())
	//Se retornaram registros, então abre tela para definir diretório de destino do arquivo.
	_cDir		:= cGetFile(_cMask,"Selecione o diretório de destino",,,.T.,nOR(GETF_RETDIRECTORY,GETF_LOCALHARD))
  	
  	//Tenta abrir o arquivo, caso o arquivo não exista, a variável _nOpen é preenchida com -1.
	_nOpen := FOpen(_cDir+_cArq,2)
	
	If _nOpen == -1
		_nOpen := FCreate(_cDir+_cArq)
	EndIf

	If _nOpen == -1 
		Alert("Erro ao abrir ou gerar o arquivo: '" +_cDir+_cArq+"'")
	Else
		//Monta o Cabeçalho no Arquivo
		_cTxtAux := AllTrim(SM0->M0_INSCM)		+";"+;
					StrZero(Month(_dEmDe),2)	+";"+;
					Alltrim(Str(Year(_dEmDe)))	+";"+;
					SubStr(Time(),1,5)			+" "+;
					DtoC(dDataBase)				+""+;
					Alltrim(SM0->M0_NOMECOM)	+";"+;
					"1"							+";"+;
					"EXPORTACAO DECLARACAO ELETRONICA-ONLINE-NOTA CONTROL" + CRLF
					
		//Posiciona no fim do arquivo.
		FSeek(_nOpen,0,2) 
		//Escreve Linha no arquivo.
		FWrite(_nOpen, _cTxtAux)
		
  		Do While TMP->(!Eof())
			_cTxtAux := TMP->MODELO								+";"+;	//Modelo
						SubStr(	AllTrim(TMP->F1_DOC) 	,1,20)	+";"+;	//Nr Documento
						AllTrim(TMP->D1_BASEISS)				+";"+;	//Vlr Tributável
						AllTrim(TMP->F1_VALBRUT)				+";"+;	//Vlr Bruto				//D1_TOTAL
						AllTrim(TMP->D1_ALIQISS)				+";"+;	//Aliquota
						GravaData(sToD(TMP->F1_EMISSAO),.F.,5)	+";"+;	//Data Emissão
						GravaData(sToD(TMP->F1_EMISSAO),.F.,5)	+";"+;	//Data Vencimento
						SubStr(	AllTrim(TMP->A2_CGC) 	,1,14)	+";"+;	//CPF/CNPJ
						SubStr(	AllTrim(TMP->A2_NOME) 	,1,150)	+";"+;	//Razão Fornecedor						
						SubStr(	AllTrim(TMP->A2_INSCRM)	,1,150)	+";"+;	//Insc Municipal
						SubStr(	AllTrim(TMP->A2_RECISS)	,1,150)	+";"+;	//Imposto Retido
						AllTrim(Str(Val(TMP->A2_CEP)))			+";"+;	//CEP
						AllTrim(TMP->A2_END)					+";"+;	//Endereço
						Iif(AllTrim(Str(Val(TMP->A2_NR_END))) = '0', fNumEnd(TMP->A2_END),AllTrim(Str(Val(TMP->A2_NR_END)))) 		+";"+;	//Numero Endereço
						AllTrim(TMP->A2_BAIRRO)					+";"+;	//Bairro
						AllTrim(TMP->A2_MUN)					+";"+;	//Cidade
						AllTrim(TMP->A2_EST)					+";"+;	//Estado
						AllTrim(Str(Val(TMP->A2_DDD)))			+";"+;	//Código de área
						TMP->TRIB								+";"+;	//Tributado no Municipio
						Space(1) + CRLF					
			
			//Posiciona no fim do arquivo.
			FSeek(_nOpen,0,2) 
			//Escreve Linha no arquivo.
			FWrite(_nOpen, _cTxtAux)
			
			TMP->(DbSkip())
		EndDo
		FClose(_nOpen)
	EndIf
	Aviso("Atenção", "O arquivo '"+_cDir+_cArq+"' foi gerado com sucesso!", {"Ok"})
Else
	Aviso("Atenção", "Atenção! Não foram encontrados registros para o filtro definido.", {"Ok"})
	_lRet := .F.
EndIf

Return _lRet

/*	Walmir Junior
	24/03/2017 
	Função para extrair número do endereço.*/
Static Function fNumEnd(_cEnd)
Local _cRet

//Remove os espaços
_cEnd := AllTrim(_cEnd)

//Localiza numero com separador ' '
_cRet := fProEnd(_cEnd, " ")

If _cRet != '0'
	//Se encontrou retorna.
	Return AllTrim(_cRet)
Else
	//Localiza numero com separador ','
	_cRet := fProEnd(_cEnd, ",")
	If _cRet != '0'
		//Se encontrou retorna.
		Return AllTrim(_cRet)
	Else
		//Localiza numero com separador '-'
		_cRet := fProEnd(_cEnd, "-")
	EndIf 
EndIf 

Return AllTrim(_cRet)

/*	Walmir Junior
	27/03/2017 
	Processa extração do número do endereço.*/
Static Function fProEnd(_cEnd, _cSep)
Local _cRet
Local _nAux

//Localiza ultimo separador
_nAux := Rat(_cSep, _cEnd)

If Empty(_nAux)
	cRet := '0'
	Return _cRet
EndIf 

_cRet := SubStr(_cEnd, _nAux+1, Len(_cEnd) - _nAux)

If IsDigit(_cRet) .And. Len(_cRet) <= 6
	_cRet := AllTrim(Str(Val(_cRet)))
Else
	//Se for caracter, ou vázio, ou com mais de 6 caracteres.
	_cRet := '0'
EndIf

Return _cRet

/*	Walmir Junior
	27/03/2017 
	Função para validar filtros do usuário.*/
Static Function fVldFil(_cA2De, _cLjDe, _cA2At, _cLjAt, _dEmDe, _dEmAt, _cTpA2, _cCnFl, _cFil)
Local _lRet := .T.

If Empty(_dEmDe) .And. Empty(_dEmAt)
	Aviso("Atenção", "É obrigatório informar o período de emissão desejado (Mesmo ano e mês).", {"Ok"})
	_lRet := .F.
	Return
EndIf


If Year(_dEmDe) != Year(_dEmAt) .Or. Month(_dEmDe) != Month(_dEmAt)
	Aviso("Atenção", "O Filtro Datas de emissão deve ser utilizado para o mesmo Ano e Mês.", {"Ok"})
	_lRet := .F.
	Return
EndIf
 
Return _lRet