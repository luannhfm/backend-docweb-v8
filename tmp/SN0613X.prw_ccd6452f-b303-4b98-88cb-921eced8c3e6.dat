#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "PARMTYPE.CH"     
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"    
/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<SN0613X>                                                   |
|Rotinas para Geracao dos Arquivos de Remessa de Pre Cadastro              |  
|    ATENCAO:                                                              |
|    --------                                                              |
|    Para utilizar a faciliade verifique o criacao e declaracao do         |
|    parametro: Layout de Pre-Cadastro - Remessa                           |
|    MV_XREMCAD	:= "\Pronatec\Layouts\PreCad\Remessa\"        			   |
|                                                                          |
|@Author<Antonio Dantas>                                                   |
|@since<22/04/2014>                                                        |
|@version<001>                                                             |
|@return<Nil>,<Nil>                                                        |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
User Function SN0613X()
Local _cAlias  		:= "ZP1"       
Local _cTitle  		:= "Geração da Remessa de Pré Cadastro"
Local _oBrowse 		:= FWMBrowse():New()
Private aRotina 	:= MenuDef() 
_oBrowse:SetAlias(_cAlias)
_oBrowse:SetFilterDefault("ZP1_XSCARD=='S' .and. ZP1_XSTATU= 'A'") 
_oBrowse:SetDescription(_cTitle)
_oBrowse:Activate()   
Return NIL

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Definicao do MenuDef                                                      |
|@Author<Antonio Dantas>                                                   |
|@since<22/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@return                                                                   |
|<   _aRotina (a) - Vetor com as opcoes de Menu                            |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function MenuDef()
Local _aRotina := {}
ADD OPTION _aRotina TITLE "Pesquisar"  	ACTION "PESQBRW"       		OPERATION 1 ACCESS 0
ADD OPTION _aRotina TITLE "Manutenção" 	ACTION "VIEWDEF.SN0613X" 	OPERATION 2 ACCESS 0
ADD OPTION _aRotina TITLE "Imprimir"   	ACTION "VIEWDEF.SN0613X"	OPERATION 8 ACCESS 0
Return _aRotina

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Definicao do ModelDef                                                     |
|@Author<Antonio Dantas>                                                   |
|@since<22/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@return                                                                   |
|<   _oModel (o) - Objeto com a Definicao do Modelo                        |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function ModelDef()
Local _oStruZP1 := FWFormStruct(1,"ZP1")
Local _oStruZP3 := FWFormStruct(1,"ZP3")  
//-- ********************************************************************
//--   New("SN06611XX"), refere-se ao nome do Ponto de Entrada PADRAO
//-- ********************************************************************
Local _oModel   := MPFormModel():New("SN0613XX")
_oModel:AddFields("ZP1MASTER", /*cOwner*/,_oStruZP1)
_oModel:AddGrid("ZP3DETAIL","ZP1MASTER",_oStruZP3)
_oModel:SetPrimaryKey({"ZP1_FILIAL","ZP1_XCONV"})
_oModel:SetRelation("ZP3DETAIL", {{"ZP3_FILIAL", "FwxFilial('ZP3')"},{"ZP3_XCONVE","ZP1_XCONV"},{"ZP3_XSTATU","'L'"}},ZP3->(IndexKey(2)))
_oModel:SetDescription("Geração da Remessa de Pré Cadastro")
//-- Defini o Modelo como nao Editavel
_oModel:GetModel("ZP1MASTER"):SetDescription("Convênios")
//-- Defini o Modelo como nao Editavel
_oModel:GetModel("ZP3DETAIL"):SetDescription("Conveniados")
_oModel:GetModel("ZP3DETAIL"):SetNoInsertLine(.T.)
_oModel:GetModel("ZP3DETAIL"):SetNoDeleteLine(.T.)
_oModel:GetModel("ZP3DETAIL"):SetNoUpdateLine(.T.)
_oModel:GetModel("ZP3DETAIL"):SetOnlyQuery(.T.)    			//-- Indica que o model e somente para consulta
Return _oModel


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Definicao do ViewDef                                                      |
|@Author<Antonio Dantas>                                                   |
|@since<22/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@return                                                                   |
|<   _oView (o) - Objeto com a Definicao do Visao do Modelo                |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function ViewDef()
Local _oStruZP1 := FWFormStruct(2,"ZP1")
Local _oStruZP3 := FWFormStruct(2,"ZP3",/*{|_cFild| xDefFilds(_cFild)}*/)
Local _oModel   := FWLoadModel("SN0613X")           	
Local _oView    := FWFormView():New()
//-- Define Visao do Convenios          
_oView:SetModel(_oModel)
_oView:AddField("VIEW_ZP1",_oStruZP1,"ZP1MASTER")
_oView:CreateHorizontalBox("SUPERIOR",60)
_oView:SetOwnerView("VIEW_ZP1","SUPERIOR")
_oView:EnableTitleView("VIEW_ZP1")
//-- Defini visao dos Beneficiarios para Pre Cadastro
_oView:AddGrid("VIEW_ZP3",_oStruZP3,"ZP3DETAIL")
_oView:CreateHorizontalBox("INFERIOR",40)
_oView:SetOwnerView("VIEW_ZP3","INFERIOR")
_oView:EnableTitleView("VIEW_ZP3")    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³  Inclui um Botao no formulario.                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_oView:AddUserButton("Gerar Remessa",'CLIPS',{|_oView| fGeraRem(_oModel) } ) 
Return _oView

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fGeraRem>                                                  |
|Rotina Responsavel pela chamadas as rotinas que gerar o arquivo de        |
|remessa e que, Modifica o FLAG dos Conveniados enviado na remessa.        |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<23/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|>                                                                         |
|@return<Nil>                                                              |
|<   _lRemOK (l) - (.t.) Se a Geracao do Arquivo foi OK                    |
|                  (.f.) Por qualquer motivo não gerou arquivo de remesa   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fGeraRem(_oModel)
Local _nAviso			:= 0
Private _lRemOK			:= .t.
Private _aRecnos		:= {}
Private _nQtdCartoes 	:= 0 // Variavel private a ser usada pelo arquivo de layout
Private _cRemCart 		:= 0 // Variavel private a ser usada pelo arquivo de layout

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Implementa controle de Transacao.                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Begin Transaction
	// Alterado por Caio Lima - J2A - 09/05/2014
	// sera gerado o arquivo com a quantidade de cartoes que serao criados
	// o banco nao vai saber com quem cada cartao esta.
	If _lRemOK
		_nAviso	:= Aviso(FunName()+"/"+ProcName(),"Confirma a geração do arquivo de remessa para os cartões?",{"Sim","Não"})
		If _nAviso == 1 // Confirmou a geracao do arquivo de remessa para cartoes
			Processa( {|| fGerArqCar(_oModel) }, "Gera Arq. de cartoes", "Processando...")
		Endif
	Endif
	//-- Gera arquivo de Remessa 
	//Processa( {|| fGeraArq(_oModel) }, "Gera Arq. de Remessa", "Processando...")
	If _lRemOK
		//-- Modifica o Status dos Registros enviado para remessa 
		Processa( {|| fFimRem(_oModel,_aRecnos) }, "Finaliza Remessa", "Processando...")
	Endif
	
End Transaction
Return _lRemOK
/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fGerArqCar>                                                |
|Rotina Responsavel Gerar o Arquivo de Remessa para requisitar cartoes     |
|																		   |
|@Author<Caio Lima>                                                        |
|@since<09/05/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _aRecnos (o) - Objeto oModel do modelo atual                          |
|>                                                                         |
|@return<Nil>                                                              |
|<   _lRemOK (l) - (.t.) Se a Geracao do Arquivo foi OK                    |
|                  (.f.) Por qualquer motivo não gerou arquivo de remesa   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fGerArqCar(_oModel)
Local _cArqRem 		:= ""
Local _cArLayout	:= _oModel:GetValue("ZP1MASTER","ZP1_XPRREM")
Local _cConven		:= _oModel:GetValue("ZP1MASTER","ZP1_XCONV")   
Local _cPathRoot	:= GetNewPar("MV_XREMCAD","\Pronatec\Layouts\PreCad\Remessa\")
Local _aArqLyt 		:= {} // Alterada para private pois sera usada em outras funcoes 
Local _aHeader 		:= {}
Local _aDetalhe 	:= {}
Local _aTrailler	:= {}
Local _nH_Arq		:= 0
Local _cTexto		:= ""
Local _cFileLog		:= ""
Local _nRegs		:= 0
Local _bBlock		:= "" 
Local _cDados 		:= ""
Local _cMkTp 		:= ""
Local _cPathRem		:= ""
Local _cNomArqR		:= ""
Private _nCtaREG	:= 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validacoes antes da chamada da rotina de geracao do arquivo de Remesa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Alltrim(_cArLayout) == ""
	Aviso(FunName()+"/"+ProcName(),"Não foi informado neste Convênio o nome do Arquivo de Configuração do Arquivo de Remessa!",{"OK"})
	_lRemOK := .f.
Endif
If _lRemOK
	_cArqCarta := cGetFile('Arquivo|*.*','Salvar Arquivo',1,'C:\TEMP',.F.,GETF_LOCALHARD)
	_cArqCarta := _cArqCarta
	If _cArqCarta == ""
		Aviso(FunName()+"/"+ProcName(),"Nome do Arquivo de Remessa não Foi Informado!",{"OK"})
		_lRemOK := .f.
	Endif 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se o operador informat ponto(.) gera nome do Arquivo de Remessa.      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_cMkTp := Substr(_cArqCarta,Len(Alltrim(_cArqCarta)),1)
	If _cMkTp == "."
		_cPathRem	:= Substr(_cArqCarta,1,Len(Alltrim(_cArqCarta))-1)
		_cNomArqR	:= Alltrim(ZP1->ZP1_XCONTR)+"_"+dtos(dDataBase)+StrTran(Time(),":","")+".TXT"
		_cArqCarta	:= _cPathRem+_cNomArqR 
		Aviso(FunName()+"/"+ProcName(),"Arquivo de Remessa será gerado com nome ["+_cNomArqR+"].",{"OK"})
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria e Abre o Arquivo de Remessa                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_nH_Arq	:= fCreate(_cArqCarta)
Endif      
If _lRemOK
	If !File(_cPathRoot+Alltrim(_cArLayout))
		Aviso(FunName()+"/"+ProcName(),"Arquivo de Layout: "+_cPathRoot+Alltrim(_cArLayout)+". não foi encontrado!",{"OK"})
		_lRemOK := .f.
	EndIf
EndIf     
If _lRemOK
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega o Layout do Arquivo de Remessa                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_aArqLyt 	:= u_fCrArqIn(_cPathRoot+Alltrim(_cArLayout))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Identifica os Arrays de Header, Detalhe e Trailler                    ³
	//³ OBS: Caso venha a existir tipo de arquivos com mais de uma linha por  ³
	//³      tipo; Tratar caso a caso. Deve-se adicionar ao array do tipo e   ³
	//³      tratar na seguencia.                                             ³
	//³      - Inicialmente estamos considerando um de cada tipo.             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
	_nLinH := aScan(_aArqLyt , {|x| x[01] = "[CHE]" }) // Header
	_nLinD := aScan(_aArqLyt , {|x| x[01] = "[CDE]" }) // Detalhe
	_nLinT := aScan(_aArqLyt , {|x| x[01] = "[CTR]" }) // Trailler
	If _nLinH > 0
		_aHeader := _aArqLyt[_nLinH , 04]
	Endif
	If _nLinD > 0
		_aDetalhe := _aArqLyt[_nLinD , 04]
	Endif
	If _nLinT > 0
		_aTrailler := _aArqLyt[_nLinT , 04]
	Endif
Endif 	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Trata caso a caso os Layout's da Remessa                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If _lRemOK .and. Len(_aDetalhe) > 0
	//-- Seleciona tabela de Alunos 	
	dbSelectArea("ZP0")
	ZP0->(dbSetOrder(1))			//-- CPF 
 	//-- 
	//-- Seleciona Tabela de Convenios (Posiciona convencio corrente) 
	dbSelectArea("ZP1")
	ZP1->(dbSetOrder(1))			//-- Convenio 
 	ZP1->(dbSeek(FwxFilial("ZP1")+_cConven))
 	//-- 
	//-- Seleciona e posiciona a Tabela de Conveniados 	
	dbSelectArea("ZP3")
	ZP3->(dbSetOrder(2))		//-- Convenio + Situacao 
 	ZP3->(dbSeek(FwxFilial("ZP3")+_cConven+"L"))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA CABECALHO "Header"                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA CABECALHO "Header"                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_cRemCart := SubStr(GetLastRem(),01,07)
	If Empty(_cRemCart)
		_cRemCart := PADL("",07,"0")
	EndIf
	_cRemCart := Soma1(_cRemCart)
 	If _lRemOK .and. Len(_aHeader) >= 1
		_cTexto := ""
 		_cDados := ""
		_nCtaA	:= 0
 		For _nCtaA := 1 To Len(_aHeader) 
			_bBlock	:= {|| &(_aHeader[_nCtaA,2]) }
 			_cDados := Eval(_bBlock)
 			_cDados := StrTran(_cDados,Chr(13)+Chr(10),Space(2))
 			_cTexto += _cDados
		Next _nCtaA
		_cTexto += Chr(13)+Chr(10) 
        //-- Grava a Linha de Cabecalho "Header" do Arquivos Remessa 
		If fWrite(_nH_Arq,_cTexto,Len(_cTexto)) != Len(_cTexto)
			If !MsgAlert("Ocorreu um erro na gravacao do arquivo.","Atencao!")
				_lRemOK := .f.
			Endif
		Endif
	Endif 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA DETALHE "Detalhe"                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
 	//--     
 	If _lRemOK .and. Len(_aDetalhe) >= 1
		//-- Trata condicao de controle, so sera verdadeira se houver registros para remessa	
		_lRemOK := .F.   
		_nRegs	:= ZP3->(RecCount())
		ProcRegua(_nRegs)
		//-- Loop na Tabela de Conveniados para gerar o arquivos de REMESSA conforme Layout
		While ZP3->(!eof()) .and. ZP3->ZP3_FILIAL == FwxFilial('ZP3') .and. ZP3->ZP3_XCONVE == _cConven  .and. ZP3->ZP3_XSTATU == "L"
			//-- Implementa Termometro
			_nCtaREG++
			IncProc("Total de Registros:"+Alltrim(Transform(_nRegs,"@E 999,999,999"))+"|  Lidos:"+Alltrim(Transform(_nCtaREG,"@E 999,999,999")))   
	      	//-- Posiciona a Tabela de Alunos 
			//ZP0->(dbSeek(FwxFilial("ZP0")+ZP3->ZP3_XCPF))
			
			_nQtdCartoes++
	        //-- Captura o RECNO do Conveniado 
			aAdd(_aRecnos,ZP3->(Recno()))  
			ZP3->(dbskip())
		Enddo
		
		//-- Monta a Linha detalhe Conforme Layout 
 		_cDados := ""
		_cTexto := ""
		_nCtaA 	:= 0 
		For _nCtaA := 1 To Len(_aDetalhe) 
			_bBlock	:= {|| &(_aDetalhe[_nCtaA,2]) }
 			_cDados := Eval(_bBlock)
 			_cDados := StrTran(_cDados,Chr(13)+Chr(10),Space(2))
 			_cTexto += _cDados
		Next _nCtaA
		_cTexto += Chr(13)+Chr(10) 
		//-- Grava as Linhas de Informacoes "Detalhe" no Arquivos Remessa 
		If fWrite(_nH_Arq,_cTexto,Len(_cTexto)) != Len(_cTexto)
			If !MsgAlert("Ocorreu um erro na gravacao do arquivo.","Atencao!")
				_lRemOK := .f.
			Endif
		EndIf
		_lRemOK := .T.
	Endif 		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA RODAPE "Trailler"                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
 	//-- 
 	If _lRemOK .and. Len(_aTrailler) >= 1     
 		_cDados := ""
 		_cTexto := ""
		_nCtaA	:= 0
 		For _nCtaA := 1 To Len(_aTrailler) 
			_bBlock	:= {|| &(_aTrailler[_nCtaA,2]) }
 			_cDados := Eval(_bBlock)
 			_cDados := StrTran(_cDados,Chr(13)+Chr(10),Space(2))
 			_cTexto += _cDados
		Next _nCtaA
		_cTexto += Chr(13)+Chr(10) 
        //-- Grava a Linha de Rodape "Trailler" do Arquivos Remessa 
		If fWrite(_nH_Arq,_cTexto,Len(_cTexto)) != Len(_cTexto)
			If !MsgAlert("Ocorreu um erro na gravacao do arquivo.","Atencao!")
				_lRemOK := .f.
			Endif
		EndIf
	Endif
	If !_lRemOK
		Aviso(FunName()+"/"+ProcName(),"Não existem Conveniados aptos para gerar cartao!",{"OK"})
	Endif 
Endif  	
fClose(_nH_Arq)
Return _lRemOK


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fGeraArq>                                                  |
|Rotina Responsavel Gerar o Arquivo de Remessa do Pre Cadastro             |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<23/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|>                                                                         |
|@return<Nil>                                                              |
|<   _lRemOK (l) - (.t.) Se a Geracao do Arquivo foi OK                    |
|                  (.f.) Por qualquer motivo não gerou arquivo de remesa   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fGeraArq(_oModel)
Local _cArqRem 		:= ""
Local _cArLayout	:= _oModel:GetValue("ZP1MASTER","ZP1_XPRREM")
Local _cConven		:= _oModel:GetValue("ZP1MASTER","ZP1_XCONV")   
Local _cPathRoot	:= GetNewPar("MV_XREMCAD","\Pronatec\Layouts\PreCad\Remessa\")
Local _aArqLyt 		:= {} // Alterada para private pois sera usada em outras funcoes 
Local _aHeader 		:= {}
Local _aDetalhe 	:= {}
Local _aTrailler	:= {}
Local _nH_Arq		:= 0
Local _cTexto		:= ""
Local _cFileLog		:= ""
Local _nRegs		:= 0
Local _bBlock		:= ""
Private _nCtaREG	:= 0 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validacoes antes da chamada da rotina de geracao do arquivo de Remesa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Alltrim(_cArLayout) == ""
	Aviso(FunName()+"/"+ProcName(),"Não foi informado neste Convênio o nome do Arquivo de Configuração do Arquivo de Remessa!",{"OK"})
	_lRemOK := .f.
Endif
If _lRemOK
	_cArqRem := cGetFile('Arquivo|*.*','Salvar Arquivo',1,'C:\TEMP',.F.,GETF_LOCALHARD)
	If _cArqRem == ""
		Aviso(FunName()+"/"+ProcName(),"Nome do Arquivo de Remessa não Foi Informado!",{"OK"})
		_lRemOK := .f.
	Endif  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria e Abre o Arquivo de Remessa                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_nH_Arq	:= fCreate(_cArqRem)
Endif      
If _lRemOK
	If !File(_cPathRoot+Alltrim(_cArLayout))
		Aviso(FunName()+"/"+ProcName(),"Arquivo de Layout: "+_cPathRoot+Alltrim(_cArLayout)+". não foi encontrado!",{"OK"})
		_lRemOK := .f.
	EndIf
EndIf     
If _lRemOK
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega o Layout do Arquivo de Remessa                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_aArqLyt 	:= u_fCrArqIn(_cPathRoot+Alltrim(_cArLayout))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Identifica os Arrays de Header, Detalhe e Trailler                    ³
	//³ OBS: Caso venha a existir tipo de arquivos com mais de uma linha por  ³
	//³      tipo; Tratar caso a caso. Deve-se adicionar ao array do tipo e   ³
	//³      tratar na seguencia.                                             ³
	//³      - Inicialmente estamos considerando um de cada tipo.             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
	_nCtaA	:= 0
	For _nCtaA := 1 To Len(_aArqLyt) 
		_cLinTP := Substr(_aArqLyt[_nCtaA,1],2,1)
		Do Case
			Case _cLinTP == "H"   	//-- Header
				_aHeader 	:= _aArqLyt[_nCtaA,4]
			Case _cLinTP == "D"   	//-- Detalhe
				_aDetalhe 	:= _aArqLyt[_nCtaA,4]
			Case _cLinTP == "T" 	//-- Trailler
				_aTrailler	:= _aArqLyt[_nCtaA,4]   
		Endcase
	Next _nCtaA
Endif 	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Trata caso a caso os Layout's da Remessa                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If _lRemOK .and. Len(_aArqLyt[2,4]) >= 1
	//-- Seleciona tabela de Alunos 	
	dbSelectArea("ZP0")
	ZP0->(dbSetOrder(1))			//-- CPF 
 	//-- 
	//-- Seleciona Tabela de Convenios (Posiciona convencio corrente) 
	dbSelectArea("ZP1")
	ZP1->(dbSetOrder(1))			//-- Convenio 
 	ZP1->(dbSeek(FwxFilial("ZP1")+_cConven))
 	//-- 
	//-- Seleciona e posiciona a Tabela de Conveniados 	
	dbSelectArea("ZP3")
	ZP3->(dbSetOrder(2))		//-- Convenio + Situacao 
 	ZP3->(dbSeek(FwxFilial("ZP3")+_cConven+"L"))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA CABECALHO "Header"                                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
 	If _lRemOK .and. Len(_aHeader) >= 1
		_cTexto := ""
		_nCtaA	:= 0
 		For _nCtaA := 1 To Len(_aHeader) 
			_bBlock	:= {|| &(_aHeader[_nCtaA,2]) }
			_cTexto += Eval(_bBlock)
		Next _nCtaA
		_cTexto += Chr(13)+Chr(10) 
        //-- Grava a Linha de Cabecalho "Header" do Arquivos Remessa 
		If fWrite(_nH_Arq,_cTexto,Len(_cTexto)) != Len(_cTexto)
			If !MsgAlert("Ocorreu um erro na gravacao do arquivo.","Atencao!")
				_lRemOK := .f.
			Endif
		Endif
	Endif 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA DETALHE "Detalhe"                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
 	//--     
 	If _lRemOK .and. Len(_aDetalhe) >= 1
		//-- Trata condicao de controle, so sera verdadeira se houver registros para remessa	
		_lRemOK := .F.   
		_nRegs	:= ZP3->(RecCount())
		ProcRegua(_nRegs)
		//-- Loop na Tabela de Conveniados para gerar o arquivos de REMESSA conforme Layout
		While ZP3->(!eof()) .and. ZP3->ZP3_FILIAL == FwxFilial('ZP3') .and. ZP3->ZP3_XCONVE == _cConven  .and. ZP3->ZP3_XSTATU == "L"
			//-- Implementa Termometro
			_nCtaREG++
			IncProc("Total de Registros:"+Alltrim(Transform(_nRegs,"@E 999,999,999"))+"|  Lidos:"+Alltrim(Transform(_nCtaREG,"@E 999,999,999")))   
	      	//-- Posiciona a Tabela de Alunos 
			ZP0->(dbSeek(FwxFilial("ZP0")+ZP3->ZP3_XCPF))
	        //-- Monta a Linha Conforme Layout 
			_cTexto := ""
			_nCtaA 	:= 0 
			For _nCtaA := 1 To Len(_aDetalhe) 
				_bBlock	:= {|| &(_aDetalhe[_nCtaA,2]) }
				_cTexto += Eval(_bBlock)
			Next _nCtaA
			_cTexto += Chr(13)+Chr(10) 
	        //-- Grava as Linhas de Informacoes "Detalhe" no Arquivos Remessa 
			If fWrite(_nH_Arq,_cTexto,Len(_cTexto)) != Len(_cTexto)
				If !MsgAlert("Ocorreu um erro na gravacao do arquivo.","Atencao!")
					_lRemOK := .f.
					Exit
				Endif
			EndIf
			_lRemOK := .T.
			//-- Captura o RECNO do Conveniado 
			aAdd(_aRecnos,ZP3->(Recno()))  
			ZP3->(dbskip())
		Enddo       
	Endif 		
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ ***** GERA RODAPE "Trailler"                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
 	//-- 
 	If _lRemOK .and. Len(_aTrailler) >= 1     
 		_cTexto := ""
		_nCtaA	:= 0
 		For _nCtaA := 1 To Len(_aTrailler) 
			_bBlock	:= {|| &(_aTrailler[_nCtaA,2]) }
			_cTexto += Eval(_bBlock)
		Next _nCtaA
		_cTexto += Chr(13)+Chr(10) 
        //-- Grava a Linha de Rodape "Trailler" do Arquivos Remessa 
		If fWrite(_nH_Arq,_cTexto,Len(_cTexto)) != Len(_cTexto)
			If !MsgAlert("Ocorreu um erro na gravacao do arquivo.","Atencao!")
				_lRemOK := .f.
			Endif
		EndIf
	Endif 
	If !_lRemOK
		Aviso(FunName()+"/"+ProcName(),"Não existem Conveniados aptos para remessa!",{"OK"})
	Endif 
Endif  	
fClose(_nH_Arq) 	
Return _lRemOK


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fFimRem>                                                   |
|Rotina marca como enviado os conveniados incluidos no arquivo de remessa. |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|   _aRecnos (a) - Array com os Recno's dos Registros enviado na remessa   |
|>                                                                         |
|@return<Nil>                                                              |
|<   Nil                                                                   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fFimRem(_oModel,_aRecnos)
Local _cIDREM	:= ""
Local _nCtaA 	:= 0  
Local _nRegs	:= 0
If (Aviso(FunName()+"/"+ProcName(),"*** ATENÇÃO: "+Chr(13)+Chr(10)+" Verifique antes se o arquivo de Remessa foi gerado corretamente."+Chr(13)+Chr(10)+" Confirma a Remessa?",{"Sim","Não"}))==1
	_nCtaA 	:= 0
	//-- Gera idendentificador da remessa	
	_cIDREM	:= CriaTrab(Nil,.F.)  
	_nRegs	:= Len(_aRecnos)
	ProcRegua(_nRegs)
	For _nCtaA := 1 To _nRegs    
		IncProc("Total de Registros:"+Alltrim(Transform(_nRegs,"@E 999,999,999"))+"|  Lidos:"+Alltrim(Transform(_nCtaA,"@E 999,999,999")))   
		ZP3->(dbGoto(_aRecnos[_nCtaA]))
		//-- Libera o registro
		ZP3->(RecLock("ZP3",.F.))
		Replace ZP3->ZP3_XIDREM With _cRemCart
		Replace ZP3->ZP3_XDTREM With dDataBase 
		Replace ZP3->ZP3_XSTATU With "E"
		ZP3->(msUnlock())
		ZP3->(dbCommit())
	Next _nCtaA
Endif 
Return Nil
/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<GetLastRem>                                                |
|rotina que pega o numero da ultima remessa gerada                         |
|																		   |
|@Author<Caio Lima>                                                        |
|@since<12/05/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@return Caracter                                                          |
|<   Nil                                                                   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function GetLastRem()
Local _cRet		:= ""
Local _cSql		:= ""
Local _cALias 	:= GetNextAlias()
Local _cSql 	:= ""
_cSql := "Select Max(ZP3_XIDREM) ZP3_XIDREM From "+RetSQLName("ZP3")+" ZP3 Where ZP3_XIDREM <> '' "+CRLF
If Select(_cALias) > 0
	(_cALias)->(dbClosearea())
Endif
DbUseArea(.T., "TOPCONN",TCGenQry(,,ChangeQuery(_cSql)),_cALias,.F.,.F.)
If !(_cALias)->(Eof())
	_cRet := (_cALias)->ZP3_XIDREM
Endif
(_cAlias)->( dbCloseArea() )
Return(_cRet)
