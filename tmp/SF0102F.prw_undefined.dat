#INCLUDE "protheus.ch"
#INCLUDE "APWIZARD.CH"

/*/{Protheus.doc} SF0102F
Rotina baseada no fonte SIATFA02, especifica de Inventario de ATF - SFIEMT

@author 	Franklin de Brito de Oliveira
@since 	09/03/2015
@version 	1.0

@return 	Nil, Nulo 
@history 10/01/2020, Franklin de Brito de Oliveira, correção na transferência de dados contábeis conforme o suporte 338339.
/*/
User Function SF0102F()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local aRot1	:= {	{ "Lista Inventário"	, "U_SIATFR02",0,2},;
					{ "Dif. Localização"	, "U_SIATFR05",0,2}}

Local aRot2	:= {	{ "Responsável"		, "U_SF01Inv1",0,4},;
					{ "Localização"		, "U_SF01Inv2",0,4},;
					{ "Dados Contábeis"	, "U_SF01Inv3",0,4}}  //atfa060

Private cCadastro := "Cadastro de Inventário"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta um aRotina proprio                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Private aRotina := { 	{"Pesquisar"		,"AxPesqui"		,0,1} ,;
						{"Importar CSV"		,"U_SF01Inv4"	,0,3} ,;
						{"Importar Coletor"	,"U_SF01InvC"	,0,1} ,;
						{"Relatórios"		,aRot1			,0,2} ,;
						{"Transferência"	,aRot2			,0,4} ,;
						{"Conciliar"		,"U_SF01Inv6"	,0,4} ,;
						{"Estornar"			,"U_SF01Inv5"	,0,5} }

Private cDelFunc := ".T." // Validacao para a exclusao. Pode-se utilizar ExecBlock

Private cString := "SZC"

//Walmir Junior
Private _aHeader := {}
Private _aCols := {}
Private _oGetDados
//Walmir Junior
Private _lErAt	:= .F.

//Walmir Junior - Apresenta Valor
Private _cFldRsp	:= Space(50)
Private _cFldCC		:= Space(50)
Private _cFldItm	:= Space(50)
//Walmir Junior - Contém Valor
Private _cValRsp	:= Space(TamSX3("RD0_CODIGO")[1])
Private _cValCC 	:= Space(TamSX3("CTT_CUSTO")[1])
Private _cValItm	:= Space(TamSX3("CTD_ITEM")[1])
//Walmir Junior - Variável Arquivo Inválido.
Private _lInv	:= .F.

dbSelectArea("SZC")
dbSetOrder(1)

dbSelectArea(cString)
mBrowse( 6,1,22,75,cString)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SF01Inv4 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01Inv4

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local oProcess 	:= NIL
Local cPathIni	:= "C:\" //GetSrvProfString("RootPath", "")+GetSrvProfString("Startpath", "")

Private cFile := cGetFile("Arquivo CSV | *.csv","Selecione o arquivo CSV",,cPathIni,.T.,GETF_LOCALFLOPPY + GETF_LOCALHARD + GETF_NETWORKDRIVE )

If !Empty(cFile)
	oProcess := MsNewProcess():New( { | lEnd | xImpCSV( @lEnd,oProcess) }, 'Processando', 'Aguarde, Processando...', .F. )
	oProcess:Activate()
Else
	Help(" ",1,"NOFILE")
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SF01InvC º Autor ³ Walmir Junior      º Data ³  25/04/18   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI - COLETORES º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01InvC

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private _oBrows
Private _oOk		:= LoadBitmap( GetResources(), "LBOK")
Private _oNo		:= LoadBitmap( GetResources(), "LBNO")
Private _aLinhas	:= {}
Private _aMark		:= {}

fWzdInC()

Return

Static Function fWzdInC()
Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local 	_aRet	:= {}
Private _oWiz
Private _aItms	:= {}
Private _cTpNV	:= ""

DEFINE WIZARD _oWiz ;
	TITLE   "Inventário por Coletor" ;
	HEADER  "Atenção" ;
	MESSAGE "Siga atentamente os passos para executar o Inventário." ; 
	TEXT "Assistente para Inventário através de Coletor. "+CRLF ;
	NEXT {|| pnlArq(), SetPnl(),.T.} ;
// panel 02
CREATE PANEL _oWiz  ;
	HEADER  "Assistente para Inventário através de Coletor. " ;
	MESSAGE "Selecione o arquivo importado do coletor para prosseguir com Inventário." ;
	BACK {||.T.} ;
	NEXT {||  _lInv, GrdITM()} ;
	PANEL
// panel 03
CREATE PANEL _oWiz ;
	HEADER "Confirmação do Inventário" ; 
	MESSAGE "Confirmação do Inventário" ;
	BACK {|| GrdITM()} ;
	FINISH {|| _cTpNV := fVldCo(), fImpC()} ;
	PANEL
_oWiz:oDlg:nRight	:= 900 
_oWiz:oDlg:nHeight	:= 580
ACTIVATE WIZARD _oWiz CENTERED


Return _aRet

Static Function fVldCo()
Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cRet		:= ""
Local _aCls 	:= _oGetDados:aCols
Local _cQuery   := ""
Local _nX		:= 0

If Len(_aCls) > 0
	_cRet := Iif(Empty(Posicione("SNL",1,xFilial("SNL") + _aCls[1,3],"NL_CODIGO")), "L", "")	
	If !Empty(_cRet)
		Return _cRet
	Else
		For _nX := 1 To Len(_aCls)
			If Select('TMPQRY') > 0
				DbSelectArea('TMPQRY')
				TMPQRY->(DbCloseArea())
			EndIf
			
			//Walmir Junior 07/05/2018 - (Comentário) View com dados de contratos com ou sem cronograma.
			_cQuery := "Select CTA_FILIAL From " + RetSQLName("CTA") + " Where d_e_l_e_t_ = ' ' AND 
			_cQuery += " CTA_CUSTO = '" + _aCls[_nX,5] +"' AND 
			_cQuery += " CTA_ITEM = '" + _aCls[_nX,6] + "' "
			
			DbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),'TMPQRY',.T.,.F.)
			
			If TMPQRY->(Eof())
				Alert("[ATENÇÃO] Não existe amarração para o Centro de Custo '" + AllTrim(_aCls[_nX,5]) + "' e Item Contabil '" + AllTrim(_aCls[_nX,6]) + "'.")
				_cRet := "A"
				Return _cRet
			EndIf
			
			If Select('TMPQRY') > 0
				DbSelectArea('TMPQRY')
				TMPQRY->(DbCloseArea())
			EndIf
		Next _nX
	EndIf
EndIf

Return _cRet

Static Function pnlArq()
Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _oGetRsp
Local _oGetCC
Local _oGetItm
Local _oGetArq
Local _cValArq

Local 	_oFldRsp
Local 	_oFldCC
Local 	_oFldItm	

@ 010,008 SAY 		"Responsável: "		 						PIXEL OF _oWiz:oMPanel[2]
@ 010,060 MSGET		_oGetRsp	var _cValRsp	F3 "RD0" Size 050 ,010 	WHEN .T.	PIXEL OF _oWiz:oMPanel[2] VALID fPrFld(_cValRsp, "R")
@ 010,120 MSGET		_oFldRsp	var _cFldRsp			 Size 140 ,010 	WHEN .F.	PIXEL OF _oWiz:oMPanel[2]

@ 030,008 SAY 		"Centro de Custo: " 						PIXEL OF _oWiz:oMPanel[2]
@ 030,060 MSGET		_oGetCC		var _cValCC		F3 "CTT" Size 050 ,010 	WHEN .T.	PIXEL OF _oWiz:oMPanel[2] VALID fPrFld(_cValCC, "C")
@ 030,120 MSGET		_oFldCC		var _cFldCC				 Size 140 ,010 	WHEN .F.	PIXEL OF _oWiz:oMPanel[2]

@ 050,008 SAY 		"Item Contábil: " 							PIXEL OF _oWiz:oMPanel[2]
@ 050,060 MSGET		_oGetItm	var _cValItm	F3 "CTD" Size 050 ,010 	WHEN .T.	PIXEL OF _oWiz:oMPanel[2] VALID fPrFld(_cValItm, "I")
@ 050,120 MSGET		_oFldItm	var _cFldItm			 Size 140 ,010 	WHEN .F.	PIXEL OF _oWiz:oMPanel[2]

@ 070,008 SAY 		"Arquivo (.TXT): " 							PIXEL OF _oWiz:oMPanel[2]
@ 070,060 MSGET		_oGetArq	var _cValArq	Size 200 ,010 	WHEN .F.	PIXEL OF _oWiz:oMPanel[2]
@ 070,265 BUTTON 	"Carregar Arquivo" 		Size 080 ,012  	ACTION ( _cValArq := fGetTXT(_cValRsp, _cValCC, _cValItm)) OF _oWiz:oMPanel[2] PIXEL

Return

Static Function fPrFld(_cVal, _cTp)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")

do Case
	Case _cTp == "R"
		_cFldRsp	:= Posicione("RD0",1, xFilial("RD0") + _cVal ,"RD0_NOME")
	Case _cTp == "C"
		_cFldCC		:= Posicione("CTT",1, xFilial("CTT") + _cVal ,"CTT_DESC01")
	Case _cTp == "I"
		_cFldItm	:= Posicione("CTD",1, xFilial("CTD") + _cVal ,"CTD_DESC01")
EndCase

Return .T.

Static Function fGetTXT(_cRsp, _cCC, _cItm)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cArq	:= ""
Local _cLin	:= ""
Local _cLoc	:= Space(TAMSX3("ZC_LOCALIZ")[1])
Local _cDat

_lInv	:= .F.
_aItms	:= {}

_cArq := cGetFile("Arquivo TXT | *.txt","Selecione o arquivo TXT",,"C:\",.T.,GETF_LOCALFLOPPY + GETF_LOCALHARD + GETF_NETWORKDRIVE )

If (nHandle := FT_FUse(AllTrim(_cArq)))== -1
	Help(" ",1,"NOFILEIMPOR")
	Return
EndIf

//	Verifica Estrutura do Arquivo
FT_FGOTOP()
_cLin := FT_FREADLN()

While !FT_FEOF()
	_cLin := FT_FREADLN()
	If Len(_cLin) <=6
		_cLoc := _cLin 
		FT_FSKIP()
		Loop
	EndIf
	If aScan(_aItms , {|x| AllTrim(x[2]) == AllTrim(SubStr(_cLin,21,10 )) } ) == 0
		_cDat 	:= SubStr(_cLin,1,At(",",_cLin)-1)
		_cEmOri	:= fGtEmp(SubStr(_cLin,21,10 ))
		If !Empty(_cEmOri)
			//Data Coleta, Cod Base, Local, Resp, CCusto, Item, Empresa de Origem
			Aadd(_aItms ,{dToC( cToD( SubStr(_cDat, 9,2) + SubStr(_cDat, 5,3) + "/" + SubStr(_cDat, 1,4)) ),SubStr(_cLin,21,10 ), _cLoc, _cRsp,  _cCC, _cItm, /*Space(20),*/ _cEmOri, .F.} )
		Else
			Aviso("Arquivo do Coletor (.TXT)","Item não localizado no banco de dados [" + SubStr(_cLin,21,10 ) + "], verifique.",{"OK"})
			_lInv	:= .T.
			_aItms	:= {}
			Exit
		EndIf
	EndIf
	FT_FSKIP()
EndDo

If !_lInv
	Aviso("Arquivo do Coletor (.TXT)","Leitura do Arquivo Ok!",{"OK"})
Else
	Alert("[ATENÇÃO] Não foi possível efetuar a leitura do arquivo.")
	_cArq += " --- INVÁLIDO!"
EndIf

Return _cArq
/*
Walmir Junior 23/05/2018
Função para buscar a empresa de origem do bem coletado. 
*/
Static Function fGtEmp(_cBse)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cRet		:= ""
Local _cQuery   := ""
	
If Select('TMPQRY') > 0
	DbSelectArea('TMPQRY')
	TMPQRY->(DbCloseArea())
EndIf

//Walmir Junior 07/05/2018 - (Comentário) View com dados de contratos com ou sem cronograma.
_cQuery := " Select N1_FILIAL, N1_CBASE "
_cQuery += " From " + RetSQLName("SN1") + " " 
_cQuery += " Where "
_cQuery += " D_E_L_E_T_ = ' ' AND " 
_cQuery += " N1_BAIXA 	= ' ' AND "
_cQuery += " N1_PATRIM	= 'N' AND "
_cQuery += " N1_STATUS	= '1' AND "
_cQuery += " N1_CBASE	= '" + _cBse + "' "

DbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),'TMPQRY',.T.,.F.)

If .Not. TMPQRY->(Eof())
	_cRet := TMPQRY->(N1_FILIAL)
Else
	If Select('TMPQRY') > 0
		DbSelectArea('TMPQRY')
		TMPQRY->(DbCloseArea())
	EndIf
	
	_cQuery := " Select N1_FILIAL, N1_CBASE "
	_cQuery += " From " + RetSQLName("SN1") + " " 
	_cQuery += " Where "
	_cQuery += " D_E_L_E_T_ = ' ' AND " 
	_cQuery += " N1_BAIXA 	= ' ' AND "
	_cQuery += " N1_PATRIM	= 'N' AND "
	_cQuery += " N1_CBASE	= '" + _cBse + "' "
	
	DbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),'TMPQRY',.T.,.F.)

	If .Not. TMPQRY->(Eof())
		_cRet := TMPQRY->(N1_FILIAL)
	EndIf
EndIf

If Select('TMPQRY') > 0
	DbSelectArea('TMPQRY')
	TMPQRY->(DbCloseArea())
EndIf

Return _cRet

Static Function SetPnl()
	
	Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
	
	_oWiz:SetPanel(1)
Return

//Valida amarração do Centro de Custo e Item Selecionados.
Static Function fVldIn()

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _lRet 	:= .T.
Local _cQuery	:= ""

If Select('TMPQRY') > 0
	DbSelectArea('TMPQRY')
	TMPQRY->(DbCloseArea())
EndIf

//Walmir Junior - Consulta Amarração.
_cQuery := "Select CTA_FILIAL From " + RetSQLName("CTA") + " Where d_e_l_e_t_ = ' ' AND 
_cQuery += " CTA_CUSTO = '" + _cValCC +"' AND 
_cQuery += " CTA_ITEM = '" + _cValItm + "' "

DbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),'TMPQRY',.T.,.F.)

If TMPQRY->(Eof())
	_lRet := .F.
	Alert("[ATENÇÃO] Não existe amarração para o Centro de Custo e Item Contabil.")
EndIf

If Select('TMPQRY') > 0
	DbSelectArea('TMPQRY')
	TMPQRY->(DbCloseArea())
EndIf

Return _lRet

Static Function GrdITM()

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _lRet 	:= fVldIn()

If _lRet
	_cFldRsp	:= Space(50)
	_cFldCC		:= Space(50)
	_cFldItm	:= Space(50)

	_cValRsp	:= Space(TamSX3("RD0_CODIGO")[1])
	_cValCC 	:= Space(TamSX3("CTT_CUSTO")[1])
	_cValItm	:= Space(TamSX3("CTD_ITEM")[1])
	
	_aLinhas	:= _aItms
	
	If Len(_aLinhas) == 0
		_lRet := .F.
		Aviso("Atenção!", "Nenhum registro foi encontrado.", {"Ok"})
		Return _lRet
	EndIf
	
	_aHeader := {}
	_aCols := _aItms
	Private _oDlg
	Private _aEdit	:= {"ZC_LOCALIZ","ZC_RESP","ZC_CC","ZC_ITEM","ZC_CLVL","ZC_EMPORI"}
	
	AADD(_aHeader,{ OemToAnsi("Dt Coleta")		,"ZC_EMISSAO",	"",08,0,"","","D","",""} )
	AADD(_aHeader,{ OemToAnsi("Cod Bem")		,"ZC_CODBAR",	"",20,0,"","","C","",""} )
	AADD(_aHeader,{ OemToAnsi("Localização")	,"ZC_LOCALIZ",	"",06,0,"","","C","",""} )
	AADD(_aHeader,{ OemToAnsi("Responsavel")	,"ZC_RESP",		"",06,0,"","","C","",""} )
	AADD(_aHeader,{ OemToAnsi("CCusto")			,"ZC_CC",		"",20,2,"","","C","",""} )
	AADD(_aHeader,{ OemToAnsi("Item")			,"ZC_ITEM",		"",20,2,"","","C","",""} )
	//AADD(_aHeader,{ OemToAnsi("Clas Vlr")		,"ZC_CLVL",		"",20,2,"","","C","",""} )
	AADD(_aHeader,{ OemToAnsi("Empori")			,"ZC_EMPORI",	"",08,2,"","","C","",""} )
	
	_oGetDados := MsNewGetDados():New(10,05,190,440,GD_UPDATE,,,,_aEdit,,,,,,_oWiz:oMPanel[3],_aHeader,_aCols)
Else
	_cFldCC		:= Space(50)
	_cFldItm	:= Space(50)
	
	_cValCC 	:= Space(TamSX3("CTT_CUSTO")[1])
	_cValItm	:= Space(TamSX3("CTD_ITEM")[1])
EndIf

Return _lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xImpTXT  º Autor ³ Walmir Junior      º Data ³  05/05/18   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³ Wjr - Função adaptada para o arquivo dos coletores.        º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³J2A                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xImpTXT(lEnd,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local nX,nY
Local cLin			:=	""
Local aCampo		:= {}
Local aEstrut		:= {}
Local aTXT			:= {}
Local aPosCampos	:= {}
Local cAliasTrb 	:= GetNextAlias()
Local cArqTmp		:= ""
Local cChave		:= ""
Local _cFilX		:= cFilAnt
Local _cFilCtl		:= ""

aEstrut :={	{ "EMISSAO" 	, "D", 08, 0 },;
			{ "COD_BARRA"	, "C", 20, 0 },;
			{ "LOCALIZ"		, "C", 06, 0 },;
			{ "RESP" 		, "C", 06, 0 },;
			{ "CCUSTO"		, "C", 20, 0 },;
			{ "ITEM"		, "C", 20, 0 },;
			{ "CLVL"		, "C", 20, 0 },;
			{ "EMPORI"		, "C", 08, 0 }}

cArqTmp := CriaTrab(aEstrut, .T.)
dbUseArea( .T.,, cArqTmp, cAliasTrb, .F., .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Indice Temporario do Arquivo de Trabalho 1.             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChave   := "DTOS(EMISSAO)+LOCALIZ+RESP"

IndRegua(cAliasTrb,cArqTmp,cChave,,,"Selecionando Registros...")
dbSelectArea(cAliasTrb)
dbSetIndex(cArqTmp+OrdBagExt())
dbSetOrder(1)

// ESTRUTURA DO ARQUIVO TEXTO
aAdd(aCampo,"EMISSAO")
aAdd(aCampo,"COD_BARRA")
aAdd(aCampo,"LOCALIZACAO")
aAdd(aCampo,"RESPONSAVEL")
aAdd(aCampo,"CCUSTO")
aAdd(aCampo,"ITEM")
//aAdd(aCampo,"CLVL")
aAdd(aCampo,"EMPORI")

// Gravacao dos Itens (TRB)
_aCols := _oGetDados:aCols
//Ordena o aCols por Filial
aSort(_aCols,,,{|x, y| x[7] < y[7]})
//Obtem primeira Filial
_cFilCtl := Iif( Len(_aCols) > 0 ,_aCols[1,7], "")

Begin Transaction

For nX:=1 To Len(_aCols)
	If _lErAt
		Exit
	EndIf
	//Quando mudar a filial, acionar rotina do inventário
	If _cFilCtl != _aCols[nX,7]		
		//Muda a filial para filial dos registros.
		U_SF0205X(cEmpAnt, _cFilCtl)
		dbSelectArea(cAliasTrb)
		dbGotop()
		//Chama rotina.
		xAtuSZC(cAliasTrb,oProcess)
		//Limpa o alias
		If Select(cAliasTrb) != 0
			dbSelectArea(cAliasTrb)
			dbCloseArea()
			FErase(cArqTmp+GetDBExtension())
			FErase(cArqTmp+OrdBagExt())
		Endif
		//Recria o arquivo.
		cArqTmp := CriaTrab(aEstrut, .T.)
		dbUseArea( .T.,, cArqTmp, cAliasTrb, .F., .F. )
		//Atribui a nova filial a variável de controle.
		_cFilCtl := _aCols[nX,7]
	EndIf
	dbSelectArea(cAliastrb)
	RecLock(cAliasTrb,.T.)
	For nY:=1 To Len(_aCols[nX])-1
		//Alert( Str(nX) + "|" + Str(nY) + "--" + _aCols[nX,nY])
		If AllTrim(aCampo[nY]) == 'RESPONSAVEL'
			FieldPut(FieldPos("RESP"),_aCols[nX,nY])
		ElseIf AllTrim(aCampo[nY]) == 'LOCALIZACAO'
			FieldPut(FieldPos("LOCALIZ"),_aCols[nX,nY])
		ElseIf AllTrim(aCampo[nY]) == 'EMISSAO'
			If ValType(_aCols[nX,nY]) == "D"
				_data:= _aCols[nX,nY]
			Else
				_data:= ctod(_aCols[nX,nY])
			Endif
			FieldPut(FieldPos(aCampo[nY]),_dAta)
		Else
			FieldPut(FieldPos(aCampo[nY]),_aCols[nX,nY])
		Endif
	Next
	MsUnLock()
Next

dbSelectArea(cAliasTrb)
dbGotop()
//Executa atualização pra ultimo registro do aCols.
If !Empty(_cFilCtl) .And. !_lErAt 
	//Muda a filial para filial dos registros.
	U_SF0205X(cEmpAnt, _cFilCtl)
	//Chama rotina.
	xAtuSZC(cAliasTrb,oProcess)
EndIf

U_SF0205X(cEmpAnt, _cFilX)

End Transaction

If Select(cAliasTrb) != 0
	dbSelectArea(cAliasTrb)
	dbCloseArea()
	FErase(cArqTmp+GetDBExtension())
	FErase(cArqTmp+OrdBagExt())
Endif

Return

/*/
@author: caiocrol
@data: 20/02/2015
@descricao: marca todos os registros do browser
/*/
Static Function fMarkAll()

	Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
	Local _nx := 0
	
	for _nx:= 1 to Len(_aLinhas)
		_aLinhas[_nx,1] := !_aLinhas[_nx,1]
	next
	
Return nil

/*/
@author: caiocrol
@data: 20/02/2015
@descricao: ordena os registros do browse
/*/
Static Function fOrdena(_nCol)
	
	Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
	
	If _nCol > 1
		aSort(_aLinhas,,, {|x,y| x[_nCol] < y[_nCol] } )
	EndIf
	
	_oBrows:Refresh()
	
Return nil

/*/{Protheus.doc} fImpC
	Aciona rotina de importação.

@author	Walmir Gonçalves da Silva Junior
@since	30/04/2018
@version 1.0

@return Nil

/*/
Static Function fImpC()

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _lRet := .T.
Local oProcess 	:= NIL

//Verifica tipo de Não Validação.
If Empty(_cTpNV)
	If Len(_aCols) > 0
		oProcess := MsNewProcess():New( { | lEnd | xImpTXT( @lEnd,oProcess) }, 'Processando', 'Aguarde, processando...', .F. )
		oProcess:Activate()
	EndIf
EndIf

If !_lErAt .And. Empty(_cTpNV)
	Aviso("Operação Finalizada", "Importação executada com sucesso!", {"Ok"})
ElseIf !Empty(_cTpNV)
	Do Case
		//Se Local Inválido.
		Case _cTpNV == "L"
			Alert("O arquivo de importação possui um Local Inválido!")
		//Se falta Amarração CC X Item Contábil.
		Case _cTpNV == "A"
			//Já apresentou a mensagem.
		//Se 
		Case _cTpNV == ""
			Alert("O arquivo de importação possui um Local Inválido!")
	EndCase
Else
	Alert("Não foi possível efetuar a Importação do Arquivo!")
EndIf

Return _lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xImpCSV  º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xImpCSV(lEnd,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local nX,nY
Local cLin			:=	""
Local aCampo		:= {}
Local aEstrut		:= {}
Local aTXT			:= {}
Local aPosCampos	:= {}
Local cAliasTrb 	:= GetNextAlias()
Local cArqTmp		:= ""
Local cChave		:= ""

aEstrut :={	{ "EMISSAO" 	, "D", 08, 0 },;
			{ "COD_BARRA"	, "C", 20, 0 },;
			{ "LOCALIZ"		, "C", 06, 0 },;
			{ "RESP" 		, "C", 06, 0 },;
			{ "CCUSTO"		, "C", 20, 0 },;
			{ "ITEM"		, "C", 20, 0 },;
			{ "CLVL"		, "C", 20, 0 },;
			{ "EMPORI"		, "C", 08, 0 }}

cArqTmp := CriaTrab(aEstrut, .T.)
dbUseArea( .T.,, cArqTmp, cAliasTrb, .F., .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Indice Temporario do Arquivo de Trabalho 1.             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChave   := "DTOS(EMISSAO)+LOCALIZ+RESP"

IndRegua(cAliasTrb,cArqTmp,cChave,,,"Selecionando Registros...")
dbSelectArea(cAliasTrb)
dbSetIndex(cArqTmp+OrdBagExt())
dbSetOrder(1)

// ESTRUTURA DO ARQUIVO TEXTO
aAdd(aCampo,"EMISSAO")
aAdd(aCampo,"COD_BARRA")
aAdd(aCampo,"LOCALIZACAO")
aAdd(aCampo,"RESPONSAVEL")
aAdd(aCampo,"CCUSTO")
aAdd(aCampo,"ITEM")
aAdd(aCampo,"CLVL")
aAdd(aCampo,"EMPORI")

//Define o valor do array conforme estrutura
aPosCampos:= Array(Len(aCampo))

If (nHandle := FT_FUse(AllTrim(cFile)))== -1
	Help(" ",1,"NOFILEIMPOR")
	Return
EndIf

//Verifica Estrutura do Arquivo
FT_FGOTOP()
cLinha := FT_FREADLN()
nPos   := 0
nAt	   := 1

While nAt > 0
	nPos++
	nAt	:=	AT(";",cLinha)
	If nAt == 0
		cCampo := cLinha
	Else
		cCampo	:=	Substr(cLinha,1,nAt-1)
	Endif
	nPosCpo	:=	Ascan(aCampo,{|x| x==cCampo})
	If nPosCPO > 0
		aPosCampos[nPosCpo]:= nPos
	Endif
	cLinha	:=	Substr(cLinha,nAt+1)
Enddo

If (nPosNil:= Ascan(aPosCampos,Nil)) > 0
	Aviso("Estrutura de arquivo inválido.","O campo "+aCampo[nPosNil]+" nao foi encontrado na estrutura, verifique.",{"Sair"})
	Return .F.
Endif

// Inicia Importacao das Linhas
FT_FSKIP()
While !FT_FEOF()
	cLinha := FT_FREADLN()
	AADD(aTxt,{})
	nCampo := 1
	While At(";",cLinha)>0
		aAdd(aTxt[Len(aTxt)],Substr(cLinha,1,At(";",cLinha)-1))
		nCampo ++
		cLinha := StrTran(Substr(cLinha,At(";",cLinha)+1,Len(cLinha)-At(";",cLinha)),'"','')
	End
	If Len(AllTrim(cLinha)) > 0
		aAdd(aTxt[Len(aTxt)],StrTran(Substr(cLinha,1,Len(cLinha)),'"','') )
	Else
		aAdd(aTxt[Len(aTxt)],"")
	Endif
	FT_FSKIP()
End

// Gravacao dos Itens (TRB)
FT_FUSE()
For nX:=1 To Len(aTxt)
	For nY:=1 To Len(aCampo)
		dbSelectArea(cAliastrb)
		RecLock(cAliasTrb,.T.)
		For nY:=1 To Len(aCampo)
			If AllTrim(aCampo[nY]) == 'RESPONSAVEL'
				FieldPut(FieldPos("RESP"),aTxt[nX,aPosCampos[nY]])
			ElseIf AllTrim(aCampo[nY]) == 'LOCALIZACAO'
				FieldPut(FieldPos("LOCALIZ"),aTxt[nX,aPosCampos[nY]])
			ElseIf AllTrim(aCampo[nY]) == 'EMISSAO'
				If ValType(aTxt[nX,aPosCampos[nY]]) == "D"
					_data:= aTxt[nX,aPosCampos[nY]]
				Else
					_data:= Stod(aTxt[nX,aPosCampos[nY]])
				Endif
				FieldPut(FieldPos(aCampo[nY]),_dAta)
			Else
				FieldPut(FieldPos(aCampo[nY]),aTxt[nX,aPosCampos[nY]])
			Endif
		Next
		MsUnLock()
	Next
Next

dbSelectArea(cAliasTrb)
dbGotop()

// Inicia Gravacao no Sistema - Tabela SZC
xAtuSZC(cAliasTrb,oProcess)

If Select(cAliasTrb) != 0
	dbSelectArea(cAliasTrb)
	dbCloseArea()
	FErase(cArqTmp+GetDBExtension())
	FErase(cArqTmp+OrdBagExt())
Endif

Aviso("Importação de CSV","Processo finalizado.",{"OK"})

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xAtuSZC(cAliastrb,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local aEstrut	:= {}
Local cAliasTmp	:= GetNextAlias()
Local cArqTmp	:= ""
Local cChave	:= ""
Local lErro		:= .F.
Local lGrava	:= .T.
Local cDescBem	:= ""
Local nTotRegs 	:= 0
Local nProcRegs	:= 0

aEstrut :={	{ "EMISSAO" 	, "D", 08, 0 },;
			{ "COD_BARRA"	, "C", 20, 0 },;
			{ "DESCR"		, "C", 30, 0 },;
			{ "CONTEUDO"	, "C", 20, 0 },;
			{ "MSG"			, "C", 60, 0 }}

cArqTmp := CriaTrab(aEstrut, .T.)
dbUseArea( .T.,, cArqTmp, cAliasTmp, .F., .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Indice Temporario do Arquivo de Trabalho.               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChave   := "DTOS(EMISSAO)+COD_BARRA"

IndRegua(cAliasTmp,cArqTmp,cChave,,,"Criando Arquivo Temporário...")
dbSelectArea(cAliasTmp)
dbSetIndex(cArqTmp+OrdBagExt())
dbSetOrder(1)


//Validacoes
dbSelectArea("SZC")
dbSetOrder(1)
If dbSeek(xFilial("SZC")+Dtos((cAliasTrb)->EMISSAO)+(cAliastrb)->LOCALIZ+(cAliasTrb)->RESP)
	MsgStop("Já existe informação para a data de "+Dtoc((cAliasTrb)->EMISSAO)+", localização "+(cAliastrb)->LOCALIZ+" e responsável "+(cAliasTrb)->RESP+". Verifique!")
	Return
Endif

dbSelectArea(cAliasTrb)

dbEval( {|x| nTotRegs++ },,{|| (cAliasTrb)->(!EOF())})
oProcess:SetRegua1(nTotRegs+2)
oProcess:IncRegua1("Iniciando Processamento...")
oProcess:SetRegua2(nTotRegs+1)
oProcess:IncRegua2("")

// Prcessa o Arquivo e Grava
dbSelectArea(cAliasTrb)
dbGotop()
While !Eof(cAliasTrb)
	
	cDescBem := xDescBem((cAliasTrb)->COD_BARRA,(cAliasTrb)->EMPORI)
	
	// Valida CC
	dbSelectArea("CTT")
	dbSetOrder(1)
	If !Empty((cAliasTrb)->CCUSTO) .and. !dbSeek(xFilial("CTT")+(cAliasTrb)->CCUSTO)
		lErro 	:= .T.
		lGrava 	:= .F.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->EMISSAO 	:= (cAliasTrb)->EMISSAO
		(cAliasTmp)->COD_BARRA 	:= (cAliasTrb)->COD_BARRA
		(cAliasTmp)->DESCR		:= cDescBem
		(cAliasTmp)->CONTEUDO 	:= (cAliasTrb)->CCUSTO
		(cAliasTmp)->MSG	 	:= "Centro de Custo "+Alltrim((cAliastrb)->CCUSTO)+" não localizado na base de dados."
		MsUnlock()
	Endif
	
	//Valida Item
	dbSelectArea("CTD")
	dbSetOrder(1)
	If !Empty((cAliasTrb)->ITEM) .and. !dbSeek(xFilial("CTD")+(cAliasTrb)->ITEM)
		lErro := .T.
		lGrava 	:= .F.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->EMISSAO 	:= (cAliastrb)->EMISSAO
		(cAliasTmp)->COD_BARRA 	:= (cAliasTrb)->COD_BARRA
		(cAliasTmp)->DESCR		:= cDescBem
		(cAliasTmp)->CONTEUDO 	:= (cAliasTrb)->ITEM
		(cAliasTmp)->MSG	 	:= "Item Contábil "+Alltrim((cAliasTrb)->ITEM)+" não localizado na base de dados."
		MsUnlock()
	Endif
	
	//Valida Classe de Valor
	/* Walmir Junior 24/05/2018 - Remoção da validação de Classe de Valor. 
	
	dbSelectArea("CTH")
	dbSetOrder(1)
	If !Empty((cAliasTrb)->CLVL) .and. !dbSeek(xFilial("CTH")+(cAliasTrb)->CLVL)
		lErro := .T.
		lGrava 	:= .F.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->EMISSAO 	:= (cAliasTrb)->EMISSAO
		(cAliasTmp)->COD_BARRA 	:= (cAliasTrb)->COD_BARRA
		(cAliasTmp)->DESCR		:= cDescBem
		(cAliasTmp)->CONTEUDO 	:= (cAliasTrb)->CLVL
		(cAliasTmp)->MSG	 	:= "Classe de Valor "+Alltrim((cAliasTrb)->CLVL)+" não localizada na base de dados."
		MsUnlock()
	Endif*/
	
	//Valida Responsavel
	dbSelectArea("RD0")
	dbSetOrder(1)
	If !Empty((cAliasTrb)->RESP) .and. !dbSeek(xFilial("RD0")+(cAliasTrb)->RESP)
		lErro := .T.
		lGrava 	:= .F.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->EMISSAO 	:= (cAliasTrb)->EMISSAO
		(cAliasTmp)->COD_BARRA 	:= (cAliasTrb)->COD_BARRA
		(cAliasTmp)->DESCR		:= cDescBem
		(cAliasTmp)->CONTEUDO 	:= (cAliasTrb)->RESP
		(cAliasTmp)->MSG	 	:= "Responsável "+Alltrim((cAliasTrb)->RESP)+" não localizado na base de dados."
		MsUnlock()
	Endif
	
	//Valida Localizacao
	dbSelectArea("SNL")
	dbSetOrder(1)
	If !Empty((cAliasTrb)->LOCALIZ) .and. !dbSeek(xFilial("SNL")+(cAliasTrb)->LOCALIZ)
		lErro := .T.
		lGrava 	:= .F.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->EMISSAO 	:= (cAliastrb)->EMISSAO
		(cAliasTmp)->COD_BARRA 	:= (cAliasTrb)->COD_BARRA
		(cAliasTmp)->DESCR		:= cDescBem
		(cAliasTmp)->CONTEUDO 	:= (cAliasTrb)->LOCALIZ
		(cAliasTmp)->MSG	 	:= "Localização "+Alltrim((cAliasTrb)->LOCALIZ)+" não localizada na base de dados."
		MsUnlock()
	Endif
	
	//Valida Empresa
	aAreaSM0 := GetArea("SM0")
	dbSelectArea("SM0")
	If !Empty((cAliasTrb)->EMPORI) .and. !dbSeek(cEmpAnt+(cAliasTrb)->EMPORI)
		lErro := .T.
		lGrava 	:= .F.
		dbSelectArea(cAliasTmp)
		RecLock(cAliasTmp,.T.)
		(cAliasTmp)->EMISSAO 	:= (cAliastrb)->EMISSAO
		(cAliasTmp)->COD_BARRA 	:= (cAliasTrb)->COD_BARRA
		(cAliasTmp)->DESCR		:= cDescBem
		(cAliasTmp)->CONTEUDO 	:= (cAliasTrb)->EMPORI
		(cAliasTmp)->MSG	 	:= "Empresa "+Alltrim((cAliasTrb)->EMPORI)+" não localizada na base de dados. Gr. Empresa: "+cEmpAnt
		MsUnlock()
	Endif
	RestArea(aAreaSM0)
	
	If lGrava
		dbSelectArea("SZC")
		RecLock("SZC",.T.)
		SZC->ZC_FILIAL 		:= xFilial("SZC")
		SZC->ZC_EMISSAO 	:= (cAliasTrb)->EMISSAO
		SZC->ZC_CODBAR 		:= (cAliasTrb)->COD_BARRA
		SZC->ZC_LOCALIZ		:= (cAliasTrb)->LOCALIZ
		SZC->ZC_RESP		:= (cAliasTrb)->RESP
		SZC->ZC_CC			:= (cAliasTrb)->CCUSTO
		SZC->ZC_ITEM		:= (cAliasTrb)->ITEM
		SZC->ZC_CLVL		:= (cAliasTrb)->CLVL
		SZC->ZC_EMPORI		:= (cAliasTrb)->EMPORI
		SZC->ZC_STATUS		:= "3"
		MsUnlock()
		
		// Chama rotina de conciliacao
		xConcilia()
		
		nProcRegs++
		oProcess:IncRegua2("Código de Barras: "+(cAliasTrb)->COD_BARRA)
		
	Endif
	
	oProcess:IncRegua1("Processando Ítem: "+CValToChar(nProcRegs)+" / "+CValToChar(nTotRegs))
	
	dbSelectArea(cAliasTrb)
	dbSkip()
	lGrava := .T.
	
Enddo

If lErro
	//Chama Impressao do Relatorio de Inconsistencias
	If ApMsgYesNo("Ocorreram inconsistências durante a importação dos dados, deseja imprimir o log?","Log de Inconsistências")
		xRelInc(cAliasTmp,"Inconsistências da Importação")
	Endif
	//Walmir Junior 25/05/2018 - Variável para sinalizar erro para importação via coletor.
	_lErAt := .T.
	//Desarma transação do a static function 
	If IsInCallStack("xImpTXT")
		DisarmTransaction()
	EndIf
Endif

If Select(cAliasTMP) > 0  //
	dbSelectArea(cAliasTMP)
	dbCloseArea()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SF01Inv5 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01Inv5

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cPerg := "AF2DEL"

ValidPerg(cPerg)

If Pergunte(cPerg,.T.)
	
	If MsgYesNo("Confirma deleção dos registros?","Confirma estorno? Sim/Não")
		dbSelectArea("SZC")
		dbSetOrder(1)
		dbGotop()
		dbSeek(xFilial("SZC")+DTOS(MV_PAR01),.T.)
		
		While !Eof() .and. SZC->ZC_FILIAL == xFilial("SZC") .AND. SZC->ZC_EMISSAO <= MV_PAR02
			RecLock("SZC",.F.)
			dbDelete()
			MsUnlock()
			dbSkip()
		EndDo
	Endif
	
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ xRelIn   º Autor ³ Leonardo Soncin    º Data ³  29/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Relatorio de Inconsistencias (Importacao e Transferencia)  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xRelInc(_cAlias,_cTitulo)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Declaracao de Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cDesc1        := "Este programa tem como objetivo imprimir relatorio "
Local cDesc2        := "de acordo com os parametros informados pelo usuario."
Local cDesc3        := _cTitulo
Local cPict       	:= ""
Local titulo       	:= _cTitulo
Local nLin         	:= 80
Local Cabec1       	:= "Emissão    Cod. Barra         Descrição                        Conteúdo              Mensagem"
//1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789123456789123456789123456789
//0        1         2         3         4         5         6         7         8         9         1
Local Cabec2       	:= ""
Local imprime      	:= .T.
Local aOrd 			:= {}
Private lEnd      	:= .F.
Private lAbortPrint	:= .F.
Private CbTxt     	:= ""
Private limite   	:= 132
Private tamanho  	:= "M"
Private nomeprog 	:= "SIATFA02"
Private nTipo     	:= 18
Private aReturn  	:= { "Zebrado", 1, "Administracao", 2, 2, 1, "", 1}
Private nLastKey	:= 0
Private cbtxt      	:= Space(10)
Private cbcont     	:= 00
Private CONTFL     	:= 01
Private m_pag      	:= 01
Private wnrel      	:= "SIATFA02"
Private cString		:= _cAlias

dbSelectArea(cString)
dbSetOrder(1)


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a interface padrao com o usuario...                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

wnrel := SetPrint(cString,NomeProg,"",@titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,.F.,Tamanho,,.F.)

If nLastKey == 27
	Return
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	Return
Endif

nTipo := If(aReturn[4]==1,15,18)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento. RPTSTATUS monta janela com a regua de processamento. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

RptStatus({|| RunReport(Cabec1,Cabec2,Titulo,nLin) },Titulo)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³RUNREPORT º Autor ³ AP6 IDE            º Data ³  29/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Funcao auxiliar chamada pela RPTSTATUS. A funcao RPTSTATUS º±±
±±º          ³ monta a janela com a regua de processamento.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Programa principal                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function RunReport(Cabec1,Cabec2,Titulo,nLin)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local nOrdem                                  
Local nTamLin := 50

dbSelectArea(cString)
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ SETREGUA -> Indica quantos registros serao processados para a regua ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SetRegua(RecCount())

dbGoTop()
While !EOF()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o cancelamento pelo usuario...                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If lAbortPrint
		@nLin,00 PSAY "*** CANCELADO PELO OPERADOR ***"
		Exit
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impressao do cabecalho do relatorio. . .                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If nLin > 55 // Salto de Página. Neste caso o formulario tem 55 linhas...
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
		nLin := 8
	Endif
	
	@nLin,000 PSAY Dtoc((cString)->EMISSAO)
	@nLin,011 PSAY (cString)->COD_BARRA
	@nLin,030 PSAY (cString)->DESCR
	@nLin,063 PSAY (cString)->CONTEUDO
	
//	@nLin,085 PSAY (cString)->MSG

    cAux1:= Dtoc((cString)->EMISSAO)
    cAux2:= (cString)->COD_BARRA
    cAux3:= (cString)->DESCR
    cAux4:= (cString)->CONTEUDO
    
    While cAux1 == Dtoc((cString)->EMISSAO) .And.;
			cAux2 ==(cString)->COD_BARRA .And.;
			cAux3 ==(cString)->DESCR .And. ;
			cAux4 == (cString)->CONTEUDO
			@nLin,085 PSAY (cString)->MSG			    
			nLin := nLin + 1 // Avanca a linha de impressao
			IncRegua()
			dbSkip() // Avanca o ponteiro do registro no arquivo
     End
	
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Finaliza a execucao do relatorio...                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SET DEVICE TO SCREEN

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se impressao em disco, chama o gerenciador de impressao...          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If aReturn[5]==1
	dbCommitAll()
	SET PRINTER TO
	OurSpool(wnrel)
Endif

MS_FLUSH()

Return



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³ xConciliaº Autor ³ AP6 IDE            º Data ³  29/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Funcao auxiliar chamada pela RPTSTATUS. A funcao RPTSTATUS º±±
±±º          ³ monta a janela com a regua de processamento.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Programa principal                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xConcilia()

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cQuery 	 := ""
Local cAliasTMP1 := GetNextAlias()

_cQuery :=  "SELECT N1_DESCRIC, N1_LOCAL, N3_CCUSTO, N3_SUBCTA, N3_SUBCDEP, N3_CLVL, ND_CODRESP "
_cQuery +=  "FROM "+RetSqlName("SN1")+" SN1 "
_cQuery +=  "LEFT OUTER JOIN "+RetSqlName("SN3")+" SN3 ON "
_cQuery +=  "SN3.N3_FILIAL = '"+Alltrim(SZC->ZC_EMPORI)+"' "
_cQuery +=  "AND SN3.N3_CBASE = SN1.N1_CBASE "
_cQuery +=  "AND SN3.N3_ITEM  = SN1.N1_ITEM "
_cQuery +=  "AND SN3.D_E_L_E_T_ != '*' "
_cQuery +=  "LEFT OUTER JOIN "+RetSqlName("SND")+" SND ON 
_cQuery +=  "SND.ND_FILIAL = '"+Alltrim(SZC->ZC_EMPORI)+"' "
_cQuery +=  "AND SND.ND_CBASE = SN1.N1_CBASE "
_cQuery +=  "AND SND.ND_ITEM = SN1.N1_ITEM "
_cQuery +=  "AND SND.D_E_L_E_T_ != '*' AND SND.ND_STATUS = '1' "
_cQuery +=  "WHERE SN1.N1_FILIAL = '"+Alltrim(SZC->ZC_EMPORI)+"' AND "
_cQuery +=  "SN1.N1_CODBAR = '"+SZC->ZC_CODBAR+"' AND "
_cQuery +=  "SN1.N1_BAIXA = ' ' AND " //Não considerar bens baixados
_cQuery +=  "SN1.D_E_L_E_T_ != '*' "
_cQuery := ChangeQuery(_cQuery)

If Select(cAliasTMP1) > 0
	dbSelectArea(cAliasTMP1)
	dbCloseArea()
Endif

dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),cAliasTMP1,.T.,.F.)

DbSelectArea(cAliasTMP1)
dbGotop()

If !Eof(cAliasTMP1)
	dbSelectArea("SZC")
	RecLock("SZC",.F.)
	SZC->ZC_DESCBEM 	:= (cAliasTMP1)->N1_DESCRIC
	SZC->ZC_XLOCAL 		:= (cAliasTMP1)->N1_LOCAL
	SZC->ZC_XRESP 		:= (cAliasTMP1)->ND_CODRESP
	SZC->ZC_XCC 		:= (cAliasTMP1)->N3_CCUSTO
	
	//09/07/2018 - INICIO ALTERAÇÃO - J2A - RICARDO SILVA	
	
	SZC->ZC_XITEM 	:= (cAliasTMP1)->N3_SUBCTA 
	//SZC->ZC_XITEM 		:= (cAliasTMP1)->N3_SUBCDEP
	
	//09/07/2018 - FIM ALTERAÇÃO - J2A - RICARDO SILVA
	
	SZC->ZC_XCLVL 		:= (cAliasTMP1)->N3_CLVL
	
	SZC->ZC_LOCALIZ		:= IIF(Empty(SZC->ZC_LOCALIZ),(cAliasTMP1)->N1_LOCAL  ,SZC->ZC_LOCALIZ)
	SZC->ZC_RESP		:= IIF(Empty(SZC->ZC_RESP   ),(cAliasTMP1)->ND_CODRESP,SZC->ZC_RESP   )
	
	If ZC_LOCALIZ+ZC_RESP+ZC_CC+ZC_ITEM+ZC_CLVL == ZC_XLOCAL+ZC_XRESP+ZC_XCC+ZC_XITEM+ZC_XCLVL
		SZC->ZC_STATUS 	:= "1" //CONCILIADO
	Else
		SZC->ZC_STATUS 	:= "2" //DIVERGENTE
	Endif
	
	MsUnLock()
Endif          

If Select(cAliasTMP1) > 0
	dbSelectArea(cAliasTMP1)
	dbCloseArea()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ ValidPerg³ Autor ³ Wagner Gomes          ³ Data ³ 10/12/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria as Perguntas para Fatura para locacao de Bens Moveis  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Especifico Construtora OAS Ltda                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ValidPerg(cPerg)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _sAlias	:= Alias()
Local aRegs 	:= {}
Local i,j

dbSelectArea("SX1")
dbSetOrder(1)
cPerg := PADR(cPerg,10)

If cPerg = "AF2DEL"
	
	// Grupo/Ordem/Pergunta/Variavel/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/Cnt01/Var02/Def02/Cnt02/Var03/Def03/Cnt03/Var04/Def04/Cnt04/Var05/Def05/Cnt05
	aAdd(aRegs,{cPerg,"01","Emissão de:  "				,"mv_ch1","D",08,0,0,"G","naovazio()","mv_par01","","","","","","","","","","","","","","","",""})
	aAdd(aRegs,{cPerg,"02","Emissão até: "				,"mv_ch2","D",08,0,0,"G","naovazio() .and. mv_par02>=mv_par01","mv_par02","","","","","","","","","","","","","","","",""})
	
Else
	
	// Grupo/Ordem/Pergunta/Variavel/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/Cnt01/Var02/Def02/Cnt02/Var03/Def03/Cnt03/Var04/Def04/Cnt04/Var05/Def05/Cnt05
	aAdd(aRegs,{cPerg,"01","Codigo de Barras de:  "		,"mv_ch1","C",20,0,0,"G","","mv_par01","","","","","","","","","","","","","","","",""})
	aAdd(aRegs,{cPerg,"02","Codigo de Barras até: "		,"mv_ch2","C",20,0,0,"G","","mv_par02","","","","","","","","","","","","","","","",""})
	
Endif

For i := 1 to Len(aRegs)
	PutSX1(aRegs[i,1],aRegs[i,2],aRegs[i,3],aRegs[i,3],aRegs[i,3],aRegs[i,4],aRegs[i,5],aRegs[i,6],aRegs[i,7],;
	aRegs[i,8],aRegs[i,9],aRegs[i,10],iif(len(aRegs[i])>=26,aRegs[i,26],""),aRegs[i,27],"",aRegs[i,11],aRegs[i,12],;
	aRegs[i,12],aRegs[i,12],aRegs[i,13],aRegs[i,15],aRegs[i,15],aRegs[i,15],aRegs[i,18],aRegs[i,18],aRegs[i,18],;
	aRegs[i,21],aRegs[i,21],aRegs[i,21],aRegs[i,24],aRegs[i,24],aRegs[i,24])
	
Next i

dbSelectArea(_sAlias)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SF01Inv6 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Conciliacao dos Registros                                  º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01Inv6

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local aArea		:= GetArea()
Local oProcess  := NIL

If ApMsgYesNo("Confirma conciliação dos itens?","Conciliação")
	oProcess := MsNewProcess():New( { | lEnd | xConcl( @lEnd,oProcess) }, 'Processando', 'Aguarde, processando...', .F. )
	oProcess:Activate()
Endif

Aviso("Conciliação","Processo Finalizado.",{"OK"})

RestArea(aArea)

Return

// Conciliação dos Itens

Static Function xConcl(lEnd,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cFilter 	:= "ZC_STATUS == '3'" //NÃO CONCILIADO
Local nTotRegs 	:= 0
Local nProcRegs := 0

dbSelectArea("SZC")
Set Filter To &(cFilter)

dbEval( {|x| nTotRegs++ },,{|| SZC->(!EOF())})
oProcess:SetRegua1(nTotRegs+2)
oProcess:IncRegua1("Iniciando Processamento...")

dbGotop()
While ! Eof("SZC")
	
	xConcilia()
	
	nProcRegs++
	oProcess:IncRegua1("Processando Item: "+CValToChar(nProcRegs)+" / "+CValToChar(nTotRegs))
	
	dbSelectArea("SZC")
	dbSkip()
Enddo

dbClearFilter()

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SF01Inv2 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01Inv2

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cPerg 	:= "AF2TRF"
Local aArea 	:= GetArea()
Local oProcess  := NIL

ValidPerg(cPerg)
If Pergunte(cPerg,.T.)
	If ApMsgYesNo("Confirma a transferência de locais?","Transferência")
		oProcess := MsNewProcess():New( { | lEnd | xTrfLoc( @lEnd,oProcess) }, 'Processando', 'Aguarde, processando...', .F. )
		oProcess:Activate()
	Endif
Endif

Aviso("Transferência","Processo finalizado.",{"OK"})

RestArea(aArea)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xTrfLoc(lEnd,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cQuery 		:= ""
Local cAliasTMP2 	:= GetNextAlias()
Local nProcRegs	  	:= 0
Local nTotRegs	  	:= 0
Local aAreaSN3		:= {}
Local aArea			:= {}
Local cChave 		:= ""

_cQuery :=  "SELECT ZC_CODBAR, ZC_EMPORI, ZC_LOCALIZ, ZC_EMPORI, N1_CBASE, N1_ITEM, SZC.R_E_C_N_O_ AS RECNOSZC "
_cQuery +=  "FROM "+RetSqlName("SZC")+" SZC "
_cQuery +=  "LEFT OUTER JOIN "+RetSqlName("SN1")+" SN1 ON N1_FILIAL = ZC_EMPORI AND N1_CODBAR = ZC_CODBAR AND SN1.D_E_L_E_T_ = ' ' "
_cQuery +=  " WHERE ZC_FILIAL = '"+xFilial("SZC")+"' AND "
_cQuery +=  "ZC_CODBAR BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"' AND "
_cQuery +=  "ZC_STATUS IN ('2','3') AND "
_cQuery +=  "N1_BAIXA = ' ' AND "	//Não considerar bens baixados
_cQuery +=  "SZC.D_E_L_E_T_ = ' ' "
_cQuery := ChangeQuery(_cQuery)

If Select(cAliasTMP2) > 0
	dbSelectArea(cAliasTMP2)
	dbCloseArea()
Endif

dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),cAliasTMP2,.T.,.F.)

DbSelectArea(cAliasTMP2)

dbEval( {|x| nTotRegs++ },,{|| (cAliasTMP2)->(!EOF())})
oProcess:SetRegua1(nTotRegs+2)
oProcess:IncRegua1("Iniciando processamento...")
oProcess:SetRegua2(nTotRegs+1)
oProcess:IncRegua2("")

dbGotop()
aArea := GetArea()
aAreaSN3 := SN3->( GetArea() )

While !Eof()

	dbSelectArea("SN1")
	dbSetOrder(1)
	cChave := Alltrim((cAliasTMP2)->ZC_EMPORI) + (cAliasTMP2)->(N1_CBASE + N1_ITEM)

	If SN1->( dbSeek( cChave ) )
		RecLock( "SN1" , .F. )
		SN1->N1_LOCAL := (cAliasTMP2)->ZC_LOCALIZ
		MsUnlock()
	EndIf

	dbSelectArea("SN3")
	dbSetOrder(1)
	If SN3->( dbSeek( cChave ) )
		While !( SN3->( Eof() ) ) .And. SN3->(N3_FILIAL + N3_CBASE + N3_ITEM) == cChave
			RecLock( "SN3" , .F. )
			SN3->N3_LOCAL := (cAliasTMP2)->ZC_LOCALIZ
			MsUnlock()
			SN3->( dbSkip() )
		EndDo
	EndIf

	dbSelectArea("SZC")
	dbSetOrder(1)
	dbGoto((cAliasTMP2)->RECNOSZC)
	
	xConcilia()
	
	nProcRegs++
	oProcess:IncRegua1("Processando item: "+CValToChar(nProcRegs)+" / "+CValToChar(nTotRegs))
	oProcess:IncRegua2("Codigo de Barra: "+(cAliasTMP2)->ZC_CODBAR)
	
	DbSelectArea(cAliasTMP2)
	dbSkip()
EndDo

RestArea( aAreaSN3 )
RestArea( aArea )

If Select(cAliasTMP2) > 0
	dbSelectArea(cAliasTMP2)
	dbCloseArea()
Endif

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xDescBem(cCodBar,_cEmpOri)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cDescr		:= ""
Local _cQuery 		:= ""
Local cAliasTMP3 	:= GetNextAlias()

_cQuery :=  "SELECT N1_DESCRIC "
_cQuery +=  "FROM "+RetSqlName("SN1")+" SN1 "
_cQuery +=  "WHERE N1_FILIAL = '"+_cEmpOri+"' AND "
_cQuery +=  "N1_CODBAR = '"+cCodBar+"' AND "
_cQuery +=  "SN1.D_E_L_E_T_ = ' ' "
_cQuery := ChangeQuery(_cQuery)

If Select(cAliasTMP3) > 0
	dbSelectArea(cAliasTMP3)
	dbCloseArea()
Endif

dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),cAliasTMP3,.T.,.F.)

dbSelectArea(cAliasTMP3)

If !Eof(cAliasTMP3)
	cDescr := (cAliasTMP3)->N1_DESCRIC
Endif
       
If Select(cAliasTMP3) > 0
	dbSelectArea(cAliasTMP3)
	dbCloseArea()
Endif

Return cDescr


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01Inv1

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cPerg		:= "AF2TRF"
Local aArea 	:= GetArea()
Local oProcess  := NIL

ValidPerg(cPerg)
If Pergunte(cPerg,.T.)
	If ApMsgYesNo("Confirma a transferência de responsáveis?","Transferência")
		oProcess := MsNewProcess():New( { | lEnd | xTrfResp( @lEnd,oProcess) }, 'Processando', 'Aguarde, processando...', .F. )
		oProcess:Activate()
	Endif
Endif

Aviso("Transferência","Processo finalizado.",{"OK"})

RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xTrfResp(lEnd,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cQuery		:= ""
Local cAliasTMP2	:= GetNextAlias()
Local nProcRegs	  	:= 0
Local nTotRegs	  	:= 0
Local __cFilOri	  	:= cFilAnt

_cQuery :=  "SELECT ZC_CODBAR, ZC_RESP, ZC_XRESP, ZC_EMPORI, N1_CBASE, N1_ITEM, SZC.R_E_C_N_O_ AS RECNOSZC "
_cQuery +=  "FROM "+RetSqlName("SZC")+" SZC "
_cQuery +=  "LEFT OUTER JOIN "+RetSqlName("SN1")+" SN1 ON N1_FILIAL = ZC_EMPORI AND N1_CODBAR = ZC_CODBAR AND SN1.D_E_L_E_T_ = ' ' "
_cQuery +=  " WHERE ZC_FILIAL = '"+xFilial("SZC")+"' AND "
_cQuery +=  "ZC_CODBAR BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"' AND "
_cQuery +=  "ZC_STATUS IN ('2','3') AND "
_cQuery +=  "ZC_RESP <> ZC_XRESP AND "
_cQuery +=  "N1_BAIXA = ' ' AND "	//Não considerar bens baixados
_cQuery +=  "SZC.D_E_L_E_T_ = ' ' "
_cQuery := ChangeQuery(_cQuery)

If Select(cAliasTMP2) > 0
	dbSelectArea(cAliasTMP2)
	dbCloseArea()
Endif

dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),cAliasTMP2,.T.,.F.)

DbSelectArea(cAliasTMP2)

dbEval( {|x| nTotRegs++ },,{|| (cAliasTMP2)->(!EOF())})
oProcess:SetRegua1(nTotRegs+2)
oProcess:IncRegua1("Iniciando Processamento...")
oProcess:SetRegua2(nTotRegs+1)
oProcess:IncRegua2("")

dbGotop()

While !Eof()
	
	dbSelectArea("SN1")
	dbSetOrder(1)
	dbSeek(Alltrim((cAliasTMP2)->ZC_EMPORI)+(cAliasTMP2)->(N1_CBASE+N1_ITEM))
	
	cFilAnt := (cAliasTMP2)->(ZC_EMPORI)
	
	If Af190GrTrans(SN1->N1_CBASE,SN1->N1_ITEM,(cAliasTMP2)->ZC_XRESP,(cAliasTMP2)->ZC_RESP)
		
		dbSelectArea("SZC")
		dbSetOrder(1)
		dbGoto((cAliasTMP2)->RECNOSZC)
		
		cFilAnt := __cFilOri
		
		xConcilia()
		
		nProcRegs++
		oProcess:IncRegua1("Processando Item: "+CValToChar(nProcRegs)+" / "+CValToChar(nTotRegs))
		oProcess:IncRegua2("Codigo de Barra: "+(cAliasTMP2)->ZC_CODBAR)
		
	Endif
	
	DbSelectArea(cAliasTMP2)
	dbSkip()
EndDo

cFilAnt := __cFilOri       

If Select(cAliasTMP2) > 0
	dbSelectArea(cAliasTMP2)
	dbCloseArea()
Endif


Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

User Function SF01Inv3

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local cPerg		:= "AF2TRF"
Local aArea		:= GetArea()
Local oProcess  := NIL

ValidPerg(cPerg)
If Pergunte(cPerg,.T.)
	If ApMsgYesNo("Confirma a transferência de dados contábeis?","Transferência")
		oProcess := MsNewProcess():New( { | lEnd | xTrfCtb( @lEnd,oProcess) }, 'Processando', 'Aguarde, processando...', .F. )
		oProcess:Activate()
	Endif
Endif

Aviso("Transferência","Processo finalizado.",{"OK"})

RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ SIATFA02 º Autor ³ Leonardo Soncin    º Data ³  25/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Processo especifico de Inventario de ATF - CNI             º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ CNI                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function xTrfCtb(lEnd,oProcess)

Local cEstat := U_SFGN001A(ProcName(0), "SF0102F")
Local _cQuery		:= ""
Local cAliasTMP 	:= GetNextAlias()
Local cAliasTMP2 	:= GetNextAlias()
Local nProcRegs	  	:= 0
Local nTotRegs	  	:= 0
Local aDadosAuto 	:= {}         // Array com os dados a serem enviados pela MsExecAuto() para gravacao automatica
Local aEstrut		:= {}
Local lErro 		:= .F.                 
Local nTamLin 		:= 50
Local _cErroAuto	:= ""
Local __cFilOri		:= cFilAnt
Local nContador		:= 0
Local aParamAuto  := {}

Private lMsHelpAuto := .f.        // Determina se as mensagens de help devem ser direcionadas para o arq. de log
Private lMsErroAuto := .f.        // Determina se houve alguma inconsistencia na execucao da rotina em relacao aos

aEstrut :={	{ "EMISSAO" 	, "D", 	 8, 0 },;
			{ "COD_BARRA"	, "C",  20, 0 },;
			{ "DESCR"		, "C",  30, 0 },;
			{ "CONTEUDO"	, "C",  20, 0 },;
			{ "MSG"			, "C",  60, 0 }}

cArqTmp := CriaTrab(aEstrut, .T.)
dbUseArea( .T.,, cArqTmp, cAliasTmp, .F., .F. )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Indice Temporario do Arquivo de Trabalho.               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cChave   := "DTOS(EMISSAO)+COD_BARRA"

IndRegua(cAliasTmp,cArqTmp,cChave,,,"Criando Arquivo Temporário...")
dbSelectArea(cAliasTmp)
dbSetIndex(cArqTmp+OrdBagExt())
dbSetOrder(1)

_cQuery :=  "SELECT ZC_EMISSAO, ZC_CODBAR, ZC_CC, ZC_CLVL, ZC_ITEM, ZC_EMPORI, N1_GRUPO, N1_CBASE, N1_ITEM, N1_DESCRIC,  "
_cQuery +=  "N3_CCONTAB, N3_CDEPREC, N3_CCDEPR, N3_CCDESP, SZC.R_E_C_N_O_ AS RECNOSZC "
_cQuery +=  "FROM "+RetSqlName("SZC")+" SZC "
_cQuery +=  "LEFT OUTER JOIN "+RetSqlName("SN1")+" SN1 ON N1_FILIAL = ZC_EMPORI AND N1_CODBAR = ZC_CODBAR AND SN1.D_E_L_E_T_ != '*' "
_cQuery +=  "LEFT OUTER JOIN "+RetSqlName("SN3")+" SN3 ON N3_FILIAL = N1_FILIAL AND N3_CBASE = N1_CODBAR " 
_cQuery +=  "	AND N3_ITEM = N1_ITEM AND SN3.D_E_L_E_T_ != '*' "
_cQuery +=  " WHERE ZC_FILIAL = '"+xFilial("SZC")+"' AND "
_cQuery +=  "ZC_CODBAR BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"' AND "
_cQuery +=  "ZC_STATUS IN ('2','3') AND "
_cQuery +=  "N1_BAIXA = ' ' AND "	//Não considerar bens baixados
_cQuery +=  "SZC.D_E_L_E_T_ != '*' "
_cQuery := ChangeQuery(_cQuery)

If Select(cAliasTMP2) > 0
	dbSelectArea(cAliasTMP2)
	dbCloseArea()
Endif

dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery),cAliasTMP2,.T.,.F.)

DbSelectArea(cAliasTMP2)

dbEval( {|x| nTotRegs++ },,{|| (cAliasTMP2)->(!EOF())})
oProcess:SetRegua1(nTotRegs+2)
oProcess:IncRegua1("Iniciando processamento...")
oProcess:SetRegua2(nTotRegs+1)
oProcess:IncRegua2("")

dbGotop()

While !Eof()
	
	aDadosAuto:= { 	{'N3_FILIAL'	,(cAliasTMP2)->ZC_EMPORI	, Nil},;	// Filial
					{'N3_CBASE'		,(cAliasTMP2)->N1_CBASE		, Nil},;	// Codigo base do ativo
					{'N3_ITEM'  	,(cAliasTMP2)->N1_ITEM		, Nil},;	// Item sequencial do codigo bas do ativo
					{'N4_DATA'  	, dDataBase					, Nil},;	// Data da Transferencia
					{'N3_CCUSTO'	,(cAliasTMP2)->ZC_CC   		, Nil},;	// Centro de Custo de Despesa
					{'N3_SUBCTA'	,(cAliasTMP2)->ZC_ITEM 		, Nil},;	// Item Contabil da Despesa /* Walmir Junior 06/08/2018 - Alteração do preenchimento do campo N3_SUBCDEP para N3_SUBCTA a pedido do usuário. [{'N3_SUBCDEP'	,(cAliasTMP2)->ZC_ITEM 		, Nil},;	// Item Contabil da Despesa]*/
					{'N3_SUBCDEP'	,(cAliasTMP2)->ZC_ITEM 		, Nil},;	// Item Contabil da Despesa /* Paulo Schwind */  
					{'N3_CLVL' 		,(cAliasTMP2)->ZC_CLVL    	, Nil};	    // Classe de Valor da Despesa
				}
					//{'N3_CCONTAB'	,(cAliasTMP2)->N3_CCONTAB   , Nil},;	// Conta Contabil
					//{'N3_CCDESP'	,(cAliasTMP2)->N3_CCDESP   	, Nil},;	// Centro Custo Desp Depr.           
					//{'N3_CDEPREC'	,(cAliasTMP2)->N3_CDEPREC   , Nil},;	// Conta Despesa Depreciacao
					//{'N3_CCDEPR'	,(cAliasTMP2)->N3_CCDEPR    , Nil},;	// Conta Deprec. Acumulada
					//{'N1_GRUPO'		,(cAliasTMP2)->N1_GRUPO	    , Nil}}		// Grupo do Bem 	  
	
	cFilAnt := (cAliasTMP2)->ZC_EMPORI

	// 08/07/2019 - Paulo Schwind - Ajustado, conforme TDN
	// Parâmetros das perguntas da rotina atfa060 
	aAdd( aParamAuto, {"MV_PAR01", 1} ) //Pergunta 01 - Contabiliza ? 		 1 = Sim ; 2 = Não 
	aAdd( aParamAuto, {"MV_PAR02", 2} ) //Pergunta 02 - Mostra Lanc Contab ? 1 = Sim ; 2 = Não 
	aAdd( aParamAuto, {"MV_PAR03", 2} ) //Pergunta 02 - Aglut Lançamentos ?  1 = Sim ; 2 = Não 
	
	// 08/07/2019 - Paulo Schwind - Ajustado, conforme TDN
	// Para transferência contábil, foi necessário repassar  [ aParamAuto ]
	MSExecAuto({|x, y, z| AtfA060(x, y, z)},aDadosAuto, 4 , aParamAuto)
	
	cFilAnt := __cFilOri
	
	If lMsErroAuto
		
		_cArqAuto 	:= NomeAutoLog()
		//MostraErro()
		_cErroAuto 	:= MemoRead(_cArqAuto)
		_cErroAuto 	:= Iif(Empty(_cErroAuto),"Erro na Execução do MsExecauto. Verificar log.",_cErroAuto)
		
		lErro := .T.
		dbSelectArea(cAliasTmp)
	
		nLinMsg := mlCount(_cErroAuto, nTamLin) //Total de linhas da Mensagem

   	    For nContador := 1 To nLinMsg
   	    	If RecLock(cAliasTmp,.T.)
		   		(cAliasTmp)->EMISSAO	:= Stod((cAliasTMP2)->ZC_EMISSAO)
				(cAliasTmp)->COD_BARRA	:= (cAliasTMP2)->ZC_CODBAR
				(cAliasTmp)->DESCR		:= (cAliasTMP2)->N1_DESCRIC
				(cAliasTmp)->CONTEUDO	:= Memoline(_cErroAuto,nTamLin,1)
				(cAliasTmp)->MSG		:= IIf(!Empty(Alltrim(Memoline(_cErroAuto,nTamlin,nContador))),Alltrim(Memoline(_cErroAuto,nTamlin,nContador)),' ') //)+Space(1)+Alltrim(Memoline(_cErroAuto,132,3))
				MsUnlock()
			EndIf
		Next

	Else
		
		dbSelectArea("SZC")
		dbSetOrder(1)
		dbGoto((cAliasTMP2)->RECNOSZC)
		
		xConcilia()
		
		nProcRegs++
		
	EndIf
	
	oProcess:IncRegua1("Processando item: "+CValToChar(nProcRegs)+" / "+CValToChar(nTotRegs))
	oProcess:IncRegua2("Codigo de Barra: "+(cAliasTMP2)->ZC_CODBAR)
	
	DbSelectArea(cAliasTMP2)
	dbSkip()
	
	aDadosAuto  := {}
	lMsErroAuto := .f.
	
EndDo

If lErro
	//Chama Impressao do Relatorio de Inconsistencias
	If ApMsgYesNo("Ocorreram inconsistências durante a transferência dos dados, deseja imprimir o log?","Log de Inconsistências")
		xRelInc(cAliasTmp,"Inconsistências da Transferência")
	Endif
Endif
                           
If Select(cAliasTMP) > 0
	dbSelectArea(cAliasTMP)
	dbCloseArea()
Endif

If Select(cAliasTMP2) > 0
	dbSelectArea(cAliasTMP2)
	dbCloseArea()
Endif

Return



