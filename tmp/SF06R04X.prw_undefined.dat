#INCLUDE 'TOTVS.CH'

/*/{Protheus.doc} SF06R04X
	@descriptio Relatório de Inadimplencia

	@author Allan da Silva Faria
	@since 15/08/2016
	@version 1.0

	@history 
		Rafael Karczevski
		12/07/2019
		Relatório alterado para atender exigencias descritas da J2A072 da data de 15/07/2019
		
		************************************************************************************
		Walmir Junior 
		16/02/2020
		Alterações do relatório para atender ANS encaminhado no chamado 184742
/*/
User Function SF06R04X()

	Local oReport 		:= Nil
	Private cTrab		:= GetNextAlias()
	Private aSelFil		:= {}
	Private lTodasFil 	:= .F.
	Private cPerg   	:= "SF06R04X"
	
	PergDef(cPerg)
	Pergunte(cPerg,.T.)
	MV_PAR02 := ctod("01/"+substr(MV_PAR01,1,2)+"/"+substr(MV_PAR01,3,4))
	MV_PAR03 := LastDate(MV_PAR02)

	oReport:= ReportDef()
	oReport:PrintDialog()
	
Return Nil

//------------------------------------------------------
/*/{Protheus.doc} ReportDef

@author Allan da Silva Faria
@since 15/08/2016
@version 1.0
@return Objecto, objeto do report
/*/
//------------------------------------------------------

Static Function ReportDef()

	Local oReport := Nil
	Local oSecHead:= Nil
	Local oSecMov := Nil
	Local cTitulo := "Relatório de Inadimplência "+substr(MV_PAR01,1,2)+"/"+substr(MV_PAR01,3,4)
	Local cDescri := "Esse relatório ira emitir a inadimplência por filial/centro de custo."
	Local cPicVlr := TM(999999999.99,14,2)
	Local cPicPer := TM(99999.99,8,2)
	
	oReport:= TReport():New(AllTrim(FunName()),cTitulo,cPerg,{|oReport| PrintDef(oReport)},cDescri)
	oReport:oPage:SetPaperSize(9) 	//-- Pagina A4
	oReport:nFontBody:= 8			//-- Tamanho do fonte
	oReport:nLineHeight:= 40		//-- Altura das Linhas
	oReport:SetLandscape()			//-- Orientação Paisagem.
	oReport:DisableOrientation()	//-- Desabilita a seleção de orientação
	oReport:SetMsgPrint("Aguarde...") 
	oReport:ParamReadOnly(.T.)
	oReport:SetTotalInLine(.f.)
	
	//--------------------------------------
	//-- Secaoa de Header
	//--------------------------------------
	oSecHead:= TRSection():New( oReport, "", "")
	oSecHead:SetLinesBefore(0)
	oSecHead:SetHeaderSection(.F.)
	oSecHead:SetHeaderPage(.F.)
	oSecHead:SetAutoSize(.F.)
	oSecHead:SetTotalInLine(.f.)
	
	TRCell():New( oSecHead, "ENTIDADE"	, cTrab, "", "@!", 24, .T., {|| "ENTIDATE/FILIAL"				}, "CENTER", , "CENTER",,,.F.,,,.T.)
	TRCell():New( oSecHead, "PERRECME"	, cTrab, "", "@!", 40, .T., {|| "PERCENTUAL DE RECEB NO MES"	}, "CENTER", , "CENTER",,,.F.,,,.T.)
	TRCell():New( oSecHead, "INDGERAL"	, cTrab, "", "@!", 40, .T., {|| "INDICE GERAL"			    	}, "CENTER", , "CENTER",,,.F.,,,.T.)
	TRCell():New( oSecHead, "INADPF"	, cTrab, "", "@!", 40, .T., {|| "INDICE DE INADIMPLENCIA PF"	}, "CENTER", , "CENTER",,,.F.,,,.T.)
	TRCell():New( oSecHead, "INADPJ"	, cTrab, "", "@!", 40, .T., {|| "INDICE DE INADIMPLENCIA PJ"	}, "CENTER", , "CENTER",,,.F.,,,.T.)
	
	//TRCell():New( oSecHead, "CLISPC"	, cTrab, "", "@!",  8, .T., {|| "CLIENTE"							        }, "CENTER", , "CENTER",,,.F.,,,.T.)
	
	oSecHead:SetCellBorder("ALL",1,,.F.)
	
	oSecHead:Cell("ENTIDADE"):SetClrBack(RGB(204,204,204))
	oSecHead:Cell("PERRECME"):SetClrBack(RGB(204,204,204))
	oSecHead:Cell("INDGERAL"):SetClrBack(RGB(204,204,204))
	oSecHead:Cell("INADPF"	):SetClrBack(RGB(204,204,204))
	oSecHead:Cell("INADPJ"	):SetClrBack(RGB(204,204,204))
	//oSecHead:Cell("CLISPC"	):SetClrBack(RGB(204,204,204))
	
	//--------------------------------------
	//-- Secao a de movimento
	//--------------------------------------
	oSecMov:= TRSection():New( oSecHead, "", "")
	oSecMov:SetLinesBefore(0)
	oSecMov:SetAutoSize(.F.)
	
	TRCell():New( oSecMov, "FILIAL"		, cTrab, " CODIGO "	  , "@!"        , 10, .T.,, "LEFT"   , .T., "CENTER"  ,,,.F.,,,.T.)
	TRCell():New( oSecMov, "NOME_FIL"	, cTrab, " FILIAL"	  , "@!"        , 15, .T.,, "LEFT"   , .T., "CENTER"  ,,,.F.,,,.T.)

	
	//-- Grupo Analise por Títulos (mes)
	//20
	TRCell():New( oSecMov, "T_FATURA"	, cTrab, " RECEBIDO MES"	  , cPicVlr		, 15, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//20
	TRCell():New( oSecMov, "T_INADIP"	, cTrab, " VENCIDOS MES"  , cPicVlr		, 15, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//14
	TRCell():New( oSecMov, "T_PERC"		, cTrab, " %"		  , cPicPer     , 08, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)

	//-- Grupo Analise por Valores (Geral)
	//22
	TRCell():New( oSecMov, "V_INADIP"	, cTrab, " NAO RECEBIDOS"	  , cPicVlr     , 15, .T.,, "RIGHT"  , .F., "CENTER",,,.F.,,,.T.)
	//25
	TRCell():New( oSecMov, "V_FATURA"	, cTrab, " A RECEBER"		  , cPicVlr     , 15, .T.,, "RIGHT"  , .F., "CENTER",,,.F.,,,.T.)
	//11.4
	TRCell():New( oSecMov, "V_PERC"		, cTrab, " %"		  , cPicPer     , 08, .T.,, "RIGHT"  , .F., "CENTER",,,.F.,,,.T.)
	
	//-- Grupo Analise por Clientes PF
	//19
	TRCell():New( oSecMov, "F_INADIP"	, cTrab, " NAO RECEBIDOS"	  , cPicVlr     , 15, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//20
	TRCell():New( oSecMov, "F_FATURA"	, cTrab, " A RECEBER"		  , cPicVlr     , 15, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//11
	TRCell():New( oSecMov, "F_PERC"		, cTrab, " %"		  , cPicPer     , 08, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)

	//-- Grupo Analise por Clientes PJ
	//20
	TRCell():New( oSecMov, "J_INADIP"	, cTrab, " NAO RECEBIDO"	  , cPicVlr     , 15, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//20
	TRCell():New( oSecMov, "J_FATURA"	, cTrab, " A RECEBER"		  , cPicVlr     , 15, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//11
	TRCell():New( oSecMov, "J_PERC"		, cTrab, " %"		  , cPicPer     , 08, .T. ,, "RIGHT" , .F., "CENTER",,,.F.,,,.T.)
	//
	oBreak := TRBreak():New(oSecHead,oSecHead:Cell("ENTIDADE"), "Total ",.f.)
	TRFunction():New(oSecMov:Cell("T_FATURA"),"Rec Mes"		 ,"SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("T_INADIP"),"vencido Mes"	 ,"SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("V_INADIP"),"Nao receb"	 ,"SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("V_FATURA"),"A receber"	 ,"SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("F_INADIP"),"Nao recebidos","SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("F_FATURA"),"A receber"	 ,"SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("J_INADIP"),"Nao recebidos","SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)
	TRFunction():New(oSecMov:Cell("J_FATURA"),"A receber"	 ,"SUM",oBreak,,/*@E 9,999,999,999.99"*/,,.f.,.f.)

	//-- Borda no Header
	oSecMov:SetCellBorder("ALL",1,,.T.)
	
	//-- Borda nas Linhas
	oSecMov:SetCellBorder("ALL",1,,.F.)

Return(oReport)

//------------------------------------------------------
/*/{Protheus.doc} PrintDef
Imprime

@author Allan da Silva Faria
@since 15/08/2016
@version 1.0
@param oReport, objeto, objeto do report
@return objeto, objeto do report
/*/
//------------------------------------------------------

Static Function PrintDef(oReport)

	Local oSecHead	:= oReport:Section(1)
	Local oSecMov	:= oReport:Section(1):Section(1)
	Local cFil	  	:= ""
	Local cWhere	:= ""
			
	Private _TotVInadip	:= 0
	Private _TotVFatura	:= 0
	Private _TotTInadip	:= 0
	Private _TotTFatura	:= 0
	Private _TotFInadip	:= 0
	Private _TotFFatira	:= 0
	Private _TotJInadip	:= 0
	Private _TotJFatura	:= 0
			
	While Len(aSelFil) == 0
	aSelFil := AdmGetFil(@lTodasFil)
	End
	aEval(aSelFil,{|HH| cFil+=HH+"\"})
	cWhere += " SE1.E1_FILIAL IN "+FormatIn(cFil,"\")
	
	
	
	oReport:SetMsgPrint("Processando...")
	
	//-------------------------------------
	//-- Processa Faturamento/Recebimento
	//-------------------------------------
	cTrab := ProcDef(cWhere,oReport)
	
	dbSelectArea(cTrab)
	(cTrab)->(dbGoTop())
	
	//-----------------------------------------------
	//-- Caso relatório seja cancelado pelo usuário 
	//-----------------------------------------------
	If oReport:Cancel()
		
		oReport:SkipLine(1)
		oReport:PrintText("<<< " + cCancel + " >>>")
	
	Else
		//---------------
		//-- Imprimi  
		//---------------
		oSecHead:Init()
		oSecMov:Init()
		
		oSecHead:PrintLine()
		
		oReport:SetMsgPrint("Imprimindo...")
		oReport:SetMeter((cTrab)->(LastRec()))
		
		(cTrab)->(DBGoTop()) 
		
		While (cTrab)->(!EOF()) 
		
			oReport:IncMeter()	
			oSecMov:PrintLine()
			
			_TotVInadip += Iif(Empty((cTrab)->V_INADIP),0,(cTrab)->V_INADIP)
			_TotVFatura += Iif(Empty((cTrab)->V_FATURA),0,(cTrab)->V_FATURA)
			_TotTInadip += Iif(Empty((cTrab)->T_INADIP),0,(cTrab)->T_INADIP)
			_TotTFatura += Iif(Empty((cTrab)->T_FATURA),0,(cTrab)->T_FATURA)
			_TotFInadip += Iif(Empty((cTrab)->F_INADIP),0,(cTrab)->F_INADIP)
			_TotFFatira += Iif(Empty((cTrab)->F_FATURA),0,(cTrab)->F_FATURA)
			_TotJInadip += Iif(Empty((cTrab)->J_INADIP),0,(cTrab)->J_INADIP)
			_TotJFatura += Iif(Empty((cTrab)->J_FATURA),0,(cTrab)->J_FATURA)
			(cTrab)->(dbSkip())
		EndDo


		oSecHead:Finish()
		oSecMov:Finish() 
	
	EndIf
	
	
	//------------------------------------
	//-- Excluir o arquivo temporario 
	//------------------------------------
	(cTrab)->(dbCloseArea())
	
	MsErase(cTrab,,"TOPCONN")

Return(oReport)



//------------------------------------------------------
/*/{Protheus.doc} ProcDef
Processa dados para calcular valores de inandimplencia.

@author Allan da Silva Faria
@since 22/08/2016
@version 1.0
@param cWhere, character, filtra por filial
@return character, Arquivo de trabalho
/*/
//------------------------------------------------------
Static Function ProcDef(cWhere,oReport)

	Local cTemp    := GetNextAlias()
	Local cTrab2   := GetTrabDef("B")
	Local cEmpBkp  := cFilAnt
	Local cParAux  := GetNewPar("MV_XCLIINA","33398861|33641358|33665126|33564543|01027058")
	Local cStr     := ""
	Local cParam   := ""
	Local nX := nI := 1
	//---------------------------
	//-- Checa alias já em uso
	//---------------------------
	If Select(cTemp)>0
		dbSelectArea(cTemp)
		(cTemp)->(dbCloseArea())
	EndIf
	
	For nI := 1 To Len(cParAux)
		If SubStr(cParAux,nI,1) != "|"
			cStr += SubStr(cParAux,nI,1)
			If nI = Len(cParAux) 
				If Empty(cParam)
					cParam += cStr					
				Else
					cParam += "'" + cStr
				EndIf
			EndIf
		Else			
			If Empty(cParam)
				cParam += cStr + "'"			
			Else
				cParam += "'" + cStr + "'"
			EndIf			
			If nI != Len(cParAux)
				cParam += ","
			EndIf
			cStr := ""
		EndIf
	Next nI
	
	//---------------------------------------
	//-- Query filtra títulos de faturamento
	// Joao Tavares - utilzado o sistema de View no banco para ganhar performace no processamento
	//---------------------------------------
	
		
		cQuery := " CREATE OR REPLACE VIEW V_INAD
		cQuery += " AS SELECT "
		cQuery += " 	  'VENC'   AS STATUS ,"
		cQuery += "		   SE1.E1_FILIAL  AS FILIAL ,"
		cQuery += "		   SE1.E1_PREFIXO AS PREFIXO,"
		cQuery += "		   SE1.E1_NUM     AS NUMERO ,"
		cQuery += "		   SE1.E1_PARCELA AS PARCELA,"
		cQuery += "		   SE1.E1_TIPO    AS TIPO   ,"
		cQuery += "		   SE1.E1_CLIENTE AS CLIENTE,"
		cQuery += "		   SE1.E1_LOJA    AS LOJA   ,"
		cQuery += "		   SE1.E1_NOMCLI  AS NOMECLI,"
		cQuery += "		   SE1.E1_EMISSAO AS EMISSAO,"
		cQuery += "		   SE1.E1_BAIXA   AS BAIXA  ,"
		cQuery += "		   SE1.E1_VENCTO  AS VENCTO ,"
		cQuery += "		   SA1.A1_PESSOA  AS TIPOCLI ,"
		cQuery += "		   SE1.E1_SALDO AS VALOR,"
		cQuery += "		   (	SELECT SUM(E5_VALOR) " 
        cQuery += "		        FROM "+RetSqlName("SE5")+" SE5 " 
        cQuery += "		        WHERE SE5.D_E_L_E_T_ = ' ' "
        cQuery += "		          AND SE5.E5_FILIAL		= SE1.E1_FILIAL "
        cQuery += "		          AND SE1.E1_PREFIXO	= SE5.E5_PREFIXO "
        cQuery += "		          AND SE1.E1_NUM		= SE5.E5_NUMERO "
        cQuery += "		          AND SE1.E1_PARCELA	= SE5.E5_PARCELA "
        cQuery += "		          AND SE1.E1_TIPO		= SE5.E5_TIPO "
        cQuery += "		          AND SE1.E1_CLIENTE	= SE5.E5_CLIFOR "
        cQuery += "		          AND SE1.E1_LOJA		= SE5.E5_LOJA "
        cQuery += "		          AND SE5.E5_SITUACA	<> 'C' "
        cQuery += "		          AND SE5.E5_RECPAG		= 'R' "
        cQuery += "          	  AND SE5.E5_DATA		BETWEEN '"+ DTOS(MV_PAR02)+"' AND '"+DTOS(MV_PAR03)+"'"
        cQuery += "		          AND SE5.E5_MOTBX NOT IN ('CAN','REN','TRF','LIQ','FAT','STP','DSD') ) AS VLRBX,	"	//'CRT' ,'TEF' 
		cQuery += "		   SUM(SE1.E1_SDDECRE) AS SDDECRE, "
	   	cQuery += "		   SUM(SE1.E1_SDACRES) AS SDACRES, "
		cQuery += "		   0			 	 	  AS PERC, "
		cQuery += "		   NVL(TRIM(SE1.E1_XSPC),'N')    AS SPC, "
		cQuery += "		   SE1.R_E_C_N_O_ AS R_E_C_N_O_ "
		cQuery += "			FROM "+RetSqlName("SE1")+ " SE1 "
		cQuery += "			INNER JOIN "+RetSqlName("SA1")+ " SA1 "
		cQuery += "			ON SA1.A1_COD = SE1.E1_CLIENTE "
		cQuery += "			AND SA1.A1_LOJA = SE1.E1_LOJA "
		cQuery += "			AND SA1.D_E_L_E_T_ = ' ' "
		cQuery += " 		WHERE SE1.D_E_L_E_T_ = ' ' "
		cQuery += "		  	AND SE1.E1_PREFIXO NOT IN ('DEV','RMP') "
		cQuery += "		  	AND SE1.E1_SITUACA <> 'H' "
		cQuery += "		  	AND SE1.E1_TIPO NOT IN ('PA ','RA ','NCC','NDF','INS','IRF','ISS','PIS','CSL','NF ','TX ','TXA','131','132','DH ','EST','FER','FOL','PR ','RES','SES','PC ','RC ','OP ', 'CC ','CD ') "
		cQuery += "			AND SE1.E1_CLIENTE NOT IN ('"+cParam+"') "
		cQuery += "	        AND SE1.E1_VENCTO BETWEEN '"+ DTOS(MV_PAR02)+"' AND '"+DTOS(MV_PAR03)+"'"
		cQuery += "			AND "+cWhere+""   
		                    	                    
		cQuery += "		GROUP BY 'VENC', SE1.E1_FILIAL, SE1.E1_PREFIXO, SE1.E1_NUM, SE1.E1_PARCELA, SE1.E1_TIPO, SE1.E1_CLIENTE, SE1.E1_LOJA, SE1.E1_NOMCLI, SE1.E1_EMISSAO, SE1.E1_BAIXA,SE1.E1_VENCTO, SA1.A1_PESSOA, SE1.E1_SALDO, SE1.E1_XSPC, SE1.R_E_C_N_O_ "
		
		cQuery += "		UNION ALL  "
		
		cQuery += "		SELECT "
		cQuery += "		  'REC'   AS STATUS , "
		cQuery += "		   SE1.E1_FILIAL  AS FILIAL , "
		cQuery += "		   SE1.E1_PREFIXO AS PREFIXO, "
		cQuery += "		   SE1.E1_NUM     AS NUMERO , "
		cQuery += "		   SE1.E1_PARCELA AS PARCELA, "
		cQuery += "		   SE1.E1_TIPO    AS TIPO   , "
		cQuery += "		   SE1.E1_CLIENTE AS CLIENTE, "
		cQuery += "		   SE1.E1_LOJA    AS LOJA   , "
		cQuery += "		   SE1.E1_NOMCLI  AS NOMECLI, "
		cQuery += "		   SE1.E1_EMISSAO AS EMISSAO, "
		cQuery += "		   SE1.E1_BAIXA   AS BAIXA  , "
		cQuery += "		   SE1.E1_VENCTO  AS VENCTO , "
		cQuery += "		   SA1.A1_PESSOA  AS TIPOCLI , "
		cQuery += "		   SE1.E1_SALDO AS VALOR, "
		cQuery += "		   (	SELECT SUM(E5_VALOR) "
        cQuery += "	       		FROM  "+RetSqlName("SE5")+ " SE5"  
        cQuery += "	        	WHERE SE5.D_E_L_E_T_ = ' ' " 
        cQuery += "		          AND SE5.E5_FILIAL		= SE1.E1_FILIAL "
        cQuery += "		          AND SE1.E1_PREFIXO	= SE5.E5_PREFIXO "
        cQuery += "		          AND SE1.E1_NUM		= SE5.E5_NUMERO "
        cQuery += "		          AND SE1.E1_PARCELA	= SE5.E5_PARCELA "
        cQuery += "		          AND SE1.E1_TIPO		= SE5.E5_TIPO "
        cQuery += "		          AND SE1.E1_CLIENTE	= SE5.E5_CLIFOR "
        cQuery += "		          AND SE1.E1_LOJA		= SE5.E5_LOJA "
        cQuery += "		          AND SE5.E5_SITUACA	<> 'C' "
        cQuery += "		          AND SE5.E5_RECPAG		= 'R' "
        cQuery += "	              AND SE5.E5_DATA		BETWEEN '"+ DTOS(MV_PAR02)+"' AND '"+DTOS(MV_PAR03)+"'"
        cQuery += "		          AND SE5.E5_MOTBX NOT IN ('CAN','REN','TRF','LIQ','FAT','STP','DSD') ) AS VLRBX, "		//'CRT' ,'TEF' 
		cQuery += "		   SUM(SE1.E1_SDDECRE) AS SDDECRE, "
	   	cQuery += "		   SUM(SE1.E1_SDACRES) AS SDACRES, "
		cQuery += "		   0			 	 	  AS PERC, "
		cQuery += "		   NVL(TRIM(SE1.E1_XSPC),'N')    AS SPC, "
		cQuery += "		   SE1.R_E_C_N_O_ AS R_E_C_N_O_ "
		cQuery += "		FROM "
		cQuery += "		"+RetSqlName("SE1")+ " SE1 INNER JOIN "
		cQuery += "		"+RetSqlName("SA1")+ " SA1 ON SA1.A1_COD = SE1.E1_CLIENTE AND SA1.A1_LOJA = SE1.E1_LOJA AND SA1.D_E_L_E_T_ = ' ' "
		cQuery += "		WHERE SE1.D_E_L_E_T_ = ' ' "
		cQuery += "		  AND SE1.E1_PREFIXO NOT IN ('DEV','RMP')"
		cQuery += "		  AND SE1.E1_SITUACA <> 'H' "
		cQuery += "		  AND SE1.E1_TIPO NOT IN ('PA ','RA ','NCC','NDF','INS','IRF','ISS','PIS','CSL','NF ','TX ','TXA','131','132','DH ','EST','FER','FOL','PR ','RES','SES','PC ','RC ','OP ', 'CC ','CD ') "
		cQuery += "	 	  AND SE1.E1_CLIENTE NOT IN ('"+cParam+"')"
		cQuery += "		  AND SE1.E1_VENCTO NOT BETWEEN '"+ DTOS(MV_PAR02)+"' AND '"+DTOS(MV_PAR03)+"'"
		cQuery += "		  AND EXISTS (	SELECT 1 "
		cQuery += "	               FROM "+RetSqlName("SE5")+ " SE5" 
		cQuery += "	                WHERE SE5.D_E_L_E_T_ = ' ' " 
		cQuery += "		                 AND SE5.E5_FILIAL		= SE1.E1_FILIAL "
		cQuery += "		                 AND SE1.E1_PREFIXO	= SE5.E5_PREFIXO "
		cQuery += "		                 AND SE1.E1_NUM		= SE5.E5_NUMERO "
		cQuery += "		                 AND SE1.E1_PARCELA	= SE5.E5_PARCELA"
		cQuery += "		                 AND SE1.E1_TIPO		= SE5.E5_TIPO"
		cQuery += "		                 AND SE1.E1_CLIENTE	= SE5.E5_CLIFOR"
		cQuery += "		                 AND SE1.E1_LOJA		= SE5.E5_LOJA"
		cQuery += "		                 AND SE5.E5_SITUACA	<> 'C'"
		cQuery += "		                 AND SE5.E5_RECPAG		= 'R'"
		cQuery += "	                     AND SE5.E5_DATA		BETWEEN '"+ DTOS(MV_PAR02)+"' AND '"+DTOS(MV_PAR03)+"'"
		cQuery += "		                 AND SE5.E5_MOTBX NOT IN ('CAN','REN','TRF','LIQ','FAT','STP','DSD'))"		  
		cQuery += "			AND "+cWhere+""   
		                    	                    
		cQuery += "		GROUP BY 'REC', SE1.E1_FILIAL, SE1.E1_PREFIXO, SE1.E1_NUM, SE1.E1_PARCELA, SE1.E1_TIPO, SE1.E1_CLIENTE, SE1.E1_LOJA, SE1.E1_NOMCLI, SE1.E1_EMISSAO, SE1.E1_BAIXA,SE1.E1_VENCTO, SA1.A1_PESSOA, SE1.E1_SALDO, SE1.E1_XSPC, SE1.R_E_C_N_O_"
	
	cQuery += "		UNION ALL "
    cQuery += "		   SELECT "
	cQuery += "			  'ATR'   AS STATUS ,"
	cQuery += "			   SE1.E1_FILIAL  AS FILIAL ,"
	cQuery += "			   SE1.E1_PREFIXO AS PREFIXO,"
	cQuery += "			   SE1.E1_NUM     AS NUMERO ,"
	cQuery += "			   SE1.E1_PARCELA AS PARCELA,"
	cQuery += "			   SE1.E1_TIPO    AS TIPO   ,"
	cQuery += "			   SE1.E1_CLIENTE AS CLIENTE,"
	cQuery += "			   SE1.E1_LOJA    AS LOJA   ,"
	cQuery += "			   SE1.E1_NOMCLI  AS NOMECLI,"
	cQuery += "			   SE1.E1_EMISSAO AS EMISSAO,"
	cQuery += "			   SE1.E1_BAIXA   AS BAIXA  ,"
	cQuery += "			   SE1.E1_VENCTO  AS VENCTO ,"
	cQuery += "			   SA1.A1_PESSOA  AS TIPOCLI ,"
	cQuery += "			   SE1.E1_SALDO AS VALOR,"
	cQuery += "			   0 AS VLRBX,	"	//'CRT' ,'TEF' 
	cQuery += "			   SUM(SE1.E1_SDDECRE) AS SDDECRE,"
	cQuery += "		   	   SUM(SE1.E1_SDACRES) AS SDACRES, "
	cQuery += "			   0			 	 	  AS PERC,"
	cQuery += "			   NVL(TRIM(SE1.E1_XSPC),'N')  AS SPC,"
	cQuery += "			   SE1.R_E_C_N_O_ AS R_E_C_N_O_"
	cQuery += "		FROM "+RetSqlName("SE1")+ " SE1"
	cQuery += "		INNER JOIN "+RetSqlName("SA1")+ " SA1"
	cQuery += "				ON SA1.A1_COD = SE1.E1_CLIENTE"
	cQuery += "				AND SA1.A1_LOJA = SE1.E1_LOJA"
	cQuery += "				AND SA1.D_E_L_E_T_ = ' ' "
	cQuery += "		WHERE SE1.D_E_L_E_T_ = ' ' "
	cQuery += "			  AND SE1.E1_PREFIXO NOT IN ('DEV','RMP')"
	cQuery += "			  AND SE1.E1_SITUACA <> 'H' "
	cQuery += "			  AND SE1.E1_TIPO NOT IN ('PA ','RA ','NCC','NDF','INS','IRF','ISS','PIS','CSL','NF ','TX ','TXA','131','132','DH ','EST','FER','FOL','PR ','RES','SES','PC ','RC ','OP ', 'CC ','CD ') "
	cQuery += "		  AND SE1.E1_CLIENTE NOT IN ('"+cParam+"')"
	cQuery += "		  AND SE1.E1_VENCTO <  '"+DTOS(MV_PAR02)+"'"
    cQuery += "		      And Se1.E1_SALDO <> 0"
	cQuery += "			AND "+cWhere+""    
		                    	                    
	cQuery += "			GROUP BY 'ATR', SE1.E1_FILIAL, SE1.E1_PREFIXO, SE1.E1_NUM, SE1.E1_PARCELA, SE1.E1_TIPO, SE1.E1_CLIENTE, SE1.E1_LOJA, SE1.E1_NOMCLI, SE1.E1_EMISSAO, SE1.E1_BAIXA,SE1.E1_VENCTO, SA1.A1_PESSOA, SE1.E1_SALDO, SE1.E1_XSPC, SE1.R_E_C_N_O_"
		
    cQuery += "		UNION ALL "
		
	cQuery += "			SELECT "
	cQuery += "			  'AREC'   AS STATUS ,"
	cQuery += "			   SE1.E1_FILIAL  AS FILIAL ,"
	cQuery += "			   SE1.E1_PREFIXO AS PREFIXO,"
	cQuery += "			   SE1.E1_NUM     AS NUMERO ,"
	cQuery += "			   SE1.E1_PARCELA AS PARCELA,"
	cQuery += "			   SE1.E1_TIPO    AS TIPO   ,"
	cQuery += "			   SE1.E1_CLIENTE AS CLIENTE,"
	cQuery += "			   SE1.E1_LOJA    AS LOJA   ,"
	cQuery += "			   SE1.E1_NOMCLI  AS NOMECLI,"
	cQuery += "			   SE1.E1_EMISSAO AS EMISSAO,"
	cQuery += "			   SE1.E1_BAIXA   AS BAIXA  ,"
	cQuery += "			   SE1.E1_VENCTO  AS VENCTO ,"
	cQuery += "			   SA1.A1_PESSOA  AS TIPOCLI ,"
	cQuery += "			   SE1.E1_SALDO AS VALOR,"
	cQuery += "			   0 AS VLRBX,		"//'CRT' ,'TEF' 
	cQuery += "			   SUM(SE1.E1_SDDECRE) AS SDDECRE,"
	cQuery += "		  	   SUM(SE1.E1_SDACRES) AS SDACRES," 
	cQuery += "			   0			 	 	  AS PERC,"
	cQuery += "			   NVL(TRIM(SE1.E1_XSPC),'N')    AS SPC,"
	cQuery += "			   SE1.R_E_C_N_O_ AS R_E_C_N_O_"
	cQuery += "			FROM "
	cQuery += "			"+RetSqlName("SE1")+ " SE1 INNER JOIN "
	cQuery += "			"+RetSqlName("SA1")+ " SA1 ON SA1.A1_COD = SE1.E1_CLIENTE AND SA1.A1_LOJA = SE1.E1_LOJA AND SA1.D_E_L_E_T_ = ' ' "
	cQuery += "		WHERE SE1.D_E_L_E_T_ = ' ' "
	cQuery += "			  AND SE1.E1_PREFIXO NOT IN ('DEV','RMP')"
	cQuery += "			  AND SE1.E1_SITUACA <> 'H' "
	cQuery += "			  AND SE1.E1_TIPO NOT IN ('PA ','RA ','NCC','NDF','INS','IRF','ISS','PIS','CSL','NF ','TX ','TXA','131','132','DH ','EST','FER','FOL','PR ','RES','SES','PC ','RC ','OP ', 'CC ','CD ') "
	cQuery += "		  AND SE1.E1_CLIENTE NOT IN ('"+cParam+"')"
	cQuery += "		  AND SE1.E1_VENCTO  > '"+DTOS(MV_PAR03)+"'"
	cQuery += "		  AND SE1.E1_SALDO <> 0		  "
	cQuery += "		  AND "+cWhere+""   
		                    	                    
	cQuery += "			GROUP BY 'AREC', SE1.E1_FILIAL, SE1.E1_PREFIXO, SE1.E1_NUM, SE1.E1_PARCELA, SE1.E1_TIPO, SE1.E1_CLIENTE, SE1.E1_LOJA, SE1.E1_NOMCLI, SE1.E1_EMISSAO, SE1.E1_BAIXA,SE1.E1_VENCTO, SA1.A1_PESSOA, SE1.E1_SALDO, SE1.E1_XSPC, SE1.R_E_C_N_O_"
	cQuery += "	Order By filial,VENCTO"
	 nStatus := TCSqlExec(cQuery)
   
  if (nStatus < 0)
    conout("TCSQLError() " + TCSQLError())
	Return
  endif
	
	MemoWrite("C:\Temp\SF06R04X.txt",GetLastQuery()[2])


	//----------------------------------------------------------------------------------------------------//
	//-- Agrupa Por Filial																				--//
	//-- Rafael Karczevski 15/07/2019																	--//
	//-- Foram Adicionados outros cases para que não fosse necessário alterar a estrutura do relatório, --//
	//-- possibilitando que o desenvolvimento seja feito de forma mais agil.							--//
	//----------------------------------------------------------------------------------------------------//
	// Joao Tavares - Corrigido os calculos e esta query passou a executar diretamente na View
	oReport:SetMeter( Len(aSelFil))
For nX := 1 to Len(aSelFil)
	oReport:SetMsgPrint("Agrupando dados por Filial "+aSelFil[nX])

	cQuery := " SELECT FILIAL, "
	cQuery += " SUM(CASE WHEN SUBSTR(VENCTO,1,6) = '"+alltrim(str(Year(MV_PAR03)))+StrZero(Month(MV_PAR03),2)+"'  THEN VALOR  ELSE 0 END) AS VALOR,"
	cQuery += " SUM(VLRBX) AS VLRBX,"
	cQuery += " SUM(CASE WHEN VENCTO <= '"+dToS(MV_PAR03)+"' THEN VALOR ELSE 0 END) VNC_NRECEB, "
	cQuery += " SUM(CASE WHEN VENCTO > '"+dToS(MV_PAR03)+"' THEN VALOR ELSE 0 END) A_VENCER, "
	cQuery += " SUM(CASE WHEN SUBSTR(BAIXA,1,6) = '"+alltrim(str(Year(MV_PAR03)))+StrZero(Month(MV_PAR03),2)+"' THEN vlrbx ELSE 0 END) REC_MES, "
	cQuery += " SUM(CASE WHEN TIPOCLI = 'F' THEN VALOR ELSE 0 END) VAL_PF, "
	cQuery += " SUM(CASE WHEN TIPOCLI = 'J' THEN VALOR ELSE 0 END) VAL_PJ, "
	cQuery += " SUM(CASE WHEN VENCTO < '"+dToS(MV_PAR02)+"' AND TIPOCLI = 'J' THEN VALOR ELSE 0 END) JVNC_NRECEB, "
	cQuery += " SUM(CASE WHEN VENCTO < '"+dToS(MV_PAR02)+"' AND TIPOCLI = 'F' THEN VALOR ELSE 0 END) FVNC_NRECEB, "
	cQuery += " SUM(CASE WHEN VENCTO > '"+dToS(MV_PAR03)+"' AND TIPOCLI = 'J' THEN VALOR ELSE 0 END) JA_VENCER, "
	cQuery += " SUM(CASE WHEN VENCTO > '"+dToS(MV_PAR03)+"' AND TIPOCLI = 'F' THEN VALOR ELSE 0 END) FA_VENCER "
	cQuery += " FROM V_INAD"
	cQuery += " WHERE  FILIAL = '"+aSelFil[nX]+"'"
	cQuery += "	GROUP BY FILIAL"
	cQuery += "	ORDER BY FILIAL"
	cQuery := ChangeQuery(cQuery)
	
	MemoWrite("C:\Temp\SF06R04X_02.txt",cQuery)
	dbUseArea(.T.,"TOPCONN",TCGenQry(,,cQuery),ctemp,.F.,.F.)
	
	
	While (ctemp)->(!EOF()) .AND. !oReport:Cancel()
		oReport:IncMeter()
		cFilAnt := (ctemp)->FILIAL
	
		
		RecLock(cTrab2,.T.)
			(cTrab2)->FILIAL 	:= (ctemp)->FILIAL
			(cTrab2)->NOME_FIL	:= SubStr(FWFilName(cEmpAnt,(ctemp)->FILIAL),1,11)
			//total geral
			(cTrab2)->V_INADIP	:= (cTemp)->VNC_NRECEB  
			(cTrab2)->V_FATURA	:=  (ctemp)->VAL_PJ +  (ctemp)->VAL_PF 
			(cTrab2)->V_PERC	:= ROUND(100-(cTrab2)->V_INADIP/(cTrab2)->V_FATURA  *100 ,2)
			//totais no mes
			(cTrab2)->T_INADIP	:= ( (ctemp)->VALOR )
			(cTrab2)->T_FATURA	:= (ctemp)->VLRBX
			(cTrab2)->T_PERC	:= ROUND((cTrab2)->T_FATURA / ((cTrab2)->T_FATURA +(cTrab2)->T_INADIP)  * 100  ,2) 
			//totais PF
			(cTrab2)->F_INADIP	:= (ctemp)->FVNC_NRECEB
			(cTrab2)->F_FATURA	:= (ctemp)->VAL_PF
			(cTrab2)->F_PERC	:= ROUND(100- (cTrab2)->F_INADIP / (cTrab2)->F_FATURA  * 100 ,2) 
			//totais PJ
			(cTrab2)->J_INADIP	:= (ctemp)->JVNC_NRECEB
			(cTrab2)->J_FATURA	:= (ctemp)->VAL_PJ
			(cTrab2)->J_PERC	:= ROUND(100- (cTrab2)->J_INADIP / (cTrab2)->J_FATURA * 100 ,2) 
			
		MsUnLock()

		(ctemp)->(dbSkip())	
	EndDo
	//--------------------------
	//-- Fecha Alias
	//--------------------------
	If Select(ctemp)>0
		dbSelectArea(ctemp)
		(ctemp)->(dbCloseArea())
	EndIf
Next 	
	cFilAnt:= cEmpBkp 


Return(cTrab2)


//------------------------------------------------------
/*/{Protheus.doc} GetTrabDef
Cria Estrutura de Arquivo de trabalho temporário

@author Allan da Silva Faria
@since 22/08/2016
@version 1.0
@return Caracter, Alias do arquivo de trabalho
/*/
//------------------------------------------------------
Static Function GetTrabDef(cTipo)

	Local cTemp  := ""
	Local aCampos:= {}
	
	//--------------------------------------
	//-- Campos [Estrautura]
	//--------------------------------------
	aAdd(aCampos,{"FILIAL"		,"C",TamSX3("E1_FILIAL")[1]	,00})
	If ( cTipo == "B" )
	
		cTemp := cTrab
	
		aAdd(aCampos,{"NOME_FIL"	,"C",30 ,00})
		aAdd(aCampos,{"V_INADIP"	,"N",14 ,02})
		aAdd(aCampos,{"V_FATURA"	,"N",14 ,02})
		aAdd(aCampos,{"V_PERC"		,"N",10 ,02})	
		aAdd(aCampos,{"T_INADIP"	,"N",14 ,02})
		aAdd(aCampos,{"T_FATURA"	,"N",14 ,02})
		aAdd(aCampos,{"T_PERC"		,"N",10 ,02})
		aAdd(aCampos,{"F_INADIP"	,"N",14 ,02})
		aAdd(aCampos,{"F_FATURA"	,"N",14 ,02})
		aAdd(aCampos,{"F_PERC"		,"N",10 ,02})
		aAdd(aCampos,{"J_INADIP"	,"N",14 ,02})
		aAdd(aCampos,{"J_FATURA"	,"N",14 ,02})
		aAdd(aCampos,{"J_PERC"		,"N",10 ,02})

	
	EndIf
	
	If Select(cTemp)>0
		dbSelectArea(cTemp)
		(cTemp)->(dbCloseArea())
	EndIf
	
	//------------------------------------
	//-- Excluir o arquivo caso exista 
	//------------------------------------
	MsErase(cTemp,,"TOPCONN")
	
	//------------------------------------
	//-- Criar arquivo temporário 
	//------------------------------------
	MsCreate(cTemp,aCampos,"TOP")
	
	Sleep(1000)
	
	dbUseArea(.T.,"TOPCONN",cTemp,cTemp,.T.,.F.)

Return(cTemp)


//------------------------------------------------------
/*/{Protheus.doc} PergDef
Valida se pergunta existe na SX1, caso não existe
cadastra as perguntas.

@author Allan da Silva Faria
@since 15/08/2016
@version 1.0
@param cPerg, character, Nome da pergunta
/*/
// Joao Tavares - modificado o pergunte para informar apenas o mes de referencia
//------------------------------------------------------
Static Function PergDef(cPerg)

	Local aHelpPor := {}

	//---------------------------------------
	//-- Help
	//---------------------------------------
	aAdd(aHelpPor,SepS2A("Data de vencimento para corte.")) 

	//---------------------------------------
	//-- Cadastra perguntas
	//---------------------------------------
	u_SFPUTSX1(cPerg,"01","Mes e Ano?"				,"","","mv_ch1","C",7,00,00,"C","","  "	,"","","mv_par01","","","","","","",""						,,,,,,,,,,aHelpPor[01],,,,"@R 99/9999")

Return Nil


//-----------------------------------------------------
/*/{Protheus.doc} SepS2A
Transforma help de pergunta de string para array

@author Edimar Tinti
@since 25/04/2016
@version 1.0
@param cStr, character, help em string
@return Array, Help da pergunta em array
/*/
//------------------------------------------------------
Static Function SepS2A(cStr)

	Local aRet	:= StrToArray(cStr," ")
	Local nMax	:= 39
	Local nCnt	:= 0
	Local nLen	:= 0
	
	cStr := ""
	For nCnt:=1 To Len(aRet)
		If Len(cStr) + Len(aRet[nCnt]) > nMax + nLen
	 		cStr += CHR(13)
	 		nLen := Len(cStr)
	 	EndIf
	 	cStr += AllTrim(aRet[nCnt])+" "
	Next nCnt
	aRet:= StrToArray(cStr,CHR(13))

Return(aRet)
