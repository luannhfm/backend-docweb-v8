#INCLUDE "TOTVS.CH"

/*/{Protheus.doc} SF06R25X
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/
User Function SF06R25X

	Local   oReport  := Nil
	//Local   cPerg    := "SF06R25X"
	Local   lTdasFil := .F.
	Private cFilSql  := ""
	Private aSelFil  := {}
	Private cAlNeg   := GetNextAlias()

	Private cPerg := Padr("SF06R25X",10)
	Private cTitRel
õ
	ValidPerg()
	Pergunte(cPerg,.T.)
	If LastKey()=27
		Return 
	Endif	

	If MV_PAR01 = 1	
		aSelFil := AdmGetFil(@lTdasFil,.F.,"SE1")
		While Len(aSelFil) = 0
			aSelFil := AdmGetFil(@lTdasFil,.F.,"SE1")
		EndDo		
		cParam  := GetRngFil( aSelFil, "SE1" )
		cFilSql := " AND CAMPO " +	cParam +" "
	EndIf	

	oReport := ReportDef(cPerg)
	oReport:PrintDialog()

Return

/*/{Protheus.doc} ReportDef
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@param cPerg, character, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ReportDef(cPerg)

	Local oReport		
	Local cNomeRel := "SF06R25X"
	Local cTitRel  := "Relatorio de Indice de Titulos Vencidos - Recebidos - " + MV_PAR10
	Local cDescRel := "Relatorio de Indice de Titulos Vencidos - Recebidos - " + MV_PAR10
	//Walmir Junior - 26/01/2018 - Desenvolvimento da apresentação analítica do relatório.
	Local _oTit, _oTiLin,oSection2
	Local _cPicture	:= TM(999999999.99,14,2) // "@E 999,999,999.99"

	oReport        := TReport():New( cNomeRel, cTitRel, cPerg, { |oReport| ReportPrint(oReport) }, cDescRel  )

	oReport:SetLandScape() 
	oReport:SetTotalInLine(.F.) 
	oReport:Page()
	oReport:ParamReadOnly(.T.)
	//Walmir Junior - 26/01/2018 - Desenvolvimento da apresentação analítica do relatório.
	If MV_PAR06 == 1
		oIndicadores := TRSection():New(oReport, "Relatorio de Indice de Titulos Vencidos - Recebidos- " + MV_PAR10 ,{"SE1"} )

		TRCell():New(oIndicadores,"FILIAL"  ,, "Filial"   ,,   10)
		TRCell():New(oIndicadores,"PERIODO" ,, "Mes/Ano"   ,,  08)
		TRCell():New(oIndicadores,"VALORVNC",, "Vlr Tit Vencidos" ,"@R 999,999.99" ,   TamSx3("E1_VALOR"  )[01])
		TRCell():New(oIndicadores,"VALORREC",, "Vlr Tit Recebidos","@R 999,999.99" ,   TamSx3("E1_VALOR"  )[01])
		TRCell():New(oIndicadores,"PERCRECE",, "% Perc Recebido"  ,"@R 999.99"		,   6)
		TRCell():New(oIndicadores,"QTDTITUL",, "Qtd de Titulos"   ,"@R 999999"		,   6)

	Else
		//Walmir Junior - 26/01/2018 - Desenvolvimento da apresentação analítica do relatório.
		//Cid

		//End
		_oTit	:= TRSection():New(oReport, "Relatorio de Indice de Titulos Vencidos - Recebidos" ,{cAlNeg})
		_oTiLin := TRCell():New(_oTit,"E1_FILIAL"			,cAlNeg,"FILIAL")
		_oTiLin := TRCell():New(_oTit,"FILIAL"				,cAlNeg,"NOM FIL",,20,,{|| FWFilialName("01", (cAlNeg)->E1_FILIAL, 1) })
		_oTiLin := TRCell():New(_oTit,"E1_PREFIXO"			,cAlNeg,"PREFIXO")
		_oTiLin := TRCell():New(_oTit,"E1_NUM"				,cAlNeg,"NUMERO")
		_oTiLin := TRCell():New(_oTit,"E1_PARCELA"			,cAlNeg,"PARCELA")
		_oTiLin := TRCell():New(_oTit,"E1_CLIENTE"			,cAlNeg,"CLIENTE")
		_oTiLin := TRCell():New(_oTit,"E1_NOMCLI"			,cAlNeg,"NOME CLIENTE")
		_oTiLin := TRCell():New(_oTit,"E1_VENCTO"			,cAlNeg,"VENCIMENTO",,12,,{|| SToD((cAlNeg)->E1_VENCTO)})
		_oTiLin := TRCell():New(_oTit,"E1_BAIXA"			,cAlNeg,"DT BAIXA"	,,12,,{|| SToD((cAlNeg)->E1_BAIXA)})
		_oTiLin := TRCell():New(_oTit,"E1_VALOR"			,cAlNeg,"VALOR", 		 _cPicture,20,.T.,,"RIGHT",,"RIGHT")
		//_oTiLin := TRCell():New(_oTit,"VLR_JRML"			,cAlNeg,"JUR/MULTA")
		_oTiLin := TRCell():New(_oTit,"VLR_JRML"			,cAlNeg,"JUR/MULTA",,20,,{|| (cAlNeg)->VLR_JUROS + (cAlNeg)->VLR_MULTA})
		_oTiLin := TRCell():New(_oTit,"VL_DESCO"			,cAlNeg,"DESCONTOS")
		_oTiLin := TRCell():New(_oTit,"VLR_REC"				,cAlNeg,"TOTAL BAIXADO", _cPicture,20,.T.,,"RIGHT",,"RIGHT")
		_oTiLin := TRCell():New(_oTit,"E5_DTDIGIT"			,cAlNeg,"DT. DIG."	,,12,,{|| SToD((cAlNeg)->E5_DTDIGIT)})
		_oTiLin := TRCell():New(_oTit,"E5_MOTBX"			,cAlNeg,"MOT BAIXA")
		_oTiLin := TRCell():New(_oTit,"E5_DTDISPO"			,cAlNeg,"DT. DISP."	,,12,,{|| SToD((cAlNeg)->E5_DTDISPO)})
		//Totalizador
		oBrFil := TRBreak():New(_oTit,_oTit:Cell("Filial"),"Total Filial") 
		TRFunction():New(_oTit:Cell("FILIAL"),"Total Grupos","COUNT",oBrFil,,,,.F.,.F.) 

		TRFunction():New(_oTit:Cell("E1_VALOR"  )     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                                                                               )
		TRFunction():New(_oTit:Cell("VLR_JRML"  )     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		TRFunction():New(_oTit:Cell("VL_DESCO")     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		TRFunction():New(_oTit:Cell("VLR_REC")     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		oReport:SetTotalInLine(.F.)
	EndIf
Return(oReport)

/*/{Protheus.doc} ReportPrint
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@param oReport, objeto, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ReportPrint(oReport)

	//Local   cAlNeg   := GetNextAlias() //Mudança de escopo para Private na User Function.
	Local   cAlTP    := GetNextAlias()		
	Local   nValTP   := 0
	Local   nPerMen  := 0
	Local   nValMen  := 0
	Local   nQtdMen  := 0	
	Local   cSql     := ""
	Local   cAuxMes  := ""
	Local   cAuxFil  := ""
	Local   cParam   := ""
	Local   cFilDesc := ""
	Local   cAuxEmp  := ""
	Local   cImpAux  := ""
	Local   cAuxImp  := ""
	Local   aSelFil  := {} 	
	Local   aCalMen  := {}
	Local   aFil     := {}
	Private oSec1    := oReport:Section(1)
	Private _oTit	:= oReport:Section(1)

	DbSelectArea("SM0")
	DbGoTop()
	While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAnt

		If !(AllTrim(SM0->M0_CODFIL) $ cAuxEmp)

			cAuxEmp += AllTrim(SM0->M0_CODFIL) + "u"

			If SubsTr(SM0->M0_CODFIL,1,4) == "05MT"
				cFilDesc := SM0->M0_CODFIL		
			Else
				cFilDesc := AllTrim(SM0->M0_CODFIL)
			EndIf

			aAdd(aFil,{AllTrim(cFilDesc),AllTrim(SM0->M0_CODFIL)})

		EndIf

		SM0->(DbSkip())
	EndDo	

	If !Empty(MV_PAR02) .And. !Empty(MV_PAR03) 
		cSql += " AND E1_EMISSAO BETWEEN '"  + DToS(MV_PAR02) + "' AND '" + DToS(MV_PAR03) + "'"			
	EndIf		

	If !Empty(MV_PAR04) .And. !Empty(MV_PAR05) 
		cSql += " AND E1_VENCREA BETWEEN '"  + DToS(MV_PAR04) + "' AND '" + DToS(MV_PAR05) + "'"			
	EndIf		

	If MV_PAR01 = 1	
		cSql += StrTran(cFilSql,"CAMPO","E1_FILIAL")	
	EndIf

	cSql := "%"+cSql+"%"

	If MV_PAR06 == 1
		BeginSql Alias cAlTP

			SELECT SUM(E1_VALOR) VALOR
			FROM   %Table:SE1%
			WHERE  E1_VENCREA  < %Exp:DToS(dDataBase)%
			AND    %NotDel%
			AND    E1_PREFIXO  = 'REN'		
			%Exp:cSql%

		EndSql

		If !(cAlTP)->(Eof())
			nValTP := (cAlTP)->VALOR
		EndIf

		(cAlTP)->(DbCloseArea())

		BeginSql Alias cAlNeg

			SELECT e1_filial,
			SUBSTR(E1_EMISSAO,1,6) as DATA,
			SUM(E1_VALOR) as VLR,
			SUM(VLR_REC) as VLRRECEB,
			COUNT(RECNO) AS QTD
			FROM (SELECT	
			E1_FILIAL,
			E1_PREFIXO,
			E1_NUM,
			E1_PARCELA,
			E5_MOTBX,
			E1_EMISSAO,
			E1_VENCTO,
			E1_VENCREA,
			E1_CLIENTE,
			E1_NOMCLI,
			E1_VENCTO,
			E1_BAIXA,
			E5_DTDIGIT,
			E5_DTDISPO,
			E1_VALOR,
			E1.R_E_C_N_O_ as RECNO,
			SUM(E5_VALOR) As VLR_REC,
			SUM(E5_VLDESCO) As VL_DESCO,
			SUM(E1_JUROS) As VLR_JUROS,
			SUM(E1_MULTA) AS VLR_MULTA

			//0 As VLR_JRML
			FROM        %Table:SE1% E1
			INNER  JOIN %Table:SE5% E5  
			ON     E5.%NotDel%
			AND    E5_FILIAL   = E1_FILIAL                                                                                              
			AND    E5_PREFIXO  = E1_PREFIXO
			AND    E5_NUMERO   = E1_NUM
			AND    E5_PARCELA  = E1_PARCELA
			AND    E5_TIPO     = E1_TIPO
			AND    E5_CLIFOR   = E1_CLIENTE
			AND    E5_LOJA	   = E1_LOJA 
			AND    E5_DATA    <= %Exp:dToS(mv_par07)%
			WHERE  E5_MOTBX    IN ('CCO','NOR','CRT','REN') //'C01','CO1')
			AND    E5_SITUACA  NOT IN ('C'  , 'E' ,'X')
			AND    E5_TIPODOC  NOT IN ('RA' , 'ES','TE', 'EC', 'JR', 'MT', 'PR') 
			//AND    E1_SALDO    = 0
			AND    E1_PREFIXO <> 'REN'
			AND    E1_EMISSAO <= %Exp:dToS(mv_par07)%
			AND    E1_BAIXA BETWEEN %Exp:dToS(mv_par08)% AND %Exp:dToS(mv_par09)%
			AND	   (E1_BAIXA > E1_VENCREA OR (E1_BAIXA <> ' ' AND E1_SALDO > 0) OR E1_BAIXA = ' ')
			AND    E1.%NotDel%	
			%Exp:cSql%
			GROUP BY E1_FILIAL, E1_PREFIXO, E1_NUM, E1_PARCELA, E5_MOTBX, E1_EMISSAO, E1_VENCTO, E1_VENCREA, E1_CLIENTE, E1_NOMCLI, E1_VENCTO, E1_BAIXA, E5_DTDIGIT,	E5_DTDISPO, E1_VALOR, E1.R_E_C_N_O_
			ORDER BY E1_FILIAL,E1_PREFIXO,E1_NUM,E1_PARCELA,E1_EMISSAO)
			GROUP BY e1_filial, SUBSTR(E1_EMISSAO,1,6)
			Order by 1,2

		EndSql	
		(cAlNeg)->(DbGoTop())

		oSec1:Init()
		While !(cAlNeg)->(Eof())
			cPreriod := (cAlNeg)->(DATA)
			cPreriod := SubStr(MesExtenso(Val(SubStr((cAlNeg)->(DATA),5,2))),1,3) + "/" + SubStr((cAlNeg)->(DATA),3,2)
			oSec1:Cell("FILIAL"   ):SetValue( (cAlNeg)->(E1_FILIAL)   )
			oSec1:Cell("PERIODO"  ):SetValue( cPreriod   )
			oSec1:Cell("VALORVNC" ):SetValue( (cAlNeg)->(VLR)   		)
			oSec1:Cell("VALORREC" ):SetValue( (cAlNeg)->(VLRRECEB)   	)
			oSec1:Cell("PERCRECE" ):SetValue( Round((cAlNeg)->(VLRRECEB) / (cAlNeg)->(VLR)*100,2) )
			oSec1:Cell("QTDTITUL" ):SetValue( (cAlNeg)->(QTD)   )

			oSec1:PrintLine()
			(cAlNeg)->(dbSkip())
		EndDo

		(cAlNeg)->(DbCloseArea())
		oSec1:Finish()
	Else
		BeginSql Alias cAlNeg

			SELECT	E1_FILIAL,
			E1_PREFIXO,
			E1_NUM,
			E1_PARCELA,
			E5_MOTBX,
			E1_EMISSAO,
			E1_VENCTO,
			E1_VENCREA,
			E1_CLIENTE,
			E1_NOMCLI,
			E1_VENCTO,
			E1_BAIXA,
			E5_DTDIGIT,
			E5_DTDISPO,
			E1_VALOR,
			SUM(E5_VALOR) As VLR_REC,
			SUM(E5_VLDESCO) As VL_DESCO,
			SUM(E1_JUROS) As VLR_JUROS,
			SUM(E1_MULTA) AS VLR_MULTA

			//0 As VLR_JRML
			FROM        %Table:SE1% E1
			INNER  JOIN %Table:SE5% E5  
			ON     E5.%NotDel%
			AND    E5_FILIAL   = E1_FILIAL                                                                                              
			AND    E5_PREFIXO  = E1_PREFIXO
			AND    E5_NUMERO   = E1_NUM
			AND    E5_PARCELA  = E1_PARCELA
			AND    E5_TIPO     = E1_TIPO
			AND    E5_CLIFOR   = E1_CLIENTE
			AND    E5_LOJA	   = E1_LOJA 
			AND    E5_DATA    <= %Exp:dToS(mv_par07)%
			WHERE  E5_MOTBX    IN ('CCO','NOR','CRT','REN') // 'C01','CO1')
			AND    E5_SITUACA  NOT IN ('C'  , 'E' ,'X')
			AND    E5_TIPODOC  NOT IN ('RA' , 'ES','TE', 'EC', 'JR', 'MT', 'PR') 
			//AND    E1_SALDO    = 0
			AND    E1_PREFIXO <> 'REN'
			AND    E1_EMISSAO <= %Exp:dToS(mv_par07)%
			AND    E1_BAIXA BETWEEN %Exp:dToS(mv_par08)% AND %Exp:dToS(mv_par09)%
			AND	   (E1_BAIXA > E1_VENCREA OR (E1_BAIXA <> ' ' AND E1_SALDO > 0) OR E1_BAIXA = ' ')
			AND    E1.%NotDel%	
			%Exp:cSql%
			GROUP BY E1_FILIAL, E1_PREFIXO, E1_NUM, E1_PARCELA, E5_MOTBX, E1_EMISSAO, E1_VENCTO, E1_VENCREA, E1_CLIENTE, E1_NOMCLI, E1_VENCTO, E1_BAIXA, E5_DTDIGIT,	E5_DTDISPO, E1_VALOR
			ORDER BY E1_FILIAL,E1_PREFIXO,E1_NUM,E1_PARCELA,E1_EMISSAO

		EndSql	

		_oTit:Init()
		While !(cAlNeg)->(Eof())
			_oTit:PrintLine()
			(cAlNeg)->(Dbskip())
		EndDo
		_oTit:Finish()
		(cAlNeg)->(DbCloseArea())
	EndIf	
Return

/*/{Protheus.doc} CriaSX1
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@param cPerg, character, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/
/*
Static Function CriaSX1(cPerg)

Local aHelp := {}

AAdd(aHelp, {{"Selecionar filial - Sim/Não" },{""},{""}})
AAdd(aHelp, {{"Emissão De"                  },{""},{""}})
AAdd(aHelp, {{"Emissão Ate"                 },{""},{""}})
AAdd(aHelp, {{"Vencimento De"               },{""},{""}})
AAdd(aHelp, {{"Vencimento Ate"              },{""},{""}})
AAdd(aHelp, {{"Tipo de apresentação do relatório."	} ,{""},{""}})

PutSX1(cPerg,"01","Seleciona Filial","","","mv_ch01","C",01,00,00,"C","","","","","mv_par01","Sim","","","","Nao","","","","","","","","","","","",aHelp[1,1],aHelp[1,2],aHelp[1,3],"")
PutSX1(cPerg,"02","Emissão De"      ,"","","mv_ch02","D",08,00,00,"G","","","","","mv_par02",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[2,1],aHelp[2,2],aHelp[2,3],"")
PutSX1(cPerg,"03","Emissão Ate"     ,"","","mv_ch03","D",08,00,00,"G","","","","","mv_par03",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[3,1],aHelp[3,2],aHelp[3,3],"")
PutSX1(cPerg,"04","Vencimento De"   ,"","","mv_ch04","D",08,00,00,"G","","","","","mv_par04",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[4,1],aHelp[4,2],aHelp[4,3],"")
PutSX1(cPerg,"05","Vencimento Ate"  ,"","","mv_ch05","D",08,00,00,"G","","","","","mv_par05",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[5,1],aHelp[5,2],aHelp[5,3],"")
PutSX1(cPerg,"06","Tipo"   			,"","","mv_ch06","N",01,00,00,"C","","","","","mv_par06","1-Sintético","","","","2-Analítico"   ,"","","","","","","","","","","",aHelp[6,1],aHelp[6,2],aHelp[6,3],"")
Return
*/
Static Function ValidPerg()

	Local _aArea := GetArea()
	Local _cPerg := cPerg
	Local _aRegs:={}
	Local _nI := 0
	Local _nJ := 0
	
	
	dbSelectArea('SX1')

	dbSetOrder(1)


	Aadd(_aRegs,{_cPerg,"01","Seleciona Filial "," "," ","mv_ch1","C",01,0,0,"C"," ","mv_par01 ","Sim"," "," "," ","Nao"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
	Aadd(_aRegs,{_cPerg,"02","Emissão De "," "," ","mv_ch2","D",08,0,0,"G"," ","mv_par02 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",""," "," "})
	Aadd(_aRegs,{_cPerg,"03","Emissao Até "," "," ","mv_ch3","D",08,0,0,"G"," ","mv_par03 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",""," "," "})
	Aadd(_aRegs,{_cPerg,"04","Vencimento De "," "," ","mv_ch4","D",08,0,0,"G"," ","mv_par04 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
	Aadd(_aRegs,{_cPerg,"05","Vencimento Até "," "," ","mv_ch5","D",08,0,0,"G"," ","mv_par05 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
	Aadd(_aRegs,{_cPerg,"06","Tipo "," "," ","mv_ch6","N",01,0,1,"C"," ","mv_par06 ","1-Sintético "," "," "," "," ","2-Analítico "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",""," "," "})
	Aadd(_aRegs,{_cPerg,"07","Data base"," "," ","mv_ch7","D",08,0,0,"G"," ","mv_par07 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
	Aadd(_aRegs,{_cPerg,"08","Baixa De "," "," ","mv_ch8","D",08,0,0,"G"," ","mv_par08 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
	Aadd(_aRegs,{_cPerg,"09","Baixa Até "," "," ","mv_ch9","D",08,0,0,"G"," ","mv_par09 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
	Aadd(_aRegs,{_cPerg,"10","Ano Relatorio "," "," ","mv_ch10","C",04,0,0,"G"," ","mv_par10 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})

	For _nI:=1 to Len(_aRegs)

		If ! DbSeek(_cPerg+_aRegs[_nI,2])

			RecLock('SX1',.T.)

			For _nJ:=1 to FCount()
				If _nJ <= Len(_aRegs[_nI])
					FieldPut(_nJ,_aRegs[_nI,_nJ])
				Endif
			Next _nJ
			MsUnlock()
		Endif
	Next _nI
	RestArea(_aArea)

Return