#Include 'TOTVS.CH'
#Include 'PROTHEUS.CH'

/*/{Protheus.doc} SFEnvUMail
Funcao para enviar email, cópia da função SFEnvEmail;
Esta função necessita que os dados do e-mail remetente sejam informados
(Usuário de email, senha de email...) 

@author Franklin B. Oliveira
@since 	04/08/2017

@param 	p_cDe, Indica quem esta enviando e-mail
@param	p_cPara, Indica para quem sera enviado o e-mail
@param	p_cCC, Indica para quem sera enviado a Copia do e-mail
@param	p_cCCO, Indica para quem sera enviado a copia oculta do e-mail
@param	p_cAssunto, Assunto do e-mail 
@param	p_cMsg, Corpo (Mensagem) do e-mail
@param 	p_cAnexo, Anexo do e-mail
@param 	p_lConLe, Indica se será enviado confirmação de leitura
@param  p_cSrvSMTP, Endereço do servidor SMTP
@param  p_cAccount, Conta do e-mail utilizada para o envio
@param  p_cPassword, Senha do e-mail utilizada para o envio
@param  p_lSSL, Indica se será utilizará a comunicação segura através de SSL (.T.) ou não (.F.).
	

@return 	lRetorno, Logico, Retorna T ou F para envio do Email
/*/
User Function SFEnvUMail(p_cDe, p_cPara, p_cCC, p_cCCO, p_cAssunto, p_cMsg, p_cAnexo, p_lConLe, p_cSrvSMTP, p_cAccount, p_cPassword, p_lSSL)
	
	Local lRetorno	:= .T.
	Local nErro 	:= 0
	Local cFuncName	:= FunName()
	Local cErrorMsg	:= ''
	
	Default p_cDe 		:= ''
	Default p_cPara   	:= ''
	Default p_cCC   	:= ''
	Default p_cCCO		:= ''
	Default p_cAssunto	:= ''
	Default p_cMsg		:= ''
	Default p_cAnexo	:= ''
	Default p_lConLe	:= .F.
	Default p_cSrvSMTP	:= ''
	Default p_cAccount	:= ''
	Default p_cPassword := ''
	Default p_lSSL		:= .F.
	
  	//Realiza a comunicacao com o servidor de e-mail
	oMail := TMailManager():New()
	
	//Define o envio de e-mail utilizando uma comunicacao segura atraves do SSL
	oMail:SetUseSSL(p_lSSL)
	
	//Define o envio de e-mail utilizando uma comunicacao segura atraves do TLS.
	oMail:SetUseTLS(!p_lSSL)
	
	//Define as configuracoes da classe TMailManager para realizar uma conexao com o servidor de e-mail.
	oMail:Init( "", p_cSrvSMTP, p_cAccount, p_cPassword, 0, Iif(p_lSSL,465,587)  )
	
	//Seta o Time Out
	oMail:SetSmtpTimeOut(120)
	
	ConOut(cFuncName+":: Conectando no Servidor SMTP")
	
	//Realiza a conexao com o SMTP
	nErro := oMail:SmtpConnect()
	
	If nErro <> 0
		cErrorMsg := cFuncName+":: ERROR:" + oMail:GetErrorString(nErro)
		ConOut(cErrorMsg)
		oMail:SMTPDisconnect()
		lRetorno := .F.
		Return( lRetorno )
	EndIf
	
	//Passa por parametro a conta e a senha para conexao
	nErro := oMail:SmtpAuth(p_cDe, p_cPassword)
	
	If nErro <> 0
		cErrorMsg := cFuncName+":: ERROR:" + oMail:GetErrorString(nErro)
		ConOut(cErrorMsg)
		oMail:SMTPDisconnect()
		lRetorno := .F.
		Return( lRetorno )
	EndIf
	
	//Cria uma nova mensagem de e-mail
	oMessage := TMailMessage():New()
	
	//Limpa o conteudo do objeto
	oMessage:Clear()
	
	//De
	oMessage:cFrom		:= p_cDe
	
	//Para
	oMessage:cTo   		:= p_cPara
	
	//Com Copia
	oMessage:cCc   		:= p_cCC
	
	//Com Copia Oculta
	oMessage:cBcc		:= p_cCCO
	
	//Assunto
	oMessage:cSubject 	:= p_cAssunto
	
	//Corpo (Texto do e-mail)
	oMessage:cBody    	:= p_cMsg
	
	//Define se envia confirmação de leitura
	oMessage:SetConfirmRead(p_lConLe)
	
	//Adiciona um Anexo
	If .Not. Empty(AllTrim(p_cAnexo))
		If oMessage:AttachFile( p_cAnexo ) < 0
			cErrorMsg := "Erro ao anexar o arquivo"
			Conout( cErrorMsg )
			lRetorno := .F.
			Return( lRetorno )
		EndIf
	EndIf
	
	//Envia o e-mail
	nErro := oMessage:Send(oMail)
	
	If nErro <> 0
		cErrorMsg := cFuncName+":: ERROR:" + oMail:GetErrorString(nErro)
		ConOut(cErrorMsg)
		oMail:SMTPDisconnect()
		lRetorno := .F.
		Return( lRetorno )
	EndIf
	
	ConOut(cFuncName+":: E-mail enviado para " + p_cPara)
	If .Not. Empty(p_cCC)
		ConOut(cFuncName+":: Com cópia para " + p_cCC)
	EndIf
	ConOut(cFuncName+":: Desconectando do SMTP")
	
	//Desconecta do servidor SMTP
	oMail:SMTPDisconnect()
	
Return( lRetorno )