#include "Protheus.ch"

/*/{Protheus.doc} User Function SF73E03F
    Função para validação de usuário do campo ADZ_DESCON.
    @type  Function
    @author Franklin de Brito de Oliveira
    @since 22/10/2021
    @param nValDesInf, numeric, Valor do desconto informado.
    @return lValid, logic, indica se o valor informado é valido.
    /*/
User Function SF73E03F(nValDesInf)
    local lValid := .T.

    DEFAULT nValDesInf := 0.00

    Do Case
    Case "01MT" $ xFilial("ADZ")
        
    Case "02MT" $ xFilial("ADZ")
        if lValid
            lValid := fVldPerDesc(nValDesInf)
        endif
    Case "03MT" $ xFilial("ADZ")
        if lValid
            lValid := fVldPerDesc(nValDesInf)
        endif
    Case "04MT" $ xFilial("ADZ")
    EndCase

Return lValid

/*/{Protheus.doc} fVldPerDesc
    Valida o Percentual de desconto informado
    @type Function
    @author Franklin de Brito de Oliveira
    @since 22/10/2021
    @param nValDesInf, numeric, Valor do desconto informado.
    @return lDescValid, logic, indica se o desconto informado é valido.
    /*/
Static Function fVldPerDesc(nValDesInf)
    local cUsrDSMax	:= SuperGetMv("MV_XUSDESC", , "")
    local cCodProd := FWFldGet("ADZ_PRODUT")
    local lDescValid := .T.
    local lUsrCanEdit := fVldPerUsr()
    local nPercMaxDesc := Posicione("SB1", 1, xFilial("SB1")+cCodProd, "B1_XPRCMAX")
    
    if lUsrCanEdit
        if nValDesInf > nPercMaxDesc
            if .Not. (RetCodUsr() $ cUsrDSMax)
                Help(;
                    NIL, ;
                    NIL, ;
                    "Percentual de desconto inválido", ;
                    NIL, ;
                    "O Percentual de desconto não pode ser superior ao valor permitido ["+Alltrim(Transform(nPercMaxDesc, "@E 999.99"))+"%].", ;
                    1, ;
                    0, ;
                    NIL, ;
                    NIL, ;
                    NIL, ;
                    NIL, ;
                    NIL, ;
                    {"Informe um percentual de desconto válido para o item."};
                )
                lDescValid := .F.
            endif
        endif
    endif

Return lDescValid

/*/{Protheus.doc} fVldPerUsr
    Valida se o usuário que está editando a proposta pode editar o campo ADZ_DESCON.
    @type Function
    @author Franklin de Brito de Oliveira
    @since 22/10/2021
    @return logic, indica se o usuário tem permissão para editar o campo.
    /*/
Static Function fVldPerUsr()
    local lUsrCanEdit := .F.
    local cUsrDSMax	:= SuperGetMv("MV_XUSDESC", , "")
    local cUsrRespUnid := fGetUsrRespUnidade()

    if RetCodUsr() $ cUsrDSMax
        lUsrCanEdit := .T.
    elseif RetCodUsr() $ cUsrRespUnid
        lUsrCanEdit := .T.
    endif

Return lUsrCanEdit

/*/{Protheus.doc} fGetUsrRespUnidade
    Recupera uma lista de usuários classificados como responsável por unidades operacionais, 
    conforme o cadastro de Dados complementares da filial - tabela ZCO.
    @type Function
    @author Franklin de Brito de Oliveira
    @since 22/10/2021
    @return character, Código de usuários, separado por ;, que são responsáveis por unidade.
    /*/
Static Function fGetUsrRespUnidade()
    cUsrRespUnid := ""
    
    dbSelectArea("ZCO")
    dbSetOrder(1)   //ZCO_FILIAL+ZCO_NOMREP
    while !ZCO->(EOF())
        if !Empty(ZCO->ZCO_USRREP)
            cUsrRespUnid += ZCO->ZCO_USRREP + ';'
        endif
        ZCO->(dbSkip())
    end
    ZCO->(dbCloseArea())

Return cUsrRespUnid
