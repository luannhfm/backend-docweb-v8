#INCLUDE "MATR110.CH"
#INCLUDE "PROTHEUS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> :  Função responsável pela geração do Relatório Pedido de Compra com Assinatura Eletrônica - DTCOMR04
<Autor> : Fábrica DOIT SP
<Data> : 19/03/2014
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Pedido de Compra com Assinatura Eletrônica
<Tipo> R (Relatório)
<Obs> :
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
<Descricao> :  Função responsável pela geração do Relatório Pedido de Compra por Ata de Registro de Preços
<Autor> : Walmir Junior - J2A Consultoria
<Data> : 05/02/2016
<Parametros> : Nil
<Retorno> : Nil
<Processo> : FIEMT – Pedido de Compra por Ata de Registro de Preços.
<Tipo> R (Relatório)
<Obs> : Relatório copiado da função DTCOMR04 para alterações exclusivas para PC de Ata de Registro de Preços.
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
*/
Static _nLimite := 3000

User Function SF0204X( cAlias, nReg, nOpcx )

Private oReport
Private lTRepInUse := .T.
PRIVATE lAuto      := (nReg!=Nil)
Private _nTotPag   :=1
Private _nPag      :=0
Private _cStatus   :=""
Private nPulaLn	 := 300
Private nCnt := 0
Private nCol := 0

If FindFunction("TRepInUse") .And. lTRepInUse
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Interface de impressao                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport:= ReportDef(nReg, nOpcx)
	oReport:PrintDialog()
EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ ReportDef³Autor  ³Alexandre Inacio Lemes ³Data  ³06/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pedido de Compras / Autorizacao de Entrega                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nExp01: nReg = Registro posicionado do SC7 apartir Browse  ³±±
±±³          ³ nExp02: nOpcx= 1 - PC / 2 - AE                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ oExpO1: Objeto do relatorio                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef(nReg,nOpcx)

Local cTitle     := STR0003 // "Emissao dos Pedidos de Compras ou Autorizacoes de Entrega"
Local oReport
Local nTamCdProd := TamSX3("C7_PRODUTO")[1]


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                         ³
//³ mv_par01               Do Pedido                             ³
//³ mv_par02               Ate o Pedido                          ³
//³ mv_par03               A partir da data de emissao           ³
//³ mv_par04               Ate a data de emissao                 ³
//³ mv_par05               Somente os Novos                      ³
//³ mv_par06               Campo Descricao do Produto    	     ³
//³ mv_par07               Unidade de Medida:Primaria ou Secund. ³
//³ mv_par08               Imprime ? Pedido Compra ou Aut. Entreg³
//³ mv_par09               Numero de vias                        ³
//³ mv_par10               Pedidos ? Liberados Bloqueados Ambos  ³
//³ mv_par11               Impr. SC's Firmes, Previstas ou Ambas ³
//³ mv_par12               Qual a Moeda ?                        ³
//³ mv_par13               Endereco de Entrega                   ³
//³ mv_par14               todas ou em aberto ou atendidos       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTR110",.F.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:= TReport():New("SF0204X",cTitle,If(lAuto,Nil,"SF0204X"), {|oReport| ReportPrint(oReport,nReg,nOpcx)},STR0001+" "+STR0002)
oReport:SetPortrait()
oReport:HideParamPage()
oReport:HideHeader()
oReport:HideFooter()
oReport:SetTotalInLine(.F.)
oReport:ldisableorientation:=.T.

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³Alexandre Inacio Lemes ³Data  ³06/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Emissao do Pedido de Compras / Autorizacao de Entrega      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ReportPrint(ExpO1,ExpN1,ExpN2)                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Objeto oReport                      	              ³±±
±±³          ³ ExpN1 = Numero do Recno posicionado do SC7 impressao Menu  ³±±
±±³          ³ ExpN2 = Numero da opcao para impressao via menu do PC      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport,nReg,nOpcX)

Local I     		// PM
Local _nAvanLi		:= 1000
Private cNumSC7     := Len(SC7->C7_NUM)
Private cNumSol     := ""
Private cDescPro    := ""
Private cOPCC       := ""
Private nVlUnitSC7  := 0
Private nValTotSC7  := 0
Private cSolicit    := ""

aPedido     := {}
aValIVA     := {}
cFiltro     := ""
cComprador  := ""
cAlter	   := ""
aAprov	   := {}
cTipoSC7    := ""
cCondBus    := ""
cMensagem   := ""
cVar        := ""
cPictVUnit  := PesqPict("SC7","C7_PRECO",16)
cPictVTot   := PesqPict("SC7","C7_TOTAL",, mv_par12)
lNewAlc	   := .F.
lLiber      := .F.

nRecnoSC7   := 0
nRecnoSM0   := 0
nX          := 0
nY          := 0
nTxMoeda    := 0
nTpImp	   := IIF(ValType(oReport:nDevice)!=Nil,oReport:nDevice,0) // Tipo de Impressao
nPageWidth  := IIF(nTpImp==1.Or.nTpImp==6, 2488, 2388 ) //2314,2290) // oReport:PageWidth()
nPrinted    := 0
nValIVA     := 0
nTotIpi	   := 0
nTotIcms	   := 0
nTotDesp	   := 0
nTotFrete	:= 0
nTotalNF	   := 0
nTotSeguro  := 0
nLinPC	   := 0
nLinObs     := 0
nDescProd   := 0
nTotal      := 0
nTotMerc    := 0
nOrder      := 1
cUserId     := RetCodUsr()
cCont       := Nil
lImpri      := .F.
cCident	   := ""
cCidcob	   := ""
_dDataLib  := CTOD('  /  /  ')

nTamCdProd  := TamSX3("C7_PRODUTO")[1]
nTamQtd     := TamSX3("C7_QUANT"  )[1]

aTamItem	   := {"C7_ITEM"	 , 0, TamSX3("C7_ITEM"   )[1]		                     , TamSX3("C7_ITEM"   )[1]+5 }
aTamProd    := {"C7_PRODUTO", 0, IIf(nTamCdProd<30,nTamCdProd+(30-nTamCdProd),30), 50                        }
aTamCdDesc  := {"DESCPROD"  , 0, TamSX3("B1_DESC"   )[1]                         , TamSX3("B1_DESC"   )[1]+30}
aTamUm	   := {"C7_UM"	    , 0, TamSX3("C7_UM"     )[1]		                     , TamSX3("C7_UM"     )[1]+5 }
aTamQuant   := {"C7_QUANT"  , 0, IIf(nTamQtd<12,nTamQtd+(12-nTamQtd),12)         , 12                        }
aTamSeg	   := {"C7_SEGUM"  , 0, TamSX3("C7_SEGUM"  )[1]                         , TamSX3("C7_SEGUM"  )[1]+5 }
aTamqtseg   := {"C7_QTSEGUM", 0, TamSX3("C7_QTSEGUM")[1]	                        , TamSX3("C7_QTSEGUM")[1]   }
aTamprec    := {"PRECO"	    , 0, 16						                              , 30                        }
aTamIpi     := {"C7_IPI"	 , 0, TamSX3("C7_IPI"    )[1]		                     , TamSX3("C7_IPI"    )[1]   }
aTamTot 	   := {"TOTAL"	    , 0, 14						                              , 25                        }
aTamDaTp	   := {"C7_DATPRF" , 0, TamSX3("C7_DATPRF" )[1]	                        , IIf(TamSX3("C7_DATPRF")[1]+5 < 11,11,TamSX3("C7_DATPRF")[1]+5)}
aTamCC 	   := {"C7_CC"	    , 0, 9						                              , 15                        }
aTamNum	   := {"C7_NUMSC"  , 0, TamSX3("C7_NUMSC"  )[1]	                        , TamSX3("C7_NUMSC"  )[1]+10}

//------------------------------
// Marcelo Coutinho
//----------------------------------------------------

aAssinat  := {}
lImpCab   := .T.
lCabIte   := .T.
lImpAss   := .T.
nLinPed   := 250
nLinItens := 620
nLinDesc  := 0
nLinLEnt  := 0
nLinCPag  := 0
nLinImp   := 0
nLinObs   := 0
nLinFrete := 0
nLinAss   := 2900
nLinFinal := 3340

//Local nVias     := 0
nPagina   := 0
cMoeda    := Iif( MV_PAR12 < 10, Str( MV_PAR12, 1 ), Str( MV_PAR12, 2 ) )
oBrush    := TBrush():New("",CLR_LIGHTGRAY)

//------------------------------
//
//----------------------------------------------------
Private cNumSC7     := Len(SC7->C7_NUM)
Private cNumSol     := ""
Private cDescPro    := ""
Private cOPCC       := ""
Private nVlUnitSC7  := 0
Private nValTotSC7  := 0
Private cSolicit    := ""

//----------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------------------
Private oFont1,oFont2,oFont3,oFont3N,oFont4,oFont5,oFont6,oFont7,oFont7N,oFont8,oFont9,oFont9N,oFont10

oFont1  := TFont():New( 'Arial', 08, 08, .T., .T., 5, .T., 5, .F., .F. )
oFont2  := TFont():New( 'Arial', 08, 08, .T., .F., 5, .T., 5, .F., .F. )
oFont3  := TFont():New( 'Arial', 09, 09, .T., .F., 5, .T., 5, .F., .F. )
oFont3N := TFont():New( 'Arial', 09, 09, .T., .T., 5, .T., 5, .F., .F. )
oFont4  := TFont():New( 'Arial', 09, 09, .T., .F., 5, .T., 5, .F., .F. )
oFont5  := TFont():New( 'Arial', 10, 10, .T., .T., 5, .T., 5, .F., .F. )
oFont6  := TFont():New( 'Arial', 10, 10, .T., .F., 5, .T., 5, .F., .F. )
oFont7  := TFont():New( 'Arial', 12, 12, .T., .F., 5, .T., 5, .F., .F. )
oFont7N := TFont():New( 'Arial', 12, 12, .T., .T., 5, .T., 5, .F., .F. )
oFont8  := TFont():New( 'Arial', 12, 12, .T., .F., 5, .T., 5, .F., .F. )
oFont9  := TFont():New( 'Arial', 16, 16, .T., .F., 5, .T., 5, .F., .F. )
oFont9N := TFont():New( 'Arial', 16, 16, .T., .T., 5, .T., 5, .F., .F. )
oFont10 := TFont():New( 'Arial', 20, 20, .T., .T., 5, .T., 5, .F., .F. )

//----------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------------------

If Type("lPedido")  != "L"
	lPedido := .F.
Endif

dbSelectArea("SC7")

If lAuto
	dbSelectArea("SC7")
	dbGoto(nReg)
	mv_par01 := SC7->C7_NUM
	mv_par02 := SC7->C7_NUM
	mv_par03 := SC7->C7_EMISSAO
	mv_par04 := SC7->C7_EMISSAO
	mv_par05 := Eval({|| cCont:=ChkPergUs(cUserId,"MTR110","05"),If(cCont == Nil,2      ,cCont) })
	mv_par08 := Eval({|| cCont:=ChkPergUs(cUserId,"MTR110","08"),If(cCont == Nil,C7_TIPO,cCont) })
	mv_par09 := Eval({|| cCont:=ChkPergUs(cUserId,"MTR110","09"),If(cCont == Nil,1      ,cCont) })
	mv_par10 := Eval({|| cCont:=ChkPergUs(cUserId,"MTR110","10"),If(cCont == Nil,3      ,cCont) })
	mv_par11 := Eval({|| cCont:=ChkPergUs(cUserId,"MTR110","11"),If(cCont == Nil,3      ,cCont) })
	mv_par14 := Eval({|| cCont:=ChkPergUs(cUserId,"MTR110","14"),If(cCont == Nil,1      ,cCont) })
EndIf

If lPedido
	mv_par12 := MAX(SC7->C7_MOEDA,1)
Endif

If SC7->C7_TIPO == 1 .OR. SC7->C7_TIPO == 3
	cCondBus := mv_par01
	nOrder	 := 1
Else
	cCondBus := "2"+StrZero(Val(mv_par01),6)
	nOrder	 := 10
EndIf

If mv_par14 == 2//atendidas
	cFiltro := "SC7->C7_QUANT-SC7->C7_QUJE <= 0 .Or. !EMPTY(SC7->C7_RESIDUO)"
Elseif mv_par14 == 3//em aberto
	cFiltro := "SC7->C7_QUANT > SC7->C7_QUJE"
EndIf

dbSelectArea("SC7")
dbSetOrder(nOrder)
dbSeek(xFilial("SC7")+cCondBus,.T.)

cNumSC7  := SC7->C7_NUM
cNumSol  := SC7->C7_NUMSC
//cNumReEm := SC7->C7_QTDREEM

//SS2014 - Nao existia posicionamento da tabela SC1 - Solicitacao do Pedido
SC1->(dbSetOrder(1))// posiciona a solicitacao por numero do pedido
SC1->(dbSeek(SC7->C7_FISCORI+SC7->C7_NUMSC))

While !oReport:Cancel() .And. !SC7->(Eof()) .And. SC7->C7_FILIAL == xFilial("SC7") .And. SC7->C7_NUM >= mv_par01 .And. SC7->C7_NUM <= mv_par02
	
	If (SC7->C7_CONAPRO == "B" .And. mv_par10 == 1) .Or.;
		(SC7->C7_CONAPRO <> "B" .And. mv_par10 == 2) .Or.;
		(SC7->C7_EMITIDO == "S" .And. mv_par05 == 1) .Or.;
		((SC7->C7_EMISSAO < mv_par03) .Or. (SC7->C7_EMISSAO > mv_par04)) .Or.;
		((SC7->C7_TIPO == 1 .OR. SC7->C7_TIPO == 3) .And. mv_par08 == 2) .Or.;
		(SC7->C7_TIPO == 2 .And. (mv_par08 == 1 .OR. mv_par08 == 3)) .Or. !MtrAValOP(mv_par11, "SC7") .Or.;
		(SC7->C7_QUANT > SC7->C7_QUJE .And. mv_par14 == 3) .Or.;
		((SC7->C7_QUANT - SC7->C7_QUJE <= 0 .Or. !Empty(SC7->C7_RESIDUO)) .And. mv_par14 == 2 )
		
		dbSelectArea("SC7")
		dbSkip()
		Loop
	Endif
	
	If oReport:Cancel()
		Exit
	EndIf
	
	MaFisEnd()
	R110FIniPC(SC7->C7_NUM,,,cFiltro)
	
	cSolicit	 := SC1->C1_SOLICIT
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Roda a impressao conforme o numero de vias informado no mv_par09 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//For nVias := 1 to mv_par09
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Dispara a cabec especifica do relatorio.                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	nTotal   := 0
	nTotMerc := 0
	nDescProd:= 0
	
	// Peder Munksgaard (Do.it Sistemas) - 04/11/2014
	If IsInCallStack("MATA097")
	   SC7->(dbGoto(nReg))
	Endif
	// 
	
	nRecnoSC7:= SC7->(Recno())
	cNumSC7  := SC7->C7_NUM
	aPedido  := {SC7->C7_FILIAL,SC7->C7_NUM,SC7->C7_EMISSAO,SC7->C7_FORNECE,SC7->C7_LOJA,SC7->C7_TIPO}
	
	
	
	// Calcula o total de paginas.
	While !oReport:Cancel() .And. !SC7->(Eof()) .And. SC7->C7_FILIAL == xFilial("SC7") .And. SC7->C7_NUM == cNumSC7
		
		If ( SC7->C7_CONAPRO == "B" .And. mv_par10 == 1)                                                        .Or.;
			( SC7->C7_CONAPRO <> "B" .And. mv_par10 == 2)                                                        .Or.;
			( SC7->C7_EMITIDO == "S" .And. mv_par05 == 1)                                                        .Or.;
			((SC7->C7_EMISSAO  < mv_par03 ) .Or. ( SC7->C7_EMISSAO > mv_par04 ) )                                .Or.;
			((SC7->C7_TIPO    == 1 .OR. SC7->C7_TIPO == 3 ) .And. mv_par08 == 2 )                                .Or.;
			( SC7->C7_TIPO    == 2 .And. ( mv_par08 == 1 .OR. mv_par08 == 3 ) ) .Or. !MtrAValOP(mv_par11, "SC7") .Or.;
			( SC7->C7_QUANT   >  SC7->C7_QUJE .And. mv_par14 == 3 )                                              .Or.;
			((SC7->C7_QUANT   -  SC7->C7_QUJE <= 0 .Or. !Empty(SC7->C7_RESIDUO)) .And. mv_par14 == 2 )
			dbSelectArea("SC7")
			SC7->(dbSkip())
			Loop
		EndIf
		
		// SEM QUEBRAS DE TEXTO OU ESPACOE DUPLICADOS
		cDescPro:= StrTran( StrTran( StrTran( SC7->C7_XXDESCR, Space(2), Space(1) ) , CHR(13), '' ), CHR(10) , '' )
		IF EMPTY(cDescPro)
			cDescPro:=SC7->C7_DESCRI
		ENDIF
		
		nLinItens += 65
		nVezes    := 40
		
		IF Len(AllTrim(cDescPro))>35
			nVezes += ( 40 * ( Int( ( Len( AllTrim( cDescPro ) ) ) / 35 ) ) )
		ENDIF
		_nAvanco:=nLinItens+nVezes
		IF _nAvanco>_nLimite
			_nAvanco:=3050
		Endif
		
		_nLInhas:=nVezes/40
		_nAdLinha:=10
		_nAdCol  :=1
		
		For I:=1 TO _nLinhas
			_nAdLinha+=40
			_nAdCol  +=35
			IF nLinItens+_nAdLinha > _nLimite
				//IF nLinItens+nVezes > nLinItens+_nAvanco
				_nTotPag+=1
				nLinITens:=250
				_nFalta:=len(cDescPro)-_nAdCol
				cDescPro:=Substr(cDescPro,_nAdCol,_nFalta)
				nVezes    := 40
				IF Len(AllTrim(cDescPro))>35
					nVezes += ( 40 * ( Int( ( Len( AllTrim( cDescPro ) ) ) / 35 ) ) )
				ENDIF
				_nAdLinha:=10
				_nAdCol  :=1
				_nAvanco:=nLinItens+nVezes
				IF _nAvanco>_nLimite
					_nAvanco:=_nLimite
				Endif
				_nLInhas:=nVezes/40
				_nAdLinha:=10
				_nAdCol  :=1
				//endif
			Endif
		Next
		
		If nVezes > 40
			nLinItens += ( nVezes - 40 )
		EndIf
		SC7->( dbSkip() )
	EndDo
  
	/*	If nLinItens+1300 > 2300
		_nTotPag+=1
	Endif*/
	
	
	
	// INICIA A IMPRESSAO
	SC7->(dbGoto(nRecnoSC7))
	nLinItens := _nAvanLi
	_nPag+=1
	Cab01(030) // Imprime primeiro cabecalho.
	Cab02(320) // Imprime Segundo Cabecalho.
	
	While !oReport:Cancel() .And. !SC7->(Eof()) .And. SC7->C7_FILIAL == xFilial("SC7") .And. SC7->C7_NUM == cNumSC7
		
		If ( SC7->C7_CONAPRO == "B" .And. mv_par10 == 1)                                                        .Or.;
			( SC7->C7_CONAPRO <> "B" .And. mv_par10 == 2)                                                        .Or.;
			( SC7->C7_EMITIDO == "S" .And. mv_par05 == 1)                                                        .Or.;
			((SC7->C7_EMISSAO  < mv_par03 ) .Or. ( SC7->C7_EMISSAO > mv_par04 ) )                                .Or.;
			((SC7->C7_TIPO    == 1 .OR. SC7->C7_TIPO == 3 ) .And. mv_par08 == 2 )                                .Or.;
			( SC7->C7_TIPO    == 2 .And. ( mv_par08 == 1 .OR. mv_par08 == 3 ) ) .Or. !MtrAValOP(mv_par11, "SC7") .Or.;
			( SC7->C7_QUANT   >  SC7->C7_QUJE .And. mv_par14 == 3 )                                              .Or.;
			((SC7->C7_QUANT   -  SC7->C7_QUJE <= 0 .Or. !Empty(SC7->C7_RESIDUO)) .And. mv_par14 == 2 )
			dbSelectArea("SC7")
			dbSkip()
			Loop
		EndIf
		
		If oReport:Cancel()
			Exit
		EndIf
		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa o descricao do Produto conf. parametro digitado.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cDescPro :=  ""
		
		If Empty(mv_par06)
			mv_par06 := "B1_DESC"
		EndIf
		
		If SC7->C7_DESC1 != 0 .Or. SC7->C7_DESC2 != 0 .Or. SC7->C7_DESC3 != 0
			nDescProd+= CalcDesc(SC7->C7_TOTAL,SC7->C7_DESC1,SC7->C7_DESC2,SC7->C7_DESC3)
		Else
			nDescProd+=SC7->C7_VLDESC
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializacao da Observacao do Pedido.                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		nTxMoeda   := IIF(SC7->C7_TXMOEDA > 0,SC7->C7_TXMOEDA,Nil)
		nValTotSC7 := xMoeda(SC7->C7_TOTAL,SC7->C7_MOEDA,MV_PAR12,SC7->C7_DATPRF,MsDecimais(SC7->C7_MOEDA),nTxMoeda)
		
		nTotal     := nTotal + SC7->C7_TOTAL
		nTotMerc   := MaFisRet(,"NF_TOTAL")
		
		If MV_PAR07 == 2 .And. !Empty(SC7->C7_QTSEGUM) .And. !Empty(SC7->C7_SEGUM)
			
			nVlUnitSC7 := xMoeda( ( SC7->C7_TOTAL / SC7->C7_QTSEGUM ), SC7->C7_MOEDA, MV_PAR12, SC7->C7_DATPRF, MsDecimais( SC7->C7_MOEDA ), nTxMoeda )
			
		ElseIf MV_PAR07 == 1 .And. !Empty(SC7->C7_QUANT) .And. !Empty(SC7->C7_UM)
			
			nVlUnitSC7 := xMoeda(SC7->C7_PRECO,SC7->C7_MOEDA,MV_PAR12,SC7->C7_DATPRF,MsDecimais(SC7->C7_MOEDA),nTxMoeda)
			
		Else
			
			nVlUnitSC7 := xMoeda(SC7->C7_PRECO,SC7->C7_MOEDA,MV_PAR12,SC7->C7_DATPRF,MsDecimais(SC7->C7_MOEDA),nTxMoeda)
			
		EndIf
		
		//----------------------------------------------------------------
		//	Itens
		//--------------------------------------------------------------------------------------------------
		
		If lCabIte
			
			lCabIte := .F.
			
			oReport:FillRect({(nLinItens+3), 0032, (nLinItens+65), 2380}, oBrush)
			
			oReport:Box(  nLinItens, 0030, (nLinItens+65), 2380)
			
			oReport:Say( (nLinItens+10), 0045, "ITEM"               , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 0150, "PRODUTO"            , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 0480, "DESCRIÇÃO"          , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 1010, "MARCA"              , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 1203, "UN"                 , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 1290, "QUANTIDADE"         , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 1520, "VALOR UNIT."        , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 1720, "ALIQ.IPI"           , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 1900, "VALOR TOTAL"        , oFont3N,,,, 0 )
			oReport:Say( (nLinItens+10), 2120, "DT. DE ENTREGA"     , oFont3N,,,, 0 )
			
			oReport:Line( nLinItens, 0115, (nLinItens+65), 0115 )
			oReport:Line( nLinItens, 0325, (nLinItens+65), 0325 )
			oReport:Line( nLinItens, 0905, (nLinItens+65), 0905 )
			oReport:Line( nLinItens, 1195, (nLinItens+65), 1195 )
			oReport:Line( nLinItens, 1250, (nLinItens+65), 1250 )
			oReport:Line( nLinItens, 1490, (nLinItens+65), 1490 )
			oReport:Line( nLinItens, 1695, (nLinItens+65), 1695 )
			oReport:Line( nLinItens, 1850, (nLinItens+65), 1850 )
			oReport:Line( nLinItens, 2095, (nLinItens+65), 2095 )
			
		EndIf
		
		cDescPro:=StrTran( StrTran( SC7->C7_XXDESCR, CRLF, ""), "  ", "")
		IF EMPTY(cDescPro)
			cDescPro:=SC7->C7_DESCRI
		ENDIF
		
		lImpAss   := .T.
		nLinItens += Iif(nLinItens == _nAvanLi, 65, 40)
		nVezes    := 40
		
		
		IF Len(AllTrim(cDescPro))>35
			nVezes += ( 40 * ( Int( ( Len( AllTrim( cDescPro ) ) ) / 35 ) ) )
		ENDIF
		_nAvanco:=nLinItens+nVezes
		IF _nAvanco>_nLimite
			_nAvanco:=3050
		Endif
		oReport:Box(  nLinItens, 0030, (_nAvanco), 2380)
		oReport:Line( nLinItens, 0115, (_nAvanco), 0115 )
		oReport:Line( nLinItens, 0325, (_nAvanco), 0325 )
		oReport:Line( nLinItens, 0905, (_nAvanco), 0905 )
		oReport:Line( nLinItens, 1195, (_nAvanco), 1195 )
		oReport:Line( nLinItens, 1250, (_nAvanco), 1250 )
		oReport:Line( nLinItens, 1490, (_nAvanco), 1490 )
		oReport:Line( nLinItens, 1695, (_nAvanco), 1695 )
		oReport:Line( nLinItens, 1850, (_nAvanco), 1850 )
		oReport:Line( nLinItens, 2095, (_nAvanco), 2095 )
		_nLInhas:=nVezes/40
		
		//Posiciona na SC8
		dbSelectArea("SC8")
		SC8->(DBSETORDER(1))
		SC8->(DbSeek(SC7->(C7_FISCORI+C7_NUMCOT)))
		
		oReport:Say( (nLinItens+010  ), 0045,            SC7->C7_ITEM                                                  		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 0120,            SC7->C7_PRODUTO                                               		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 1205,            SC7->C7_UM                                                    		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 1300, Transform( SC7->C7_QUANT  , PesqPict( "SC7", "C7_QUANT", 13 ) )          		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 1505, Transform( nVlUnitSC7     , PesqPict( "SC7", "C7_PRECO", 16 ) )          		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 1750, Transform( SC7->C7_IPI    , PesqPict( "SC7", "C7_IPI"  , 05 ) )          		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 1920, Transform( nValTotSC7     , PesqPict( "SC7", "C7_TOTAL",   , mv_par12 ) )		 , oFont2,,,, 0 )
		oReport:Say( (nLinItens+010  ), 2130,            Iif(Empty(SC8->C8_DATPRF),DTOC(SC7->C7_DATPRF),DTOC(SC8->C8_DATPRF)), oFont2,,,, 0 )//<-- DTOC(SC7->C7_DATPRF)
		// Alteração - Peder Munksgaard (Do.it Sistemas) - 05/12/2014
		// Modificado o tamanho da fonte para o campo marca.
		//oReport:Say( (nLinItens+010  ), 0915,            SC7->C7_XXMARCA                                               		 , oFont2,,,, 0 )		
		oReport:Say( (nLinItens+010  ), 0915,            SC7->C7_XXMARCA                                               		 , oFont1,,,, 0 )
		//
		_nAdLinha:=10
		_nAdCol  :=1
		
		For I:=1 TO _nLinhas
			oReport:Say( (nLinItens + _nAdLinha), 0335,   SubStr( cDescPro, _nAdCol, 035 ) , oFont2,,,, 0 )
			_nAdLinha+=40
			_nAdCol  +=35
			IF nLinItens+_nAdLinha > _nLimite
				oReport:EndPage()
				_nPag+=1
				Cab01(030)
				nLinITens:=250
				_nFalta:=len(cDescPro)-_nAdCol+1
				cDescPro:=Substr(cDescPro,_nAdCol,_nFalta)
				_nAdLinha:=10
				_nAdCol  :=1
				nVezes    := 40
				IF Len(AllTrim(cDescPro))>35
					nVezes += ( 40 * ( Int( ( Len( AllTrim( cDescPro ) ) ) / 35 ) ) )
				ENDIF
				_nAvanco:=nLinItens+nVezes
				IF _nAvanco>_nLimite
					_nAvanco:=_nLimite
				Endif

				oReport:Box(  nLinItens, 0030, (_nAvanco), 2380)
				oReport:Line( nLinItens, 0115, (_nAvanco), 0115 )
				oReport:Line( nLinItens, 0325, (_nAvanco), 0325 )
				oReport:Line( nLinItens, 0905, (_nAvanco), 0905 )
				oReport:Line( nLinItens, 1195, (_nAvanco), 1195 )
				oReport:Line( nLinItens, 1250, (_nAvanco), 1250 )
				oReport:Line( nLinItens, 1490, (_nAvanco), 1490 )
				oReport:Line( nLinItens, 1695, (_nAvanco), 1695 )
				oReport:Line( nLinItens, 1850, (_nAvanco), 1850 )
				oReport:Line( nLinItens, 2095, (_nAvanco), 2095 )
				_nLInhas:=nVezes/40
				_nAdLinha:=10
				_nAdCol  :=1
				//endif
			Endif
		Next

		If nVezes > 40
			nLinItens +=  (nVezes - 40)
		EndIf
		
		
		
		//----------------------------------------------------------------
		// Cabeçalho
		//--------------------------------------------------------------------------------------------------
		
		SC7->( dbSkip() )
		
		//----------------------------------------------------------------
		//
		//--------------------------------------------------------------------------------------------------
		
	EndDo
	
	SC7->(dbGoto(nRecnoSC7))
	SE4->(dbSetOrder(1))
	SE4->(dbSeek(xFilial("SE4")+SC7->C7_COND))
	nTotIpi	 := MaFisRet(,'NF_VALIPI')
	nTotIcms  := MaFisRet(,'NF_VALICM')
	nTotDesp  := MaFisRet(,'NF_DESPESA')
	nTotFrete := MaFisRet(,'NF_FRETE')
	nTotSeguro:= MaFisRet(,'NF_SEGURO')
	nTotalNF  := MaFisRet(,'NF_TOTAL')
	
	nLinItens+=50
	IF nLinItens+150>_nLimite
		oReport:EndPage()
		_nPag+=1
		CAB01(030)
		nLinItens:=250
	Endif
	dBank(nLinItens)     // 150  Dados Bancario
	nLinItens+=150
	
	IF nLinItens+450>_nLimite
		oReport:EndPage()
		_nPag+=1
		CAB01(030)
		nLinItens:=250
	Endif
	Obs01(nLinItens)     // 450  Obs
	nLinItens+=450
	
	
	IF nLinItens+150>_nLimite
		oReport:EndPage()
		_nPag+=1
		CAB01(030)
		nLinItens:=250
	Endif
	
	Status01(nLinItens)  // 150  Status
	nLinItens+=135//150
	
	
	IF nLinItens+150>_nLimite
		oReport:EndPage()
		_nPag+=1
		CAB01(030)
		nLinItens:=250
	Endif
	Lentrega(nLinitens)  // 200  Entrega
	nLinItens+=180//200
	
	// 150  Vazio
	
	// 300  Assinatura
	
	// 3200 Limite final
	
	//Aprovadores
	If Len( aAssinat ) == 0
		aAssinat   := COMA02Apr( nRecnoSC7 )
		aAprov     := aAssinat[1]
		cAlter     := aAssinat[2]
		cTipoSC7   := aAssinat[3]
		lNewAlc    := aAssinat[4]
		lLiber     := aAssinat[5]
		cComprador := aAssinat[6]
	EndIf
	
	IF nLinItens+300>_nLimite
		oReport:EndPage()
		_nPag+=1
		CAB01(030)
		nLinItens:=250
	Endif
	
	// Verifica se o pedido esta bloqueado atualmente
	ASS01(nLinItens, Upper(StrTran(_cStatus,Space(1),'')) )

	oReport:EndPage()
	
	
	//----------------------------------------------------------------
	// Finalização
	//--------------------------------------------------------------------------------------------------
	
	MaFisEnd()
	
	dbSelectArea("SC7")
	dbSkip()
	Exit
EndDo

dbSelectArea("SC7")
dbClearFilter()
dbSetOrder(1)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³R110FIniPC³ Autor ³ Doit Sistemas        ³ Data ³20/05/2014 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ 																		     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ R110FIniPC(ExpC1,ExpC2)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 := Numero do Pedido                                  ³±±
±±³          ³ ExpC2 := Item do Pedido                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATR110,MATR120,Fluxo de Caixa                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R110FIniPC(cPedido,cItem,cSequen,cFiltro)

Local aArea		:= GetArea()
Local aAreaSC7	:= SC7->(GetArea())
Local cValid		:= ""
Local nPosRef		:= 0
Local nItem		:= 0
Local cItemDe		:= IIf(cItem==Nil,'',cItem)
Local cItemAte	:= IIf(cItem==Nil,Repl('Z',Len(SC7->C7_ITEM)),cItem)
Local cRefCols	:= ''
DEFAULT cSequen	:= ""
DEFAULT cFiltro	:= ""

dbSelectArea("SC7")
dbSetOrder(1)
If dbSeek(xFilial("SC7")+cPedido+cItemDe+Alltrim(cSequen))
	MaFisEnd()
	MaFisIni(SC7->C7_FORNECE,SC7->C7_LOJA,"F","N","R",{})
	While !Eof() .AND. SC7->C7_FILIAL+SC7->C7_NUM == xFilial("SC7")+cPedido .AND. ;
		SC7->C7_ITEM <= cItemAte .AND. (Empty(cSequen) .OR. cSequen == SC7->C7_SEQUEN)
		
		// Nao processar os Impostos se o item possuir residuo eliminado
		If &cFiltro
			dbSelectArea('SC7')
			dbSkip()
			Loop
		EndIf
		
		// Inicia a Carga do item nas funcoes MATXFIS
		nItem++
		MaFisIniLoad(nItem)
		dbSelectArea("SX3")
		dbSetOrder(1)
		dbSeek('SC7')
		While !EOF() .AND. (X3_ARQUIVO == 'SC7')
			cValid	:= StrTran(UPPER(SX3->X3_VALID)," ","")
			cValid	:= StrTran(cValid,"'",'"')
			If "MAFISREF" $ cValid
				nPosRef  := AT('MAFISREF("',cValid) + 10
				cRefCols := Substr(cValid,nPosRef,AT('","MT120",',cValid)-nPosRef )
				// Carrega os valores direto do SC7.
				MaFisLoad(cRefCols,&("SC7->"+ SX3->X3_CAMPO),nItem)
			EndIf
			dbSkip()
		End
		MaFisEndLoad(nItem,2)
		dbSelectArea('SC7')
		dbSkip()
	End
EndIf

RestArea(aAreaSC7)
RestArea(aArea)

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³COMA02Apr³ Autor ³ Doit Sistemas	        ³ Data ³20/05/2014³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Retorna array contendo os aprovadores do pedido			     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ R110FIniPC(ExpC1,ExpC2)                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 := Numero do Recno da SC7                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ 																			  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function COMA02Apr(nRecnoSC7)

Local aArea      := GetArea()
Local aAprov     := {}
Local cAlter     := ""
Local cTipoSC7   := ""
Local lNewAlc    := .F.
Local lLiber     := .T.
Local cComprador := ""
Local _aStatus    := {}
Local nI
dbSelectArea("SC7")

SC7->(dbGoto(nRecnoSC7))

//If !Empty(SC7->C7_APROV)
If !Empty(SC7->C7_APROV) .Or. Isincallstack("MATA097")
	
	cTipoSC7   := Iif( (SC7->C7_TIPO == 1 .OR. SC7->C7_TIPO == 3), "PC", "AE" )
	lNewAlc    := .T.
	cComprador := UsrFullName(SC7->C7_USER)
	
	// Inclusão por Peder Munksgaard (Do.it Sistemas) - 04/11/2014
	If Isincallstack("MATA097")
	
	   SCR->(dbClearFilter())
	   
	Endif
	//
		
	dbSelectArea("SCR")
	SCR->(dbSetOrder(1))
	SCR->(dbSeek(SC7->C7_FILIAL+cTipoSC7+PadR(SC7->C7_NUM,TamSX3("CR_NUM")[1])))
	
	// Correção - Peder Munksgaard (Do.it Sistemas) - 04/11/2014
	//While SCR->(!Eof()) .And. SCR->CR_FILIAL+Alltrim(SCR->CR_NUM) == SC7->C7_FILIAL+Alltrim(SC7->C7_NUM) .And. SCR->CR_TIPO == cTipoSC7
	
	While SCR->(!Eof()) .And. SCR->(CR_FILIAL+CR_TIPO+SCR->CR_NUM) == SC7->(C7_FILIAL+cTipoSC7+PadR(SC7->C7_NUM,TamSX3("CR_NUM")[1]))
    //
      // Add todos os Status de Alçada do Pedido
		aadd(_aStatus,SCR->CR_STATUS)
      
		// ..deve ser um limite de 10
		If Len( aAprov ) < 10
			
			/*/ 	Obtem os dados de todos os APROVADORES para impressao das assinaturas
					independente do status atual do pedido de compras.
					A liberacao so nao sera impressa para pedidos com status BLOQUEADO ou
					RESIDUO ELIMINADO, porem para ELIMINACAO DE RESIDUO devera ser verificado
					o campo C7_XCONTRA, se estiver preenchido, as assinaturas deverao ser impressas
					com o status "Vinculado a planilha de medição"
			/*/			
			If SCR->CR_STATUS == '03'
		
				SAK->(DbSetorder(2))
				SAK->(DbSeek(xFilial("SAK")+AllTrim(xFilial("SAK")+SCR->CR_USER)))
						
				Aadd( aAprov, { AllTrim(UsrFullName(SCR->CR_USER))+" ", SuperGetMv("MV_LOCASS",.T.,"\ASSINATURAS\")+AllTrim(xFilial("SAK"))+SAK->AK_USER+".jpg" } )
   		    EndIf		
		EndIf
	
		SCR->( dbSkip() )
	Enddo	
EndIf

FOR nI:=1 TO LEN(_aStatus)
	IF !_aStatus[nI] $ '03/05'
		lLiber:=.F.
		EXIT
	ENDIF
NEXT             

RestArea( aArea )
Return { aAprov, cAlter, cTipoSC7, lNewAlc, lLiber, cComprador }


/////////////////////////////
//			Cabeçalho 			//
/////////////////////////////
Static Function CAB01(nLinCab)

//Local nLinCab   := 030
Local nLinPed   := 250

oReport:Box(  nLinCab, 0030, (nLinPed-20), 2380 )
oReport:Line( nLinCab, 0500, (nLinPed-20), 0500 )
oReport:SayBitmap((nLinCab+2), 032, "lgrl01.bmp", 460, 200 )
oReport:Say((nLinCab+030), 1140, "Filial: " + FWFilialName(cEmpAnt,SC7->C7_FILIAL,2) , oFont7N,,,, 0 )					
oReport:Say((nLinCab+090), 1000, "P E D I D O   DE   U T I L I Z A Ç Ã O   D E    A T A "                        , oFont7N,,,, 0 )
oReport:Say((nLinCab+030), 2000, 'Pagina: '+Strzero(_nPag,2)+'/'+Strzero(_nTotPag,2), oFont7N ,,,, 0 )
oReport:Say((nLinCab+160), 1150, 'Pedido de Compras: '+SC7->C7_NUM, oFont4 ,,,, 0 )
oReport:Say((nLinCab+160), 0700, 'Solicitação Compras: '+SC7->C7_NUMSC, oFont4 ,,,, 0 )
oReport:Say((nLinCab+160), 2000, "Impressão: "+DTOC(DDATABASE)                                        , oFont4 ,,,, 0 )


Return()


/////////////////////////////
//			Cabeçalho 2			//
/////////////////////////////
Static Function CAB02(nLinPed)
Local aArea := {}

// Alteração - Peder Munksgaard (Do.it Sistemas) em 10/11/2014
// Insidente 138280 - Leandro Almeida.

//Local cFornec := SC7->C7_FORNECE
Local cFornec := SC7->(C7_FORNECE+C7_LOJA)
Local cCodCC	:= SC7->C7_CC
Local cCodICo	:= SC7->C7_ITEMCTA
Local cDesCC	:= ""
Local cDesICo	:= ""
Local _lRat		:= .F. //Implementar Função VldExRat, para validar a existência de rateio.

aArea := GetArea()

//-- Centro de custo e Item contábil; adicionado por Franklin
DbSelectArea("CTT")
DBSetOrder(1)

If DbSeek(xFilial("CTT")+cCodCC)
	cDesCC		:= CTT->CTT_DESC01
EndIf

DbSelectArea("CTD")
DBSetOrder(1)

If DbSeek(xFilial("CTD")+cCodICo)
	cDesICo	:= CTD->CTD_DESC01
EndIf

SC1->(dbSetOrder(1))// posiciona a solicitacao por numero do pedido
SC1->(dbSeek(SC7->C7_FISCORI+SC7->C7_NUMSC))

oReport:Say((nLinPed-50), 0350, "ATA N°: " + SC7->C7_CONTRA, oFont3N,,,, 0 )
oReport:Say((nLinPed-50), 1500, "Data Solicitação: " + DtoC(SC1->C1_EMISSAO), oFont3N,,,, 0 )

//-- Pedido
oReport:FillRect({(nLinPed+3), 0032, (nLinPed+70), 2380}, oBrush)
//Box Títulos Caixas
oReport:Box(  nLinPed, 0030, (nLinPed+070), 2380 )
//Box Caixa Fornecedor
oReport:Box(  nLinPed, 1000, (nLinPed+650), 2380 )
//Box Entidade/Unidade
oReport:Line( nLinPed, 0030, (nLinPed+650), 0030 )
oReport:Line((nLinPed + 330), 0030, (nLinPed+330), 1000 )
//Box Tem Rateio
//oReport:Line((nLinPed + 370), 0030, (nLinPed+370), 1000 )
//oReport:Line((nLinPed + 430), 0030, (nLinPed+430), 1000 )
//Box Centro de Custo
//oReport:Line((nLinPed + 500), 0030, (nLinPed+500), 1000 )
oReport:Line((nLinPed + 650), 0030, (nLinPed+650), 1000 )


oReport:Say((nLinPed+10), 0300, "ENTIDADE / UNIDADE", oFont3N,,,, 0 )
oReport:Say((nLinPed+10), 1600, "FORNECEDOR"        , oFont3N,,,, 0 )

//-- Entidade / Unidade
oReport:Say((nLinPed+080), 0050, ( STR0087 + SM0->M0_NOMECOM                                                                             ), oFont3,,,, 0 )
oReport:Say((nLinPed+130), 0050, ( STR0088 + SM0->M0_ENDENT                                                                              ), oFont3,,,, 0 )
oReport:Say((nLinPed+180), 0050, ( STR0089 + Transform( SM0->M0_CEPENT, PesqPict( "SA2", "A2_CEP" ) )                                    ), oFont3,,,, 0 )
oReport:Say((nLinPed+180), 0500, ( STR0090 + "  " + RTRIM( SM0->M0_CIDENT ) + Space( 10 ) + STR0091 + SM0->M0_ESTENT                     ), oFont3,,,, 0 )
oReport:Say((nLinPed+230), 0050, ( STR0092 + SM0->M0_TEL                                                                                 ), oFont3,,,, 0 )
oReport:Say((nLinPed+230), 0500, ( STR0093 + SM0->M0_FAX                                                                                 ), oFont3,,,, 0 )
oReport:Say((nLinPed+280), 0050, ( STR0124 + Transform( SM0->M0_CGC, PesqPict( "SA2", "A2_CGC" ) )                                       ), oFont3,,,, 0 )
oReport:Say((nLinPed+280), 0500, ( STR0041 + IIF(EMPTY(InscrEst()),'ISENTO',InscrEst())                                                  ), oFont3,,,, 0 )

//oReport:Say((nLinPed+380), 0050, "Tem Rateio: " + Iif(_lRat, "SIM", "NÂO")  , oFont3N,,,, 0 )

oReport:Say((nLinPed+350), 0050, ( "C.C.: " + cCodCC	+ " - " + SubStr(cDesCC, 1, 30) 				), oFont3,,,, 0 )
oReport:Say((nLinPed+400), 0050, ( "I. Contábil: "	+ cCodICo + " - " + SubStr(cDesICo, 1 , 30)	), oFont3,,,, 0 )

DbSelectArea("SA2")
DbSeek(xFilial("SA2")+cFornec)

//-- Fornecedor
/*oReport:Say((nLinPed+080), 1020, ( STR0106 + SubStr( SA2->A2_NOME, 1, 90 )                                                               ), oFont3,,,, 0 )
oReport:Say((nLinPed+080), 1900, ( STR0107 + SA2->A2_COD + " " + STR0108 + SA2->A2_LOJA                                                  ), oFont3,,,, 0 )
oReport:Say((nLinPed+130), 1020, ( STR0088 + SA2->A2_END                                                                                 ), oFont3,,,, 0 )
oReport:Say((nLinPed+130), 1900, ( STR0109 + SA2->A2_BAIRRO                                                                              ), oFont3,,,, 0 )
oReport:Say((nLinPed+180), 1020, ( STR0110 + SA2->A2_MUN                                                                                 ), oFont3,,,, 0 )
oReport:Say((nLinPed+180), 1900, ( STR0111 + SA2->A2_EST + Space( 10 ) + STR0112 + Transform( SA2->A2_CEP, PesqPict( "SA2", "A2_CEP" ) ) ), oFont3,,,, 0 )
oReport:Say((nLinPed+230), 1020, ( STR0124 + Transform( SA2->A2_CGC, PesqPict( "SA2", "A2_CGC" ) )                                       ), oFont3,,,, 0 )
oReport:Say((nLinPed+230), 1900, ( STR0095 + SA2->A2_INSCR                                                                               ), oFont3,,,, 0 )
oReport:Say((nLinPed+280), 1020, ( 'Email: '+SA2->A2_EMAIL                     ), oFont3,,,, 0 )
oReport:Say((nLinPed+280), 1900, ( STR0114 + "(" + Substr( SA2->A2_DDD, 1, 3 ) + ") " + SubStr( SA2->A2_FAX, 1, 15 )                     ), oFont3,,,, 0 )
*/

oReport:Say((nLinPed+080), 1020, ( STR0125 + SubStr( SA2->A2_NREDUZ, 1, 90 )                                                               ), oFont3,,,, 0 )
oReport:Say((nLinPed+130), 1020, ( STR0106 + SubStr( SA2->A2_NOME, 1, 90 )                                                               ), oFont3,,,, 0 )
oReport:Say((nLinPed+180), 1020, ( STR0107 + SA2->A2_COD + " " + STR0108 + SA2->A2_LOJA                                                  ), oFont3,,,, 0 )
oReport:Say((nLinPed+230), 1020, ( STR0124 + Transform( SA2->A2_CGC, PesqPict( "SA2", "A2_CGC" ) )                                       ), oFont3,,,, 0 )
oReport:Say((nLinPed+280), 1020, ( STR0095 + SA2->A2_INSCR                                                                               ), oFont3,,,, 0 )
oReport:Say((nLinPed+330), 1020, ( STR0088 + SA2->A2_END                                                                                 ), oFont3,,,, 0 )
oReport:Say((nLinPed+380), 1020, ( STR0109 + SA2->A2_BAIRRO                                                                              ), oFont3,,,, 0 )
oReport:Say((nLinPed+430), 1020, ( STR0111 + SA2->A2_EST + Space( 10 ) + STR0112 + Transform( SA2->A2_CEP, PesqPict( "SA2", "A2_CEP" ) ) ), oFont3,,,, 0 )
oReport:Say((nLinPed+480), 1020, ( STR0110 + SA2->A2_MUN                                                                                 ), oFont3,,,, 0 )
oReport:Say((nLinPed+530), 1020, ( "Telefone: " + "(" + Substr( SA2->A2_DDD, 1, 3 ) + ") " + SubStr( SA2->A2_TEL, 1, 15 )                ), oFont3,,,, 0 )
oReport:Say((nLinPed+580), 1020, ( 'Email: '+SA2->A2_EMAIL                     ), oFont3,,,, 0 )



RestArea(aArea)

Return()


// Correção por Peder Munksgaard (Do.it Sistemas) em 04/11/2014
// Sempre retornava a data de liberação em branco.

Static Function Dbank(nLincPag)

// Inclusão Peder Munksgaard (Do.it Sistemas) em 04/11/2014
// Faltava digito verificador de agência e conta.
Local _cAg    := ""
Local _cConta := ""
//

SCR->(dbSetOrder(1))
If SCR->(dbSeek(SC7->(C7_FILIAL+'PC'+PadR(C7_NUM,TamSX3("CR_NUM")[1]))))

	While SCR->(CR_FILIAL+CR_TIPO+CR_NUM) == SC7->(C7_FILIAL+'PC'+PadR(C7_NUM,TamSX3("CR_NUM")[1]))
	 
	   If SCR->CR_STATUS == '03'
       
          _dDataLib := SCR->CR_DATALIB
          Exit
          
       Else       
        
          _dDataLib := CtoD('  /  /  ')
                 
       Endif
       	    
	    SCR->(dbSkip())
	    
	End
	       
Endif

//Alterado por Franklin - Quando emitido pela rotina de liberação, está saindo com data de liberação, mesmo que se encontre bloqueado. 
//_dDataLib := IIF(Isincallstack("MATA097") , dDataBase , _dDataLib)
_dDataLib := IIF(Isincallstack("A097Libera") , dDataBase , _dDataLib)

//

//-- Condição de Pagamento / Data de Emissão / Total Mercadorias / Total Impostos / Dados Bancários
oReport:FillRect({(nLinCPag+3), 0032, (nLinCPag+070), 2380}, oBrush)

oReport:Box(  nLinCPag		, 0030, (nLinCPag+070)	, 2380)// box cabecalho de dados bancarios
oReport:Box(  nLinCPag+070 , 0030, nLinCPag+140		, 2380)// box itens de dados bancarios

oReport:Say( (nLinCPag+10), 0200, "Dados Bancários"      , oFont3N,,,, 0 )
oReport:Say( (nLinCPag+10), 0850, "Condição de Pagamento", oFont3N,,,, 0 )
oReport:Say( (nLinCPag+10), 1330, "Data de Aprovação"    , oFont3N,,,, 0 )
oReport:Say( (nLinCPag+10), 1650, "Total das Mercadorias", oFont3N,,,, 0 )
oReport:Say( (nLinCPag+10), 2050, "Total com Impostos"   , oFont3N,,,, 0 )

oReport:Line( nLinCPag, 0680, (nLinCPag+140), 0680 )
oReport:Line( nLinCPag, 1280, (nLinCPag+140), 1280 )
oReport:Line( nLinCPag, 1600, (nLinCPag+140), 1600 )
oReport:Line( nLinCPag, 2000, (nLinCPag+140), 2000 )

_cAg    := IIF( Empty(SA2->A2_XDVAGE), Alltrim(SA2->A2_AGENCIA) ,Alltrim(SA2->A2_AGENCIA) + "-" + Alltrim(SA2->A2_XDVAGE)) 
_cConta := IIF( Empty(SA2->A2_XDVCTA), Alltrim(SA2->A2_NUMCON)  ,Alltrim(SA2->A2_NUMCON)  + "-" + Alltrim(SA2->A2_XDVCTA))  

// Corrigido por Peder Munksgaard (Do.it Sistemas) em 04/11/2014
// Faltavam as informações de DV para agencia e conta do fornecedor.

//oReport:Say( (nLinCPag+90), 0050, "Banco: " + SA2->A2_BANCO + "   Ag: " + SA2->A2_AGENCIA +  "   Conta: " + SA2->A2_NUMCON                                                                     , oFont3,,,, 0 )
oReport:Say( (nLinCPag+90), 0050, "Banco: " + SA2->A2_BANCO + "   Ag: " + _cAg +  "   Conta: " + _cConta                                                                     , oFont3,,,, 0 )
//
oReport:Say( (nLinCPag+90), 0700, SubStr( SE4->E4_DESCRI, 1, 80 )                                                                                                                            , oFont3,,,, 0 )
oReport:Say( (nLinCPag+90), 1400, Dtoc( _dDataLib )                                                                                                                                    , oFont3,,,, 0 )
oReport:Say( (nLinCPag+90), 1800, Transform( xMoeda( nTotal  , SC7->C7_MOEDA, MV_PAR12, SC7->C7_DATPRF, MsDecimais( SC7->C7_MOEDA ), nTxMoeda ), tm( nTotal  , 14, MsDecimais( MV_PAR12 ) ) ), oFont3,,,, 0 )
oReport:Say( (nLinCPag+90), 2200, Transform( xMoeda( nTotMerc, SC7->C7_MOEDA, MV_PAR12, SC7->C7_DATPRF, MsDecimais( SC7->C7_MOEDA ), nTxMoeda ), tm( nTotMerc, 14, MsDecimais( MV_PAR12 ) ) ), oFont3,,,, 0 )


Return()

Static Function OBS01(nLinObs)
Local nLines,nNextLin,NL
Store 0 To nLines,nNextLin
_cJustifica:=""
//SS2014-RETIRADO >>SC1->(DBSETORDER(1))
//SS2014-RETIRADO >>IF SC1->(DBSEEK(XFILIAL('SC1')+SC7->C7_NUMSC))
	
	_cJustifica:=SC1->C1_XJUSTIF
	_cJustifica:=StrTran( StrTran( _cJustifica, CRLF, '') , '  ', '')

//SS2014-RETIRADO >>ENDIF

//-- Observação / Totais
oReport:FillRect({(nLinObs+3), 0032, (nLinObs+070), 2380}, oBrush)
oReport:Box(  nLinObs, 0030, (nLinObs+070), 2380)
oReport:Box(  nLinObs, 0030, (nLinObs+430), 2380)

/*
oReport:Line( nLinObs, 1900, (nLinObs+430), 1900 )
oReport:Box( (nLinObs+140), 1900, (nLinObs+140), 2380)
oReport:Box( (nLinObs+210), 1900, (nLinObs+210), 2380)
oReport:Box( (nLinObs+280), 1900, (nLinObs+280), 2380)
oReport:Box( (nLinObs+350), 1900, (nLinObs+350), 2380)
*/
oReport:Say( (nLinObs+010), 1150, "Justificativa"        , oFont3N,,,, 0 )

nLines := MLCount( SubStr(_cJustifica,1,0960) , 160)
nNextLin := 50
nLinObs += 30
For nL := 1 To nLines                                                                            
	oReport:Say( (nLinObs+(nNextLin*nL)), 0050, MemoLine( _cJustifica , 160 , nL ), oFont3,,,, 0 )	
Next nL

Return()

Static Function Status01(nLinFrete)
Local cValFret := ''

IF !Empty(SC7->C7_RESIDUO)
	// SE ELIMINACAO DE RESIDUO E EXISTIR CONTRATO, ENTAO ESTA VINCULADO A MEDICAO
	IF( !Empty( SC7->C7_XCONTRA ) )
		_cStatus+='VINCULADO A PLANILHA DE MEDIÇÃO'
	Else
		_cStatus+='E L I M I N A D O   R E S I D U O'
	EndIf
ELSEIF (SC7->(FieldPos("C7_ACCPROC")) > 0) .AND. (SC7->C7_ACCPROC<>"1" .And.  SC7->C7_CONAPRO=="B".And. SC7->C7_QUJE < SC7->C7_QUANT)
	_cStatus+='P E D I D O   B L O Q U E A D O'
ELSEIF (SC7->(FieldPos("C7_ACCPROC")) > 0) .AND. (SC7->C7_CONAPRO=="B" .And. SC7->C7_QUJE < SC7->C7_QUANT)
	_cStatus+='P E D I D O   B L O Q U E A D O'
ELSEIF SC7->C7_QUJE==0 .And. SC7->C7_QTDACLA==0
	_cStatus+='P E D I D O   L I B E R A D O'
ELSEIF SC7->C7_QUJE<>0.And.SC7->C7_QUJE<SC7->C7_QUANT
	_cStatus+='PARCIALMENTE ATENDIDO'
ELSEIF SC7->C7_QUJE>=SC7->C7_QUANT
	_cStatus+='P E D I D O  A T E N D I D O'
ELSEIF SC7->C7_QTDACLA
	_cStatus+='UTILIZADO EM PRÉ-NOTA'
ENDIF

//-- Observação Frete / Status / Total Geral
cValFret := Transform(xMoeda(nTotFrete , SC7->C7_MOEDA, MV_PAR12, SC7->C7_DATPRF, MsDecimais( SC7->C7_MOEDA ), nTxMoeda ), tm( nTotFrete , 14, MsDecimais( MV_PAR12 ) ) )

oReport:FillRect({(nLinFrete+3), 0032, (nLinFrete+070), 2380}, oBrush)
oReport:Box(  nLinFrete, 0030, (nLinFrete+070), 2380)
oReport:Box(  nLinFrete, 0030, (nLinFrete+140), 2380)
oReport:Say( (nLinFrete+010), 0400, "STATUS PEDIDO", oFont3N,,,, 0 )
oReport:Say( (nLinFrete+010), 1300, "FRETE"        , oFont3N,,,, 0 )
oReport:Say( (nLinFrete+010), 1950, "TOTAL GERAL"  , oFont3N,,,, 0 )
oReport:Line( nLinFrete, 1000, (nLinFrete+140), 1000 )
oReport:Line( nLinFrete, 1700, (nLinFrete+140), 1700 )
oReport:Say( (nLinFrete+080), 0250, _cStatus , oFont7N,,,, 0 )
oReport:Say( (nLinFrete+080), 1260, Iif( SC7->C7_TPFRETE $ "F","FOB","CIF" ) + ' - ' + LTrim(cValFret) , oFont7N,,,, 0 )
oReport:Say( (nLinFrete+080), 2000, Transform( xMoeda( nTotalNF, SC7->C7_MOEDA, MV_PAR12, SC7->C7_DATPRF, MsDecimais( SC7->C7_MOEDA ), nTxMoeda), tm( nTotalNF, 14, MsDecimais( MV_PAR12 ) ) ), oFont7N,,,, 0 )

Return()

Static Function lEntrega(nLinLEnt)

//-- Local de Entrega
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona o Arquivo de Empresa SM0.                          ³
//³ Imprime endereco de entrega do SM0 somente se o MV_PAR13 =" "³
//³ e o Local de Cobranca :                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//Wjr SM0->(dbSetOrder(1))
//Wjr nRecnoSM0 := SM0->(Recno())
//Wjr SM0->(dbSeek(SUBS(cNumEmp,1,2)+SC7->C7_FILENT))
//Wjr cCident := IIF(len(SM0->M0_CIDENT)>20,Substr(SM0->M0_CIDENT,1,15),SM0->M0_CIDENT)
//Wjr cCidcob := IIF(len(SM0->M0_CIDCOB)>20,Substr(SM0->M0_CIDCOB,1,15),SM0->M0_CIDCOB)
oReport:FillRect({(nLinLEnt+2), 0032, (nLinLEnt+070), 2380}, oBrush)
oReport:Box(  nLinLEnt, 0030, (nLinLEnt+070), 2380)
oReport:Box(  nLinLEnt, 0030, (nLinLEnt+380), 2380)
//Walmir Junior 10/02/2016 Alteração para apresentar o local de entrega customizado na SC1.
oReport:Say( (nLinLEnt+20), 1000, "Local de Entrega", oFont3N,,,, 0 )
//Wjr oReport:Say( (nLinLEnt+70), 0050, "Filial de Entrega : " + SM0->M0_NOMECOM, oFont3N,,,, 0 )
oReport:Say( (nLinLEnt+70), 0050, SC1->C1_XLOCENT, oFont3N,,,, 0 )

//Wjr If Empty(MV_PAR13) //"Local de Entrega  : "
//Wjr 	oReport:Say( (nLinLEnt+100), 0050, (STR0008 + AllTRim(SM0->M0_ENDENT) + "  " + Rtrim( SM0->M0_CIDENT ) + "  - " + SM0->M0_ESTENT + " - " + STR0009 + " " + Transform( Alltrim( SM0->M0_CEPENT ), PesqPict( "SA2", "A2_CEP" ) ) ), oFont3N,,,, 0 )
//Wjr Else
//Wjr 	oReport:Say( (nLinLEnt+100), 0050, (STR0008 + mv_par13), oFont3N,,,, 0 )
//Wjr Endif

SM0->(dbGoto(nRecnoSM0))


Return()
                         

Static Function ASS01(nLinAss,cStatus)

Local lNoPrint := ( 'BLOQ'$cStatus .Or. 'RESIDUO'$cStatus )
Local nI
//solicitante/comprador
oReport:FillRect({(nLinAss+3), 0032, (nLinAss+070), 2380}, oBrush)
oReport:Box(   nLinAss, 0030, (nLinAss+070), 2380)
oReport:Say(  (nLinAss+010), 1000, "SOLICITANTE / COMPRADOR", oFont3N,,,, 0 )
oReport:Line(  nLinAss+1300     , nLinAss+3500, (nLinAss+420), nLinAss+3500 )

oReport:Say(  (nLinAss+090), 0050, "Solicitante : " + UsrFullName( SC1->C1_USER )                            , oFont3,,,, 0 )
oReport:Say(  (nLinAss+135), 0050, STR0052   + " "  + Substr( cComprador, 1, 60 )                             , oFont3,,,, 0 )//comprador responsavel

//assinatura eletronica
oReport:FillRect({(nLinAss+3+270/*300*/), 0032, (nLinAss+070+300), 2380}, oBrush)
oReport:Box(   nLinAss+270/*300*/, 0030, (nLinAss+420+600), 2380)
oReport:Say(  (nLinAss+010+270/*300*/), 1000, "ASSINATURA ELETRÔNICA"  , oFont3N,,,, 0 )

oReport:Line( nLinAss+1300 , nLinAss+3500, (nLinAss+420+200), nLinAss+3500 )

nCol := 60

nPulaLn := 0
If !lNoPrint
	For nI := 1 To Len(aAprov)
		If nCnt == 5
			nCnt := 0
			nPulaLn += 400
			nCol := 60
		EndIf
		
		If !Empty( aAprov[nI][2] ) .And. File(aAprov[1][2])
			//assinatura
			// Alteração - Peder Munksgaard (Do.it Sistemas) em 10/11/2014
			// Tamanho da assinatura conforme solicitação do usuário Leandro Almeida.
			//oReport:SayBitmap( (nLinAss+400+nPulaLn), nCol, aAprov[nI][2], 250, 180 )			
			oReport:SayBitmap( (nLinAss+400+nPulaLn), nCol, aAprov[nI][2], 375, 270 )
		EndIf
		
		//nome aprovador
		//A LINHA DE INICIO DO NOME DEVE SER A ALTURA DA IMAGEM + PULO DA LINHA + LINHA DA ASSINATURA + PULO DA LINHA
		// Alteração - Peder Munksgaard (Do.it Sistemas) em 10/11/2014
		// Tamanho da assinatura conforme solicitação do usuário Leandro Almeida.		
		//oReport:Say(  (200+420+nlinAss+nPulaLn), nCol, SubStr( aAprov[nI][1], 1, 28 ), oFont2,,,, 0 ) 
		oReport:Say(  (250+420+nlinAss+nPulaLn), nCol, SubStr( aAprov[nI][1], 1, 28 ), oFont2,,,, 0 ) 
		
		nCnt++
		nCol+=450
	Next nI
EndIf
Return()
