#Include 'Protheus.ch'

/*/
===============================================================================
Autor.............: Peder Munksgaard (Do.it Sistemas)
-------------------------------------------------------------------------------
Data..............: 25/07/2014
-------------------------------------------------------------------------------
Descrição.........: Função criada para exibição de todos os registros
pertinentes a um contrato através de um modelo2
-------------------------------------------------------------------------------
Alteração.........: (dd/mm/aaaa) - Motivo
-------------------------------------------------------------------------------
Partida...........: CTA100MNU()
-------------------------------------------------------------------------------
Função............: u_FMTA001()
===============================================================================
/*/
User Function FMTA001()

	Local _aArea := GetArea()
	Local _nOpcx := 2


	SetPrvt("aCols","aHeader")

	//+-----------------------------------------------+
	//¦ Montando aHeader para a Getdados              ¦
	//+-----------------------------------------------+

	aHeader := APBuildHeader("CN9")
	_nUsado := Len(aHeader)

	//+-----------------------------------------------+
	//¦ Montando aCols para a GetDados                ¦
	//+-----------------------------------------------+
	dbSelectArea("CN9")
	CN9->(dbClearFilter())

	aCols := u_montacols("CN9",_nUsado,_nOpcx,"CN9->(CN9_FILIAL+CN9_NUMERO)",CN9->(CN9_FILIAL+CN9_NUMERO))

	//+----------------------------------------------+
	//¦ Variaveis do Cabecalho do Modelo 2           ¦
	//+----------------------------------------------+

	_cContra := CN9->CN9_NUMERO

	//+----------------------------------------------+
	//¦ Variaveis do Rodape do Modelo 2              ¦
	//+----------------------------------------------+

	_nLinGetD:=0

	//+----------------------------------------------+
	//¦ Titulo da Janela                             ¦
	//+----------------------------------------------+

	_cTitulo:="Histórico de revisões do Contrato"

	//+----------------------------------------------+
	//¦ Array com descricao dos campos do Cabecalho  ¦
	//+----------------------------------------------+

	_aC:={}

	//+-------------------------------------------------+
	//¦ Array com descricao dos campos do Rodape        ¦
	//+-------------------------------------------------+

	_aR:={}

	//+------------------------------------------------+
	//¦ Array com coordenadas da GetDados no modelo2   ¦
	//+------------------------------------------------+

	#IFDEF WINDOWS    

	_aCGD:={44,5,118,315}

	#ELSE    

	_aCGD:={10,04,15,73}

	#ENDIF

	//+----------------------------------------------+
	//¦ Validacoes na GetDados da Modelo 2           ¦
	//+----------------------------------------------+

	_cLinhaOk := "AllwaysTrue()"
	_cTudoOk  := "AllwaysTrue()"

	//+----------------------------------------------+
	//¦ Chamada da Modelo2                           ¦
	//+----------------------------------------------+

	// _lRet = .t. se confirmou
	// _lRet = .f. se cancelou

	_lRet := Modelo2(_cTitulo,_aC,_aR,_aCGD,_nOpcx,_cLinhaOk,_cTudoOk)

	RestArea(_aArea)

Return NiL


/*/
===============================================================================
Autor.............: Peder Munksgaard (Do.it Sistemas)
-------------------------------------------------------------------------------
Data..............: 25/07/2014
-------------------------------------------------------------------------------
Descrição.........: Função auxiliar criada para montagem de um array utilizado
em sua grande maioria para enchoices.
-------------------------------------------------------------------------------
Alteração.........: (dd/mm/aaaa) - Motivo
-------------------------------------------------------------------------------
Partida...........: Qualquer função
-------------------------------------------------------------------------------
Função............: u_montacols(cAlias,nUsado, nOpc, cCpoChave, cChave)
===============================================================================
/*/
User Function MontaCols(cAlias,nUsado, nOpc, cCpoChave, cChave)

	Local aAreaAnt := GetArea()
	Local aAreaSX3 := SX3->(GetArea())
	Local aColsTmp := {}
	Local aColsAux := {}
	Local nX

	nUsado++

	//Monta o aCols em um array auxiliar
	aColsTmp := Array(1,nUsado)

	nUsado := 0

	dbSelectArea("SX3")
	dbSetorder(1)
	MsSeek(cAlias)

	While !Eof() .And. (X3_ARQUIVO == cAlias)

		If X3Uso(X3_USADO) .And. (cNivel >= X3_NIVEL)

			nUsado++
			aColsTmp[1,nUsado] := CriaVar(AllTrim(X3_CAMPO))

		EndIf

		dbSkip()
	End

	aColsTmp[1,nUsado+1] := .F.

	IF nOpc <> Nil

		IF nOpc <> 3

			dbSelectArea(cAlias)
			dbSetOrder(1)
			dbSeek(cChave)

			While ! &(cAlias)->(EOF()) .And. &(cCpoChave) == cChave

				Aadd(aColsAux,Array(Len(aHeader)+1))
				For nX := 1 to Len(aHeader)

					If aHeader[nX,10] <> "V"

						aColsAux[Len(aColsAux),nX] := &(cAlias+"->"+aHeader[nX,2])

					Else

						aColsAux[Len(aColsAux),nX] := CriaVar(AllTrim(aHeader[nX,2]))

					Endif

				Next nX

				aColsAux[Len(aColsAux),Len(aHeader)+1] := .F.
				&(cAlias)->(DBSkip())

			End

			IF Len(aColsAux) > 0

				aColsTmp := ACLONE(aColsAux)

			ENDIF

		ENDIF

	ENDIF

	RestArea(aAreaSX3)
	RestArea(aAreaAnt) //Retorna a area corrente

Return(aColsTmp)
