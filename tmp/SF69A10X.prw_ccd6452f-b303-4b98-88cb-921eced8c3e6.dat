#INCLUDE "protheus.ch"
#INCLUDE "apwebsrv.ch"

/* ===============================================================================
WSDL Location    https://ws1.soc.com.br/WSSoc/services/ExportaDadosWs?wsdl
Gerado em        03/30/20 00:04:54
Observações      Código-Fonte gerado por ADVPL WSDL Client 1.120703
                 Alterações neste arquivo podem causar funcionamento incorreto
                 e serão perdidas caso o código-fonte seja gerado novamente.
=============================================================================== */

User Function _LQPHSDV ; Return  // "dummy" function - Internal Use 

/* -------------------------------------------------------------------------------
WSDL Service WSExportaDadosWsService
Serviço Exportadados Resultado Exames VIVA+ SMAIS
 ------------------------------------------------------------------------------- */

WSCLIENT WSExportaDadosWsService

	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD RESET
	WSMETHOD CLONE
	WSMETHOD exportaDadosWs
	WSMETHOD exportaDados2

	WSDATA   _URL                      AS String
	WSDATA   _CERT                     AS String
	WSDATA   _PRIVKEY                  AS String
	WSDATA   _PASSPHRASE               AS String
	WSDATA   _HEADOUT                  AS Array of String
	WSDATA   _COOKIES                  AS Array of String
	WSDATA   oWSarg0                   AS ExportaDadosWsService_exportaDadosWsVo
	WSDATA   oWSexportaDadosWsVo       AS ExportaDadosWsService_exportaDadosWsVo

ENDWSCLIENT

WSMETHOD NEW WSCLIENT WSExportaDadosWsService
::Init()
If !FindFunction("XMLCHILDEX")
	UserException("O Código-Fonte Client atual requer os executáveis do Protheus Build [7.00.131227A-20190114 NG] ou superior. Atualize o Protheus ou gere o Código-Fonte novamente utilizando o Build atual.")
EndIf
Return Self

WSMETHOD INIT WSCLIENT WSExportaDadosWsService
	::oWSarg0            := ExportaDadosWsService_EXPORTADADOSWSVO():New()
	::oWSexportaDadosWsVo := ExportaDadosWsService_EXPORTADADOSWSVO():New()
Return

WSMETHOD RESET WSCLIENT WSExportaDadosWsService
	::oWSarg0            := NIL 
	::oWSexportaDadosWsVo := NIL 
	::Init()
Return

WSMETHOD CLONE WSCLIENT WSExportaDadosWsService
Local oClone := WSExportaDadosWsService():New()
	oClone:_URL          := ::_URL 
	oClone:_CERT         := ::_CERT 
	oClone:_PRIVKEY      := ::_PRIVKEY 
	oClone:_PASSPHRASE   := ::_PASSPHRASE 
	oClone:oWSarg0       :=  IIF(::oWSarg0 = NIL , NIL ,::oWSarg0:Clone() )
	oClone:oWSexportaDadosWsVo :=  IIF(::oWSexportaDadosWsVo = NIL , NIL ,::oWSexportaDadosWsVo:Clone() )
Return oClone

// WSDL Method exportaDadosWs of Service WSExportaDadosWsService

WSMETHOD exportaDadosWs WSSEND oWSarg0 WSRECEIVE oWSexportaDadosWsVo WSCLIENT WSExportaDadosWsService
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

//cSoap += '<exportaDadosWs xmlns="http://services.soc.age.com/">'
//cSoap += WSSoapValue("arg0", ::oWSarg0, oWSarg0 , "exportaDadosWsVo", .F. , .F., 0 , NIL, .F.,.F.) 
//cSoap += "</exportaDadosWs>"

cSoap += '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.soc.age.com/">'
cSoap += '   <soapenv:Header/>'
cSoap += '   <soapenv:Body>'
cSoap += '      <ser:exportaDadosWs>'
cSoap += WSSoapValue("arg0", ::oWSarg0, oWSarg0 , "exportaDadosWsVo", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += '      </ser:exportaDadosWs>'
cSoap += '   </soapenv:Body>'
cSoap += '</soapenv:Envelope>'
       
oXmlRet := SvcSoapCall(Self,cSoap,; 
	"",; 
	"DOCUMENT","http://services.soc.age.com/",,,; 
	"https://ws1.soc.com.br/WSSoc/services/ExportaDadosWs")

::Init()
::oWSexportaDadosWsVo:SoapRecv( WSAdvValue( oXmlRet,"_NS2_EXPORTADADOSWSRESPONSE:_RETURN","exportaDadosWsVo",NIL,NIL,NIL,NIL,NIL,"xs") )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Method exportaDadosWs of Service WSExportaDadosWsService

WSMETHOD exportaDados2 WSSEND oWSarg0 WSRECEIVE oWSexportaDadosWsVo WSCLIENT WSExportaDadosWsService
Local cSoap := "" , oXmlRet

BEGIN WSMETHOD

cSoap += '<exportaDadosWs xmlns="http://services.soc.age.com/">'
cSoap += WSSoapValue("arg0", ::oWSarg0, oWSarg0 , "exportaDadosWsVo", .F. , .F., 0 , NIL, .F.,.F.) 
cSoap += "</exportaDadosWs>"

oXmlRet := SvcSoapCall(Self,cSoap,; 
	"",; 
	"DOCUMENT","http://services.soc.age.com/",,,; 
	"https://ws1.soc.com.br/WSSoc/services/ExportaDadosWs")

::Init()
::oWSexportaDadosWsVo:SoapRecv( WSAdvValue( oXmlRet,"_EXPORTADADOSWSRESPONSE:_RETURN","exportaDadosWsVo",NIL,NIL,NIL,NIL,NIL,"xs") )

END WSMETHOD

oXmlRet := NIL
Return .T.

// WSDL Data Structure exportaDadosWsVo

WSSTRUCT ExportaDadosWsService_exportaDadosWsVo
	WSDATA   carquivo                  AS base64Binary OPTIONAL
	WSDATA   ccampoLivre1              AS string OPTIONAL
	WSDATA   ccampoLivre2              AS string OPTIONAL
	WSDATA   ccampoLivre3              AS string OPTIONAL
	WSDATA   ccampoLivre4              AS string OPTIONAL
	WSDATA   ccampoLivre5              AS string OPTIONAL
	WSDATA   lerro                     AS boolean OPTIONAL
	WSDATA   cmensagemErro             AS string OPTIONAL
	WSDATA   cparametros               AS string OPTIONAL
	WSDATA   cretorno                  AS string OPTIONAL
	WSDATA   ctipoArquivoRetorno       AS string OPTIONAL
	WSMETHOD NEW
	WSMETHOD INIT
	WSMETHOD CLONE
	WSMETHOD SOAPSEND
	WSMETHOD SOAPRECV
ENDWSSTRUCT

WSMETHOD NEW WSCLIENT ExportaDadosWsService_exportaDadosWsVo
	::Init()
Return Self

WSMETHOD INIT WSCLIENT ExportaDadosWsService_exportaDadosWsVo
Return

WSMETHOD CLONE WSCLIENT ExportaDadosWsService_exportaDadosWsVo
	Local oClone := ExportaDadosWsService_exportaDadosWsVo():NEW()
	oClone:carquivo             := ::carquivo
	oClone:ccampoLivre1         := ::ccampoLivre1
	oClone:ccampoLivre2         := ::ccampoLivre2
	oClone:ccampoLivre3         := ::ccampoLivre3
	oClone:ccampoLivre4         := ::ccampoLivre4
	oClone:ccampoLivre5         := ::ccampoLivre5
	oClone:lerro                := ::lerro
	oClone:cmensagemErro        := ::cmensagemErro
	oClone:cparametros          := ::cparametros
	oClone:cretorno             := ::cretorno
	oClone:ctipoArquivoRetorno  := ::ctipoArquivoRetorno
Return oClone

WSMETHOD SOAPSEND WSCLIENT ExportaDadosWsService_exportaDadosWsVo
	Local cSoap := ""
	cSoap += WSSoapValue("arquivo", ::carquivo, ::carquivo , "base64Binary", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("campoLivre1", ::ccampoLivre1, ::ccampoLivre1 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("campoLivre2", ::ccampoLivre2, ::ccampoLivre2 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("campoLivre3", ::ccampoLivre3, ::ccampoLivre3 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("campoLivre4", ::ccampoLivre4, ::ccampoLivre4 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("campoLivre5", ::ccampoLivre5, ::ccampoLivre5 , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("erro", ::lerro, ::lerro , "boolean", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("mensagemErro", ::cmensagemErro, ::cmensagemErro , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cTranRet := StrTran( WSSoapValue("parametros", ::cparametros, ::cparametros , "string", .F. , .F., 0 , NIL, .F.,.F.), '&quot;', '"' )
	cSoap += cTranRet 
	cSoap += WSSoapValue("retorno", ::cretorno, ::cretorno , "string", .F. , .F., 0 , NIL, .F.,.F.) 
	cSoap += WSSoapValue("tipoArquivoRetorno", ::ctipoArquivoRetorno, ::ctipoArquivoRetorno , "string", .F. , .F., 0 , NIL, .F.,.F.) 
Return cSoap

WSMETHOD SOAPRECV WSSEND oResponse WSCLIENT ExportaDadosWsService_exportaDadosWsVo
	::Init()
	If oResponse = NIL ; Return ; Endif 
	::carquivo           :=  WSAdvValue( oResponse,"_ARQUIVO","base64Binary",NIL,NIL,NIL,"SB",NIL,"xs") 
	::ccampoLivre1       :=  WSAdvValue( oResponse,"_CAMPOLIVRE1","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::ccampoLivre2       :=  WSAdvValue( oResponse,"_CAMPOLIVRE2","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::ccampoLivre3       :=  WSAdvValue( oResponse,"_CAMPOLIVRE3","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::ccampoLivre4       :=  WSAdvValue( oResponse,"_CAMPOLIVRE4","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::ccampoLivre5       :=  WSAdvValue( oResponse,"_CAMPOLIVRE5","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::lerro              :=  WSAdvValue( oResponse,"_ERRO","boolean",NIL,NIL,NIL,"L",NIL,"xs") 
	::cmensagemErro      :=  WSAdvValue( oResponse,"_MENSAGEMERRO","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::cparametros        :=  WSAdvValue( oResponse,"_PARAMETROS","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::cretorno           :=  WSAdvValue( oResponse,"_RETORNO","string",NIL,NIL,NIL,"S",NIL,"xs") 
	::ctipoArquivoRetorno :=  WSAdvValue( oResponse,"_TIPOARQUIVORETORNO","string",NIL,NIL,NIL,"S",NIL,"xs") 
Return


