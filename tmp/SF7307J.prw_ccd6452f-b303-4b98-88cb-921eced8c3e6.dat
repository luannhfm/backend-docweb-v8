#INCLUDE "PROTHEUS.CH"
#INCLUDE 'FWMVCDEF.CH'

/*/{Protheus.doc} SF7307J
Cadastro de Diagnosticos - SENAI - IST

@author 	Jose Leite de Barros Neto
@since 		04/05/2017
@version 	1.0

@return 	Nil, Nulo
/*/
User Function SF7307J()
	
	Local oBrowse	:= Nil
	
	Private aRotina	:= MenuDef()
	
	//Cria o Browse
	oBrowse := FWMBrowse():New()
	oBrowse:SetAlias('ZCL')
	oBrowse:AddLegend( "ZCL_STATUS == 'S' ", "GREEN"	, "Aplicado" )
	oBrowse:AddLegend( "ZCL_STATUS == 'N' ", "RED"		, "Não Aplicado" )
	oBrowse:SetDescription('Cadastro de Diagnosticos')
	
	oBrowse:Activate()
	
Return( Nil )


/** {Protheus.doc} MenuDef
Funcao de definicao do Menu

@author: 	Jose Leite de Barros Neto
@since: 	04/05/2017
@Uso: 		SFIEMT
*/
Static Function MenuDef()
	
	Local _aRotina := {}
	
	ADD OPTION _aRotina TITLE "Pesquisar"		ACTION "PESQBRW"        	OPERATION 1 ACCESS 0
	ADD OPTION _aRotina TITLE "Visualizar"		ACTION "VIEWDEF.SF7307J" 	OPERATION 2 ACCESS 0
	ADD OPTION _aRotina TITLE "Incluir"  		ACTION "VIEWDEF.SF7307J" 	OPERATION 3 ACCESS 0
	ADD OPTION _aRotina TITLE "Alterar"			ACTION "VIEWDEF.SF7307J" 	OPERATION 4 ACCESS 0
	ADD OPTION _aRotina TITLE "Excluir"   		ACTION "VIEWDEF.SF7307J" 	OPERATION 5 ACCESS 0
	ADD OPTION _aRotina TITLE "Imprimir"		ACTION "VIEWDEF.SF7307J" 	OPERATION 8 ACCESS 0  
	ADD OPTION _aRotina TITLE "Copiar"			ACTION "VIEWDEF.SF7307J" 	OPERATION 9 ACCESS 0

Return( _aRotina )


/** {Protheus.doc} ModelDef
Define o modelo de dados do contato

@author: 	Jose Leite de Barros Neto
@since: 	04/05/2017
@Uso: 		SFIEMT
*/
Static Function ModelDef()
	
	Local oModel
	Local oStruZCL	:= FWFormStruct(1,'ZCL',/*bAvalCampo*/,/*lViewUsado*/)

	oModel := MPFormModel():New('SF7307JM',/*bPreValidacao*/,/*bPosValidacao*/,/*bCommit*/,/*bCancel*/)
	oModel:AddFields('ZCLMASTER', /*cOwner*/,oStruZCL, /*bPreValidacao*/, /*bPosValidacao*/, /*bCarga*/ )
	oModel:SetDescription('Cadastro de Diagnosticos')
	
	oModel:SetPrimaryKey( { "ZCL_FILIAL", "ZCL_CODIGO", "ZCL_DESCR" } )
	
Return( oModel )


/** {Protheus.doc} ViewDef
Define a interface para cadastro de contato em MVC.

@author: 	Jose Leite de Barros Neto
@since: 	04/05/2017
@Uso: 		SFIEMT
*/
Static Function ViewDef()
	
	Local oView
	Local oModel   := FWLoadModel('SF7307J')
	Local oStruZCL := FWFormStruct(2,'ZCL')
	
	//Cria o Objeto da View
	oView := FWFormView():New()

	//Define qual o Modelo de dados será utilizado
	oView:SetModel( oModel )

	//Adiciona no View um controle do tipo FormField (Antiga Enchoice)
	oView:AddField( 'VIEW_ZCL',oStruZCL, 'ZCLMASTER' )

	//Cria um BOX horizontal para receber elementos da View
	oView:CreateHorizontalBox('TELA' , 100 )

	//Relaciona o ID da View com o Box para exibição
	oView:SetOwnerView( 'VIEW_ZCL' , 'TELA' )
	
Return( oView )

User Function SF7307JM()
	
	Local aParam  	:= PARAMIXB
	Local aButtons 	:= {}
	Local cIdModel	:= ''
	Local cIdPonto	:= ''
	Local nOper     := 0
	Local oObj		:= Nil
	Local oMdZCL 	:= Nil
	Local xRet		:= .T.

	If aParam <> NIL
		oObj     := aParam[1]
		cIdPonto := aParam[2]
		cIdModel := aParam[3]
		oMdZCL := oObj:GetModel('ZCLMASTER')
		nOper := oMdZCL:GetOperation()
	EndIf

	Do Case
		Case cIdPonto == "MODELPOS"				//Na validacao total do modelo
			xRet := .T.
		Case cIdPonto == "FORMPOS"				//Na validação total do formulário
			xRet := .T.
		Case cIdPonto == "FORMLINEPRE"			//Antes da alteração da linha do formulário FWFORMGRID
			xRet := .T.
		Case cIdPonto == "FORMLINEPOS"			//Na validação total da linha do formulario FWFORMGRID
			xRet := .T.
		Case cIdPonto == "MODELCOMMITTTS"		//Após a gravação total do modelo e dentro da transacao
			xRet := Nil
		Case cIdPonto == "MODELCOMMITNTTS"		//Após a gravação total do modelo e fora da gravação
			xRet := Nil
		Case cIdPonto == "FORMCOMMITTTSPRE"		//Antes da gravação da tabela do formulário
			xRet := .T.
		Case cIdPonto == "FORMCOMMITTTSPOS"		//Após a gravação da tabela do formulário
			xRet := Nil
		Case cIdPonto == "MODELCANCEL"			//Na ação do botão Cancelar
			xRet := .T.
		Case cIdPonto == "MODELVLDACTIVE"		//Na ativação do modelo
			If nOper == 5 .And. ZCL->ZCL_STATUS == 'S'  
				Help(, , 'Help',  , 'Diagnóstico já utilizado, Não é permitido a Exclusão!', 1, 0)
				xRet := .F.
			Else
				xRet := .T.
			EndIf
		Case cIdPonto == "MODELPRE"				//Antes da alteracao de qualquer campo
			xRet := .T.
		Case cIdPonto == "FORMPRE"				//Antes da alteracao de qualquer campo de formulário
			xRet := .T.
		Case cIdPonto == "FORMCANCEL"			//No cancelamento do botão
			xRet := .T.
		Case cIdPonto == "BUTTONBAR"			//Para inclusão de botões na ControlBar
			xRet := aButtons
	EndCase

Return xRet