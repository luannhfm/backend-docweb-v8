#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"  
#INCLUDE "PARMTYPE.CH"     
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH" 
/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<SN0614X>                                                   |
|Rotinas para Leitura do Arquivo de Retorno de Pre Cadastro                |
|                                                                          |
|    ATENCAO:                                                              |
|    --------                                                              |
|    Para utilizar a faciliade verifique o criacao e declaracao do         |
|    parametro: Layout de Pre-Cadastro - Retorno                           |
|    MV_XRETCAD	:= "\Pronatec\Layouts\PreCad\Retorno\"                     |
|                                                                          |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<001>                                                             |
|@return<Nil>,<Nil>                                                        |
|                                                                          |
|@parameters<Nil>                                                          |
|@return<Nil>                                                              |
+--------------------------------------------------------------------------+
|Uso        |SENAI										     			   |
+-----------+--------------------------------------------------------------+
*/
User Function SN0614X()
Local _cAlias  		:= "ZP1"
Local _cTitle  		:= "Leitura do Retorno de Pré Cadastro"
Local _oBrowse 		:= FWMBrowse():New()
Private aRotina 	:= MenuDef() 
_oBrowse:SetAlias(_cAlias)
_oBrowse:SetFilterDefault("ZP1_XPRECA=='S' .and. ZP1_XSTATU = 'A'") 
_oBrowse:SetDescription(_cTitle)
_oBrowse:Activate()   
Return NIL

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Definicao do MenuDef                                                      |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@return                                                                   |
|<   _aRotina (a) - Vetor com as opcoes de Menu                            |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function MenuDef()
Local _aRotina := {}
ADD OPTION _aRotina TITLE "Pesquisar"  	ACTION "PESQBRW"       		OPERATION 1 ACCESS 0
ADD OPTION _aRotina TITLE "Manutenção" 	ACTION "VIEWDEF.SN0614X" 	OPERATION 4 ACCESS 0
ADD OPTION _aRotina TITLE "Imprimir"   	ACTION "VIEWDEF.SN0614X"	OPERATION 8 ACCESS 0
Return _aRotina

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Definicao do ModelDef                                                     |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@return                                                                   |
|<   _oModel (o) - Objeto com a Definicao do Modelo                        |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function ModelDef()
Local _oStruZP1 := FWFormStruct(1,"ZP1")
Local _oStruZP3 := FWFormStruct(1,"ZP3")  
//-- ********************************************************************
//--   New("SN06611XX"), refere-se ao nome do Ponto de Entrada PADRAO
//-- ********************************************************************
Local _oModel   := MPFormModel():New("SN0614XX")
_oModel:AddFields("ZP1MASTER", /*cOwner*/,_oStruZP1)
_oModel:AddGrid("ZP3DETAIL","ZP1MASTER",_oStruZP3)
_oModel:SetPrimaryKey({"ZP1_FILIAL","ZP1_XCONV"})
_oModel:SetRelation("ZP3DETAIL", {{"ZP3_FILIAL", "FwxFilial('ZP3')"},{"ZP3_XCONVE","ZP1_XCONV"},{"ZP3_XSTATU","'E'"}},ZP3->(IndexKey(2)))
_oModel:SetDescription("Leitura do Retorno de Pré Cadastro")
//-- Defini o Modelo como nao Editavel
_oModel:GetModel("ZP1MASTER"):SetDescription("Convênios")
//-- Defini o Modelo como nao Editavel
_oModel:GetModel("ZP3DETAIL"):SetDescription("Conveniados")
_oModel:GetModel("ZP3DETAIL"):SetNoInsertLine(.T.)
_oModel:GetModel("ZP3DETAIL"):SetNoDeleteLine(.T.)
_oModel:GetModel("ZP3DETAIL"):SetOnlyQuery(.T.)    			//-- Indica que o model e somente para consulta
Return _oModel


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<MenuDef>                                                   |
|Definicao do ViewDef                                                      |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@parameters:                                                              |
|@return                                                                   |
|<   _oView (o) - Objeto com a Definicao do Visao do Modelo                |
|>                                                                         |
+-----------+--------------------------------------------------------------+
|Uso        |FIEMT - FederaCAO das Industrias no Estado de Mato Grosso     |
+-----------+--------------------------------------------------------------+
*/
Static Function ViewDef()
Local _oStruZP1 := FWFormStruct(2,"ZP1")
Local _oStruZP3 := FWFormStruct(2,"ZP3",/*{|_cFild| xDefFilds(_cFild)}*/)
Local _oModel   := FWLoadModel("SN0614X")           	
Local _oView    := FWFormView():New()
//-- Define Visao do Convenios          
_oView:SetModel(_oModel)
_oView:AddField("VIEW_ZP1",_oStruZP1,"ZP1MASTER")
_oView:CreateHorizontalBox("SUPERIOR",60)
_oView:SetOwnerView("VIEW_ZP1","SUPERIOR")
_oView:EnableTitleView("VIEW_ZP1")
//-- Defini visao dos Beneficiarios para Pre Cadastro
_oView:AddGrid("VIEW_ZP3",_oStruZP3,"ZP3DETAIL")
_oView:CreateHorizontalBox("INFERIOR",40)
_oView:SetOwnerView("VIEW_ZP3","INFERIOR")
_oView:EnableTitleView("VIEW_ZP3")    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³  Inclui um Botao no formulario.                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_oView:AddUserButton("Lêr Arquivo",'CLIPS',{|_oView| fLerRet(_oModel) } ) 
Return _oView

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fLerRet>                                                   |
|Rotina Responsavel pela chamadas as rotinas que Le o arquivo de           |
|Retorno e que, Modifica o FLAG dos Conveniados enviado na remessa.        |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|>                                                                         |
|@return<Nil>                                                              |
|<   _lRetOK (l) - (.t.) Se a Leitura do Arquivo de Retorno foi OK         |
|                  (.f.) Por qualquer motivo não Leu arquivo de Retorno    |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fLerRet(_oModel)
Private _lRetOK		:= .t.
Private _aColsHea	:= {}
Private _aColsDet	:= {}
Private _aColsTra	:= {}      
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Implementa controle de Transacao.                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Begin Transaction
	//-- Le o Arquivo de Retorno
	Processa( {|| fLerArq(_oModel) }, "Lêr Arq. de Retorno", "Processando...")
	If _lRetOK
		Processa( {|| fAtuGri(_oModel,_aColsDet) }, "Atualiza Grid", "Processando...")
	Endif
	If _lRetOK
		//-- Modifica o Status dos Registros enviado na remessa 
		Processa( {|| fPreRet(_oModel,_aColsDet) }, "Processar Retorno", "Processando...")
	Endif
End Transaction
Return _lRetOK

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fLerArq>                                                   |
|Rotina Responsavel por Ler o arquivo de Retorno conforme configuracao     |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|>                                                                         |
|@return<Nil>                                                              |
|<   _lRetOK (l) - (.t.) Se a Geracao do Arquivo foi OK                    |
|                  (.f.) Por qualquer motivo não gerou arquivo de remesa   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fLerArq(_oModel)
Local _cArqRet 		:= ""
Local _cArLayout	:= _oModel:GetValue("ZP1MASTER","ZP1_XPRRET")    
Local _cConven		:= _oModel:GetValue("ZP1MASTER","ZP1_XCONV")
Local _cPathRoot	:= GetNewPar("MV_XRETCAD","\Pronatec\Layouts\PreCad\Retorno\")   
Local _aArqLyt 		:= {} 
Local _aHeader 		:= {}
Local _aDetalhe 	:= {}
Local _aTrailler	:= {}
Local _aFilds		:= {}
Local _nH_Arq		:= 0
Local _cFileLog		:= ""
Local _nRegs		:= 0
Local _nCtaREG		:= 0        
Local _nPosH		:= 0
Local _nPosD		:= 0
Local _nPosT		:= 0
Local _bBlock		:= "" 
Local _cTpReg   	:= "" 
Local _lHeader		:= .f.
Local _lDetalhe		:= .f.
Local _lTrailler	:= .f. 
Local _lE_Header	:= .f.
Local _lE_Traill	:= .f.
Local _lE_Detalh	:= .f.
Local _cString 		:= ""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validacoes antes da chamada da rotina de geracao do arquivo de Remesa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Alltrim(_cArLayout) == ""
	Aviso(FunName()+"/"+ProcName(),"Não foi informado neste Convênio o nome do Arquivo de Configuração do Arquivo de Retorno!",{"OK"})
	_lRetOK := .f.
Endif
If _lRetOK
	_cArqRet := cGetFile('Arquivo |*.*','Lêr Arquivo',1,'C:\TEMP',.F.,GETF_LOCALHARD)
	If _cArqRet == ""
		Aviso(FunName()+"/"+ProcName(),"Nome do Arquivo de Retorno não Foi Informado!",{"OK"})
		_lRetOK := .f.
	Endif  
Endif  
If _lRetOK
	If !File(_cPathRoot+Alltrim(_cArLayout))
		Aviso(FunName()+"/"+ProcName(),"Arquivo de Layout: "+_cPathRoot+Alltrim(_cArLayout)+". não foi encontrado!",{"OK"})
		_lRetOK := .f.
	EndIf
EndIf     
If _lRetOK
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega o Layout do Arquivo de Retorno                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_aArqLyt := u_fCrArqIn(_cPathRoot+Alltrim(_cArLayout))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Identifica os Arrays de Header, Detalhe e Trailler                    ³
	//³ OBS: Caso venha a existir tipo de arquivos com mais de uma linha por  ³
	//³      tipo; Tratar caso a caso. Deve-se adicionar ao array do tipo e   ³
	//³      tratar na seguencia.                                             ³
	//³      - Inicialmente estamos considerando um de cada tipo.             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
	_nCtaA	:= 0
	For _nCtaA := 1 To Len(_aArqLyt) 
		_cLinTP := Substr(_aArqLyt[_nCtaA,1],2,1)
		Do Case
			Case _cLinTP == "H"   	//-- Header
				_aHeader 	:= _aArqLyt[_nCtaA,4]
				_lHeader	:= .t.
			Case _cLinTP == "D"   	//-- Detalhe
				_aDetalhe 	:= _aArqLyt[_nCtaA,4]
				_lDetalhe	:= .t.
			Case _cLinTP == "T" 	//-- Trailler
				_aTrailler	:= _aArqLyt[_nCtaA,4]   
				_lTrailler	:= .t.
		Endcase
	Next _nCtaA
Endif 	 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Abre o arquivo de RETORNO com acesso exclusivo                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_nH_Arq	:= fOpen(_cArqRet,68) 
If _nH_Arq = -1
	Aviso(FunName()+"/"+ProcName(),"Não foi Possivel Abrir o Arquivo de Retorno!",{"OK"})
	_lRetOK := .f.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Trata caso a caso os Layout's da Remessa                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If _lRetOK .and. Len(_aDetalhe) >= 1
	//-- Seleciona tabela de Alunos 	
	dbSelectArea("ZP0")
	ZP0->(dbSetOrder(1))			//-- CPF 
	//-- Seleciona Tabela de Convenios (Posiciona convencio corrente) 
	dbSelectArea("ZP1")
	ZP1->(dbSetOrder(1))			//-- Convenio 
 	ZP1->(dbSeek(FwxFilial("ZP1")+_cConven))
	//-- Seleciona e posiciona a Tabela de Conveniados 	
	dbSelectArea("ZP3")
	ZP3->(dbSetOrder(2))		//-- Convenio + Situacao 
 	ZP3->(dbSeek(FwxFilial("ZP3")+_cConven+"L"))
	//-- Seleciona o Arquivo TXT       
	FT_FUse(_cArqRet)
	//-- Manda o Ponteiro para topo 
	FT_FGOTOP()
	//-- Conta o Numero de Linhas 	
	_nTotLIN := FT_FLASTREC()
	//-- Inicializa o Termometro 	
	ProcRegua(_nTotLIN)
	//-- Loop de Leitura 	
	Do While !FT_FEof()
        //-- Captura a linha a ser lida 
		_cTexto := Upper(AllTrim(FT_FReadln()))
		//-- Implementa Termometro
		_nCtaREG++
		IncProc("Total de Registros:"+Alltrim(Transform(_nTotLIN,"@E 999,999,999"))+"|  Lidos:"+Alltrim(Transform(_nCtaREG,"@E 999,999,999")))   
		//-- Regras para definir se a linha e de Cabecalho, Detalhe ou Rodape	
		_lE_Header := Iif(_lHeader,Iif(_nCtaREG==1,.t.,.f.),.f.)
		_lE_Traill := Iif(_lTrailler,Iif(_nCtaREG==_nTotLIN,.t.,.f.),.f.)
		_lE_Detalh := Iif(_lDetalhe,Iif((!_lE_Header .and. !_lE_Traill),.t.,.f.),.f.)
		do Case
			Case _lRetOK .and. _lE_Header
			  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ ***** LER CABECALHO "Header"                                          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			 	//--     
				_aStruc	:= {}
				_aFilds	:= {} 
				_nCtaA 	:= 0   
				For _nCtaA := 1 To Len(_aHeader)    
				  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ ***** LER CABECALHO "Header"                                          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//-- *********************************************************************
					//--   A T E N C A O:  Nao remover a redundacia. 
					//--   A RENDUNDANCIA na escrita das Linhas abaixo E proposital. 
					//--   Inesplicavelmente [ _aStruc ] so assume o valor da Macro 
					//--   Substituicao &(), apos a segunda passada e NAO ADIANTA SUBSTITUIR 
					//--   POR EVAL(), tentamos isso tambem. 
					//-- *********************************************************************
					_aStruc		:= &(_aHeader[_nCtaA,2])
					_aStruc		:= &(_aHeader[_nCtaA,2]) 
					aadd(_aFilds, Substr(_cTexto,_aStruc[4],_aStruc[6]) )
				Next _nCtaA
				aadd(_aColsHea,_aFilds)   
				//-- *********************************************************************
                //--    Considera a ultima linha, caso Header tenha mais de uma linha 
				//-- *********************************************************************
				_nPosH	:= Len(_aColsHea)
				//-- Valida a Empresa do Arquivo de Retorno 
				If Alltrim(_aColsHea[_nPosH,1]) != Alltrim(SM0->M0_CGC)
					Aviso(FunName()+"/"+ProcName(),"O Arquivo de retorno não pertence a empresa Corrente!",{"OK"})
					_lRetOK := .f.
					Exit
				Endif 
				//-- Valida o Contrato/Convenio 
				If PadR(_aColsHea[_nPosH,2],TamSX3("ZP1_XCONTR")[1]) != ZP1->ZP1_XCONTR
					Aviso(FunName()+"/"+ProcName(),"O Arquivo de retorno não é deste Contrato/Convênio!",{"OK"})
					_lRetOK := .f.
					Exit
				Endif				
			Case _lRetOK .and. _lE_Detalh
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ ***** LER DETALHE "Detalhe"                                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			 	//--     
				_aStruc	:= {}
				_aFilds	:= {} 
				_nCtaA 	:= 0 
				For _nCtaA := 1 To Len(_aDetalhe)    
				  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				    //³ ***** LER DETALHE "Detalhe"                                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//-- *********************************************************************
					//--   A T E N C A O:  Nao remover a redundacia. 
					//--   A RENDUNDANCIA na escrita das Linhas abaixo E proposital. 
					//--   Inesplicavelmente [ _aStruc ] so assume o valor da Macro 
					//--   Substituicao &(), apos a segunda passada e NAO ADIANTA SUBSTITUIR 
					//--   POR EVAL(), tentamos isso tambem. 
					//-- *********************************************************************
					_aStruc		:= &(_aDetalhe[_nCtaA,2])
					_aStruc		:= &(_aDetalhe[_nCtaA,2]) 
					aadd(_aFilds, Substr(_cTexto,_aStruc[4],_aStruc[6]) )
				Next _nCtaA
				aadd(_aColsDet,_aFilds) 
				//-- *********************************************************************
                //--    Considera a ultima linha, para Tratamento Linha a linha lida
				//-- *********************************************************************
				_nPosD	:= Len(_aColsDet)
				//-------- Incluir Tratamento.
			Case _lRetOK .and. _lE_Traill
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ ***** LER RODAPE "Trailler"                                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			 	//-- 
				_aStruc	:= {}
				_aFilds	:= {} 
				_nCtaA	:= 0 
				For _nCtaA := 1 To Len(_aTrailler)    
				  	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				    //³ ***** LER RODAPE "Trailler"                                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//-- *********************************************************************
					//--   A T E N C A O:  Nao remover a redundacia. 
					//--   A RENDUNDANCIA na escrita das Linhas abaixo E proposital. 
					//--   Inesplicavelmente [ _aStruc ] so assume o valor da Macro 
					//--   Substituicao &(), apos a segunda passada e NAO ADIANTA SUBSTITUIR 
					//--   POR EVAL(), tentamos isso tambem. 
					//-- *********************************************************************
					_aStruc		:= &(_aTrailler[_nCtaA,2])
					_aStruc		:= &(_aTrailler[_nCtaA,2]) 
					aadd(_aFilds, Substr(_cTexto,_aStruc[4],_aStruc[6]) )
				Next _nCtaA
				aadd(_aColsTra,_aFilds)  
				//-- *********************************************************************
                //--    Considera a ultima linha, caso TRAILLER tenha mais de uma linha 
				//-- *********************************************************************
				_nPosT	:= Len(_aColsTra)
		Endcase
		//-- Segue para Proxima Linha 
		FT_FSkip()
	EndDo
	If !_lRetOK
		Aviso(FunName()+"/"+ProcName(),"Não existem Conveniados aptos para remessa!",{"OK"})
	Endif 
Endif 
fClose(_nH_Arq) 	
Return _lRetOK


/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fPreRet>                                                   |
|Atualiza a Grid de Matriculas para Verificacao do operador, Gera o Log de |
| Retorno de Pre Cadasto												   |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<25/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|   _aRetorn (a) - Array com as informacoes relativas ao Retorno.          |
|>                                                                         |
|@return<Nil>                                                              |
|<   Nil                                                                   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fAtuGri(_oModel,_aColsDet)
Local _aArea		:= GetArea()
Local _aSavLins  	:= FWSaveRows() 
Local _cConven		:= _oModel:GetValue("ZP1MASTER","ZP1_XCONV")
Local _oMdlZP3		:= _oModel:GetModel("ZP3DETAIL")	   	//-- Matriculas
Local _aHearZP3 	:= _oMdlZP3:aHeader
Local _aColsZP3		:= _oMdlZP3:aCols  
Local _nPosN		:= _oMdlZP3:NLine					//-- Posicao do Ponteiro na Sessao 
Local _nPosCP		:= aScan(_aHearZP3,{|X| UPPER(AllTrim(X[2]))=="ZP3_XCPF"})
Local _nPosCV		:= aScan(_aHearZP3,{|X| UPPER(AllTrim(X[2]))=="ZP3_XCONVE"}) 
Local _nPLIN		:= 0
Local _nRegs		:= Len(_aColsDet)  
Local _cCpf			:= ""
Local _cConvenio	:= ""
Local _nCtaA 		:= 0
Local _nOperMOD 	:= _oModel:NOPERATION   
Local _nNotFoud		:= 0
Local _nRegister	:= 0
Local _nNotRegis	:= 0 
Local _nNotFound	:= 0  
Local _cTextLOG		:= ""
ProcRegua(_nRegs)
_nCtaA := 0            
For _nCtaA := 1 To Len(_aColsDet)
	IncProc("Total de Registros:"+Alltrim(Transform(_nRegs,"@E 999,999,999"))+"|  Lidos:"+Alltrim(Transform(_nCtaA,"@E 999,999,999")))   
	_nPLIN := aScan(_oMdlZP3:aCols, {|X| X[_nPosCP]+X[_nPosCV] == PadR(_aColsDet[_nCtaA,3],TamSX3("ZP3_XCPF")[1])+_cConven})
    If _nPLIN > 0 
		If .t.    //-- Ver condicao do retorno de Cadastraro
			_oMdlZP3:GoLine(_nPLIN)
			_oMdlZP3:SetValue("ZP3_XSTATU"	, "C" )
			_oMdlZP3:SetValue("ZP3_XHISTR"	, "Retorno Lido" )
		Else
			_oMdlZP3:GoLine(_nPLIN)
			_oMdlZP3:SetValue("ZP3_XSTATU"	, "R" )
			_oMdlZP3:SetValue("ZP3_XHISTR"	, "Foi Rejeitado por algum motivo" )
		Endif
    Endif 
Next _nCtaA
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a Grid                                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
FWRestRows(_aSavLins)
RestArea(_aArea)          
Return Nil 

/*
+--------------------------------------------------------------------------+
|{Protheus.doc}<fPreRet>                                                   |
|Rotina que processa as informacoes do retorno da remessa                  |
|																		   |
|@Author<Antonio Dantas>                                                   |
|@since<24/04/2014>                                                        |
|@version<Nil>                                                             |
|                                                                          |
|@Receive                                                                  |
|<   _oModel (o) - Objeto oModel do modelo atual                           |
|   _aRetorn (a) - Array com as informacoes relativas ao Retorno.          |
|>                                                                         |
|@return<Nil>                                                              |
|<   Nil                                                                   |
|>                                                                         |
+--------------------------------------------------------------------------+
|Uso        |SENAI 	     												   |
+-----------+--------------------------------------------------------------+
*/
Static Function fPreRet(_oModel,_aRetorn)
Local _aArea		:= GetArea()
Local _cConven		:= _oModel:GetValue("ZP1MASTER","ZP1_XCONV")
Local _nRegs		:= Len(_aColsDet)  
Local _cCpf			:= ""
Local _cConvenio	:= ""
Local _nCtaA 		:= 0
Local _nNotFoud		:= 0
Local _nRegister	:= 0
Local _nNotRegis	:= 0 
Local _nNotFound	:= 0  
Local _cTextLOG		:= ""
Local _cPathRoot	:= GetNewPar("MV_XLOGPRO","\Pronatec\Logs\")   
Local _cFileLog	:= CriaTrab(Nil,.F.)
Local _nHdl_log	:= fCreate(_cPathRoot + cFilAnt + "_" + FunName()+"_"+ProcName() + _cFileLog+"_LOG.txt")  
ProcRegua(_nRegs)
If Aviso(FunName()+"/"+ProcName(),"Efetiva o processamento do Retorno", {"Sim","Não"}) == 1
	dbSelectArea("ZP3")
	ZP3->(dbSetOrder(1))  
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Monta cabecalho do Lod de Leitura do Arquivod e Pre Cadastro             |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	_cTextLOG := "#RELATORIO DE LOG - LEITURA DO ARQUIVO DE RETORNO DA REMESSA DE PRE CADASTRO - "+DTOC(date())+" as "+time()+CHR(13)+CHR(10) 
	_cTextLOG += "       Convenio: "+_cConven+CHR(13)+CHR(10) 
	_cTextLOG += " Qtde de Regist: "+Alltrim(Transform(_nRegs,"@E 999,999,999"))+CHR(13)+CHR(10) 
	//-- *********************************************************************
	//--    Imprime o Cabecalho do Relatorio de LOG 
	//-- *********************************************************************
	_cTextLOG +=	PadR("Matricula"	,TamSx3("ZP3_XMATRI")[1])+";"+;
					PadR("CPF" 			,TamSx3("ZP3_XCPF")[1])+";"+;
					PadR("Nome"			,TamSx3("ZP3_XNOME")[1])+";"+;
					PadR("Convenio"		,TamSx3("ZP3_XCONVE")[1])+";"+;
					PadR("Evento"		,TamSx3("ZP3_XEVENT")[1])+";"+;
					PadR("Turno"		,TamSx3("ZP3_XTURNO")[1])+";"+;
					PadR("Ocorr,"		,40)+CHR(13)+CHR(10)       
	fWrite(_nHdl_Log,_cTextLOG,Len(_cTextLOG)) != Len(_cTextLOG)
	_nCtaA := 0            
	For _nCtaA := 1 To Len(_aColsDet)
		IncProc("Total de Registros:"+Alltrim(Transform(_nRegs,"@E 999,999,999"))+"|  Lidos:"+Alltrim(Transform(_nCtaA,"@E 999,999,999")))   
		If (ZP3->(dbSeek(  FwxFilial("ZP3")+ PadR(_aColsDet[_nCtaA,3],TamSX3("ZP3_XCPF")[1])+_cConven)))
			If .t.    //-- Ver condicao do retorno de Cadastraro
				ZP3->(RecLock("ZP3",.F.))
				Replace ZP3->ZP3_XSTATU With "C"
				ZP3->(msUnlock())
				ZP3->(dbCommit())
			Else
				ZP3->(RecLock("ZP3",.F.))
				Replace ZP3->ZP3_XSTATU With "C"
				Replace ZP3->ZP3_XHISTR	With "Foi Rejeitado por algum motivo"
				ZP3->(msUnlock())
				ZP3->(dbCommit())
				_nNotRegis++
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//| Se nao for valido, grava no LOG                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("ZP3")
				ZP3->(dbSetorder(1))
				ZP3->(dbSeek(FwxFilial("ZP3")+PadR(_aColsDet[_nCtaA,3],TamSX3("ZP3_XCPF")[1])+_cConven))
				_cTextLOG := 	ZP3->ZP3_XMATRI+;
								ZP3->ZP3_XCPF+;
								ZP3->ZP3_XNOME+;
								ZP3->ZP3_XCONVE+;
								ZP3->ZP3_XEVENT+;
								ZP3->ZP3_XTURNO+;
								"Convenio recusado, Motivo: ..."+CHR(13)+CHR(10) 
				fWrite(_nHdl_Log,_cTextLOG,Len(_cTextLOG)) != Len(_cTextLOG)
			Endif
		Else
			_nNotFound++
			_cTextLOG := 	_aColsDet[_nCtaA,3]+;
							_aColsDet[_nCtaA,4]+;
							_aColsDet[_nCtaA,5]+;
							_aColsDet[_nCtaA,6]+;
							"Retorno do Convenio não localizado: ..."+CHR(13)+CHR(10) 
			fWrite(_nHdl_Log,_cTextLOG,Len(_cTextLOG)) != Len(_cTextLOG)
	    Endif 
	Next _nCtaA
	_cTextLOG := "Resumo da Leitura do Retorno: "+CHR(13)+CHR(10) 
	_cTextLOG += "    Total de Registro: "+Alltrim(Transform(_nRegs		,"@E 999,999,999"))+CHR(13)+CHR(10) 
	_cTextLOG += "    Total Conveniados: "+Alltrim(Transform(_nRegister	,"@E 999,999,999"))+CHR(13)+CHR(10) 
	_cTextLOG += "     Total Rejeitados: "+Alltrim(Transform(_nNotRegis	,"@E 999,999,999"))+CHR(13)+CHR(10) 
	_cTextLOG += "Total Nao Encontrados: "+Alltrim(Transform(_nNotFound	,"@E 999,999,999"))+CHR(13)+CHR(10) 
	fWrite(_nHdl_Log,_cTextLOG,Len(_cTextLOG)) != Len(_cTextLOG)
Endif 
//-- ****************************************************************
//--    Fecha o Arquivo de Log
//-- ****************************************************************
fClose(_nHdl_Log) 
If Aviso(FunName()+"/"+ProcName(),"Leitura encerrada. Deseja imprimir o arquivo de Log ["+_cFileLog+"_LOG.txt] neste momento?", {"Sim","Não"}) == 1
	u_SN069BX(_cPathRoot+ cFilAnt + "_" + FunName()+"/"+ProcName() + _cFileLog+"_LOG.txt")
Endif    
Return Nil  