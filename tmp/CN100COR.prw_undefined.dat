#Include "Protheus.ch"

/*/{Protheus.doc} CN100COR
@description Inclusão Alteração de Cores de Legenda do Contrato
@type  Function
@author Peder Munksgaard (Do.it Sistemas)
@since 05/03/2014
@version 11.0
@param PARAMIXB[1], Matriz contendo valores a serem utilizados na legenda.
@param PARAMIXB[1][N][1], Condição ADVPL que define a cor da legenda
@param PARAMIXB[1][N][2], Cor da legenda
@param PARAMIXB[1][N][3], Texto da legenda
@return return, aRet[1],	Matriz contendo valores a serem utilizados na legenda
@example
	aRet[1][N][1]	Condição ADVPL que define a cor da legenda
	aRet[1][N][2]	Cor da legenda
	aRet[1][N][3]	Texto da legenda
@see http://tdn.totvs.com/pages/releaseview.action?pageId=6089696
@history 07/07/2016, Franklin B. Oliveira, Adicionado a Cor BR_CANCEL para indicar os contratos cancelados como Distrato e altera o filtro para a cor "BR_CANCEL"
@history 12/04/2018, Franklin B. Oliveira, Ajustes para a versão 12.
@history 12/03/2019, Alan Teles de Oliveira, alterado as cores Aguardando Finalização de BR_VIOLETA para BR_MARRON_OCEAN e Distrato de BR_CANCEL para BR_MARRON_OCEAN.
/*/
User Function CN100COR()

	Local uCores 	:= ParamIXB[1]
	Local nPos 		:= 0
	Local nBlu		:= 0
	Local nX		:= 0

	Do Case

		Case ValType(uCores) == 'A'

			//- Alteração total da legenda vermelha (RED).
			nPos := aScan(uCores, {|x|UPPER(x[2]) == 'RED'})

			If nPos > 0 
				uCores[nPos, 1] += " .And. (CN9->CN9_XISDIS == '2' .Or. Empty(CN9->CN9_XISDIS))"
			EndIf

			// //Adiciona condição para legendas diferentes de [BR_PRETO] e [BR_VERMELHO]
			// For nX := 1 To Len(uCores)
			// 	If ( AllTrim(uCores[nX][2]) <> "BLACK" ) .And. ( AllTrim(uCores[nX][2]) <> "RED" )
			// 		uCores[nX][1] := uCores[nX][1] + '.And. (Empty(DtoS(CN9->CN9_DTFIM)) .Or. DtoS(CN9->CN9_DTFIM) >= DtoS(dDataBase))'
			// 	EndIf
			// Next nX
			
			//- Inclui nova cor para legenda.
			//- Alterado por J2a Consultoria --> Gustavo Krebs --> ALteração da cor da legenda para Azul 
			//aAdd(uCores, { "!Empty(DtoS(CN9->CN9_DTFIM)) .And. DtoS(CN9->CN9_DTFIM) <= DtoS(dDataBase) .And. CN9->CN9_SITUAC <> '08' .And. CN9->CN9_SITUAC <> '01'", "BR_MARRON_OCEAN"})
			//aAdd(uCores, { "!Empty(DtoS(CN9->CN9_DTFIM)) .And. DtoS(CN9->CN9_DTFIM) <= DtoS(dDataBase) .And. CN9->CN9_SITUAC <> '08' .And. CN9->CN9_SITUAC <> '01'", "BR_AZUL"})
			aAdd(uCores, { "Alltrim(CN9->CN9_SITUAC) == '01' .And. AllTrim(CN9->CN9_XISDIS) == '1'", "BR_MARRON" })		//Distrato

			// nBlu := aScan(uCores, {|x|UPPER(x[2]) == 'BLUE'})
			// if nBlu > 0
			// 	uCores[nBlu,1] := "!Empty(DtoS(CN9->CN9_DTFIM)) .And. DtoS(CN9->CN9_DTFIM) <= DtoS(dDataBase) .And. CN9->CN9_SITUAC <> '08' .And. CN9->CN9_SITUAC <> '01'" //- Condição
			// endif 
			

		Case ValType(uCores) == 'O'

			//- Adição de legenda por Browser
			//uCores:AddLegend( "!Empty(DtoS(CN9->CN9_DTFIM)) .And. DtoS(CN9->CN9_DTFIM) <= DtoS(dDataBase) .And. CN9->CN9_SITUAC <> '08' .And. CN9->CN9_SITUAC <> '01'", "BR_MARRON_OCEAN", "Aguardando Finalização")
			//uCores:AddLegend( "!Empty(DtoS(CN9->CN9_DTFIM)) .And. DtoS(CN9->CN9_DTFIM) <= DtoS(dDataBase) .And. CN9->CN9_SITUAC <> '08' .And. CN9->CN9_SITUAC <> '01'", "BR_AZUL", "Emitido")			
			uCores:AddLegend( "Alltrim(CN9->CN9_SITUAC) == '01' .And. AllTrim(CN9->CN9_XISDIS) == '1'", "BR_MARRON", "Distrato" )		//Distrato

	End Case

Return uCores
