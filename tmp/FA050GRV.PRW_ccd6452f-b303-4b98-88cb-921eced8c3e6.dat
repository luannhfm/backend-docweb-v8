#INCLUDE "PROTHEUS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FA050GRV  ºAutor  ³ TOTVS              º Data ³  10/08/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Inclusao de titulo INSS Patronal                           º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³  P11 - SISTEMA INDUSTRIA                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User function FA050GRV()
Local _aArea    := GetArea()
Local _aAreaSE2 := SE2->(GetArea())
Local _cNaturez := GetNewPar("SI_XNATRPA","RPA")	// Natureza
Local _cTipo	:= GetNewPar("SI_XTPRPA","TXR")		// Tipo
Local _cFornece	:= GetNewPar("SI_XFORRPA","FORRPA")	// Fornecedor
Local _cLoja	:= GetNewPar("SI_XLOJRPA","00")		// Loja fornecedor
Local _cCodIns	:= GetNewPar("SI_XCODINS","000001")// Codigo Inss
Local _nPerc	:= GetNewPar("SI_XINSRPA",11)		// Percentual INSS RPA
Local _nDias	:= GetNewPar("SI_XDIARPA",10)		// Numero de dias apos a emissao para vencimento
Local _dVencto	:= SE2->E2_EMISSAO + _nDias			// Vencimento.
Local _aGrvSE2  := {}
Private lMsErroAuto := .F.

IF lF050Auto
	Return
ENDIF

IF Alltrim(M->E2_TIPO) <> "RPA"
	Return
ENDIF

IF M->E2_DESDOBR == "S"
	ApMsgStop("Titulo do tipo RPA, não pode utilizar desdobramento igual a Sim, queira corrigir","Corrigir")
	Return()
ENDIF

_nInss    := SE2->E2_INSS

SED->(dbSetOrder(1))
IF SED->(dbSeek(XFilial("SED")+SE2->E2_NATUREZ)) .and. SED->(FieldPos("ED_DEDINSS")) > 0
	IF SED->ED_DEDINSS == "2"  //Nao desconta o INSS do principal
		_nInss := 0
	Endif
ENDIF

SA2->(dbSetOrder(1))
SA2->(dbSeek(XFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA)))

//Controla o Pis Cofins e Csll na baixa
lPCCBaixa := SuperGetMv("MV_BX10925",.T.,"2") == "1"  .and. (!Empty( SE5->( FieldPos( "E5_VRETPIS" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_VRETCOF" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_VRETCSL" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETPIS" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_PRETCOF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETCSL" ) ) ) .And. ;
!Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .And. !Empty( SFQ->( FieldPos( "FQ_SEQDES"  ) ) ) )

// Controla IRPF na Baixa
lIRPFBaixa := IIf( ! Empty( SA2->( FieldPos( "A2_CALCIRF" ) ) ), SA2->A2_CALCIRF == "2", .F.) .And. ;
!Empty( SE2->( FieldPos( "E2_VRETIRF" ) ) ) .And. !Empty( SE2->( FieldPos( "E2_PRETIRF" ) ) ) .And. ;
!Empty( SE5->( FieldPos( "E5_VRETIRF" ) ) ) .And. !Empty( SE5->( FieldPos( "E5_PRETIRF" ) ) )

lCalcIssBx :=	!Empty( SE5->( FieldPos( "E5_VRETISS" ) ) ) .and. !Empty( SE2->( FieldPos( "E2_SEQBX"   ) ) ) .and. ;
!Empty( SE2->( FieldPos( "E2_TRETISS" ) ) ) .and. GetNewPar("MV_MRETISS","1") == "2"  //Retencao do ISS pela emissao (1) ou baixa (2)

_nValor := SE2->E2_VALOR+If(lIRPFBaixa,0,SE2->E2_IRRF)+If(!lCalcIssBx,SE2->E2_ISS,0)+_nInss+SE2->(E2_RETENC+E2_SEST)+IIF(lPccBaixa,0,SE2->(E2_PIS+E2_COFINS+E2_CSLL))

_nValor	:= _nValor * (_nPerc/100)

Aadd(_aGrvSE2,	{ "E2_FILIAL" 	, xFilial("SE2")  			 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_PREFIXO"	, M->E2_PREFIXO	    		 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_NUM"		, M->E2_NUM	    			 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_PARCELA"	, M->E2_PARCELA				 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_TIPO"		, IIF("-"$_cTipo,"TX",_cTipo)		, Nil })
Aadd(_aGrvSE2,	{ "E2_NATUREZ"	, _cNaturez 				 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_PORTADO"	, ""						 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_FORNECE"	, _cFornece					 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_LOJA"   	, _cLoja					 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_EMISSAO"	, dDataBase					 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_VENCTO"	, _dVencto 					 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_VENCREA"	, DataValida(_dVencto) 	     		, Nil })
Aadd(_aGrvSE2, 	{ "E2_VALOR"  	, _nValor					 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_SALDO"  	, _nValor					 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_EMIS1"  	, dDataBase 				 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_MOEDA"	, M->E2_MOEDA  				 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_VLCRUZ" 	, _nValor   				 		, Nil })
Aadd(_aGrvSE2, 	{ "E2_CODINS"	, _cCodIns  				 		, Nil })
Aadd(_aGrvSE2,	{ "E2_XIDRPA"	,&("SE2->("+SE2->(IndexKey(1))+")") , Nil})

Begin Transaction

MsExecAuto({ | a,b,c | Fina050(a,b,c) },_aGrvSE2,,3)

If lMsErroAuto
	If (__lSX8)
		RollBackSX8()
	EndIf
	
	MostraErro()
	
	DisarmTransaction()
	Break
	
Else
	If (__lSX8)
		ConfirmSX8()
	EndIf
Endif

End Transaction

RestArea(_aAreaSE2)
RestArea(_aArea)
Return()
