#include 'totvs.ch'
#include 'parmtype.ch'

/*/{Protheus.doc} PrdAdapter
Classe Adapter para o serviço
@author  Sergio Salustiano
@since   01/09/2020
@version 1.0
/*/

CLASS PrdAdapter FROM FWAdapterBaseV2
	METHOD New()
	METHOD GetListProd()
EndClass
//-------------------------------------------------------------------
/*/{Protheus.doc} New
Método construtor
@param cVerb, verbo HTTP utilizado
@author  Sergio Salustiano
@since   01/09/2020
@version 1.0
/*/
//-------------------------------------------------------------------
Method New( cVerb ) CLASS PrdAdapter
	_Super:New( cVerb, .T. )
return
//-------------------------------------------------------------------
/*/{Protheus.doc} GetListProd
Método que retorna uma lista de produtos 
@author  Sergio Salustiano
@since   01/09/2020
@version 1.0
/*/
//-------------------------------------------------------------------
Method GetListProd( ) CLASS PrdAdapter
	Local aArea 	AS ARRAY
	Local cWhere	AS CHAR
	aArea   := FwGetArea()
	AddMapFields( self )
	::SetQuery( GetQuery() )
	cWhere := " B1_FILIAL = '"+ FWxFilial('SB1') +"' AND SB1.D_E_L_E_T_ = ' '"
	::SetWhere( cWhere )
	::SetOrder( "B1_COD" )
	//Executa a consulta, se retornar .T. tudo ocorreu conforme esperado
	If ::Execute() 
		// Gera o arquivo Json com o retorno da Query
		::FillGetResponse()
	EndIf
	FwrestArea(aArea)
RETURN
//-------------------------------------------------------------------
/*/{Protheus.doc} AddMapFields
Função para geração do mapa de campos
@param oSelf, object, Objeto da prórpia classe
@author  Sergio Salustiano
@since   01/09/2020
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function AddMapFields( oSelf )
	
	/*oSelf:AddMapFields( 'CODE'              , 'B1_COD'         , .T., .T.,  { 'B1_COD'     , 'C', TamSX3( 'B1_COD' )[1], 0 } )
	oSelf:AddMapFields( 'DESCRIPTION'	    , 'B5_ECDESCR'     , .T., .F.,  { 'B5_ECDESCR' , 'M', TamSX3( 'B5_ECDESCR' )[1], 0 } )	
	oSelf:AddMapFields( 'CATEGSITE'     	, 'B5_XCATSIT'     , .T., .F.,  { 'B5_XCATSIT' , 'C', TamSX3( 'B5_XCATSIT' )[1], 0 } )
	oSelf:AddMapFields( 'NOMECATEG'     	, 'ZDJ_CATEG'      , .T., .F.,  { 'ZDJ_CATEG'  , 'C', TamSX3( 'ZDJ_CATEG' )[1], 0 } )
	oSelf:AddMapFields( 'LINHAPROD'     	, 'ZDJ_LINHA'      , .T., .F.,  { 'ZDJ_LINHA'  , 'C', TamSX3( 'ZDJ_LINHA' )[1], 0 } )
	oSelf:AddMapFields( 'NOMELINHAPRO'      , 'ZDJ_DESLIN'     , .T., .F.,  { 'ZDJ_DESLIN' , 'C', TamSX3( 'ZDJ_DESLIN' )[1], 0 } )
	oSelf:AddMapFields( 'TITLE'             , 'B5_XECTITU'     , .T., .F.,  { 'B5_XECTITU' , 'M', TamSX3( 'B5_XECTITU' )[1], 0 } )
	oSelf:AddMapFields( 'BENEFITS'          , 'B5_ECBENFI'     , .T., .F.,  { 'B5_ECBENFI' , 'M', TamSX3( 'B5_ECBENFI' )[1], 0 } )
	oSelf:AddMapFields( 'TAGS'              , 'B5_ECPCHAV'     , .T., .F.,  { 'B5_ECPCHAV' , 'C', TamSX3( 'B5_ECPCHAV' )[1], 0 } )
	oSelf:AddMapFields( 'NEW'               , 'B5_XPRDNEW'     , .T., .F.,  { 'B5_XPRDNEW' , 'C', TamSX3( 'B5_XPRDNEW' )[1], 0 } )
	oSelf:AddMapFields( 'DESTAQUE'          , 'B5_XPRDDES'     , .T., .F.,  { 'B5_XPRDDES' , 'C', TamSX3( 'B5_XPRDDES' )[1], 0 } )
	oSelf:AddMapFields( 'CODAREA'           , 'B5_XCODARE'     , .T., .F.,  { 'B5_XCODARE' , 'C', TamSX3( 'B5_XCODARE' )[1], 0 } )
	oSelf:AddMapFields( 'AREA'              , 'ZDG_AREAAT'     , .T., .F.,  { 'ZDG_AREAAT' , 'M', TamSX3( 'ZDG_AREAAT' )[1], 0 } )
	oSelf:AddMapFields( 'CARGAHORARIA'      , 'B5_XCARGAH'     , .T., .F.,  { 'B5_XCARGAH' , 'C', TamSX3( 'B5_XCARGAHR' )[1], 0 } )
	oSelf:AddMapFields( 'LOCAL'     	    , 'B5_XLOCAL'      , .T., .F.,  { 'B5_XLOCAL'  , 'C', TamSX3( 'B5_XLOCAL' )[1], 0 } )*/
	
	//oSelf:AddMapFields( 'CODE'              , 'ZDH_CODPRD'     , .T., .T.,  { 'ZDH_CODPRD' , 'C', TamSX3( 'ZDH_CODPRD' )[1], 0 } )
	oSelf:AddMapFields( 'CODE'              , 'B1_COD'         , .T., .T.,  { 'B1_COD'     , 'C', TamSX3( 'B1_COD' )[1], 0 } )
	oSelf:AddMapFields( 'DESCRIPTION'	    , 'B5_ECDESCR'     , .T., .F.,  { 'B5_ECDESCR' , 'M', TamSX3( 'B5_ECDESCR' )[1], 0 } )	
	oSelf:AddMapFields( 'CATEGSITE'     	, 'B5_XCATSIT'     , .T., .F.,  { 'B5_XCATSIT' , 'C', TamSX3( 'B5_XCATSIT' )[1], 0 } )
	oSelf:AddMapFields( 'NOMECATEG'     	, 'ZDJ_CATEG'      , .T., .F.,  { 'ZDJ_CATEG'  , 'C', TamSX3( 'ZDJ_CATEG' )[1], 0 } )
	oSelf:AddMapFields( 'LINHAPROD'     	, 'ZDJ_LINHA'      , .T., .F.,  { 'ZDJ_LINHA'  , 'C', TamSX3( 'ZDJ_LINHA' )[1], 0 } )
	oSelf:AddMapFields( 'NOMELINHAPRO'      , 'ZDJ_DESLIN'     , .T., .F.,  { 'ZDJ_DESLIN' , 'C', TamSX3( 'ZDJ_DESLIN' )[1], 0 } )
	oSelf:AddMapFields( 'TITLE'             , 'B5_XECTITU'     , .T., .F.,  { 'B5_XECTITU' , 'M', TamSX3( 'B5_XECTITU' )[1], 0 } )
	oSelf:AddMapFields( 'BENEFITS'          , 'B5_ECBENFI'     , .T., .F.,  { 'B5_ECBENFI' , 'M', TamSX3( 'B5_ECBENFI' )[1], 0 } )
	oSelf:AddMapFields( 'TAGS'              , 'B5_ECPCHAV'     , .T., .F.,  { 'B5_ECPCHAV' , 'C', TamSX3( 'B5_ECPCHAV' )[1], 0 } )
	oSelf:AddMapFields( 'NEW'               , 'B5_XPRDNEW'     , .T., .F.,  { 'B5_XPRDNEW' , 'C', TamSX3( 'B5_XPRDNEW' )[1], 0 } )
	oSelf:AddMapFields( 'DESTAQUE'          , 'B5_XPRDDES'     , .T., .F.,  { 'B5_XPRDDES' , 'C', TamSX3( 'B5_XPRDDES' )[1], 0 } )
	oSelf:AddMapFields( 'CODAREA'           , 'ZDH_CODARE'     , .T., .F.,  { 'ZDH_CODARE' , 'C', TamSX3( 'ZDH_CODARE' )[1], 0 } )
	oSelf:AddMapFields( 'AREA'              , 'ZDH_DESCAR'     , .T., .F.,  { 'ZDH_DESCAR' , 'C', TamSX3( 'ZDH_DESCAR' )[1], 0 } )
	oSelf:AddMapFields( 'CARGAHORARIA'      , 'B5_XCARGAH'     , .T., .F.,  { 'B5_XCARGAH' , 'C', TamSX3( 'B5_XCARGAHR' )[1], 0 } )
	oSelf:AddMapFields( 'LOCAL'     	    , 'B5_XLOCAL'      , .T., .F.,  { 'B5_XLOCAL'  , 'C', TamSX3( 'B5_XLOCAL' )[1], 0 } )

	
Return 
//-------------------------------------------------------------------
/*/{Protheus.doc} GetQuery
Retorna a query usada no serviço
@param oSelf, object, Objeto da prórpia classe
@author  Sergio Salustiano
@since   01/09/2020
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function GetQuery()
	Local cQuery AS CHARACTER
	
	cQuery := " SELECT #QueryFields#"
    cQuery +=   " FROM " + RetSqlName( 'SB1' ) + " SB1 "
    
	cQuery +=   " INNER JOIN " + RetSqlName( 'SB5' ) + " SB5"
	cQuery +=       " ON B1_COD = B5_COD"
	cQuery +=           " AND B5_FILIAL = '"+ FWxFilial( 'SB5' ) +"'"
	cQuery +=           " AND SB5.D_E_L_E_T_ = ' ' AND SB5.B5_ECFLAG = '1' "
	
	cQuery +=   " LEFT JOIN " + RetSqlName( 'ZDJ' ) + " ZDJ"
	cQuery +=       " ON ZDJ_CODIGO = B5_XCATSIT "
	cQuery +=           " AND ZDJ_FILIAL = '"+ FWxFilial( 'ZDJ' ) +"' "
	cQuery +=           " AND ZDJ.D_E_L_E_T_ = ' ' "

	cQuery +=   " LEFT JOIN " + RetSqlName( 'ZDH' ) + " ZDH"
	cQuery +=       " ON ZDH_CODPRD = B5_COD "
	cQuery +=           " AND ZDH_FILIAL = '"+ FWxFilial( 'ZDH' ) +"' "
	cQuery +=           " AND ZDH.D_E_L_E_T_ = ' ' "

	cQuery +=   " LEFT JOIN " + RetSqlName( 'ZDG' ) + " ZDG"
	cQuery +=       " ON ZDG_CODIGO = ZDH_CODARE "
	cQuery +=           " AND ZDG_FILIAL = '"+ FWxFilial( 'ZDG' ) +"' "
	cQuery +=           " AND ZDG.D_E_L_E_T_ = ' ' "
	cQuery += " WHERE #QueryWhere#"
	
Return cQuery
