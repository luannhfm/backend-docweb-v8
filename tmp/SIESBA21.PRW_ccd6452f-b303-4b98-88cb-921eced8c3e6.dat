#INCLUDE "PROTHEUS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIESBA21   ºAutor  ³Microsiga          º Data ³  21/05/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Receptor de EAI - Movimento Bancário                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP 11.5 - Sistema Industria                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function SIESBA21(_cXML)
Local _cError   := ""
Local _cWarning := ""
Local _cDelimit := "_"
Local aStru     := {}
Local _lInput   := GetRemoteType() == -1 //-1 = sem remote/ 0 = delphi/ 1 = QT windows/ 2 = QT Linux
Local _dDtAnt   := dDataBase
Default _cXML   := ""

IF _lInput // Chamada via ESB/EAI
	
	//Gera o Objeto XML com a estrutura recebida
	oXml := XmlParser(_cXML, _cDelimit, @_cError, @_cWarning)
	
	//Verifica se a estrutura foi criada
	IF !(Empty(_cError) .and. Empty(_cWarning))
		Return()
	ENDIF
	
	_nOperac := Val(oXml:_FINA100:_OPERATION:TEXT)
	_cIDESB  := IIF(Type("oXml:_FINA100:_SE5MASTER:_E5_XIDESB:REALNAME") <> "U",&("oXml:_FINA100:_SE5MASTER:_E5_XIDESB:_VALUE:TEXT"),"")
	
	// Verifica se mensagem trata-se de Movimentos Bancarios
	IF Type('oXml:_FINA100:_SE5MASTER') == "U"
		_cMotivo := "Mensagem invalida para a rotina FINA100 - Movimento Bancario"
		// Gera XML de retorno
		U_SIXMLMSG("FINA100","Movimento Bancario",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
		Return()
	ENDIF
	
	SX3->(dbSetOrder(1))
	SX3->(dbGoTop())
	SX3->(dbSeek("SE5"))
	
	// Carrega vetor com os campos
	While SX3->(!Eof()) .and. SX3->X3_ARQUIVO == "SE5"
		IF Type("oXml:_FINA100:_SE5MASTER:_"+Alltrim(SX3->X3_CAMPO)+":REALNAME") <> "U"
			// Carrega conteudo do variavel
			_cCampo := &("oXml:_FINA100:_SE5MASTER:_"+Alltrim(SX3->X3_CAMPO)+":_VALUE:TEXT")
			
			// Faz tratamento do dado
			IF SX3->X3_TIPO == "C"
				_cCampo := PadR(_cCampo,SX3->X3_TAMANHO)
			ELSEIF SX3->X3_TIPO == "N"
				_cCampo := Val(_cCampo)
			ELSEIF SX3->X3_TIPO == "D"
				_cCampo := Stod(_cCampo)
			ENDIF
			IF SX3->X3_CONTEXT == "V"
				Loop
				SX3->(dbSkip())
			ENDIF
			
			// Carrega vetor para rotina automatica
			aAdd( aStru, {Alltrim(SX3->X3_CAMPO),_cCampo, NIL } )
		ENDIF
		SX3->(dbSkip())
	Enddo
	
	// Nenhum campo localizado
	IF Len(aStru) == 0
		Return()
	ENDIF
	
	// Altera database para data do movimento
	IF !Empty( _dDtMov  := IIF(Type("oXml:_FINA100:_SE5MASTER:_E5_DATA:REALNAME") <> "U",Stod(&("oXml:_FINA100:_SE5MASTER:_E5_DATA:_VALUE:TEXT")),"") )
		dDataBase := _dDtMov
	ENDIF
	
	INCLUI         := .T.
	lMsErroAuto    := .F.
	lMsHelpAuto    := .T.
	lAutoErrNoFile := .T.
	
	Begin Transaction
	MSExecAuto( { | x, y, z | FINA100( x, y, z ) }, , aStru, _nOperac )
	
	If lMsErroAuto
		If (__lSX8)
			RollBackSX8()
		EndIf
		
		DisarmTransaction()
		
		// Tratamento da Mensagem de erro do MSExecAuto
		aLogErr  := GetAutoGRLog()
		aLogErr2 := U_SIESBID(aLogErr)
		_cMotivo := ""
		
		For i := 1 to Len(aLogErr2)
			_cMotivo += aLogErr2[i]
		Next
		
		// Gera XML de retorno
		U_SIXMLMSG("FINA100","Movimento Bancario",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
		
		Break
	Else
		If (__lSX8)
			ConfirmSX8()
		EndIf
		
		// Gera XML de retorno
		U_SIXMLMSG("FINA100","Movimento Bancario",Alltrim(Str(_nOperac)),_cIDESB,"0","")
		
	EndIf
	End Transaction
	
	// Restaura database
	dDataBase := _dDtAnt
	
ELSE // Chamada via SmartClient
	
	_cData     := Dtos(Date())
	_cTime     := Time()
	_cDateTime := Transform(_cData,"@R 9999-99-99")+"T"+_cTime+"Z"
	_cOper     := IIF(IsInCallStack("FA100CAN"),"5","3")
	_cFile     := "FINA100"+_cOper+_cData+StrTran(_cTime,":","")+".XML"
	
	dbSelectArea("SE5")
	
	// Montagem das tags do XML
	_cXML += '<TOTVSIntegrator>'
	_cXML += '<GlobalProduct>TOTVS|ESB</GlobalProduct>'
	_cXML += '<GlobalFunctionCode>EAI</GlobalFunctionCode>'
	_cXML += '<GlobalDocumentFunctionCode>FINA100</GlobalDocumentFunctionCode>'
	_cXML += '<GlobalDocumentFunctionDescription>Movimento Financeiro</GlobalDocumentFunctionDescription>'
	_cXML += '<DocVersion>1.0</DocVersion>'
	_cXML += '<DocDateTime>'+_cDateTime+'</DocDateTime>'
	_cXML += '<DocIdentifier></DocIdentifier>'
	_cXML += '<DocCompany>'+cEmpAnt+'</DocCompany>'
	_cXML += '<DocBranch>'+cFilAnt+'</DocBranch>'
	_cXML += '<DocName></DocName>'
	_cXML += '<DocFederalID></DocFederalID>'
	_cXML += '<DocType>2</DocType>'
	_cXML += '<Message>'
	_cXML += '<Layouts>'
	_cXML += '<Identifier>FINA100</Identifier>'
	_cXML += '<Version>1.0</Version>'
	_cXML += '<FunctionCode></FunctionCode>'
	_cXML += '<Content>'
	_cXML += '<FINA100 Operation="'+_cOper+'" version="1.01">'
	_cXML += '<SE5MASTER modeltype="FIELDS" >'
	
	// Montagem das TAGs
	For i := 1 To FCount()
		_cXML += '<'+FieldName(i)+' order="'+Alltrim(Str(i))+'">'
		_cXML += '<value>'+Alltrim(CValtoChar(&("SE5->"+FieldName(i))))+'</value>'
		_cXML += '</'+FieldName(i)+'>'
	Next
	
	_cXML += '</SE5MASTER>'
	_cXML += '</FINA100>'
	_cXML += '</Content>'
	_cXML += '</Layouts>'
	_cXML += '</Message>'
	_cXML += '</TOTVSIntegrator>'
	
	// Geração do arquivo
	U_SIXMLDATA(_cXML,_cFile,"FINA100","Movimento Recebido")
	
ENDIF

Return()
