#Include 'Protheus.ch'
#Include 'TopConn.ch'
#Include 'FWPrintSetup.ch'
#Include 'RptDef.CH'

/*/{Protheus.doc} SF0406F
Relatório para entrega de livro por aluno.

@author franklin.oliveira
@since 14/08/2015
@version 1.0

@return Nil
/*/
User Function SF0406F()

Local aOrdem		:= {"Padrão"}
Local aDevice		:= {"DISCO","SPOOL","EMAIL","EXCEL","HTML","PDF"}
Local cDevice		:= ""
Local cPathDest	:= GetSrvProfString('StartPath','\system\')
Local cReport 	:= "SF0406F"
Local cPerg   	:= ""
Local cDescri 	:= "Este relatorio ira imprimir a relação de materiais entregue por aluno."
Local cSession	:= GetPrinterSession()
Local lAdjust		:= .F.
Local nFlags		:= PD_ISTOTVSPRINTER+PD_DISABLEORIENTATION+PD_DISABLEPAPERSIZE
Local nLocal		:= 1
Local nOrdem		:= 1
Local nOrient		:= 1
Local nPrintType	:= 6
Local oPrinter	:= Nil
Local oSetup		:= Nil

Private cTitulo		:= "RECEBIMENTO DE MATERIAL POR ALUNO"
Private nMaxLin		:= 800
Private nMaxCol		:= 600

	If !Empty(SCP->CP_STATUS) .And. SCP->CP_PREREQU == "S" .And. (QtdComp(SCP->CP_QUANT) == QtdComp(SCP->CP_QUJE))

		dbSelectArea("ZE0")
		dbSetOrder(2)
		
		If dbSeek(SCP->CP_FILIAL + SCP->CP_NUM)

			cSession	:= GetPrinterSession()
			cDevice		:= If(Empty(fwGetProfString(cSession, "PRINTTYPE","SPOOL", .T.)), "PDF", fwGetProfString(cSession, "PRINTTYPE", "SPOOL", .T.))
			nLocal		:= If(fwGetProfString(cSession, "LOCAL", "SERVER", .T.)=="SERVER", 1, 2)
			nPrintType	:= aScan(aDevice, {|x| x == cDevice })
		
			oPrinter	:= FWMSPrinter():New(cReport, nPrintType, lAdjust, /*cPathDest*/, .T.)
			oSetup		:= FWPrintSetup():New (nFlags,cTitulo)
		
			oSetup:SetPropert(PD_PRINTTYPE   	, nPrintType)
			oSetup:SetPropert(PD_ORIENTATION 	, nOrient)
			oSetup:SetPropert(PD_DESTINATION 	, nLocal)
			oSetup:SetPropert(PD_MARGIN			, {0,0,0,0})
			oSetup:SetPropert(PD_PAPERSIZE		, 2)
			oSetup:SetOrderParms(aOrdem,@nOrdem)
		
			If oSetup:Activate() == PD_OK 
			
				oPrinter:lServer := oSetup:GetProperty(PD_DESTINATION) == AMB_SERVER	
				oPrinter:SetDevice(oSetup:GetProperty(PD_PRINTTYPE))
				oPrinter:SetPortrait()
				oPrinter:SetPaperSize(oSetup:GetProperty(PD_PAPERSIZE))
				oPrinter:setCopies(Val(oSetup:cQtdCopia))
				
				If oSetup:GetProperty(PD_PRINTTYPE) == IMP_SPOOL
				
					oPrinter:nDevice		:= IMP_SPOOL
					oPrinter:cPrinter		:= oSetup:aOptions[PD_VALUETYPE]
				
				Else 
				
					oPrinter:nDevice		:= IMP_PDF
					oPrinter:cPathPDF		:= oSetup:aOptions[PD_VALUETYPE]
					oPrinter:SetViewPDF(.T.)
				
				Endif
				
				RptStatus({|lEnd| SF0406FImp(@lEnd,@oPrinter)},"Imprimindo Relatorio...")
			
			Else 
			
				MsgInfo("Relatório cancelado pelo usuário.")
				oPrinter:Cancel()
			
			EndIf
		
			oSetup		:= Nil
			oPrinter	:= Nil
				
		Else
		
			MsgStop("Não Existe uma Turma relacionada a esta solicitação, Verifique.", "Sem integração com Sige.")
		
		EndIf
	
	Else
	
		MsgStop("Pre-Requisicao não se encontra Baixada", "Pre-Requisicao em aberto")
	
	EndIf

Return (Nil)


/*/{Protheus.doc} SF0406FImp
Função para selecionar os dados e imprimí-los

@author franklin.oliveira
@since 14/08/2015
@version 1.0
@param lEnd, lógico
@param oPrinter, objeto, Objeto de impressão

@return Nil
/*/
Static Function SF0406FImp(lEnd, oPrinter)


Local aArea		:= GetArea()
Local cNomProf	:= ""
Local nMaxLinha	:= 20
Local nRegistros:= 0	

Private aProdutos	:= {}
Private nMargDir	:= 15
Private nMargEsq	:= 20
Private nColNAlu	:= nMargEsq+50
Private nColSMat	:= nColNAlu+250
Private nColAssi	:= nColSMat+50
Private nLiItm		:= 0
Private nPag		:= 0
Private nWidtLin	:= 0
Private li			:= 10
Private nLinCount	:= 0
Private oFontA7		:= TFont():New('Arial',,7,.T.)
Private oFontA14	:= TFont():New('Arial',,14,.T.)
Private oFontC8		:= TFont():New('Courier new',,8,.T.)

	DbSelectArea("ZE1")
	DbSetOrder(3)
	
	If ZE1->( DbSeek(ZE0->ZE0_FILIAL + ZE0->ZE0_CODCUR + ZE0->ZE0_CODDIS + ZE0->ZE0_CODTUR + ZE0->ZE0_ITMSEQ + ZE0->ZE0_NUMSA) )

		While !ZE1->( Eof() ) .And. ZE0->ZE0_FILIAL + ZE0->ZE0_CODCUR + ZE0->ZE0_CODDIS + ZE0->ZE0_CODTUR + ZE0->ZE0_ITMSEQ + ZE0->ZE0_NUMSA;
					== ZE1->ZE1_FILIAL + ZE1->ZE1_CODCUR + ZE1->ZE1_CODDIS + ZE1->ZE1_CODTUR + ZE1->ZE1_ITMSEQ + ZE1->ZE1_NUMSA
					nRegistros++
					ZE1->( DbSkip() )
		EndDo
		
		SetRegua(nRegistros)
		
		ZE1->( DbSeek(ZE0->ZE0_FILIAL + ZE0->ZE0_CODCUR + ZE0->ZE0_CODDIS + ZE0->ZE0_CODTUR + ZE0->ZE0_ITMSEQ + ZE0->ZE0_NUMSA) )
		
		// Inicia a impressao do relatorio
		While !ZE1->( Eof() ) .And. ZE0->ZE0_FILIAL + ZE0->ZE0_CODCUR + ZE0->ZE0_CODDIS + ZE0->ZE0_CODTUR + ZE0->ZE0_ITMSEQ + ZE0->ZE0_NUMSA;
					== ZE1->ZE1_FILIAL + ZE1->ZE1_CODCUR + ZE1->ZE1_CODDIS + ZE1->ZE1_CODTUR + ZE1->ZE1_ITMSEQ + ZE1->ZE1_NUMSA
			IncRegua()
			nLinCount	:= 0
			nPag++
			
			oPrinter:StartPage()
			CabPagina(@oPrinter)
			CabItem(@oPrinter)
			
			cNomProf := ZE0->ZE0_NOMPRO
			
			nLiItm := 120
	
			// Imprime os titulos das colunas dos itens 
			oPrinter:SayAlign(nLiItm, nMargDir+5	, "Matricula"			, oFontC8, 100, li, , 0)
			oPrinter:SayAlign(nLiItm, nColNAlu		, "Nome do Aluno"		, oFontC8, 100, li, , 0)
			//oPrinter:SayAlign(nLiItm, nColSMat		, "Status Matrícula"	, oFontC8, 100, li, , 0)
			oPrinter:SayAlign(nLiItm, nColAssi		, "Assinatura"		, oFontC8, 100, li, , 0)
			oPrinter:Line(li+nLiItm, nMargDir, li+nLiItm, nMaxCol-nMargEsq, , "-2")
			
			nLiItm := nLiItm + 10
					
			While !ZE1->( Eof() ) .And. ZE0->ZE0_FILIAL + ZE0->ZE0_CODCUR + ZE0->ZE0_CODDIS + ZE0->ZE0_CODTUR + ZE0->ZE0_ITMSEQ + ZE0->ZE0_NUMSA;
					== ZE1->ZE1_FILIAL + ZE1->ZE1_CODCUR + ZE1->ZE1_CODDIS + ZE1->ZE1_CODTUR + ZE1->ZE1_ITMSEQ + ZE1->ZE1_NUMSA
			
				// Inicia uma nova pagina caso nao estiver em EOF
				If nLinCount == nMaxLinha
			
					oPrinter:StartPage()
					nPag++		
					
					CabPagina(@oPrinter)
					CabItem(@oPrinter)
					
					cNomProf := ZE0->ZE0_NOMPRO		
			
					nLiItm := 120
					nLinCount	:= 0
			
					// Imprime os titulos das colunas dos itens 
					oPrinter:SayAlign(nLiItm, nMargDir+5	, "Matricula"			, oFontC8, 100, li, , 0)
					oPrinter:SayAlign(nLiItm, nColNAlu		, "Nome do Aluno"		, oFontC8, 100, li, , 0)
					//oPrinter:SayAlign(nLiItm, nColSMat		, "Status Matrícula"	, oFontC8, 100, li, , 0)
					oPrinter:SayAlign(nLiItm, nColAssi		, "Assinatura"		, oFontC8, 100, li, , 0)
					oPrinter:Line(li+nLiItm, nMargDir, li+nLiItm, nMaxCol-nMargEsq, , "-2")
					
					nLiItm := nLiItm + 10
							
				EndIf	
				
				nWidtLin = oPrinter:GetTextHeight (ZE1->ZE1_CODMAT, oFontC8)
						
				// Imprime os alunos 
				//oPrinter:Box(li+nLiItm, nMargDir, li+nLiItm+nWidtLin	, nColNAlu)
				oPrinter:SayAlign(li+nLiItm, nMargDir+5	, ZE1->ZE1_CODMAT				, oFontC8, 100, li+nWidtLin, , 0, 0)
				
				//oPrinter:Box(li+nLiItm, nColNAlu	, li+nLiItm+nWidtLin	, nColSMat)
				oPrinter:SayAlign(li+nLiItm, nColNAlu	, ZE1->ZE1_NOMALU				, oFontC8, 300, li+nWidtLin, , 0, 0)
				
				//oPrinter:Box(li+nLiItm, nColSMat	, li+nLiItm+nWidtLin	, nColAssi)
				//oPrinter:SayAlign(li+nLiItm, nColSMat	, IIf( (TMP)->ZE0_STSMAT == '1', "Ativo", "Inativo" )	, oFontC8, 100, li+nWidtLin, , 0, 2)
				
				//oPrinter:Box(li+nLiItm, nColAssi	, li+nLiItm+nWidtLin	, nMaxCol-nMargEsq)
				//oPrinter:SayAlign(li+nLiItm, nColAssi	, Replicate("_", 40)					, oFontC8, 100, li+nWidtLin, , 0, 2)
				oPrinter:Line(li+nLiItm+5, nColAssi, li+nLiItm+5, nColAssi+180, , "-2")
	
				nLinCount++
				
				// Finaliza a pagina quando atingir a quantidade maxima de itens 
				If nLinCount == nMaxLinha
			
					oPrinter:Line(750,nMargDir, 750, nMaxCol-nMargEsq,, "-2")
					oPrinter:EndPage()
			
				Else
			
					nLiItm += nWidtLin
			
				EndIf
								
				ZE1->( DbSkip() )
			
				Loop
			
			EndDo
			
			// Finaliza a pagina se a quantidade de itens for diferente da quantidade 
			// maxima, para evitar que a pagina seja finalizada mais de uma vez.      		
			If nLinCount <> nMaxLinha
				oPrinter:Line(750,nMargDir, 750, nMaxCol-nMargEsq,, "-2")
				oPrinter:EndPage()
			EndIf
		EndDo
		
		// Impressão do rodapé
		//Caso o mesmo estoure a página, inicio uma nova 
		If nLinCount == nMaxLinha .OR. nLiItm >= 670
			
					oPrinter:Line(750,nMargDir, 750, nMaxCol-nMargEsq,, "-2")
					oPrinter:EndPage()
					oPrinter:StartPage()
					
					nPag++
					CabPagina(@oPrinter)
					nLiItm		:= li+50
					nLinCount	:= 0
		
		EndIf 
	
		nLiItm += 30
		
		oPrinter:Box(li+nLiItm, nMargDir+150, li+nLiItm+40, nMaxCol-200)
		oPrinter:SayAlign(li+nLiItm+5 , nMargDir+155	, "Data: ___/___/___" 			, oFontA7,  nMaxCol-nMargEsq, 200, 2, 0) 
		oPrinter:SayAlign(li+nLiItm+25, nMargDir+155, "Resp. Entrega: " + cNomProf 	, oFontA7,  nMaxCol-nMargEsq, 200, 2, 0)
		
		oPrinter:Print()	
	EndIf

	RestArea(aArea)

Return (Nil)

/*/{Protheus.doc} CabPagina
Função para imprimir cabeçalho da página

@author franklin.oliveira
@since 14/08/2015
@version 1.0
@param oPrinter, objeto, Objeto de impressão

@return Nil
/*/
Static Function CabPagina(oPrinter)

Private nCol1Dir	:= 498-nMargDir   
Private nCol2Dir	:= 540-nMargDir

oPrinter:Box(li+5, nMargDir, li+50, nMargDir+75)
oPrinter:SayBitmap(li+6, nMargDir+1, "lgrl01.bmp", 70, 40 )

oPrinter:Box(li+5, nMargDir+75, li+50, nCol1Dir-5)
oPrinter:SayAlign(li+20, nMargDir+180, cTitulo		, oFontA14, nMaxCol-nMargEsq, 200, 2, 0)

oPrinter:Box(li+5, nCol1Dir-5, li+50, nMaxCol-nMargEsq)
oPrinter:SayAlign(li+10, nCol1Dir, "Pré-Requis .: "	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+20, nCol1Dir, "Dt. Emissão : "	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+30, nCol1Dir, "Emissor ....: "	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+40, nCol1Dir, "Página .....: "	, oFontA7, 200, 200, , 0)

oPrinter:SayAlign(li+10, nCol2Dir, ZE0->ZE0_NUMSA				, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+20, nCol2Dir, DToC( dDataBase )			, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+30, nCol2Dir, UsrRetName(RetCodUsr())	, oFontA7, 200, 200, , 0)
oPrinter:SayAlign(li+40, nCol2Dir, AllTrim(STR(nPag))		, oFontA7, 200, 200, , 0)

oPrinter:Line(li+50, nMargDir, li+50, nMaxCol-nMargEsq, , "-8")

Return (Nil)


/*/{Protheus.doc} CabItem
Função para impressão de Subcabeçalho

@author franklin.oliveira
@since 14/08/2015
@version 1.0
@param oPrinter, objeto, (Descrição do parâmetro)

@return Nil
/*/
/*/
-----------------------------------------------------
Franklin B. Oliveira                       23/08/2016
O material didático passa a ser o informado na S.A.
já que cada uma será referencia a um produto apenas
-----------------------------------------------------
/*/
Static Function CabItem(oPrinter)

Local cCodProd	:= Posicione("SCP", 1, ZE0->ZE0_FILIAL + ZE0->ZE0_NUMSA, "CP_PRODUTO")
Local cDesProd	:= Posicione("SB1", 1, xFilial("SB1") + cCodProd, "B1_DESC")
Local nColDisc	:= nMargDir + 45
Local nColCTur	:= nColDisc + 60
Local nColNPro	:= nColCTur + 45
Local nI		:= 0

	oPrinter:SayAlign(li+060, nMargDir, "Curso "				, oFontC8, 160, li, , 0)
	oPrinter:SayAlign(li+070, nMargDir, ZE0->ZE0_CODCUR			, oFontC8, 160, li, , 0)

	oPrinter:SayAlign(li+060, nColDisc, "Disciplina"			, oFontC8, 160, li, , 0)
	oPrinter:SayAlign(li+070, nColDisc, ZE0->ZE0_CODDIS			, oFontC8, 160, li, , 0)
	
	oPrinter:SayAlign(li+060, nColCTur, "Turma "				, oFontC8, 160, li, , 0)
	oPrinter:SayAlign(li+070, nColCTur, ZE0->ZE0_CODTUR			, oFontC8, 160, li, , 0)
	
	oPrinter:SayAlign(li+060, nColNPro, "Responsável Entrega "	, oFontC8, 160, li, , 0)
	oPrinter:SayAlign(li+070, nColNPro, ZE0->ZE0_NOMPRO			, oFontC8, 160, li, , 0)
	
	oPrinter:SayAlign(li+080, nMargDir, "Material Didático "		, oFontC8, 160, li, , 0)
	oPrinter:SayAlign(li+090, nMargDir, cCodProd + " - " + cDesProd , oFontC8, 550, li, , 0)
		
	oPrinter:Line(li+100, nMargDir, li+100, nMaxCol-nMargEsq, , "-2")

Return (Nil)