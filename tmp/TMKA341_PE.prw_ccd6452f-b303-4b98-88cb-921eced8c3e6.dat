#Include "TOTVS.ch"
#Include "FWMVCDef.ch"
#INCLUDE "TOPCONN.CH"

User Function TMKA341()
Local aParam     := PARAMIXB
Local xRet       := .T.
Local oObj       := ''
Local cIdPonto   := ''
Local cIdModel   := ''
Local lIsGrid    := .F.

	If aParam <> NIL

		oObj       := aParam[1]
		cIdPonto   := aParam[2]
		cIdModel   := aParam[3]
		lIsGrid    := ( Len( aParam ) > 3 )

		If cIdPonto == "MODELVLDACTIVE"

		ElseIf cIdPonto == 'MODELPRE'
			// Alert("OK")
		ElseIf cIdPonto == 'MODELPOS'

		ElseIf cIdPonto == 'FORMPRE'

		ElseIf cIdPonto == 'FORMPOS'

		ElseIf cIdPonto == 'FORMLINEPRE'

		ElseIf cIdPonto == 'FORMLINEPOS'
			
		ElseIf cIdPonto == 'MODELCOMMITTTS'
            /* ApMsgInfo('Chamada apos a gravação total do modelo e dentro da transação (MODELCOMMITTTS).' + CRLF + 'ID ' + cIdModel ) */
		ElseIf cIdPonto == 'MODELCOMMITNTTS'
			// ApMsgInfo ('Chamada apos a gravação total do modelo e fora da transação (MODELCOMMITNTTS).' + CRLF + 'ID ' + cIdModel)
			Processa({|| fRegOper(oObj) }, "Aguarde...", "Registrando operação para controle de integrações...",.F.)
		ElseIf cIdPonto == 'FORMCOMMITTTSPRE'

		ElseIf cIdPonto == 'FORMCOMMITTTSPOS'
            /* ApMsgInfo('Chamada apos a gravação da tabela do formulário (FORMCOMMITTTSPOS).' + CRLF + 'ID ' + cIdModel) */

		ElseIf cIdPonto == 'MODELCANCEL'
           /*  cMsg := 'Chamada no Botão Cancelar (MODELCANCEL).' + CRLF + 'Deseja Realmente Sair ?'

			If !( xRet := ApMsgYesNo( cMsg ) )
                Help( ,, 'Help',, 'O MODELCANCEL retornou .F.', 1, 0 )
			EndIf */

		ElseIf cIdPonto == 'BUTTONBAR'	//Para a inclusão de botões na ControlBar.
			xRet := { {'Log Integração', '', { || U_SF73A04F( xFilial("ACH") +;
			 	oObj:GetValue("ACHMASTER", "ACH_CODIGO") + oObj:GetValue("ACHMASTER", "ACH_LOJA") ) }, '' } }
		EndIf

	EndIf

Return(xRet)

Static Function fRegOper(oMdlACH)
Local aPrimKey	:= {}
Local cChavePri := xFilial("ACH")
Local cJSONData	:= ""
Local lRet		:= .T.
Local nX		:= 0
Local nOper		:= oMdlACH:GetOperation()
	
	If (nOper == MODEL_OPERATION_INSERT) .Or. (nOper == MODEL_OPERATION_UPDATE)
		aPrimKey := oMdlACH:GetPrimaryKey()
		cJSONData :=  oMdlACH:GetJSONData()
		For nX := 1 To Len(aPrimKey)
			cChavePri += oMdlACH:GetValue("ACHMASTER", aPrimKey[nX])
		Next nX
		U_F99A01S1(FunName(), cChavePri, cJSONData)
	EndIf
	
Return lRet