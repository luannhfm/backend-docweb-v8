#Include 'Protheus.ch'
#Include 'Topconn.ch'
#Include 'Tbiconn.ch'

/*/{Protheus.doc} SF06M03X
Funcao responsavel por realizar alteracoes de titulos demandados em planilha.

@type 		User Function
@author 	Walmir Junior
@since 		16/07/2018
@version 	1.0
@return 	Nil, Nulo
/*/
User Function SF06M03X()
	
	Local cEstat := U_SFGN001A(ProcName(0), "SF06M03X")
	Local _aArea	:= GetArea()

	Private _aEstrut	:= {}
	Private _cArqTxt	:= Space(50)
	Private _cMemo  	:= ""
	
	Private lMsErroAuto := .F.

	_cArqTxt := U_SFXX01J('Alteracao E1_VALOR e E1_SALDO - Titulos a Receber (SE1)','Arquivos csv (*.csv) |*.csv|')
	
	//Abre o Arquivo
	nHdl    := fOpen(_cArqTxt,68)

	If nHdl == -1
		MsgAlert("O arquivo de nome "+_cArqTxt+" nao pode ser aberto! Verifique os parametros.","Atencao!")
		Return
	Endif

	Processa({ |lEnd| _aEstrut := SE1CSV(_cArqTxt) },"LENDO ARQUIVO CSV DE TITULOS")
	Processa({ |lEnd| _lRet := IMPSE1(_aEstrut) }	,"ATUALIZANDO REGISTROS")

	RestArea( _aArea )
	
Return

/** {Protheus.doc} IMPSE1
Funcao que realiza a atualização do Valor

@author: 	Walmir Junior
@since: 	16/07/2018
@Uso: 		SFIEMT
*/
Static Function IMPSE1()
	
Local cEstat := U_SFGN001A(ProcName(0), "SF06M03X")	
Local _lRet := .F.
Local _nContador := 0

Local _cFilSE1	
Local _cPref		
Local _cNum		
Local _cParc		
Local _cTipo		
Local _cCli		
Local _cLoja		
Local _nValor		
Local _nSaldo	

Local _cQuery
Local _lVald	:= .T.

For i := 2 To Len(_aEstrut)
	
	//E1_FILIAL
	_cFilSE1 := PADR( AllTrim(_aEstrut[i][1]),TAMSX3("E1_FILIAL")[1])
	
	//E1_PREFIXO
	_cPref := PADR(AllTrim(_aEstrut[i][2]),TAMSX3("E1_PREFIXO")[1])
	
	//E1_NUM
	_cNum := PADR(AllTrim(_aEstrut[i][3]),TAMSX3("E1_NUM")[1])
	
	//E1_PARCELA
	_cParc := PADR(AllTrim(_aEstrut[i][4]),TAMSX3("E1_PARCELA")[1])
	
	//E1_TIPO
	_cTipo := PADR(AllTrim(_aEstrut[i][5]),TAMSX3("E1_TIPO")[1])
	
	//E1_FORNECE
	_cCli := PADR(AllTrim(_aEstrut[i][6]),TAMSX3("E1_CLIENTE")[1])
	
	//E1_LOJA
	_cLoja := PADR(AllTrim(_aEstrut[i][7]),TAMSX3("E1_LOJA")[1])
	
	//E1_DIRF
	_nValor := Val(StrTran(AllTrim(_aEstrut[i][8]),",","."))
	
	//E1_CODRET
	_nSaldo := Val(StrTran(AllTrim(_aEstrut[i][9]),",","."))
	
	//Msg de Alerta
	_cMsg := _cFilSE1 + ' / ' + _cPref + ' / ' + _cNum + ' / ' + _cParc + ' / ' + _cTipo + ' / ' + _cCli + ' / ' + _cLoja

	//Monta select de validação.
	_cQuery := " Select E1_FILIAL FROM " + RetSqlName("SE1") + " WHERE D_E_L_E_T_ = ' ' "
	_cQuery += " AND E1_FILIAL	= '02MT0010' "
	_cQuery += " AND E1_SITUACA = 'H' "
	_cQuery += " AND E1_VALOR	= E1_SALDO "
	_cQuery += " AND E1_DECRESC 	> 0 "
	_cQuery += " AND E1_HIST LIKE '%Transf%' "
	//Critérios específicos do título.
	_cQuery += " AND E1_FILIAL	= '" + _cFilSE1 + "' "
	_cQuery += " AND E1_PREFIXO = '" + _cPref + "' "
	_cQuery += " AND E1_NUM 	= '" + _cNum + "' "
	_cQuery += " AND E1_PARCELA = '" + _cParc + "' "
	_cQuery += " AND E1_TIPO 	= '" + _cTipo + "' "
	_cQuery += " AND E1_CLIENTE = '" + _cCli + "' "
	_cQuery += " AND E1_LOJA 	= '" + _cLoja + "' "
	
	//Executa query
	_cQuery := ChangeQuery(_cQuery)
	MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
	dbUseArea( .T., 'TOPCONN', TcGenQry( ,, _cQuery ), "TRBXE1", .F., .T. )

	_lVald	:= .T.
	
	//Se o registro é válido para alteração.
	If 	TRBXE1->(!Eof())
		DbSelectArea("SE1")
		SE1->(DbSetOrder(1))
		SE1->(DbGoTop())
		
		If SE1->( DbSeek( _cFilSE1 + _cPref + _cNum + _cParc + _cTipo ) )
			If (_nValor - SE1->E1_DECRESC) != _nSaldo
				_lVald := .F.
			Else
				If RecLock('SE1',.F.)
					SE1->E1_VALOR := _nValor
					SE1->E1_SALDO := _nSaldo
				EndIf
				SE1->( MsUnLock() )
				_nContador++
			EndIf			
		Else
			MsgAlert('Favor verificar a linha: '+ cValToChar(i) + ' - Titulo nao encontrado - ' + _cMsg)
		EndIf		
		SE1->( DbCloseArea() )
	EndIf
	 
	If !_lVald
		MsgAlert('Favor verificar a linha: '+ cValToChar(i) + ' - O E1_SALDO está diferente de (E1_VALOR - E1_DECRESC).')
	EndIf 
	
	If Select("TRBXE1") > 0
		TRBXE1->(dbCloseArea())
	EndIf
Next

If _nContador > 0
	MsgAlert(cValToChar(_nContador) + ' registros foram atualizados.')
EndIf

Return


/** {Protheus.doc} SE1CSV
Funcao que realiza a Leitura do arquivo CSV

@param: 	cArquivo, Caminho do arquivo que sera lido
@author: 	Walmir Junior
@since: 	16/07/2018
@Uso: 		SFIEMT
*/
Static Function SE1CSV(cArquivo)
	
	Local cEstat := U_SFGN001A(ProcName(0), "SF06M03X")
	Local cBuffer     := ""
	Local cAux        := ""
	Local cString     := ""
	Local cSeparador  := ""  //Verifica o tipo de separador do arquivo texto
	Local aTmp        := {}
	Local aEstrutura  := {}
	Local nCont       := 0
	Local cEof        := Chr(10)+ Chr(13)
	Local nRec        := 0
	Local lAspa       := .F.

	//Leitura da quantidade de Registros do Arquivo
	FT_FUSE(cArquivo)
	FT_FGOTOP()
	
	While !FT_FEOF()
		nRec++
		FT_FSKIP()
	End

	ProcRegua(nRec)

	//Leitura do arquivo e verificacao do ultimo caracter da linha lida para  consistencia da pesquisa
	FT_FGOTOP()

	While !FT_FEOF()
	
		cBuffer:= AllTrim(FT_FREADLN())
	
		If At(";",cBuffer) > 0
			cSeparador:= ";" 
		Else //linha de arquivo incorreta.
			IncProc()
			FT_FSKIP()
			Loop
		Endif
	
		If (SubStr(cBuffer,Len(cBuffer),1)<>cSeparador)
			cBuffer += cSeparador + cEof + cSeparador
		Else
			cBuffer += cEof + cSeparador
		Endif
	
		//Incrementa a regua
		IncProc()
	
		//Carrega o array aEstrutura com o resultado da Importacao
		cLinha:= fTAcento(cBuffer)
		lAspa := .F.

		For nCont := 1 To Len(cBuffer)
		
			cAux   := SubStr(cLinha,1,1)
			cLinha := SubStr(cLinha,2)
			
			If (cAux == cEof)
				Exit
			Endif
		
			//Sao verificadas as marcacoes feitas pelo Excel para concatenacao de strings
			Do Case
			
				Case cAux == '"'
					lAspa := !lAspa
					
				Case cAux == cSeparador .And. !lAspa
					aAdd(aTmp,cString)
					cString := ""
					
				OtherWise
					cString += cAux
					
			EndCase
		
		Next nCont
	
		For nCont := Len(aTmp)+1 To 9
			aAdd(aTmp,"")
		Next nCont
	
		//Validacao para nao salvar registros sem entidades
		If !Empty(aTmp[1]) .OR. !Empty(aTmp[2])
			aAdd(aEstrutura,aTmp)
			aTmp := {}
		Endif
		
		FT_FSKIP()
	End

	FT_FUSE()

Return( aEstrutura )
