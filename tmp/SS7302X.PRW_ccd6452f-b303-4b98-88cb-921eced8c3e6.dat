#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "RWMAKE.CH"
#INCLUDE "FONT.CH"
#INCLUDE "COLORS.CH"
#INCLUDE "PARMTYPE.CH"
#INCLUDE "FWMBROWSE.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWCOMMAND.CH"
/*
--------------------------------------------------------------------------------
{Protheus.doc} <SS7302X>
 28 - Resumo de Visitas por Representante.   
 PARAMETOS:
    MV_XACEALL (c) - Defini quais filiais tem acesso MASTER. Os operadores 
                     logados nas filiais identificadas neste parametro tem 
                     acesso as informações de TODAS as demais filiais.
@author<Antonio Dantas>
@since<12/02/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
/*/
Franklin Brito Oliveira - 23/04/2018
	Tratamento para a função [u_SFAJUSX1()], que não existe por padrão na versão 12.
/*/
User Function SS7302X()
Local _oReport			:= Nil     
Private _lCancel			:= .f.  
Private _cPerg 			:= ""
Private _cAlias			:= GetNextAlias()   
Private _cAceAll   		:= SuperGetMv("MV_XACEALL",,"")       
//+------------------------------------------------------------------+
//| Verifica se o operador esta logado na filail DR que tem acesso   |
//| a todas as filiais, ou somente na filial em que esta logada.     |
//+------------------------------------------------------------------+
_cPerg	:= FunName()			//-- Define o Grupo de Perguntas   
//+------------------------------------------------------------------+
//|   Interface de impressao                                         |
//+------------------------------------------------------------------+
_oReport := ReportDef()
If !_lCancel
	_oReport:PrintDialog()
Endif	    
Return


/*
--------------------------------------------------------------------------------
{Protheus.doc} <ReportDef>
 28 - Resumo de Visitas por Representante.   

@author<Antonio Dantas>
@since<12/02/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function ReportDef()
Local _cTitulo		:= "28 - Resumo de Visitas por Representante"
Local _cSubTit		:= ""  
Local _oReport		:= Nil
//--
Local _oVendedor		:= Nil
Local _oClinte		:= Nil
Local _oAgenda		:= Nil  
Local _oHistory		:= Nil   
Local _oTotais		:= Nil 
//+------------------------------------------------------------------+
//| Carrega as perguntas relativas aos parametros de Impressao       |
//|   Mv_par01 - Filial DE?                                          |
//|   Mv_par02 - Filial ATE?                                         |
//|   Mv_par03 - Polo de Venda DE?                                   |
//|   Mv_par04 - Polo de Venda ATE?                                  |
//|   Mv_par05 - Vendedor DE?                                        |
//|   Mv_par06 - Vendedor ATE?                                       |
//|   Mv_par07 - Cliente DE?                                         |
//|   Mv_par08 - Cliente ATE?                                        |
//|   Mv_par09 - Raiz de CNPJ Cliente ?                              |
//|   Mv_par10 - Data de Visita DE ?                                 |
//|   Mv_par11 - Data de Visita ATE ?                                |
//+------------------------------------------------------------------+
//xParPerg(_cPerg)
CriaSx1(_cPerg)      
//+------------------------------------------------------------------+
//|  Monta tela de paramentos para usuario, se cancelar sair         |
//+------------------------------------------------------------------+
If !Pergunte(_cPerg,.t.)  
	_lCancel := .T. 
   Return
Endif 
//+------------------------------------------------------------------+
//| Verifica se o operador esta logado na filail DR que tem acesso   |
//| a todas as filiais, ou somente na filial em que esta logada.     |
//+------------------------------------------------------------------+
If !(cFilAnt $ _cAceAll)
	Mv_par01	:= cFilAnt
	Mv_par02	:= cFilAnt
Endif 
//-- Defini o sub-titulo do Relatorio 
_cSubTit := " - Periodo [De: "+DtoC(Mv_par10)+"Ate: "+DtoC(Mv_par11)+"] "  
//+------------------------------------------------------------------+
//|   Seleciona a tabela temporaria que sera referencia              | 
//+------------------------------------------------------------------+
FWMsgRun(, {|| u_fGetAgen() }, "Processando a Consulta das Agendas e Apontamentos!", "Aguarde...")
//+------------------------------------------------------------------+
//|    Construcao do Objeto de Impressao do Relatorio                |
//+------------------------------------------------------------------+
//                    New(cReport,cTitle,uParam,bAction,cDescription,lLandscape,uTotalText,lTotalInLine,cPageTText,lPageTInLine,lTPageBreak,nColSpace)
_oReport := TReport():New(_cPerg,_cTitulo,_cPerg,{|_oReport|  ReportPrint(_oReport) },_cSubTit,.t.)
//&&--  _oReport:SetLandScape() 			//-- Modo Paisagem 
_oReport:SetPortrait() 			//-- Modo Retrato 
//+------------------------------------------------------------------+
//|    *****      S e c a o  -  1      *****                         |
//+------------------------------------------------------------------+
_oVendedor := TRSection():New(_oReport,"Vendedor",{"SA3"} )
TRCell():New(_oVendedor,"AD7_FILIAL"	,"AD7" 	,"Filial"			,PesqPict("AD7","AD7_FILIAL") 	,TamSX3("AD7_FILIAL")[1]	,.F.) 
TRCell():New(_oVendedor,"A3XDESCP"		,"SA3" 	,"Polo de Venda"	,"@!"    							,0							,.F.)
TRCell():New(_oVendedor,"A3_COD"		,"SA3" 	,"Codigo"			,PesqPict("SA3","A3_COD")    	,TamSX3("A3_COD")[1]		,.F.)    
TRCell():New(_oVendedor,"A3_NOME"		,"SA3" 	,"Nome"			,PesqPict("SA3","A3_NOME")		,TamSX3("A3_NOME")[1]	,.F.)   
TRCell():New(_oVendedor,"A3_ADMISS"	,"SA3" 	,"Admissão"		,PesqPict("SA3","A3_ADMISS")	,TamSX3("A3_ADMISS")[1]	,.F.) 
TRCell():New(_oVendedor,"A3_CEL"		,"SA3" 	,"Celular"			,PesqPict("SA3","A3_CEL")  		,TamSX3("A3_CEL")[1]		,.F.)    
//+------------------------------------------------------------------+
//|    *****      S e c a o  -  2      *****                         |
//+------------------------------------------------------------------+
_oClinte := TRSection():New(_oReport,"Cliente",{"SA1"} )
TRCell():New(_oClinte,"A1_NOME"		,"SA1" 	,"Cod/Loj - Cliente"	,PesqPict("SA1","A1_NOME")   	,40							,.F.)   
TRCell():New(_oClinte,"A1_END"		,"SA1" 	,"Endereço"			,PesqPict("SA1","A1_END") 	 	,20							,.F.)    
TRCell():New(_oClinte,"A1_MUN"		,"SA1" 	,"Cidade - UF"		,PesqPict("SA1","A1_MUN")		,20							,.F.)    
TRCell():New(_oClinte,"A1_TEL"		,"SA1" 	,"Telefone"			,PesqPict("SA1","A1_TEL")		,TamSX3("A1_TEL")[1]		,.F.)    
TRCell():New(_oClinte,"A1_CNAE"		,"SA1" 	,"CNAE"				,PesqPict("SA1","A1_CNAE")   	,TamSX3("A1_CNAE")[1]	,.F.)
TRCell():New(_oClinte,"CC3_DESC"	,"CC3" 	,"Descrição"			,PesqPict("SA1","CC3_DESC") 	,20							,.F.)
//-- 
TRCell():New(_oClinte,"A1XFPAS"		,"" 		,"Ctr.FIEMT"			,"@!"   							,5		,.F.)
TRCell():New(_oClinte,"A1XCODSIN"	,"" 		,"Fil.Sind"			,"@!"   							,5		,.F.)
//-- 
TRCell():New(_oClinte,"A1_XTOPDN"	,"SA1" 	,"Top.250"				,PesqPict("SA1","A1_XTOPDN")	,TamSX3("A1_XTOPDN")[1]		,.F.)
TRCell():New(_oClinte,"A1_XTOPUF"	,"SA1" 	,"Top.500"				,PesqPict("SA1","A1_XTOPUF")	,TamSX3("A1_XTOPUF")[1]		,.F.)
TRCell():New(_oClinte,"A1_XTOPJUR"	,"SA1" 	,"Top.20"				,PesqPict("SA1","A1_XTOPJUR")	,TamSX3("A1_XTOPJUR")[1]		,.F.)
//-- 
TRCell():New(_oClinte,"A1X_CTRA"	,"" 		,"Ctr.Ant."			,"@!"   							,5		,.F.)
TRCell():New(_oClinte,"A1Y_PROP"	,"" 		,"Env.Pro"				,"@!"   							,5		,.F.)
TRCell():New(_oClinte,"A1Y_CTR"		,"" 		,"Ass.CTR"				,"@!"   							,5		,.F.)
//+------------------------------------------------------------------+
//|    *****      S e c a o  -  3      *****                         |
//+------------------------------------------------------------------+
_oAgenda := TRSection():New(_oReport,"Agendas",{"AD5"} )
TRCell():New(_oAgenda,"AD5_DATA"		,"AD5" 	,"Data"			,""										,14								,.F.)  
TRCell():New(_oAgenda,"AD5_SEQUEN"		,"AD5" 	,"Seg."			,PesqPict("AD5","AD5_SEQUEN")	,TamSX3("AD5_SEQUEN")[1]	,.F.)
TRCell():New(_oAgenda,"AD5_XRHINI"		,"AD5" 	,"Hr INI"			,PesqPict("AD5","AD5_XRHINI")  	,TamSX3("AD5_XRHINI")[1]	,.F.)
TRCell():New(_oAgenda,"AD5_XRHFIM"		,"AD5" 	,"Hr FIM"			,PesqPict("AD5","AD5_XRHFIM")  	,TamSX3("AD5_XRHFIM")[1]	,.F.)
TRCell():New(_oAgenda,"U5_CONTAT"		,"SU5" 	,"Contato"		,PesqPict("SU5","U5_CONTAT")  	,TamSX3("U5_CONTAT")[1]	,.F.) 
TRCell():New(_oAgenda,"UM_DESC"			,"SUM" 	,"Cargo"			,PesqPict("SUM","UM_DESC")    	,20								,.F.)   
TRCell():New(_oAgenda,"U5_FONE"			,"AD5" 	,"Telefone"		,PesqPict("SU5","U5_FONE")    	,TamSX3("U5_FONE")[1]		,.F.)   
TRCell():New(_oAgenda,"U5_CELULAR"		,"AD5" 	,"Celular"		,PesqPict("SU5","U5_CELULAR")  	,TamSX3("U5_CELULAR")[1]	,.F.)
TRCell():New(_oAgenda,"U5_EMAIL"		,"AD5" 	,"E-mail"			,PesqPict("SU5","U5_EMAIL")   	,TamSX3("U5_EMAIL")[1]	,.F.)  
TRCell():New(_oAgenda,"AC5_DESCRI"		,"AD5" 	,"Evento"			,PesqPict("SU5","AC5_DESCRI") 	,30								,.F.)
//+------------------------------------------------------------------+
//|    *****      S e c a o  -  4      *****                         |
//+------------------------------------------------------------------+
_oHistory := TRSection():New(_oReport,"Historico",{"AD5"} )
TRCell():New(_oHistory,"CXHISTOR"		,"" 	,""		,"@!"						,10								,.F.)  
TRCell():New(_oHistory,"AD5XRHIST"		,"" 	,""		,"@!"						,150							,.F.)  
_oHistory:lHeaderSection := .f.  
_oHistory:SetHeaderSection(.f.)
//+------------------------------------------------------------------+
//|    *****      S e c a o  -  5      *****                         |
//+------------------------------------------------------------------+
_oTotais := TRSection():New(_oReport,"Totais",{"TMP"} )
TRCell():New(_oTotais,"AD5TOTTP"		,"" 	,""				,"@!"	   						,30						,.F.)  
TRCell():New(_oTotais,"AD5VISITA"		,"" 	,"Visitas"		,"@E 9,999.99"	   			,15						,.F.)  
TRCell():New(_oTotais,"AD5PROPOS"		,"" 	,"Propostas"	,"@E 9,999.99"	   			,15						,.F.)  
TRCell():New(_oTotais,"AD5CTRASS"		,"" 	,"Crt Assi."	,"@E 9,999.99"	   			,15						,.F.)  
Return _oReport

/*
+--------------------------------------------------------------------------+
 {Protheus.doc}<ReportPrint>
  28 - Resumo de Visitas por Representante.

@Author<Antonio Dsantas>
@since<28/03/2014>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
+--------------------------------------------------------------------------+
*/
Static Function ReportPrint(_oReport)
Local _oVendedor		:= _oReport:Section(1)
Local _oClinte		:= _oReport:Section(2)
Local _oAgenda		:= _oReport:Section(3)  
Local _oHistory		:= _oReport:Section(4)  
Local _oTotais		:= _oReport:Section(5)  
//--
Local _nRecs			:= 0 
Local _cDescPolo		:= ""
Local _cDescrCli		:= ""
Local _cDescrCid		:= "" 
//-- 
Local _lImpVend		:= .t.
Local _cVend_ATU 		:= ""
//-- 
Local _lImpCli		:= .t.
Local _cCli_ATU 		:= ""
Local _cLojaCli		:= ""
//-- 
Local _lTemCtr 		:= .f.      
Local _lTemProp		:= .f.
Local _lCrtAss		:= .f.
//-- 
Local _lFirstTime		:= .t.   
//-- Variaveis de Totalização do Relatorio 
Local _nVisita		:= 0
Local _nPropos		:= 0
Local _nCtrAss		:= 0 
Local _nVisita_T		:= 0
Local _nPropos_T		:= 0 
Local _nCtrAss_T		:= 0
Local _cTelef			:= 0
//+------------------------------------------------------------------+
//| Posiciona no inicio o Arquivo Resultado da Consulta Sql          | 
//+------------------------------------------------------------------+
dbSelectArea(_cAlias)  
(_cAlias)->(dbgotop())    
//-- Conta o numero do Registro da Tabela Temporaria
(_cAlias)->(dbEval({|| _nRecs++ }))
_oReport:SetMeter(_nRecs)
//-- 
dbSelectArea(_cAlias)  
(_cAlias)->(dbgotop())
//-- Idenrifica o Vendedor 
_cVend_ATU 	:= (_cAlias)->A3_COD
//-- Identifica o Cliente  
_cCli_ATU 	:= (_cAlias)->A1_COD
_cLojaCli	:= (_cAlias)->A1_LOJA
//-- Controle de Entrada, quebra.
_lFirstTime := .t.    
//+------------------------------------------------------------------+
//| Inicia Laco para impressao do Relatorio                          |
//+------------------------------------------------------------------+
Do While (_cAlias)->(!eof())   
	_nVisita++
	_oReport:IncMeter()    
	//+------------------------------------------------------------------+
	//|  Imprime a IDENTIFICAÇÃO DO VENDEDOR                             |
	//+------------------------------------------------------------------+
	If _lImpVend  
		_oVendedor:Init()
		If !_lFirstTime
			//-- Salta linha dupla 
			_oReport:SkipLine()
			_oReport:SkipLine()
			_oReport:SkipLine()
		Endif    
		_cDescPolo	:= (_cAlias)->A3_XPOLO+" - "+Substr(A3_XDESCRP,1,30) 
		//-- 
		_oReport:SetLeftMargin(1)		//-- Seta a Margem a partir da posição 1
		_oVendedor:Cell( "AD7_FILIAL"	):SetBlock({|| (_cAlias)->AD7_FILIAL  		}) 
		_oVendedor:Cell( "A3XDESCP"		):SetBlock({||  _cDescPolo					})
		_oVendedor:Cell( "A3_COD"		):SetBlock({|| (_cAlias)->A3_COD  			})    
		_oVendedor:Cell( "A3_NOME"		):SetBlock({|| (_cAlias)->A3_NOME  		})   
		_oVendedor:Cell( "A3_ADMISS"	):SetBlock({|| (_cAlias)->A3_ADMISS  		}) 
		_oVendedor:Cell( "A3_CEL"		):SetBlock({|| (_cAlias)->A3_CEL  			})  
		_oVendedor:PrintLine()		//-- Imprime e alinha   
		_lImpVend := .f.
	Endif 
	If _lImpCli
		//-- Verifica se existem Contratos Vingente para o Cliente 		
		_lTemCtr	:= fVerCN9((_cAlias)->AD7_FILIAL,(_cAlias)->A1_COD,(_cAlias)->A1_LOJA)     
		//-- Veririca se Tem Proposta oferecida ao cliente 
		_lTemProp	:= !Empty(Alltrim((_cAlias)->	AD1_DTASSI))
    	_nPropos 	+= Iif(_lTemProp,1,0)
		//-- Verifica se Assinou o Contrato.
		_lCrtAss	:= !Empty(Alltrim((_cAlias)->	AD1_DTASSI))
    	_nCtrAss 	+= Iif(_lCrtAss,1,0)
		//--             
		_oClinte:Init()
		_oReport:SetLeftMargin(3)		//-- Seta a Margem a partir da posição 3 
		//+------------------------------------------------------------------+
		//|  Imprime a IDENTIFICA O CLIENTE VISITADO                         |
		//+------------------------------------------------------------------+
		_cDescrCli := Alltrim((_cAlias)->A1_COD)+"/"+Alltrim((_cAlias)->A1_LOJA)+" - "+Substr((_cAlias)->A1_NOME,1,30)  	
		_oClinte:Cell( "A1_NOME"		):SetBlock({|| _cDescrCli 									})    
		_oClinte:Cell( "A1_END"		):SetBlock({|| Substr((_cAlias)->A1_END,1,20)  			})     
		_cDescrCid	:= Substr((_cAlias)->A1_MUN,1,15)+" - "+(_cAlias)->A1_EST
		_oClinte:Cell( "A1_MUN"		):SetBlock({|| _cDescrCid					  				})     
		_oClinte:Cell( "A1_TEL"		):SetBlock({|| (_cAlias)->A1_TEL  							})     
		_oClinte:Cell( "A1_CNAE"		):SetBlock({|| (_cAlias)->A1_CNAE  						})
		_oClinte:Cell( "CC3_DESC"	):SetBlock({|| Substr((_cAlias)->CC3_DESC,1,20)  		}) 
		//-- 	
		_oClinte:Cell( "A1XFPAS"		):SetBlock({|| Iif((_cAlias)->A1_XFPAS="S","Sim","Não")  	}) 
		_oClinte:Cell( "A1XCODSIN"	):SetBlock({|| Iif((_cAlias)->A1_XCODSIN="S","Sim","Não")	}) 
		//-- 	
		_oClinte:Cell( "A1_XTOPDN"	):SetBlock({|| Iif((_cAlias)->A1_XTOPDN="S","Sim","Não")	}) 
		_oClinte:Cell( "A1_XTOPUF"	):SetBlock({|| Iif((_cAlias)->A1_XTOPUF="S","Sim","Não")  	})
		_oClinte:Cell( "A1_XTOPJUR"	):SetBlock({|| Iif((_cAlias)->A1_XTOPJUR="S","Sim","Não")  	}) 
		//-- 	
		_oClinte:Cell( "A1X_CTRA" 	):SetBlock({|| Iif(_lTemCtr,"Sim","Não")  				}) 
		_oClinte:Cell( "A1Y_PROP" 	):SetBlock({|| Iif(_lTemProp,"Sim","Não")               }) 
		_oClinte:Cell( "A1Y_CTR" 	):SetBlock({|| Iif(_lCrtAss,"Sim","Não")  			   	}) 
		_oClinte:PrintLine()	//-- Imprime a Linha    
		_lImpCli := .f.
	Endif 
	//+------------------------------------------------------------------+
	//|  Imprime os Detalhes da AGENDA e APONTAMENTOS.                   |
	//+------------------------------------------------------------------+
	_oAgenda:Init()      
	_oReport:SetLeftMargin(5)		//-- Seta a Margem a partir da posição 5
	//+------------------------------------------------------------------+
	//|  Defini o numero do telefone que sera impresso                   |
	//+------------------------------------------------------------------+
	_cTelef := "" 
	If !Empty(Alltrim((_cAlias)->U5_FONE))
		_cTelef := (_cAlias)->U5_FONE
	Else
	 If !Empty(Alltrim((_cAlias)->U5_FCOM1)) 
	 	_cTelef := (_cAlias)->U5_FCOM1
	 Else
	 	_cTelef := (_cAlias)->U5_FCOM2
	 Endif 		
	Endif  
	//-- 	
	_oAgenda:Cell( "AD5_DATA"	):SetBlock({|| (_cAlias)->AD5_DATA  				})  
	_oAgenda:Cell( "AD5_SEQUEN"	):SetBlock({|| (_cAlias)->AD5_SEQUEN  			})
	_oAgenda:Cell( "AD5_XRHINI"	):SetBlock({|| (_cAlias)->AD5_XRHINI  			})
	_oAgenda:Cell( "AD5_XRHFIM"	):SetBlock({|| (_cAlias)->AD5_XRHFIM  			})
	_oAgenda:Cell( "U5_CONTAT"	):SetBlock({|| (_cAlias)->U5_CONTAT  				}) 
	_oAgenda:Cell( "UM_DESC"		):SetBlock({|| Substr((_cAlias)->UM_DESC,1,20)	})   
	_oAgenda:Cell( "U5_FONE"		):SetBlock({|| _cTelef 								})   
	_oAgenda:Cell( "U5_CELULAR"	):SetBlock({|| (_cAlias)->U5_CELULAR  			})
	_oAgenda:Cell( "U5_EMAIL"	):SetBlock({|| (_cAlias)->U5_EMAIL  				})  
	_oAgenda:Cell( "AC5_DESCRI"	):SetBlock({|| (_cAlias)->AD5_EVENTO+" - "+Substr((_cAlias)->AC5_DESCRI,1,20) })
	_oAgenda:PrintLine()		//-- Imprime a Linha 
	//+------------------------------------------------------------------+
	//|  Imprime o Historico do Apontamento                              |
	//+------------------------------------------------------------------+
	dbSelectArea("AD5")
	AD5->(dbGoto((_cAlias)->AD5RECNO))
	If !Empty(Alltrim(AD5->AD5_XRHIST))
		//-- Finaliza a Sessão da Agenda                  
   		_oAgenda:Finish()
		//-- Inicializa a Sessão do Historico 
		_oHistory:Init()      
		_oReport:SetLeftMargin(7)		//-- Seta a Margem a partir da posição 5
		_oHistory:Cell( "AD5XRHIST" ):SetLineBreak(.T.)     
		_oHistory:Cell( "CXHISTOR"	):SetBlock({|| "HISTORICO: "					})  
		_oHistory:Cell( "AD5XRHIST"	):SetBlock({|| AD5->AD5_XRHIST					})  
		_oHistory:PrintLine()		//-- Imprime a Linha 
		_oHistory:Finish()
	Endif 
	//+------------------------------------------------------------------+
	//|    Vai para o Proximo Registro da TABELA TEMPORARIA              | 
	//+------------------------------------------------------------------+
	(_cAlias)->(dbskip()) 	
	//-- Controla a troca de Vendedor (Para Impresao do Cabelhaço do Vendedor)
	If (_cAlias)->A3_COD != _cVend_ATU
		_cVend_ATU := (_cAlias)->A3_COD
		_oVendedor:Finish()
   		_oAgenda:Finish()
		_lImpVend := .t.
	Endif 
	//-- Controla a troca do Cliente (Para Impresao do Cabelhaço do Cliente)
	If (_cAlias)->A1_COD+(_cAlias)->A1_LOJA != _cCli_ATU+_cLojaCli  
		_cCli_ATU	:= (_cAlias)->A1_COD
		_cLojaCli	:= (_cAlias)->A1_LOJA
		_lImpCli	:= .t.
		_oClinte:Finish()
		_oAgenda:Finish()
		//-- 
		_oReport:SkipLine()		//-- Salta uma Linha    
		_oReport:SkipLine()
		_oReport:SkipLine()
	Endif 
	//-- Controle de Entrada, quebra.
	_lFirstTime := .f.
	//-- Se Trocou de Vendedor Imprime o Resumo
	If _lImpVend
		_oTotais:Init()      
		_oReport:SkipLine()		//-- Salta uma Linha    
		_oReport:SkipLine()
		//-- 
		_oReport:SetLeftMargin(3)		//-- Seta a Margem a partir da posição 1
		_oTotais:Cell( "AD5TOTTP"		):SetBlock({|| "Total do Vendedor"	}) 
		_oTotais:Cell( "AD5VISITA"		):SetBlock({|| _nVisita 			}) 
		_oTotais:Cell( "AD5PROPOS"		):SetBlock({|| _nPropos 			})    
		_oTotais:Cell( "AD5CTRASS"		):SetBlock({|| _nCtrAss  			})   
		_oTotais:PrintLine()		//-- Imprime e alinha   
		_oTotais:Finish()
		//-- Soma o Total Geral 
    	_nVisita_T	+= _nVisita
    	_nPropos_T	+= _nPropos 
    	_nCtrAss_T	+= _nCtrAss
		//-- 
    	_nVisita	:= 0
    	_nPropos	:= 0
    	_nCtrAss	:= 0 
	Endif 
Enddo 
//-- Se Acabou Imprime o Resumo Geral 
If ( _nVisita_T + _nPropos_T + _nCtrAss_T ) > 0
	_oTotais:Init()      
	_oReport:SkipLine()		//-- Salta uma Linha    
	_oReport:SkipLine()
	//-- 
	_oReport:SetLeftMargin(3)		//-- Seta a Margem a partir da posição 1
	_oTotais:Cell( "AD5TOTTP"		):SetBlock({|| "Total GERAL"	}) 
	_oTotais:Cell( "AD5VISITA"		):SetBlock({|| _nVisita_T 		}) 
	_oTotais:Cell( "AD5PROPOS"		):SetBlock({|| _nPropos_T 		})    
	_oTotais:Cell( "AD5CTRASS"		):SetBlock({|| _nCtrAss_T  		})   
	_oTotais:PrintLine()		//-- Imprime e alinha   
	_oTotais:Finish()
	_nVisita_T	:= 0
	_nPropos_T	:= 0 
	_nCtrAss_T	:= 0
Endif 
//+------------------------------------------------------------------+
//|     Finaliza todas as sessões por definitivo                     |
//+------------------------------------------------------------------+
_oVendedor:Finish()
_oClinte:Finish()
_oAgenda:Finish()  
_oTotais:Finish()
//+------------------------------------------------------------------+
//|     Fecha o Arquivo de Trabalho                                  |
//+------------------------------------------------------------------+
(_cAlias)->(dbCloseArea())
//+------------------------------------------------------------------+
//|     Finaliza as sessoes                                          |
//+------------------------------------------------------------------+
Return


/*
+--------------------------------------------------------------------------+
{Protheus.doc}<fGetAgen>
 Monta query que busca as matriculas.

@Author<Antonio Dsantas>
@since<24/06/2014>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
+--------------------------------------------------------------------------+
*/
User Function fGetAgen()
Local _cQuery		:= "" 
_cQuery := ""
_cQuery += " Select AD7.AD7_FILIAL, SA3.A3_COD, SA3.A3_XPOLO, SA3.A3_XDESCRP, SA3.A3_NOME, SA3.A3_ADMISS,SA3.A3_CEL, "+CRLF
_cQuery += "        SA1.A1_COD, SA1.A1_LOJA, SA1.A1_NOME, SA1.A1_END, SA1.A1_BAIRRO, SA1.A1_MUN, SA1.A1_EST, SA1.A1_TEL, "+CRLF
_cQuery += "        SA1.A1_CNAE, CC3.CC3_DESC, SA1.A1_XFPAS,SA1.A1_XCODSIN, SA1.A1_XTOPDN, SA1.A1_XTOPUF,SA1.A1_XTOPJUR, "+CRLF
_cQuery += "        AD5.AD5_DATA, AD5.AD5_SEQUEN, AD5.AD5_XRHINI, AD5.AD5_XRHFIM, "+CRLF
_cQuery += "        SU5.U5_CONTAT, SU5.U5_FUNCAO, SUM.UM_DESC, SU5.U5_FONE, SU5.U5_FCOM1, SU5.U5_FCOM2, SU5.U5_CELULAR, SU5.U5_EMAIL, "+CRLF 
_cQuery += "        AD5.AD5_EVENTO, AC5.AC5_DESCRI, AD5.R_E_C_N_O_ as AD5RECNO, "+CRLF   
_cQuery += "        AD1.AD1_DTASSI "+CRLF   
_cQuery += " From "+RetSqlName("AD7")+" AD7 "+CRLF
/*Apontamentos*/
_cQuery += " Inner Join "+RetSqlName("AD5")+" AD5 on AD5.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "              And AD5.AD5_FILIAL = AD7.AD7_FILIAL "+CRLF 
_cQuery += "              And AD5.AD5_VEND = AD7.AD7_VEND "+CRLF
_cQuery += "              And AD5.AD5_DATA = AD7.AD7_DATA "+CRLF
/*
	Bloco abaixo substituida para testes.... OBSERVAR... 
*/
//-- _cQuery += "              And AD5.AD5_NROPOR = AD7.AD7_NROPOR "+CRLF
_cQuery += "              And ( "+CRLF
_cQuery += "                    ( AD5.AD5_NROPOR = AD7.AD7_NROPOR ) "+CRLF
_cQuery += "               or "+CRLF   
_cQuery += "                    ( AD5.AD5_CODCLI = AD7.AD7_CODCLI And AD5.AD5_LOJA = AD7.AD7_LOJA ) "+CRLF 
_cQuery += "                   ) "+CRLF
/*Oportunidades de Venda*/
_cQuery += " Left Join "+RetSqlName("AD1")+" AD1 on AD1.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "             And AD1.AD1_FILIAL = AD7.AD7_FILIAL "+CRLF 
_cQuery += "             And AD1.AD1_NROPOR = AD5.AD5_NROPOR "+CRLF                   
If Empty(Alltrim((Mv_par09)))
	/*Cientes*/
	_cQuery += " Inner Join "+RetSqlName("SA1")+" SA1 on SA1.D_E_L_E_T_ = ' ' "+CRLF 
	_cQuery += "             And SA1.A1_FILIAL = '"+FwxFilial("SA1")+"' "+CRLF
	_cQuery += "             And SA1.A1_COD = AD1.AD1_CODCLI "+CRLF
	_cQuery += "             And SA1.A1_LOJA =  AD1.AD1_LOJCLI "+CRLF
Else
	/*Cientes*/
	_cQuery += " Inner Join "+RetSqlName("SA1")+" SA1 on SA1.D_E_L_E_T_ = ' ' "+CRLF
	_cQuery += "             And SA1.A1_FILIAL = '"+FwxFilial("SA1")+"' "+CRLF
	_cQuery += "             And SA1.A1_COD = AD7.AD7_CODCLI "+CRLF
	_cQuery += "             And SA1.A1_LOJA = AD7.AD7_LOJA "+CRLF 
	_cQuery += "             And SA1.A1_CGC Like '"+Alltrim(Mv_par09)+"%' "+CRLF
Endif 	
/*Eventos do Contato x Visita*/
_cQuery += " Left Join "+RetSqlName("AC5")+" AC5 on AC5.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "             And AC5.AC5_FILIAL = Substr(AD7.AD7_FILIAL,1,4) "+CRLF             
_cQuery += "             And AC5.AC5_EVENTO = AD5.AD5_EVENTO "+CRLF
/*Vendedores*/
_cQuery += " Left Join "+RetSqlName("SA3")+" SA3 on SA3.D_E_L_E_T_ = ' ' "+CRLF 
_cQuery += "             And SA3.A3_FILIAL = '"+FwxFilial("SA3")+"' "+CRLF             
_cQuery += "             And SA3.A3_COD = AD7.AD7_VEND "+CRLF
/*Cadastro de CNAE*/
_cQuery += " Left Join "+RetSqlName("CC3")+" CC3 on CC3.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "             And CC3.CC3_FILIAL = '"+FwxFilial("CC3")+"' "+CRLF
_cQuery += "             And CC3.CC3_COD = SA1.A1_CNAE "+CRLF
/*Contatos*/
_cQuery += " Left Join "+RetSqlName("SU5")+" SU5 on SU5.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "             And SU5.U5_FILIAL = '"+FwxFilial("SU5")+"' "+CRLF
_cQuery += "             And SU5.U5_CODCONT = AD7_CONTAT "+CRLF
/*Cargos*/
_cQuery += " Left Join "+RetSqlName("SUM")+" SUM on SUM.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += "             And SUM.UM_FILIAL = AD7.AD7_FILIAL "+CRLF
_cQuery += "             And SUM.UM_CARGO = SU5.U5_FUNCAO "+CRLF
/*Agenda do Vendedor*/
_cQuery += " where AD7.D_E_L_E_T_ = ' ' "+CRLF
_cQuery += " And AD7.AD7_FILIAL BetWeen '"+Mv_par01+"' And '"+Mv_par02+"' "+CRLF
_cQuery += " And Substr(AD7.AD7_FILIAL,1,4) = '"+Substr(cFilAnt,1,4)+"' "+CRLF
_cQuery += " And AD7.AD7_XPOLO BetWeen '"+Mv_par03+"' And '"+Mv_par04+"' "+CRLF
_cQuery += " And AD7.AD7_VEND BetWeen '"+Mv_par05+"' And '"+Mv_par06+"' "+CRLF
If !Empty(Alltrim((Mv_par09)))
	_cQuery += " And (( AD7.AD7_CODCLI BetWeen '"+Mv_par07+"' And '"+Mv_par08+"') And AD7.AD7_CODCLI not in ('      ') ) "+CRLF
Endif
_cQuery += " And AD7.AD7_DATA BetWeen '"+DtoS(Mv_par10)+"' And '"+DtoS(Mv_par11)+"' "+CRLF

/* 18/08/15 -  Jose Leite - CSI
	Comentado o trecho abaixo para realizar outra forma de ordenacao 
//_cQuery += " Order By AD7.AD7_FILIAL, AD7.AD7_VEND, AD7.AD7_CODCLI, AD7.AD7_LOJA, AD5.AD5_SEQUEN "+CRLF
*/
//Inicio
_cQuery += " Order By AD7.AD7_FILIAL, AD7.AD7_VEND, AD5.AD5_DATA, AD5.AD5_SEQUEN, AD7.AD7_CODCLI, AD7.AD7_LOJA "+CRLF
//Fim
//+------------------------------------------------------------------+
//| Grava o Resultado da Query para consulta                         |
//+------------------------------------------------------------------+a
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
If Select(_cAlias)>0
	(_cAlias)->(DbCloseArea())
Endif
DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),_cAlias,.t.,.t.)
//+------------------------------------------------------------------+
//| Converte os campos tipo DATA                                     |
//+------------------------------------------------------------------+
TCSETFIELD( _cAlias,"A3_ADMISS"	,"D",8,0 )
TCSETFIELD( _cAlias,"AD5_DATA"	,"D",8,0 )
Return .t.


/*
--------------------------------------------------------------------------------
{Protheus.doc} <fVerCN9>
 Consulta a CN9 - Contratos, verifica se existe contrato VINGENTE para
 Cliente/Loja informado como referencia.

@author<Antonio Dantas>
@since<13/02/2015>
@version<1.00>

@receive
<     _cFilial (c) - Filial que sera consultada
      _cCodCli (c) - Codigo do Cliente
      _cLojCli (c) - Loja do Cliente 
>
@return
<   _lFoundCTR (l) - (.t.) Encontrou Contratos Vingentes 
                     (.f.) Não encontrole contratos Vingentes.
>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function fVerCN9(_cFilial,_cCodCli,_cLojCli)
Local _lFoundCTR	:= .f.
Local _cDateINI 	:= DtoS(CtoD(StrZero(Day(dDataBase),2)+ "/"+StrZero(Month(dDataBase),2)+"/" +StrZero(Year(dDataBase)-2,4)))
Local _cQuery		:= "" 
//-- 
_cQuery := ""
_cQuery += " Select *From "+RetSqlName("CN9")+" "+CRLF
_cQuery += " where D_E_L_E_T_ = ' ' "+CRLF
_cQuery += " And CN9_FILIAL = '"+_cFilial+"' "+CRLF
_cQuery += " And CN9_CLIENT = '"+_cCodCli+"'"+CRLF
_cQuery += " And CN9_LOJACL = '"+_cLojCli+"'"+CRLF
_cQuery += " And CN9_DTASSI >= '"+_cDateINI+"'"+CRLF
_cQuery += " And CN9_SITUAC Not In ('01','06')	"+CRLF	//-- *01-Cancelado/06-Paralisado
//+------------------------------------------------------------------+
//| Grava o Resultado da Query para consulta                         |
//+------------------------------------------------------------------+
MemoWrite("C:\temp\"+FunName()+"_"+ProcName()+".TXT",_cQuery)
If Select("TMPCN9")>0
	TMPCN9->(DbCloseArea())
Endif
DbUseArea(.t.,"TOPCONN",TcGenQry(,,_cQuery),"TMPCN9",.t.,.t.)
//-- Encontrou Contratos Vingentes 
If TMPCN9->(!Eof()) .and. TMPCN9->(!Bof())
	_lFoundCTR	:= .t.
Endif 
TMPCN9->(DbCloseArea())
Return _lFoundCTR 


/*
--------------------------------------------------------------------------------
{Protheus.doc} <xParPerg>
 Cria as perguntas.	  

@author<Antonio Dantas>
@since<13/02/2015>
@version<1.00>
@receive<Nil>
@return<Nil>
@example<Nil>
@see<Nil>
--------------------------------------------------------------------------------
*/
Static Function xParPerg()	
Local _aPerg := {}
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//   //-- MAPEAMENTOS DOS CAMPOS DE SX1
//   aAdd (_aPerg,{"X1_PERGUNT","X1_PERPA","X1_PERENG","MV_CHL","C",5,0,0,"X1_GSC","X1_VALID",;
//								"X1_VAR01",("X1_DEF01" e "X1_PYNE"),"X1_DEFSPA1","X1_DEFENG1","X1_CNT01",;
//								"X1_VAR02","X1_DEF02","X1_DEFSPA2","X1_DEFENG2","X1_CNT02",;
//								"X1_VAR03","X1_DEF03","X1_DEFSPA3","X1_DEFENG3","X1_CNT03",;
//								"X1_VAR04","X1_DEF04","X1_DEFSPA4","X1_DEFENG4","X1_CNT04",;
//								"X1_VAR05","X1_DEF05","X1_DEFSPA5","X1_DEFENG5","X1_CNT05",;
//								"X1_F3","X1_GRPSXG","","X1_HELP","X1_PICTURE",{"Descricao para Tela PTG"},{"Descricao para Tela EPA"},{"Descricao para Tela USA"}})
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*&*
//+------------------------------------------------------------------+
//| Verifica se o operador esta logado na filail DR que tem acesso   |
//| a todas as filiais, ou somente na filial em que esta logada.     |
//+------------------------------------------------------------------+
//-- Mv_par01 =     Filial DE?
aAdd(_aPerg, {"Filial DE?","Filial DE?","Filial DE?","MV_CH1","C",TamSX3("AD5_FILIAL")[1],0,0,"G","u_fVldfil()",;
					"MV_PAR01","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SM0EPU","","","","",{"Codigo da Filial"},{"Codigo da Filial"},{"Codigo da Filial"}})

//-- Mv_par02 =     Filial ATE?
aAdd(_aPerg, {"Filial ATE?","Filial ATE?","Filial ATE?","MV_CH2","C",TamSX3("AD5_FILIAL")[1],0,0,"G","u_fVldfil()",;
					"MV_PAR02","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SM0EPU","","","","",{"Codigo da Filial"},{"Codigo da Filial"},{"Codigo da Filial"}})


//-- Mv_par03 =     Polo de Venda DE?
aAdd(_aPerg, {"Polo de Venda DE?","Polo de Venda DE?","Polo de Venda DE?","MV_CH3","C",TamSX3("AD7_XPOLO")[1],0,0,"G","",;
					"MV_PAR03","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"ZCD","","","","",{"Cod do Polo de Venda DE"},{"Cod do Polo de Venda DE"},{"Cod do Polo de Venda DE"}})

//-- Mv_par04 =     Polo de Venda ATE?
aAdd(_aPerg, {"Polo de Venda ATE?","Polo de Venda ATE?","Polo de Venda ATE?","MV_CH4","C",TamSX3("AD7_XPOLO")[1],0,0,"G","",;
					"MV_PAR04","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"ZCD","","","","",{"Cod do Polo de Venda ATE"},{"Cod do Polo de Venda ATE"},{"Cod do Polo de Venda ATE"}})

//-- Mv_par05 =     Vendedor DE?
aAdd(_aPerg, {"Vendedor DE?","Vendedor DE?","Vendedor DE?","MV_CH5","C",TamSX3("A3_COD")[1],0,0,"G","",;
					"MV_PAR05","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SA3","","","","",{"Codigo do Vendedor"},{"Codigo do Vendedor"},{"Codigo do Vendedor"}})

//-- Mv_par06 =     Vendedor ATE?
aAdd(_aPerg, {"Vendedor ATE?","Vendedor ATE?","Vendedor ATE?","MV_CH6","C",TamSX3("A3_COD")[1],0,0,"G","",;
					"MV_PAR06","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SA3","","","","",{"Codigo do Vendedor"},{"Codigo do Vendedor"},{"Codigo do Vendedor"}})

//-- Mv_par07 =     Cliente DE?
aAdd(_aPerg, {"Cliente DE?","Cliente DE?","Cliente DE?","MV_CH7","C",TamSX3("A1_COD")[1],0,0,"G","",;
					"MV_PAR07","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SA1","","","","",{"Codigo do Cliente"},{"Codigo do Cliente"},{"Codigo do Cliente"}})

//-- Mv_par08 =     Cliente ATE?
aAdd(_aPerg, {"Cliente ATE?","Cliente ATE?","Cliente ATE?","MV_CH8","C",TamSX3("A1_COD")[1],0,0,"G","",;
					"MV_PAR08","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"SA1","","","","",{"Codigo do Cliente"},{"Codigo do Cliente"},{"Codigo do Cliente"}})     
					
//-- Mv_par09 =     Raiz de CNPJ Cliente ?
aAdd(_aPerg, {"Raiz de CNPJ Cliente ?","Raiz de CNPJ Cliente ?","Raiz de CNPJ Cliente ?","MV_CH9","C",14,0,0,"G","",;
					"MV_PAR09","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Informe RAIZ do CNPJ do Cliente."},{"Informe RAIZ do CNPJ do Cliente."},{"Informe RAIZ do CNPJ do Cliente."}})

//-- Mv_par10 =     Data de Visita DE ?
aAdd(_aPerg, {"Data de Visita DE ?","Data de Visita DE ?","Data de Visita DE ?","MV_CHA","D",8,0,0,"G","",;
					"MV_PAR10","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Data de Visita DE ?"},{"Data de Visita DE ?"},{"Data de Visita DE ?"}})

//-- Mv_par11 =     Data de Visita ATE ?
aAdd(_aPerg, {"Data de Visita ATE ?","Data de Visita ATE ?","Data de Visita ATE ?","MV_CHB","D",8,0,0,"G","",;
					"MV_PAR11","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",;
					"","","","","",{"Data de Visita ATE ?"},{"Data de Visita ATE ?"},{"Data de Visita ATE ?"}})

u_SFAJUSX1(_cPerg,_aPerg) 
Return 

/*/{Protheus.doc} CriaSx1
	Função para criar as perguntas/parâmetros de relatório
	
@author Franklin B. Oliveira
@since 26/04/2018
@param cPerg, characters, grupo de perguntas 
@type function
/*/
Static Function CriaSx1(cPerg)

	Local nI		:= 0
	Local nJ		:= 0
	Local lSX1		:= .F.
	Local aSaveArea	:= GetArea()
	Local aPergs	:= {}
	Local aEstrut	:= {}
	Local aHelpEng	:= {}
	Local aHelpSpa	:= {}
	Local aHelpPor	:= {}
	
	//				X1_GRUPO   X1_ORDEM   X1_PERGUNT X1_PERSPA X1_PERENG  X1_VARIAVL X1_TIPO    X1_TAMANHO X1_DECIMAL X1_PRESEL
	//				X1_GSC     X1_VALID   X1_VAR01   X1_DEF01  X1_DEFSPA1 X1_DEFENG1 X1_CNT01   X1_VAR02   X1_DEF02
	//				X1_DEFSPA2 X1_DEFENG2 X1_CNT02   X1_VAR03  X1_DEF03   X1_fDEFSPA3 X1_DEFENG3 X1_CNT03   X1_VAR04   X1_DEF04
	// 				X1_DEFSPA4 X1_DEFENG4 X1_CNT04   X1_VAR05  X1_DEF05   X1_DEFSPA5 X1_DEFENG5 X1_CNT05   X1_F3      X1_GRPSXG X1_PYME
	
	aEstrut := {"X1_GRUPO","X1_ORDEM"  ,"X1_PERGUNT","X1_PERSPA" ,"X1_PERENG" ,"X1_VARIAVL","X1_TIPO" ,"X1_TAMANHO","X1_DECIMAL","X1_PRESEL" ,;
				"X1_GSC"    ,"X1_VALID","X1_VAR01"  ,"X1_DEF01"  ,"X1_DEFSPA1","X1_DEFENG1","X1_CNT01","X1_VAR02"  ,"X1_DEF02"  ,"X1_DEFSPA2",;
				"X1_DEFENG2","X1_CNT02","X1_VAR03"  ,"X1_DEF03"  ,"X1_DEFSPA3","X1_DEFENG3","X1_CNT03","X1_VAR04"  ,"X1_DEF04"  ,"X1_DEFSPA4",;
				"X1_DEFENG4","X1_CNT04","X1_VAR05"  ,"X1_DEF05"  ,"X1_DEFSPA5","X1_DEFENG5","X1_CNT05","X1_F3"     ,"X1_GRPSXG" ,"X1_PYME"}
	
	//-- Mv_par01 =     Filial DE?
	aAdd(aPergs,{cPerg,"01","Filial DE?"        ,"","","mv_ch1","C",TamSX3("AD5_FILIAL")[1],00,00,"G","u_fVldfil()","MV_PAR01","","","","","","","","","","","","","","","","","","","","","","","","","SM0EPU",""})
	
	//-- Mv_par02 =     Filial ATE?		
	aAdd(aPergs,{cPerg,"02","Filial ATE?"       ,"","","mv_ch2","C",TamSX3("AD5_FILIAL")[1],00,00,"G","u_fVldfil()","MV_PAR02","","","","","","","","","","","","","","","","","","","","","","","","","SM0EPU",""})
	
	//-- Mv_par03 =     Polo de Venda DE?
	aAdd(aPergs,{cPerg,"03","Polo de Venda DE?" ,"","","mv_ch3","C",TamSX3("AD7_XPOLO")[1],00,00,"G","","mv_par03","","","","","","","","","","","","","","","","","","","","","","","","","ZCD",""})
	
	//-- Mv_par04 =     Polo de Venda ATE?
	aAdd(aPergs,{cPerg,"04","Polo de Venda ATE?","","","mv_ch4","C",TamSX3("AD7_XPOLO")[1],00,00,"G","","mv_par04","","","","","","","","","","","","","","","","","","","","","","","","","ZCD",""})   
	
	//-- Mv_par05 =     Vendedor DE?
	aAdd(aPergs,{cPerg,"05","Vendedor DE?"      ,"","","mv_ch5","C",TamSX3("A3_COD")[1]   ,00,00,"G","","mv_par05","","","","","","","","","","","","","","","","","","","","","","","","","SA3",""})
	
	//-- Mv_par06 =     Vendedor ATE?
	aAdd(aPergs,{cPerg,"06","Vendedor ATE?"     ,"","","mv_ch6","C",TamSX3("A3_COD")[1]   ,00,00,"G","","mv_par06","","","","","","","","","","","","","","","","","","","","","","","","","SA3",""})
	
	//-- Mv_par07 =     Cliente DE?
	aAdd(aPergs,{cPerg,"07","Cliente DE?"       ,"","","mv_ch7","C",TamSX3("A1_COD")[1]   ,00,00,"G","","mv_par07","","","","","","","","","","","","","","","","","","","","","","","","","SA1",""})

	//-- Mv_par08 =     Cliente ATE?
	aAdd(aPergs,{cPerg,"08","Cliente ATE?"      ,"","","mv_ch8","C",TamSX3("A1_COD")[1]   ,00,00,"G","","mv_par08","","","","","","","","","","","","","","","","","","","","","","","","","SA1",""})
	
	//-- Mv_par09 =     Raiz de CNPJ Cliente ?
	aAdd(aPergs,{cPerg,"09","Raiz de CNPJ Cliente ?" ,"","","mv_ch9","C",14,00,00,"G","","mv_par09","","","","","","","","","","","","","","","","","","","","","","","","","",""})
	
	//-- Mv_par10 =     Data de Visita DE ?
	aAdd(aPergs,{cPerg,"10","Data de Visita DE ?"    ,"","","mv_cha","D",08,00,00,"G","","mv_par10","","","","","","","","","","","","","","","","","","","","","","","","","",""})

	//-- Mv_par11 =     Data de Visita ATE ?
	aAdd(aPergs,{cPerg,"11","Data de Visita ATE ?"   ,"","","mv_chb","D",08,00,00,"G","","mv_par11","","","","","","","","","","","","","","","","","","","","","","","","","",""})

	ProcRegua(Len(aPergs))
	dbSelectArea("SX1")
	dbSetOrder(1)
	IF ! dbSeek(cPerg)
		For nI:= 1 To Len(aPergs)
			If !Empty(aPergs[nI][1])
				If !dbSeek(aPergs[nI,1]+aPergs[nI,2])
					lSX1 := .T.
					RecLock("SX1",.T.)
					For nJ:=1 To Len(aPergs[nI])
						If !Empty(FieldName(FieldPos(aEstrut[nJ])))
							FieldPut(FieldPos(aEstrut[nJ]),aPergs[nI,nJ])
						EndIf
					Next nJ
					MsUnLock()
					dbCommit()
					IncProc("Atualizando Perguntas de Relatorios" + "...")		//"Atualizando Perguntas de Relatorios"
				EndIf
			EndIf
		Next nI
	EndIf
	
	/*
	Inclusao do "help" 
	*/
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Cod do Polo de Venda DE"			)
	AADD(aHelpPor,"Cod do Polo de Venda ATE"		)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Codigo do Cliente"				)
	AADD(aHelpPor,"Codigo do Cliente"				)
	AADD(aHelpPor,"Informe RAIZ do CNPJ do Cliente.")
	AADD(aHelpPor,"Data de Visita DE ?"				)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Data de Visita ATE ?"			)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	
	PutSX1Help("P." + cPerg + "01.",aHelpPor,aHelpEng,aHelpSpa,.T.)
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {}
	
	/*..*/
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Cod do Polo de Venda DE"			)
	AADD(aHelpPor,"Cod do Polo de Venda ATE"		)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Codigo do Cliente"				)
	AADD(aHelpPor,"Codigo do Cliente"				)
	AADD(aHelpPor,"Informe RAIZ do CNPJ do Cliente.")
	AADD(aHelpPor,"Data de Visita DE ?"				)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Data de Visita ATE ?"			)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {}
	
	/*..*/
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Codigo da Filial"				)
	AADD(aHelpPor,"Cod do Polo de Venda DE"			)
	AADD(aHelpPor,"Cod do Polo de Venda ATE"		)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Codigo do Cliente"				)
	AADD(aHelpPor,"Codigo do Cliente"				)
	AADD(aHelpPor,"Informe RAIZ do CNPJ do Cliente.")
	AADD(aHelpPor,"Data de Visita DE ?"				)
	AADD(aHelpPor,"Codigo do Vendedor"				)
	AADD(aHelpPor,"Data de Visita ATE ?"			)
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpSpa,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	Aadd(aHelpEng,"")
	
	PutSX1Help("P." + cPerg + "03.",aHelpPor,aHelpEng,aHelpSpa,.T.)
	AHelpPor := {}
	AHelpEng := {}
	AHelpSpa := {} 
	
	RestArea(aSaveArea)
	
Return