#Include 'Protheus.ch'
#Include 'rwmake.ch'

/*/{Protheus.doc} SF9901F
	Relatório em excel relacionando usuários x grupo
	
@author franklin.oliveira
@since 14/06/2016

@type function
/*/
User Function SF9901F()

Local aButtons	:= {}
Local aSays		:= {}
Local cCadastro	:= "Grupo x Usuários Excel"
Local cPath		:= ""
Local nOpcao	:= 0

Private cPerg	:= FunName()

	//Função para criação das perguntas.
	fCriaSx1()

	//Linhas de descrição do FormBatch
	aAdd(aSays, "Este programa irá exportar uma relação grupo x usuários")
	aAdd(aSays, "no formato excel, conforme os parâmetros informados.")
	
	//Botões da rotina
	aAdd(aButtons, {5, .T., {| | Pergunte(cPerg, .T.)}})
	aAdd(aButtons, {1, .T., {| | nOpcao := 1, FechaBatch()}})
	aAdd(aButtons, {2, .T., {| | FechaBatch()}})
	
	FormBatch(cCadastro, aSays, aButtons)
	
	If nOpcao == 1
		
		cPath := Upper(cGetFile('Arquivos XML (*.xml) |*.xml|', 'Salvar Planilha Como',,'C:\UTIL\',.T.,nOR( GETF_LOCALHARD, GETF_LOCALFLOPPY, GETF_RETDIRECTORY ),.F.))

		If !Empty(cPath)
			oProcess := MsNewProcess():New( { | lEnd | fExpExc( @lEnd,oProcess, cPath) }, 'Gerando Arquivo', 'Aguarde, carregando informações', .T. )
			oProcess:Activate()
		Else
			Help(" ",1,"NOFILE")
		Endif

	EndIf

Return ( Nil )

/*/{Protheus.doc} fExpExc
	Função para exportar o relatório em excel. 
	
@author franklin.oliveira
@since 14/06/2016
@param lEnd, logical, opção cancelar, na rotina de processamento
@param oProcess, object, objeto da rotina de processamento
@param cPath, characters, local onde o arquivo será salvo

@type function
/*/
Static Function fExpExc(lEnd, oProcess, cPath)

Local oExcel		:= FwMsExcel():New()
Local aArea			:= GetArea()
Local aUsers		:= AllUsers()
Local aGroups		:= {}
Local aAllGroups	:= AllGroups()
Local cArquivo		:= CriaTrab( , .F.) + ".xml"
Local cWorkSht		:= "Grupo x Usuário"
Local nX			:= 0
Local nY			:= 0

	oExcel:AddworkSheet(cWorkSht)
	
	oExcel:AddTable (cWorkSht, cWorkSht)
	
	oExcel:AddColumn(cWorkSht, cWorkSht, "Id do Grupo"			, 1, 1)
	oExcel:AddColumn(cWorkSht, cWorkSht, "Grupo"				, 1, 1)
	oExcel:AddColumn(cWorkSht, cWorkSht, "Desc. Grupo"			, 1, 1)
	oExcel:AddColumn(cWorkSht, cWorkSht, "Id do Usuário"		, 1, 1)
	oExcel:AddColumn(cWorkSht, cWorkSht, "Usuário"				, 1, 1)
	oExcel:AddColumn(cWorkSht, cWorkSht, "Nome Completo"		, 1, 1)
	
	oProcess:SetRegua1(Len(aUsers))

	For nX := 1 To Len(aUsers)
	
		If lEnd						
			Exit		
		EndIf
		
		If (MV_PAR01 == 2 .And. aUsers[nX][1][17]) .Or. (MV_PAR01 == 3 .And. !aUsers[nX][1][17]) 
			Loop
		EndIf
				
		oProcess:IncRegua1("Usuário: " + AllTrim(aUsers[nX][1][1]) + " - " + AllTrim(aUsers[nX][1][2]))
		
		aGroups := UsrRetGrp(aUsers[nX][1][1])
		
		oProcess:SetRegua2(Len(aGroups))	
		
		For nY := 1 To Len(aGroups)
		
			If lEnd						
				Exit		
			EndIf
			
			nPosGroup	:= Ascan(aAllGroups, {|x| AllTrim(x[1][1]) == aGroups[nY]})
			
			cCodGroup	:= aAllGroups[nPosGroup][1][1]
			cNamGroup	:= aAllGroups[nPosGroup][1][2]
			cNRedGroup	:= aAllGroups[nPosGroup][1][3]
					
			oExcel:AddRow(cWorkSht,cWorkSht,{cCodGroup, cNamGroup, cNRedGroup, aUsers[nX][1][1], aUsers[nX][1][2], aUsers[nX][1][4]})
		
			oProcess:IncRegua2("Adicionando grupo: " + AllTrim(cCodGroup) + " - " + AllTrim(cNamGroup))
			
		Next nY
		
	Next nX

	
	oExcel:Activate()	
	
	oExcel:GetXMLFile(cPath + cArquivo)
	
	Msgbox( "O Arquivo gerado foi salvo em: " + cPath + cArquivo, "Exportação concluída", "INFO" )
	
	RestArea(aArea)	

Return ( Nil )

/*/{Protheus.doc} fCriaSx1
	Função para criar arquivo de perguntas/parâmetros
	 
@author franklin.oliveira
@since 14/06/2016

@type function
/*/
Static Function fCriaSx1()

	//MV_PAR01  Considerar Usuário   

	u_SFPUTSX1( cPerg, "01","Considerar Usuário", "", "", "MV_CH01", "C", 2, 0, 0, "C", "", "", "", "", "MV_PAR01", "Ambos", "Ambos", "Ambos", "0","Ativos", "Ativos", "Ativos", "Inativos", "Inativos", "Inativos", "", "", "", "","","", {}, {}, {})
	
Return ( Nil )