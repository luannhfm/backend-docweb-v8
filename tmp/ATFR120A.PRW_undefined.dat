#include "ATFR120.CH"
#include "protheus.ch"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ ATFR120  ³ Autor ³ Wagner Xavier         ³ Data ³ 03.08.93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Relacao dos Bens Baixados - Customizado                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Alterado ³ ATFR120A - Do.It Sistemas - ET - SQL Only - 08/14           ³±±
±±³Novo parametro para não considerar motivos - Mark-Browse               ³±±
±±³Nova ordem por Motivo de Baixas                                        ³±±
±±³Alteração no Lay-Out, nova coluna Depreciação Mês N3_VRDMES? 18/08/14  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAATF                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Last change:  CIA   5 Jan 96    9:16 am 
*/

#DEFINE TAMMOTBX 25 //Constante para definir o tamanho da celula de imprressão da Descrição do Motivo de Baixa

User Function ATFR120()
Local oReport    
Private aMotBaixa	:= {}
oReport:=ReportDef()
oReport:PrintDialog()
Return(Nil)
      


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³Claudio D. de Souza    ³ Data ³28/06/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()
Local oReport,oSection1
Local cReport := "ATFR120A"
Local cPerg   := "AFR120A"
Local cAlias1 := "SN3"
Local cAlias2 := "SN1"
Local cAlias3 := "SN4"
Local cAlias4 := "SA2"
Local cTitulo := STR0004 // "RELACAO DOS BENS BAIXADOS"
Local cDescri := STR0001 + " " + STR0002 + " " + STR0003 // "Este relatorio ira' imprimir a rela‡„o bens baixados entre um determinado periodo. Podera' ser impresso por Conta ou Centro de Custo."
Local bCriaCell
Local aOrd := {}
Local cMoeda 
Local bReport := { |oReport|	cMoeda := Str(mv_par07,1),;
										oReport:SetTitle( oReport:Title() + OemToAnsi(STR0009)+; // " por " 
																aOrd[oSection1:GetOrder()] + OemToAnsi(STR0010)+; // " em " 
																Getmv("MV_MOEDA"+cMoeda)+;
																OemToAnsi(STR0011)+; // " entre "
																DTOC(mv_par05) + OemToAnsi(STR0012) + DTOC(mv_par06)),; // " a "
									 	ReportPrint( oReport ) }

aMotBaixa := fMotBaixa()

cAlias1 := cAlias2 := cAlias3 := cAlias4 := "TRB"

aOrd  := {	OemToAnsi(STR0005),; // "Conta"
				OemToAnsi(STR0006),; // "C Custo"
				OemToAnsi("Mot. Baixa") } 

AjustaSX1(cPerg)
Pergunte(cPerg, .F.)

cMoeda := Str(mv_par07,1)

oReport := TReport():New( cReport, cTitulo, cPerg , bReport, cDescri )
oReport:SetMsgPrint("Consultando Banco de Dados")  //Mensagem

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define a 1a. secao do relatorio Valores nas Moedas   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection1 := TRSection():New( oReport, STR0020, {cAlias1}, aOrd ) // "Dados do Bem"

TRCell():New( oSection1, "N3_FILIAL"		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N3_CCONTAB"		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N3_CCUSTO" 		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N3_CBASE"  		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N3_ITEM"   		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N3_TIPO"   		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N1_DESCRIC"		, cAlias2	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N1_AQUISIC"		, cAlias2	,/*X3Titulo*/    	,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)	
TRCell():New( oSection1, "N4_DATA"			, cAlias3	,STR0021     		,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)	// "Data da Baixa"
TRCell():New( oSection1, "N4_NOTA"			, cAlias3	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)	
TRCell():New( oSection1, "N4_SERIE"			, cAlias3	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)	
TRCell():New( oSection1, "N4_MOTIVO"		, cAlias3	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N1_FORNEC" 		, cAlias2	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N1_LOJA"   		, cAlias2	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "A2_NREDUZ" 		, cAlias4	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New( oSection1, "N4_QUANTD" 		, cAlias3	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT")
TRCell():New( oSection1, "VALOR ATUAL"		, cAlias3	,STR0022				,PesqPict("SN3","N3_VRDMES"+cMoeda, 17,mv_par07),17 /*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT") // "Valor Atual"
TRCell():New( oSection1, "DEPR/MES"			, cAlias3	,/*X3Titulo*/    	,PesqPict("SN3","N3_VRDMES"+cMoeda, 17,mv_par07),17 /*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT")
TRCell():New( oSection1, "N3_VRDACM"		, cAlias1	,/*X3Titulo*/		,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT")	
TRCell():New( oSection1, "N3_VRCDA1"		, cAlias1	,/*X3Titulo*/     ,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT")
TRCell():New( oSection1, "VALOR RESIDUAL"	, cAlias3	,STR0023				,PesqPict("SN3","N3_VRDACM"+cMoeda, 17,mv_par07),17 /*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT") // "Valor Residual"
TRCell():New( oSection1, "N4_VLROC"			, cAlias3	,/*X3Titulo*/     ,PesqPict("SN4","N4_VLROC" +cMoeda, 17,mv_par07),17 /*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT")
TRCell():New( oSection1, "LUCRO/PREJUIZO"	, cAlias3	,STR0024      		,PesqPict("SN4","N4_VLROC" +cMoeda, 17,mv_par07),17 /*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT") // "Lucro/Prejuizo"
TRCell():New( oSection1, "N3_AMPLIA"		, cAlias1	,/*X3Titulo*/ 		,/*Picture*/,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/,"RIGHT",.F.,"RIGHT")

oSection1:SetLineBreak()
oSection1:SetTotalInLine(.T.)
oSection1:SetHeaderPage(.T.)
oReport:SetLandscape()

Return(oReport)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ReportPrintºAutor  ³Claudio D. de Souza º Data ³  23/06/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Query de impressao do relatorio                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ SIGAATF                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ReportPrint( oReport )
Local cN1TipoNeg	:= Alltrim(SuperGetMv("MV_N1TPNEG",.F.,"")) // Tipos de N1_PATRIM que aceitam Valor originais negativos
Local cN3TipoNeg	:= Alltrim(SuperGetMv("MV_N3TPNEG",.F.,"")) // Tipos de N3_TIPO que aceitam Valor originais negativos
Local oSection1	:= oReport:Section(1)
Local nOrder		:= oSection1:GetOrder()
Local cMoeda		:= Str(mv_par07,1)
Local cWhere		:= ""
Local cChave
Local cSQLChave
Local cQuery		
Local oBreak1
Local oBreak2
Local oTotConta
Local oTotFil
Local bValorAtual
Local bResidual
Local bLucroPreju
Local cCampos
Local cFilDe  		
Local cFilAte 		
Local cFilPos		
Local cQuebra		
Local nRec			

oReport:SetMeter(0)

If mv_par08 == 2
	cFilDe	:= cFilAnt
	cFilAte	:= cFilAnt
ELSE
	cFilDe	:= mv_par09	// Todas as filiais
	cFilAte	:= mv_par10
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Localiza registro inicial                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF nOrder == 1
	cChave		:= "N3_FILIAL + N3_CCONTAB" 
	cWhere 		:= "SN3.N3_CCONTAB <> ' ' AND "
	cSQLChave 	:= "SN3.N3_FILIAL, SN3.N3_CCONTAB, SN3.N3_CBASE, SN3.N3_ITEM"
ElseIF nOrder == 2
	cChave 		:= "N3_FILIAL + N3_CCUSTO" 
	cWhere 		:= "SN3.N3_CCUSTO <> ' ' AND "
	cSQLChave 	:= "SN3.N3_FILIAL, SN3.N3_CCUSTO, SN3.N3_CBASE, SN3.N3_ITEM"
Else
	cChave 		:= "N4_FILIAL + N4_MOTIVO" 
	cWhere 		:= "SN4.N4_MOTIVO <> ' ' AND "
	cSQLChave 	:= "SN4.N4_FILIAL, N4_MOTIVO"
EndIf

cQuery := "SELECT SN3.N3_FILIAL, SN3.N3_CBASE, SN3.N3_ITEM     , SN3.N3_TIPO   , "
cQuery += "       SN1.N1_DESCRIC, SN1.N1_FORNEC, SN1.N1_LOJA   , SN1.N1_AQUISIC, SN1.N1_PATRIM, "
cQuery += "       SN3.N3_BAIXA , SN3.N3_CCONTAB, SN3.N3_VRDMES1, SN3.N3_VRDMES2, SN3.N3_VRDMES3, SN3.N3_VRDMES4, SN3.N3_VRDMES5, "
cQuery += "       SN3.N3_CCUSTO, SN3.N3_TXDEPR1, SN3.N3_CDEPREC, SN3.N3_CDESP  , SN3.N3_CCDEPR, "
cQuery += "       SN3.N3_VORIG1, SN3.N3_VRCACM1, SN3.N3_AMPLIA1, SN3.N3_VRDACM1, SN3.N3_VRCDA1, "
cQuery += "       SN3.N3_VORIG2, SN3.N3_AMPLIA2, SN3.N3_VRDACM2, "
cQuery += "       SN3.N3_VORIG3, SN3.N3_AMPLIA3, SN3.N3_VRDACM3, "
cQuery += "       SN3.N3_VORIG4, SN3.N3_AMPLIA4, SN3.N3_VRDACM4, "
cQuery += "       SN3.N3_VORIG5, SN3.N3_AMPLIA5, SN3.N3_VRDACM5, "
cQuery += "       SN4.N4_FILIAL, SN4.N4_CBASE  , SN4.N4_ITEM   , SN4.N4_TIPO  , SN4.N4_DATA , "
cQuery += "       SN4.N4_SEQ   , SN4.N4_VENDA  , SN4.N4_TXMEDIA, SN4.N4_NOTA  , SN4.N4_SERIE, "
cQuery += "       SN4.N4_MOTIVO, SN4.N4_QUANTD , "
cQuery += "       SN4.N4_VLROC1, SN4.N4_VLROC2 , SN4.N4_VLROC3 , SN4.N4_VLROC4, SN4.N4_VLROC5, "
cQuery += "       SA2.A2_NREDUZ, N3_DINDEPR, N3_TXDEPR1, N3_TXDEPR2, N3_TXDEPR3, N3_TXDEPR4, N3_TXDEPR5"

cQuery += "FROM "+RetSQLNAme("SN1")+" SN1 "
cQuery += "      INNER JOIN "+RetSQLName("SN3")+" SN3 ON "
cQuery += "            SN1.N1_FILIAL  = SN3.N3_FILIAL AND "
cQuery += "            SN1.N1_CBASE   = SN3.N3_CBASE  AND "
cQuery += "            SN1.N1_ITEM    = SN3.N3_ITEM   AND "
cQuery += "            SN3.D_E_L_E_T_ = ' ' "
cQuery += "      INNER JOIN "+RetSQLName("SN4")+" SN4 ON "
cQuery += "            SN4.N4_FILIAL  = SN3.N3_FILIAL  AND "
cQuery += "            SN4.N4_CBASE   = SN3.N3_CBASE   AND "
cQuery += "            SN4.N4_ITEM    = SN3.N3_ITEM    AND "
cQuery += "            SN4.N4_TIPO    = SN3.N3_TIPO    AND "
cQuery += "            SN4.N4_DATA    = SN3.N3_DTBAIXA AND "
cQuery += "            SN4.N4_SEQ     = SN3.N3_SEQ     AND "
cQuery += "				  SN4.N4_OCORR   = '01'           AND "
cQuery += "				  SN4.N4_TIPOCNT = '1'            AND "

//Do.It Sistemas
If ! Empty(MV_PAR11)
	cQuery += " SN4.N4_MOTIVO NOT IN "+FormatIn(MV_PAR11,",")+" AND "
Endif

cQuery += " SN4.D_E_L_E_T_ = ' ' "

cQuery += "     LEFT JOIN "+RetSQLName("SA2")+" SA2 ON "
cQuery += "          SA2.A2_FILIAL =  '"+xFilial("SA2")+"' AND "
cQuery += "          SA2.A2_COD    = SN1.N1_FORNEC AND "
cQuery += "          SA2.A2_LOJA   = SN1.N1_LOJA AND "
cQuery += "          SA2.D_E_L_E_T_ = ' ' "

If cFilAte == cFilDe
	cQuery += "WHERE SN3.N3_FILIAL = '" + cFilDe	+ "' AND "
Else
	cQuery += "WHERE SN3.N3_FILIAL  BETWEEN '" + cFilDe + "' AND '" + cFilAte +"' AND "
EndIf

If mv_par02 == mv_par01
	cQuery += " SN3.N3_CCONTAB = '" + mv_par01 + "' AND "
Else
	cQuery += " SN3.N3_CCONTAB BETWEEN '" + mv_par01 + "' AND '" +	mv_par02 + "' AND "
EndIf

If mv_par04 == mv_par03
	cQuery += " SN3.N3_CCUSTO  = '" + mv_par03 + "' AND "
Else
	cQuery += " SN3.N3_CCUSTO BETWEEN '" + mv_par03 + "' AND '" + mv_par04 + "' AND "
EndIf

If mv_par06 == mv_par05
	cQuery += " SN3.N3_DTBAIXA = '" + DTOS(mv_par06) + "' AND "
Else
	cQuery += " SN3.N3_DTBAIXA BETWEEN '" + DTOS(mv_par05) + "' AND '" +	DTOS(mv_par06) + "' AND "
EndIf

cQuery += " SN3.N3_BAIXA <> '0' AND "
cQuery += cWhere + " "
cQuery += " SN1.D_E_L_E_T_ = ' ' "
cQuery += " AND SN3.D_E_L_E_T_ = ' ' "

cQuery += " ORDER BY "+cSQLChave

cQuery := ChangeQuery(cQuery)

dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQuery),"TRB", .F., .T.)

nRec := 0
TRB->(dBEval({|| ++nRec}))
TRB->(DbGoTop())

oReport:SetMsgPrint("Imprimindo...")//Mensagem
oReport:SetMeter(nRec)

TCSetField("TRB","N4_DATA"   , "D",8,0)
TCSetField("TRB","N1_AQUISIC", "D",8,0)

IF nOrder == 1
	oBreak1:= TRBreak():New(oSection1, {|| TRB->N3_CCONTAB}, {|| "Total Conta" } )
ElseIf nOrder == 2
	oBreak1:= TRBreak():New(oSection1, {|| TRB->N3_CCUSTO}, {|| "Total Centro de Custo" } )
Else	
	oBreak1:= TRBreak():New(oSection1, {|| TRB->N4_MOTIVO}, {|| "Total Motivo de Baixa" } )
EndIf

oBreak2:= TRBreak():New(oSection1, {|| cFilPos}, {|| "Total Filial" } )

bValorAtual := { || TRB->&("N3_VORIG"+cMoeda) + TRB->&("N3_AMPLIA"+cMoeda) + If(mv_par07 == 1, TRB->N3_VRCACM1, 0) }

bDeprMes := { ||  TRB->&("N3_VRDMES"+cMoeda) }

bResidual	:= { ||	If( cMoeda == "1", If( TRB->N3_TIPO = "05" .Or.;
							TRB->N1_PATRIM $ cN1TipoNeg .Or.;
							TRB->N3_TIPO $ cN3TipoNeg,	(TRB->(N3_VORIG1+N3_VRCACM1+N3_AMPLIA1))+Abs((TRB->(N3_VRDACM1+N3_VRCDA1))),;
							(TRB->(N3_VORIG1+N3_VRCACM1+N3_AMPLIA1))-(TRB->(N3_VRDACM1+N3_VRCDA1))),;
If( 	TRB->N3_TIPO = "05" .Or.;
		TRB->N1_PATRIM $ cN1TipoNeg .Or.;
		TRB->N3_TIPO $ cN3TipoNeg,	 TRB->&("N3_VORIG"+cMoeda)+TRB->&("N3_AMPLIA"+cMoeda)+Abs(TRB->&("N3_VRDACM"+cMoeda)),;
		TRB->&("N3_VORIG"+cMoeda)+TRB->&("N3_AMPLIA"+cMoeda)-TRB->&("N3_VRDACM"+cMoeda) ) ) }
	
		bLucroPreju	:= { ||	If( cMoeda == "1", (TRB->N4_VENDA - Eval(bResidual)),;
									If( cMoeda == Getmv("MV_ATFMOED"), ((TRB->N4_VENDA / TRB->N4_TXMEDIA) - Eval(bResidual)),;
									If( SM2->(MsSeek(TRB->N4_DATA)), (TRB->N4_VENDA / SM2->&("M2_MOEDA"+cMoeda) - Eval(bResidual)), 0))) }
			
			oSection1:Cell("LUCRO/PREJUIZO"):SetTitle("LucroDepr Acumul")
			oSection1:Cell("N3_VRDACM"):SetPicture(PesqPict("SN3","N3_VRDACM"+cMoeda, 17, mv_par07))
			oSection1:Cell("N3_VRDACM"):SetBlock( { || &("N3_VRDACM"+cMoeda) } )
			
			oSection1:Cell("N3_VRDACM"):SetTitle("Depr Acumul")
			oSection1:Cell("N3_VRDACM"):SetPicture(PesqPict("SN3","N3_VRDACM"+cMoeda, 17, mv_par07))
			oSection1:Cell("N3_VRDACM"):SetBlock( { || &("N3_VRDACM"+cMoeda) } )
			
			oSection1:Cell("N4_VLROC"):SetTitle("Valor Baixa")
			oSection1:Cell("N4_VLROC"):SetPicture(PesqPict("SN4","N4_VLROC" +cMoeda, 17, mv_par07))
			oSection1:Cell("N4_VLROC"):SetBlock( { || &("N4_VLROC"+cMoeda) } )
			
			oSection1:Cell("N3_AMPLIA"):SetTitle("Vl Ampliação")
			oSection1:Cell("N3_AMPLIA"):SetPicture(PesqPict("SN3","N3_AMPLIA" +cMoeda, 17, mv_par07))
			oSection1:Cell("N3_AMPLIA"):SetBlock( { || &("N3_AMPLIA"+cMoeda) } )
			
			oSection1:Cell("N4_MOTIVO"):SetSize(TAMMOTBX)
			oSection1:Cell("VALOR ATUAL"):SetBlock(bValorAtual)
			oSection1:Cell("VALOR RESIDUAL"):SetBlock(bResidual)
			oSection1:Cell("LUCRO/PREJUIZO"):SetBlock(bLucroPreju)
			oSection1:Cell("N4_MOTIVO"):SetBlock( { || AtfGetMtvo( TRB->N4_MOTIVO ) } )
                                                       
			oSection1:Cell("DEPR/MES"):SetTitle("Depr Mês")
			oSection1:Cell("DEPR/MES"):SetBlock(bDeprMes)
			
			oTotConta:= TRFunction():New(oSection1:Cell("VALOR ATUAL"	)	,, "SUM",oBreak1 ,,, bValorAtual	,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("N3_VRDACM"		)	,, "SUM",oBreak1 ,,, 				,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("N3_VRCDA1"		)	,, "SUM",oBreak1 ,,, 				,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("VALOR RESIDUAL")	,, "SUM",oBreak1 ,,, bResidual	,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("N4_VLROC"		)	,, "SUM",oBreak1 ,,, 				,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("LUCRO/PREJUIZO")	,, "SUM",oBreak1 ,,, bLucroPreju	,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("N3_AMPLIA"		)	,, "SUM",oBreak1 ,,, 				,.F.,.F.,.F.,oSection1 )
			oTotConta:= TRFunction():New(oSection1:Cell("DEPR/MES"		)	,, "SUM",oBreak1 ,,, bDeprMes		,.F.,.F.,.F.,oSection1 )
			
			oTotFil:= TRFunction():New(oSection1:Cell("VALOR ATUAL"  )	,, "SUM",oBreak2 ,,, bValorAtual	, .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("N3_VRDACM"		)	,, "SUM",oBreak2 ,,, 		    	, .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("N3_VRCDA1"		)	,, "SUM",oBreak2 ,,, 			   , .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("VALOR RESIDUAL")	,, "SUM",oBreak2 ,,, bResidual	, .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("N4_VLROC"		)	,, "SUM",oBreak2 ,,, 				, .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("LUCRO/PREJUIZO")	,, "SUM",oBreak2 ,,, bLucroPreju	, .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("N3_AMPLIA"		)	,, "SUM",oBreak2 ,,, 				, .F. ,  )
			oTotFil:= TRFunction():New(oSection1:Cell("DEPR/MES"		)	,, "SUM",oBreak2 ,,, bDeprMes		, .F. ,  )
			
			oReport:SetTotalText(STR0016)		//"TOT.GERAL:"
			oReport:SetTotalInLine(.F.)
			
			While ! TRB->(Eof()) .And. ! oReport:Cancel()
				oSection1:Init()
				cFilPos := TRB->N3_FILIAL
				While !TRB->(Eof()) .And. cFilPos == TRB->N3_FILIAL .And. ! oReport:Cancel()
					cQuebra := TRB->(&cChave)
					While !TRB->(Eof()) .AND. cQuebra == TRB->(&cChave)
						oReport:IncMeter()                              
						If oReport:Cancel()
							oReport:SkipLine()
							oReport:PrintText(cCancel)
							Exit
						EndIf                
						oSection1:PrintLine()
						TRB->(DbSkip())
					EndDo
				EndDo
				oReport:SkipLine()
			EndDo
			
			oSection1:Finish()
			
			DbSelectArea("TRB")
			DbCloseArea()
			
Return(Nil)
			


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AtfGetMtvo³ Autor ³ Totvs                 ³ Data ³ 03.09.08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna a descricao do motivo da baixa                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAATF                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AtfGetMtvo( cMotivo )
	Local cRet 	:= STR0025 // "Motivo não cadastrado"
	Local nPos	:= aScan( aMotBaixa, { |x| Left( x, 02 ) == cMotivo } )
	If nPos > 0
		cRet := Left(aMotBaixa[ nPos ],TAMMOTBX)
	EndIf	
Return(cRet)
        
                     
                     
//Ajusta array com os motivos de baixa (Tabela 16)                      
Static Function fMotBaixa()
Local cQry, cX 
Local aRow := {}
//Trata apenas os motivos usados
cQry := " SELECT DISTINCT N4_MOTIVO, X5_DESCRI"
cQry += " FROM "+RetSQLName("SN4")+" N4"
cQry += " LEFT JOIN "+RetSQLName("SX5")+" X5 ON X5_TABELA = '16' AND X5_CHAVE = N4_MOTIVO AND X5_FILIAL = '"+xFilial("SX5")+"'"
cQry += " WHERE X5.D_E_L_E_T_ = ' ' AND N4.D_E_L_E_T_ = ' '"
cQry += " ORDER BY N4_MOTIVO"
cQry := ChangeQuery(cQry)
dbUseArea( .T., "TOPCONN", TCGENQRY(,,cQry),"QRYTMP", .F., .T.)
While ! Eof()
	cX := PadR(iif(Empty(X5_DESCRI), "* Não cadastrado...", Capital(X5_DESCRI)),50," ")
	aAdd(aRow, N4_MOTIVO+"-"+cX)
	DbSkip()
End
DbCloseArea()
If Empty(aRow)
	//Trata Todos os motivos cadastrados na tabela 16 SX5
	DbSelectArea("SX5")	
	DbSetOrder(1)
	MsSeek(xFilial("SX5")+"16")
	While ! Eof() .And. X5_FILIAL+X5_TABELA == xFilial("SX5")+"16" 
		Aadd(aRow, SubStr(SX5->X5_CHAVE,1,2 ) + "-" + SubStr(Capital(X5Descri()),1,50 ))
		DbSkip()
	End
Endif	
Return(aRow)



//Ajustes Customização New Report 
Static Function AjustaSX1(cPerg)
Local aHelp	
//Ajusta Perguntas
DbSelectArea("SX1")
dbSetOrder(1)
If ! MsSeek(cPerg) 
	//Contas Contabil
	aHelp := {"Informe a Conta Inicial e Final","Para imprimir todas as contas","Informe: Da Conta = Vazio","Até a Conta = 'ZZZZZZZZZZZZZZZZZZZZ'"}
	u_SFPUTSX1(cPerg, 	"01", "Da Conta ?", "Da Conta ?", "Da Conta ?", "mv_ch1", "C", 20, 0, 1, "G", "", "CT1", "", "",;
						"MV_PAR01","","","","", "","","","","","","","","","","","",aHelp)
	u_SFPUTSX1(cPerg, 	"02", "Até a Conta ?", "Até a Conta ?", "Até a Conta ?", "mv_ch2", "C", 20, 0, 1, "G", "Eval({|| MV_PAR02 >= MV_PAR01})", "CT1", "", "",;
						"MV_PAR02","","","","", "","","","","","","","","","","","",aHelp)
	//Centro de Custos
	aHelp := {"Informe o Centro de Custo Inicial e Final","Para imprimir todos os Centros de Custos","Informe: Do Centro de Custo = Vazio","Até o Centro de Custo = 'ZZZZZZZZZZZZZZZZZZZZ'"}
	u_SFPUTSX1(cPerg, 	"03", "Do Centro de Custo ?", "Do Centro de Custo ?", "Do Centro de Custo ?", "mv_ch3", "C", 20, 0, 1, "G", "", "CTT", "", "",;
						"MV_PAR03","","","","", "","","","","","","","","","","","",aHelp)
	u_SFPUTSX1(cPerg, 	"04", "Até o Centro de Custo ?", "Até o Centro de Custo ?", "Até o Centro de Custo ?", "mv_ch4", "C", 20, 0, 1, "G", "Eval({|| MV_PAR04 >= MV_PAR03})", "CTT", "", "",;
						"MV_PAR04","","","","", "","","","","","","","","","","","",aHelp)
	//Datas
	aHelp := {"Informe a Data Inicial e Final","De Bens Baixados","Com Base no Campo N3_DTBAIXA"}
	u_SFPUTSX1(cPerg, 	"05", "A Partir da Data ?", "A Partir da Data ?", "A Partir da Data ?", "mv_ch5", "D", 8, 0, 1, "G", "", "", "", "",;
						"MV_PAR05","","","","", "","","","","","","","","","","","",aHelp)
	u_SFPUTSX1(cPerg, 	"06", "Até a Data ?", "Até a Data ?", "Até a Data ?", "mv_ch6", "D", 8, 0, 1, "G", "Eval({|| MV_PAR06 >= MV_PAR05})", "", "", "",;
						"MV_PAR06","","","","", "","","","","","","","","","","","",aHelp)
	//Moedas
	aHelp := {"Informe em qual Moeda","O relatorio sera impresso"}
	u_SFPUTSX1(cPerg, 	"07", "Qual Moeda ?", "Qual Moeda ?", "Qual Moeda ?", "mv_ch7", "N", 1, 0, 1, "C", "", "", "", "",;
						"MV_PAR07","Moeda 1","Moeda 1","Moeda 1","", "Moeda 2","Moeda 2","Moeda 2","Moeda 3","Moeda 3","Moeda 3","Moeda 4","Moeda 4","Moeda 4","Moeda 5","Moeda 5","Moeda 5",aHelp)
	//Filiais
	aHelp := {"Informe SIM para que o sistema","Considere os parametros abaixo"}
	u_SFPUTSX1(cPerg,	"08","Cons. Filiais Abaixo ?","Cons. Filiais Abaixo ?","Cons. Filiais Abaixo ?","mv_ch8","N",1,0,0,"C","","","","",;
						"MV_PAR08","SIM","SIM","SIM","", "NAO","NAO","NAO","","","","","","","","","",aHelp)
	aHelp := {"Informe a Filiais da Empresa"," Inicial e Final a Considerar", "Caso o Parametro Acima for = SIM"}
	u_SFPUTSX1(cPerg, 	"09", "Filial De ?", "Filial De ?", "Filial De ?", "mv_ch9", "C", Len(xFilial("SN3")), 0, 1, "G", "", "SM0_01", "", "",;
						"MV_PAR09","","","","", "","","","","","","","","","","","",aHelp)
	u_SFPUTSX1(cPerg, 	"10", "Filial Até ?", "Filial Até ?", "Filial Até ?", "mv_cha", "C", Len(xFilial("SN3")), 0, 1, "G", "Eval({|| MV_PAR10 >= MV_PAR09})", "SM0_01", "", "",;
						"MV_PAR10","","","","", "","","","","","","","","","","","",aHelp)
   //Parametros Mark Browse Motivos de Baixas
	aHelp := {"Informe os motivos a nao considerar","Lista separado por ','","Exemplo: '01,02,...'","Ou Telca F3 para selecionar"}                                                                                                              
	u_SFPUTSX1(cPerg, 	"11", "Nao Considerar Motivos ?", "Nao Considerar Motivos ?", "Nao Considerar Motivos ?", "mv_chb", "C", 60, 0, 1, "G", "", "ATF120", "", "",;
						"MV_PAR11","","","","", "","","","","","","","","","","","",aHelp)
EndIf
//Ajusta Consulta Padrao                                                                             
DbSelectArea("SXB")
dbSetOrder(1)
If ! MsSeek("ATF120")
	RecLock("SXB",.T.)
	XB_ALIAS 	:= "ATF120"
	XB_TIPO 		:= "1"
	XB_SEQ 		:= "01"
	XB_COLUNA 	:=	"RE" 
	XB_DESCRI 	:= "Mark Browse ATFR120 "
	XB_DESCSPA 	:= "Mark Browse ATFR120 "
	XB_DESCENG 	:= "Mark Browse ATFR120 "
	XB_CONTEM 	:= "SX5"
	RecLock("SXB",.T.)
	XB_ALIAS 	:= "ATF120"
	XB_TIPO 		:= "2"
	XB_SEQ 		:= "01"
	XB_COLUNA 	:=	"01" 
	XB_CONTEM 	:= ".T."
	RecLock("SXB",.T.)
	XB_ALIAS 	:= "ATF120"
	XB_TIPO 		:= "5"
	XB_SEQ 		:= "01"
	XB_CONTEM 	:= "U_ATFMOTBX()"
	MsUnLock()
Endif
Return(Nil)



//Rotina Mark Browse do Parametro Motivo de Baixas
User Function ATFMOTBX()
Local cRet := MV_PAR11
Private oDlg, oBrw, oPan, aHead, aSize, aRow, lOk, nX, cX, cP
Private oROK := LoadBitmap(GetResources(),"LBOK")
Private oRNO := LoadBitmap(GetResources(),"LBNO")
                                           
lOk := .F.            
aRow:= {}

cP := FormatIn(cRet, ",")
For nX := 1 To Len(aMotBaixa)  
	cX := Left(aMotBaixa[nX],2)
	aAdd(aRow, {cX $ (cP) , cX, SubStr(aMotBaixa[nX],4,50) })
	DbSkip()
Next

If ! Empty(aRow)

	DEFINE MSDIALOG oDlg TITLE "Seleção dos Motivos de Baixa " FROM 000, 000  TO 300, 600 COLORS 0, 16777215 PIXEL
	
	@ 020, 000 MSPANEL oPan SIZE 300, 130 OF oDlg COLORS 0, 16777215 RAISED
	
	@ 135, 005 BUTTON "&Marca Todos"    	SIZE 050, 012 OF oDlg ACTION aEval(aRow, {|x| x[1]:=.T.}) 	PIXEL
	@ 135, 060 BUTTON "&Desmarca Todos" 	SIZE 050, 012 OF oDlg ACTION aEval(aRow, {|x| x[1]:=.F.}) 	PIXEL
	@ 135, 115 BUTTON "&Inverte" 				SIZE 050, 012 OF oDlg ACTION aEval(aRow, {|x| x[1]:=!x[1]}) PIXEL
	@ 135, 195 BUTTON "&Confirmar" 			SIZE 050, 012 OF oDlg ACTION {|| lOk := .T., oDlg:End()} 	PIXEL
	@ 135, 250 BUTTON "&Sair" 					SIZE 050, 012 OF oDlg ACTION {|| lOk := .F., oDlg:End()} 	PIXEL
	
	aHead := {" ", "Cod", "Descrição"}
	aSize := {1,15,60}
	
	oBrw  := TWBrowse():New(020,000,350,110,,aHead,aSize,oPan,,,,,,,,,,,,.F.,,.T.)
	oBrw:SetArray(aRow)
	oBrw:bLine := {|o| o:aArray[o:nAT]}
	
	oBrw:bLine := {|| { iif(oBrw:aArray[oBrw:nAT,1], oROK, oRNO), oBrw:aArray[oBrw:nAT,2], oBrw:aArray[oBrw:nAT,3]}}
	oBrw:bLDblClick := {|| oBrw:aArray[oBrw:nAT,1] := ! oBrw:aArray[oBrw:nAT,1], oBrw:DrawSelect()}
	oBrw:BHeaderClick := {|o,n| TWBOrd(o,n)} //Ordena
	oBrw:cToolTip:="Click no cabecalho para ordenar as colunas Asc. ou Desc."
	
	oPan:Align := CONTROL_ALIGN_TOP
	oBrw:Align := CONTROL_ALIGN_ALLCLIENT
	
	ACTIVATE MSDIALOG oDlg CENTERED
	
	If lOk
		cX := ""
		For nX := 1 To Len(aRow)
			If aRow[nX,1]
				cX += aRow[nX,2]+","
			Endif
		Next
		cRet := PadR(Left(cX,Len(cX)-1), 60, " ")
	Endif
Endif     

Return(cRet)

          
               
//Ordenar Browse
Static Function TWBOrd(o,n)
Local cX := iif(Empty(o:aheaders), o:aColumns[n]:cHeading, o:aheaders[n])
iif(Empty(o:Cargo), o:Cargo:={0,0}, Nil)
If o:Cargo[2] == 0 .Or. o:Cargo[1] != n
	ASORT(o:aArray,,,{|x,y| x[n] < y[n]})
	o:Cargo := {n,1}
Else
	ASORT(o:aArray,,,{|y,x| x[n] < y[n]})
	o:Cargo := {n,0}
Endif
o:cToolTip:="Lines: ("+AllTrim(Transform(Len(o:aArray),"@E 999,999,999"))+") Order: "+AllTrim(cX)+" by "+iif(o:cargo[2]==0, "Desc.", "Asc.")
o:Refresh()
Return(Nil)
             
             
             
//Obter a taxa do mes
Static Function GetTxDepMes() // --> A
Local nMoeda   := MV_PAR07
Local	cCalcDep	:= GetNewPar("MV_CALCDEP",'0')               
Local cTipDepr	:= AllTrim(GetMv("MV_TIPDEPR"))
Local dInDepr  := STOD(N3_DINDEPR)
Local aTaxaMes := AFatorCalc({N3_TXDEPR1, N3_TXDEPR2, N3_TXDEPR3, N3_TXDEPR4, N3_TXDEPR5}, dInDepr  , dDataBase, cTipDepr, cCalcDep)
Local nTaxaMes := aTaxaMes[nMoeda]
Return(nTaxaMes)

             