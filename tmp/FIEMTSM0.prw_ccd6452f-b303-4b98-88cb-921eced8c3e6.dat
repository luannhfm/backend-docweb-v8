#INCLUDE "TOTVS.CH"
#INCLUDE "PARMTYPE.CH"
#INCLUDE "PROTHEUS.CH"

/*
	Class    : 
	Method   : FIEMTSM0
	Autor    : Carlos Ryve Gandini
	Data/Time: 09/09/19 Ã s 16:21:23
	Descricao: Retorna as Filiais que o usuario tem acesso, realizando filtro na funcao FWLoadSM0.
	Sintaxe  : <Vide Parametros Formais>
*/

Function u_FIEMTSM0()

	Local aUsrFil	:= {}	// Retorna vetor com informaÃ§Ãµes do usuÃ¡rio
	Local aGrupo    := ""	// Grupos que o usuario pertence
	Local nX, nB    := 0	
	Local nxFil     := 0	
	Local nInc      := 0	
	Local aFilUsr   := {}	// Array de retorno com as filiÃ¡is de acesso do usuÃ¡rio
	Local aLoadSM0  := FWLoadSM0()
	Local aRetSM0   := {}
	Local aTmp      := {}

	//Verifica os Parametros
	FIEMTPARAM()

	If GetMV("J2A_ATF001",.F.,.F.)
	
		For nB := 1 To len( aLoadSM0 )

			If Left( cFilAnt , 2 ) == Left(aLoadSM0[nB][2],2)	
				aTmp := {}
				aAdd( aTmp , aLoadSM0[nB][2] ) //Codigo
				aAdd( aTmp , Left(aLoadSM0[nB][2],2) ) //Empresa
				aAdd( aTmp , Subs(aLoadSM0[nB][2],3,2) ) //Unidade
				aAdd( aTmp , Right(aLoadSM0[nB][2],4) ) //Filial
				aAdd( aTmp , aLoadSM0[nB][7] ) //Descricao
				aAdd( aRetSM0 , aTmp )
			Endif

		Next nB

	Else

		PswOrder(1) 
		If PswSeek( __cUserID, .T. )
			aUsrFil := PswRet()[2,6] 					// Retorna vetor com informaÃ§Ãµes do usuÃ¡rio

			If  !Empty(aUsrFil) .And. "@" $ aUsrFil[1] 

				For nB := 1 To len( aLoadSM0 )

					If Left( cFilAnt , 2 ) == Left(aLoadSM0[nB][2],2)	
						aTmp := {}
						aAdd( aTmp , aLoadSM0[nB][2] ) //Codigo
						aAdd( aTmp , Left(aLoadSM0[nB][2],2) ) //Empresa
						aAdd( aTmp , Subs(aLoadSM0[nB][2],3,2) ) //Unidade
						aAdd( aTmp , Right(aLoadSM0[nB][2],4) ) //Filial
						aAdd( aTmp , aLoadSM0[nB][7] ) //Descricao
						aAdd( aRetSM0 , aTmp )
					Endif

				Next nB

			ElseIf Empty(aUsrFil) .And. PswRet()[2,11]  	// Verifica se prioriza os acessos do grupo do usuario

				aGrupo := PswRet()[1,10]   				// Grupos que o usuario pertence
				For nX := 1 To  Len(aGrupo)  			// Busca as filiais dos grupos q o usuario tem acesso
					PswSeek( aGrupo[nX], .F. )
					For nxFil := 1 To Len(PswRet()[1,11])
						nPos := aScan( aLoadSM0 , { |x| x[1]+x[2] == PswRet()[1,11][nXFil] } )
						If nPos > 0
							//ACOPY(aLoadSM0, aRetSM0,nPos,1,)
							If Left( cFilAnt , 2 ) == Left(aLoadSM0[nPos][2],2)	
								aTmp := {}
								aAdd( aTmp , aLoadSM0[nPos][2] ) //Codigo
								aAdd( aTmp , Left(aLoadSM0[nPos][2],2) ) //Empresa
								aAdd( aTmp , Right(aLoadSM0[nPos][2],4) ) //Unidade
								aAdd( aTmp , Subs(aLoadSM0[nPos][2],3,2) ) //Filial
								aAdd( aTmp , aLoadSM0[nPos][7] ) //Descricao
								aAdd( aRetSM0 , aTmp )
							EndIf

						EndIf
					Next
				Next

			Else

				For nxFil := 1 To Len(aUsrFil)
					nPos := aScan( aLoadSM0 , { |x| x[1]+x[2] == aUsrFil[nxFil] } )
					If nPos > 0

						If Left( cFilAnt , 2 ) == Left(aLoadSM0[nPos][2],2)	
							aTmp := {}
							aAdd( aTmp , aLoadSM0[nPos][2] ) //Codigo
							aAdd( aTmp , Left(aLoadSM0[nPos][2],2) ) //Empresa
							aAdd( aTmp , Right(aLoadSM0[nPos][2],4) ) //Unidade
							aAdd( aTmp , Subs(aLoadSM0[nPos][2],3,2) ) //Filial
							aAdd( aTmp , aLoadSM0[nPos][7] ) //Descricao
							aAdd( aRetSM0 , aTmp )
						EndIf

					EndIf
				Next

			Endif

		Endif
	EndIf

Return aRetSM0


/*
	Class    : 
	Method   : FIEMTPARAM
	Autor    : Carlos Ryve Gandini
	Data/Time: 13/09/19 às 09:58:23
	Descricao: Responsavel pela criação dos parametros utilizados pela rotina
	Sintaxe  : <Vide Parametros Formais>
*/
Static Function FIEMTPARAM()

	If !ExisteSX6("J2A_ATF001")

		CriarSX6("J2A_ATF001", "L", ;
		         "Controle da Consulta Padrao FIEMTSM0 se exibe por perfil de usuario ou Empresa Logada",;
				 ".T." )

	EndIf

Return