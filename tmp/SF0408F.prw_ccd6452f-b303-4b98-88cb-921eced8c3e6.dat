#Include 'Protheus.ch'


/*/{Protheus.doc} SF0408F
Função para relatar a entrega do material na turma.

@type function
@author franklin.oliveira
@since 10/09/2015
@version 1.0

@return Nil
/*/
User Function SF0408F()

Local oBrowse

Private aColunas	:= {}
Private aRotina 	:= MenuDef()

	//Instancio a classe FWMBrowse
	oBrowse := FWMBrowse():New()
	
	//Descrição do Cabeçalho
	oBrowse:SetDescription('Requisições de Material por Turma')
	
	//Setando o Alias a ser utilizado
	oBrowse:SetAlias( "ZE0" ) 
	
	//Legenda
	oBrowse:AddLegend( "ZE0_STSENT == '1'", "GREEN"	, "Entrege" 		)
	oBrowse:AddLegend( "ZE0_STSENT == '2'", "RED"		, "Não Entregue"	)
	
	//Filtro
	oBrowse:SetFilterDefault( 'ZE0_NUMSA <> " " .AND. ZE0_STSSOL == "A" ' )
	
	//Ativando
	oBrowse:Activate()
	
Return( Nil )


/*/{Protheus.doc} MenuDef
Fun~ção responsável por definição do menu

@type function
@author franklin.oliveira
@since 10/09/2015
@version 1.0

@return Nil
/*/
Static Function MenuDef()
	
Local aRotina := {}

	//aAdd( aRotina, { 'Pesquisar'	, 'PesqBrw'			, 0, 1, 0, .T. } )
	aAdd( aRotina, { 'Visualizar'	, 'ViewDef.SF0408F'		, 0, 2, 0, Nil } )
	//aAdd( aRotina, { 'Incluir'	, 'ViewDef.SF0408F'	, 0, 3, 0, Nil } )
	aAdd( aRotina, { 'Alterar'		, 'ViewDef.SF0408F'		, 0, 4, 0, Nil } )
	//aAdd( aRotina, { 'Excluir'	, 'ViewDef.SF0408F'	, 0, 5, 0, Nil } )
	
Return( aRotina )


/*/{Protheus.doc} ModelDef
Função responsável pela definição do modelo de dados

@type function
@author franklin.oliveira
@since 10/09/2015
@version 1.0

@return oModel, Objeto modelo de definição
/*/
Static Function ModelDef()

Local oModel
Local oStruZE0Master := FWFormStruct( 1, 'ZE0', { |X|  AllTrim(X) $ 'ZE0_CODCUR, ZE0_CODDIS, ZE0_CODTUR, ZE0_NOMPRO' } )
Local oStruZE0Detail := FWFormStruct( 1, 'ZE0', { |X| .Not. ( AllTrim(X) $ 'ZE0_CODCUR, ZE0_CODDIS, ZE0_CODTUR, ZE0_NOMPRO' ) } )

	oModel := MPFormModel():New( 'SF0408FM' )
	
	oModel:AddFields( 'ZE0MASTER'	,				, oStruZE0Master )
	oModel:AddGrid('ZE0DETAIL'		, 'ZE0MASTER'	, oStruZE0Detail )
	
	oModel:SetRelation( 'ZE0DETAIL', { { 'ZE0_FILIAL', 'xFilial( "ZE0" )' }, {'ZE0_CODCUR', 'ZE0_CODCUR' }, {'ZE0_CODDIS', 'ZE0_CODDIS' },;
		{'ZE0_CODTUR', 'ZE0_CODTUR' } }, ZE0->( IndexKey( 1 ) ) )
			
	oModel:GetModel( 'ZE0DETAIL' ):SetOptional( .F. )
	
	oModel:SetDescription( 'Requisições de Material por Turma' )
	
	oModel:GetModel( 'ZE0MASTER' ):SetDescription( 'Dados da Requisição' )
	oModel:GetModel( 'ZE0DETAIL' ):SetDescription( 'Alunos' )
	
	oModel:GetModel( 'ZE0DETAIL' ):SetNoInsertLine(.T.) //Não pode Adicionar linha
	oModel:GetModel( 'ZE0DETAIL' ):SetNoDeleteLine(.T.) //Não pode excluir linha
	
	oModel:SetPrimaryKey( { 'ZE0_FILIAL', 'ZE0_CODCUR', 'ZE0_CODDIS', 'ZE0_CODTUR' } )
	
Return( oModel )


/*/{Protheus.doc} ViewDef
Função para a definição da visão de dados

@type function
@author franklin.oliveira
@since 10/09/2015
@version 1.0

@return Oview, Objeto com definição da visão
/*/
Static Function ViewDef()
	
Local oView
Local oModel  := FWLoadModel( 'SF0408F' )
Local oStruZE0Master := FWFormStruct( 2, 'ZE0', { |X|  AllTrim(X) $ 'ZE0_CODCUR, ZE0_CODDIS, ZE0_CODTUR, ZE0_NOMPRO' } )
Local oStruZE0Detail := FWFormStruct( 2, 'ZE0', { |X| .Not. ( AllTrim(X) $ 'ZE0_CODCUR, ZE0_CODDIS, ZE0_CODTUR, ZE0_NOMPRO' ) } )
	
	oView := FWFormView():New()
	
	oView:SetModel( oModel )
	
	oView:AddField( 'VZE0MASTER', oStruZE0Master, 'ZE0MASTER' )
	oView:AddGrid( 'VZE0DETAIL', oStruZE0Detail, 'ZE0DETAIL' )
	
	oView:CreateHorizontalBox( 'CABECALHO', 15 )
	oView:CreateHorizontalBox( 'DETALHE', 85 )
	
	oView:SetOwnerView( 'VZE0MASTER', 'CABECALHO' )
	oView:SetOwnerView( 'VZE0DETAIL', 'DETALHE' )
	
	oView:EnableTitleView( 'VZE0MASTER' )
	oView:EnableTitleView( 'VZE0DETAIL' )
	
	oStruZE0Detail:RemoveField('ZE0_NUMSA')
	oStruZE0Detail:RemoveField('ZE0_CC')
		
	oView:SetCloseOnOk( {|| .T.} )
	
Return( oView )


/*/{Protheus.doc} SF0408FM
P.E. para validações

@type function
@author franklin.oliveira
@since 10/09/2015
@version 1.0

@return Nil
/*/
User Function SF0408FM()

Local aParam	:= PARAMIXB
Local lRet		:= .T.
Local aArea	:= GetArea()

	
	//Validação ao ativar o modelo
	If aParam[2] == 'MODELVLDACTIVE'
		
		dbSelectArea("SCP")
		dbSetOrder(1)
		
		If dbSeek(xFilial("SCP") + ZE0->ZE0_NUMSA)
		
			//Caso solicitação não tenha sido atendida, não permito alterar ou visualizar
			If Empty(SCP->CP_STATUS) .OR. SCP->CP_PREREQU <> "S" .OR. (QtdComp(SCP->CP_QUANT) <> QtdComp(SCP->CP_QUJE))
					
				Help(, , 'Help', , 'Esta solicitação não foi atendida', 1, 0)
				lRet	:= .F.
			
			EndIf	
		
		EndIf
	
	EndIf

	RestArea(aArea)

Return lRet