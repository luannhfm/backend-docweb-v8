#Include 'Protheus.ch'

/*/{Protheus.doc} MT094END 
Este Ponto de Entrada é executado antes da conclusão do tipo de operação que está em andamento (Liberar o Documento, Transferência do Documento, Transferência para Superior)
@type Function
@author Alan Teles de Oliveira
@since 05/02/2019
@version 12.1.17
@param PARAMIXB[1], character, Número do Documento
@param PARAMIXB[2], character, Tipo do documento (PC, NF, SA, IP, AE)
@param PARAMIXB[3], numeric, Operação a ser executada (1-Aprovar, 2-Estornar, 3-Aprovar pelo Superior, 4-Transferir para Superior, 5-Rejeitar, 6-Bloquear)
@param PARAMIXB[4], character, Filial do documento
@see http://tdn.totvs.com/display/public/PROT/TUMXYE_DT_PONTO_ENTRADA_MT094END
@obs Utilizado para altera Status TR-(C1_XSTTR) na solicitação de compras.
@history 08/02/2019, Alan Teles de Oliveira, regra para alteração do status da solicitação ao armazém.
@history 06/04/2020, Franklin Oliveira, Melhoria: envio de e-mail para os compradores da CAQC.
/*/
User Function MT094END() 

    Local aArea     := GetArea()
    Local cNumDoc   := PadR(AllTrim(ParamIXB[1]), TamSX3('C1_NUM')[1], ' ')
    Local cTipDoc   := ParamIXB[2]
    Local nOpcExec  := ParamIXB[3]
    Local cFilDoc   := ParamIXB[4]
	Local cComCAQC	:= GetNewPar('MV_XCOMCAC', '051')
	Local lComCAQC	:= .F.

    dbSelectArea('SC1')
    SC1->(dbGoTop())
    SC1->(dbSetOrder(1))

    If cValToChar(nOpcExec) $ '1|3' .and. SC1->(DbSeek(xFilial('SC1', cFilDoc) + cNumDoc))
        
        While .not. SC1->(EOF()) .and. xFilial('SC1', cFilDoc) == SC1->C1_FILIAL .and. cNumDoc == SC1->C1_NUM
        	lComCAQC := SC1->C1_CODCOMP $ cComCAQC            
            If Reclock("SC1", .F.)
                
                SC1->C1_APROV := "L"
				SC1->C1_NOMAPRO := UsrRetName(SCR->CR_USERLIB) 
				//SC1->C1_XSTTR := iIf(lComCAQC, 'N', 'A')
                SC1->C1_XSTTR := 'A'
                SC1->(MsUnLock())

            EndIf
            
            //Registra Aprovação no log de processos 
            If cValToChar(nOpcExec) == '1' //1-Aprovar
            	RSTSCLOG("APR", 1, cUserName)
            EndIf

            SC1->(dbSkip())

        EndDo
        //envio de e-mail para os compradores da CAQC.
    	If lComCAQC
    		U_SF02E03F(cFilDoc,cNumDoc)
    	EndIf
    EndIf

    If cValToChar(nOpcExec) $ '1|3' .and. cTipDoc == 'SA'
        
        dbSelectArea('SCP')
        SCP->(dbGoTop())
        SCP->(dbSetOrder(1)) //CP_FILIAL+CP_NUM+CP_ITEM+DTOS(CP_EMISSAO)
        
        If SCP->(DbSeek(xFilial('SCP', cFilDoc) + PadR(AllTrim(cNumDoc), TamSX3('CP_NUM')[1], ' ')))

            While .not. SCP->(Eof()) .and. SCP->CP_FILIAL = xFilial('SCP', cFilDoc) .and. SCP->CP_NUM = PadR(AllTrim(cNumDoc), TamSX3('CP_NUM')[1], ' ')

               If Reclock('SCP')

                    SCP->CP_STATSA = 'L'

               EndIf

               SCP->(dbSkip())

            End            

        EndIf

    EndIf
	
	// caio lima - j2aconsultoria - 14/03/2019
	// apenas executa a static function MT097END caso o PE MT097END não esteja compilado
	// pois no P12 o PE não está sendo chamado, faz dessa forma para garantir que a função
	// vai ser executada apenas uma vez.
	If !ExistBlock("MT097END")
		MT097END(ParamIXB)
	ELse
		ConOut("PE MT097END está compilado, função static MT097END não será executada, (fonte MT094END)")
	EndIf
    
    RestArea(aArea)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MT097END  ºAutor  ³        FSW         º Data ³  11/04/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Ponto de entrada de encerramento do processo de liberacao  º±±
±±º          ³ de pedido de compra / SC.                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
/*/
-----------------------------------------------------------------------------
Ajustes Realizados:
Franklin B. Oliveira 			                                   14/06/2017
	Adicionado a gravação da hora de liberação no campo CR_XHRALIB.
-----------------------------------------------------------------------------
/*/
Static Function MT097END(ParamIXB)

Local _aArea := GetArea()

// Peder Munksgaard (Do.it Sistemas) em 20/10/2014
Local _aAreaC7 := SC7->(GetArea())
Local _cFilPC  := Alltrim(ParamIXB[4])
Local _cNumPC  := Alltrim(ParamIXB[1])
// Walmir Junior 19/02/2016
Local _aAreaSY1:= SY1->(GetArea())
Local _cFilSCR := ""
Local cTipoDoc  := PARAMIXB[2] 
Local nOpcao    := PARAMIXB[3]

//Aviso("VarInfo", VarInfo("ParamIXB",ParamIXB,,.F.) , {"ok"},3 )

IF nOpcao == 1 // Liberou

	//Gravo a Hora da liberação
	If SCR->( DbSeek(_cFilPC + cTipoDoc + _cNumPC) )
		While !( SCR->(EoF()) ) .And. SCR->CR_FILIAL == _cFilPC .And. SCR->CR_TIPO == cTipoDoc .And. AllTrim(SCR->CR_NUM) == AllTrim(_cNumPC)
			If (SCR->CR_STATUS $ ("03|05")) // aprovado
				Reclock("SCR", .F.)
					SCR->CR_XHRALIB := Time()
				MSUnLock("SCR")
			EndIf
			SCR->( DbSkip() )
		EndDo
	EndIf
	
	RestArea(_aArea)
	
	IF ALLTRIM( cTipoDoc ) =='PC'
		
		dbSelectArea("SC7") // Peder Munksgaard (Do.it Sistemas) em 20/10/2014  
		SC7->(dbSetOrder(1))

		If SC7->(dbSeek(_cFilPC+PadR(_cNumPC,TamSX3("C7_NUM")[1]))) // Peder Munksgaard (Do.it Sistemas) em 20/10/2014
            
			IF MSGYESNO('Imprimir Pedido de Compra?')
			
           		U_DTCOMR04('SC7',SC7->(RECNO()),1)
				//MATR110('SC7',SC7->(RECNO()),1)
				
			EndIf
			
			//Walmir Junior 19/02/2016 Customizações Ata de Registro de Preços. 
			DbSelectArea("SC1")
			SC1->(DBSetOrder(1))
			
			IF SC1->(DbSeek(SC7->C7_FISCORI+SC7->C7_NUMSC+SC7->C7_ITEMSC))
				DbSelectArea("SCR")
				_cFilSCR := SCR->(dbFilter())
				SCR->(dbClearFilter())
				
				SCR->(DBSetOrder(1))
				SCR->(DbSeek(xFilial("SCR")+"PC"+ PadR(AllTrim(_cNumPC),TamSX3("CR_NUM")[1])))
				
				DBSelectArea("SY1")
				DBSetOrder(1)
				If SY1->(DbSeek(xFilial("SY1")+SC1->C1_CODCOMP)) 
					_cNumPC := _cNumPC + " originado da SC N° " + SC1->C1_NUM + ","
					fAlertEm("A",_cNumPC,"Pedido de Compras",RetCodUsr(),SCR->CR_OBS,SY1->Y1_USER)
				EndIf
				
				SCR->(dbSetFilter( {||&_cFilSCR },_cFilSCR  ))
			EndIF
			
		Else
				MsgAlert('Filial / Pedido nao encontrado: '+_cFilPC+' '+_cNumPC,'Atencao') // Peder Munksgaard (Do.it Sistemas) em 20/10/2014
		EndIf
/*		
	ELSE
	
		MsgAlert('Este documento: '+_cNumPC+' não é um pedido de compra','Atencao')  // Peder Munksgaard (Do.it Sistemas) em 20/10/2014
*/		
	ENDIF
	
EndIf

RestArea(_aAreaC7)
RestArea(_aArea)
RestArea(_aAreaSY1)

Return NiL

/*=========================================================================
  FONTES GENÉRICOS PARA USO DO WORKFLOW                                    
  =========================================================================*/

/*----------------------+--------------------------------+------------------+
|   Programa: SF0201X   | Autor: Walmir Junior           | Data: 16/12/2015 |
+-----------------------+--------------------------------+------------------+
|  Descricao:  Notificação genérica do Workflow de Compras para processos
|              de: Solicitação, Cotação e Pedido de Compra.
+---------------------------------------------------------------------------+
|    Projeto:  CNI e Federações                                             |
+---------------------------------------------------------------------------+
| Parâmetros:  cStatus    = Status do Docto - (A)provado / (R)eprovado
|              cNumDoc    = Número do Documento
|              cDescTpDoc = Descrição do Tipo de Documento
|              _cEmail    = Email Grupo de Usuários
|              cObs       = Observação do Aprovador
+----------------------------------------------------------------------------
|    Exemplo:  U_NotifWF("A",SC1->C1_NUM,"Solicitação de Compra",SC1->C1_USER,_cObs)
+----------------------------------------------------------------------------
|    Retorno:  Nulo                                                               
+--------------------------------------------------------------------------*/

Static Function fAlertEm(cStatus,cNumDoc,cDescTpDoc,cUser,cObs,_cUserEmail)		//cStatus = (A)provada / (R)eprovada

Local cFunc      := "fAlertEm"
Local _cWfDir    := Iif(Right(RTrim(GetNewPar("MV_WFDIRWF","\workflow")),1)#"\" , ;
                     RTrim(GetNewPar("MV_WFDIRWF","\workflow")) + "\", ;
                     RTrim(GetNewPar("MV_WFDIRWF","\workflow")))
Local cEmpFilNom := RTrim(cFilAnt) + " - " + RTrim(Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_FILIAL")) + " - " + ;
                    RTrim(Posicione("SM0",1,cEmpAnt+cFilAnt,"M0_NOME"))
Local cAssunArti := ""
Local cAssunto   := ""
Local _cEmail	 := UsrRetMail(_cUserEmail)

//Private oHtml

If !Empty(_cEmail)
	If Right(Left(AllTrim(cDescTpDoc),At(" ",AllTrim(cDescTpDoc))-1),3) $ ("ção|cao|ÇÃO|CAO")
		cAssunArti := "a"
	ElseIf Right(Left(AllTrim(cDescTpDoc),At(" ",AllTrim(cDescTpDoc))-1),1) $ ("a|A")
		cAssunArti := "a"
	Else
		cAssunArti := "o"
	EndIf
	
	cAssunto   := "Status d"+ cAssunArti + " " + Capital(AllTrim(cDescTpDoc))
	
	U_Console("Processando envio da notificacao de " + cDescTpDoc + " Fil/NumDoc: "+cFilAnt+"/"+cNumDoc,cFunc)
	
	oProcess := TWFProcess():New( "NotifPC", "Notificação do Workflow" )
	oProcess:NewTask( "000110", _cWfDir+"NotifPC.htm" )
	oProcess:cSubject := cAssunto + " No. " +cNumDoc
	oProcess:cTo      := Alltrim(_cEmail)
	oProcess:UserSiga := cUser
	oProcess:NewVersion(.T.)        
	oHTML   := oProcess:oHTML
	
	oProcess:oHtml:ValByName("ASSUNTO",cAssunto)
	oProcess:oHtml:ValByName("CSOLICITANTE",UsrRetName(_cUserEmail))
	oProcess:oHtml:ValByName("DESCTPDOC",cAssunArti + " " + Capital(AllTrim(cDescTpDoc)))
	oProcess:oHtml:ValByName("NUMPC",cNumDoc)
	
	If cStatus == "A"		// (A)provada / (R)eprovada
		cMsgStatus := '<span lang="pt-br" class="corpo" style="color: #0000FF; font-weight: bold;">Aprovad'+cAssunArti+'</span>'
	Else
		cMsgStatus := '<span lang="pt-br" class="corpo" style="color: #FF0000; font-weight: bold;">Reprovad'+cAssunArti+'</span>'
	EndIf
	
	oProcess:oHtml:ValByName("MSGSTATUS",cMsgStatus)
	oProcess:oHtml:ValByName("FILIAL",cEmpFilNom)
	oProcess:oHtml:ValByName("COBS",cObs)
	
	oProcess:Start()
EndIf
Return
