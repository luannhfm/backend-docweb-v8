#INCLUDE "RWMAKE.CH"
#INCLUDE "TOTVS.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "TBICODE.CH"
#INCLUDE "REPORT.CH"

/* 
-------------------------------------------------------------------------------
	{Protheus.doc}<SF02R01X>
	 
	
	@Parametros<Nil> 
	@author<Walmir Junior> 
	@since<17/10/2017> 
	@version
		< 
		--------------------------------------------------------------------
		 Walmir Junior 
		--------------------------------------------------------------------
		>
	@receive<Nil>
	@return<Nil>
	@example<Nil> 
	@see<Nil> 
-------------------------------------------------------------------------------
*/

User Function SF02R01X()

	Local _cPerg 		:= "SF02R01X"
	Local _cTitulo		:= "Relatório para Controle dos Processos" 		// Titulo
	Private _oReport	:= Nil 
	Private _oSection1	:= Nil 
	Private _cAlias		:= GetNextAlias()
	
	CriaSX1(_cPerg)
	If !Pergunte(_cPerg,.T.)
		Return(Nil)
	EndIf
	
	//--
	_oReport := TReport():New("SF02R01X",_cTitulo,_cPerg,{|_oReport| PrintReport(_oReport)} )
	
	_oReport:SetLandscape()	// Orientado como retrato.
	_oReport:SetEdit(.T.)
	_oReport:SetTotalInLine(.F.)
	_oReport:HideParamPage()
	
	//--Sessão Controle dos Processos
	_oSection1 := TRSection():New(_oReport,"Controle dos Processos", {_cAlias})
	//_oSection1:lHeaderSection := .F.
	_oSection1:nLinesBefore := 0
	_oSection1:SetTotalInLine(.T.)
	_oSection1:SetReadOnly()
	//_oSection1:lHeaderVisible := .F.
	
	TRCell():New(_oSection1,"C1_FILIAL"	, _cALias ,"FILIAL" 	, "@!"	,10)
	TRCell():New(_oSection1,"C1_NUM"	, _cALias ,"NUM SC"		,		,10)
	//TRCell():New(_oSection1,"C1_ITEM"	, _cALias ,"ITEM SC"	,		,10)
	//TRCell():New(_oSection1,"C1_DESCRI"	, _cALias ,"DESC ITEM"	,	,50)
	TRCell():New(_oSection1,"Y1_NOME"	, _cALias ,"COMPRADOR"	,		,30)
	TRCell():New(_oSection1,"COI_DTHSOL", _cALias ,"DT SOL"		,		,20)
	TRCell():New(_oSection1,"C1_XDTCOMP", _cALias ,"DT ALT COM"	,		,20)
	TRCell():New(_oSection1,"COI_DTHCOT", _cALias ,"DT COT"		,		,20)
	TRCell():New(_oSection1,"COI_DTHANL", _cALias ,"DT ANL"		,		,20)
	TRCell():New(_oSection1,"COK_DTHPED", _cALias ,"DT PED"		,		,20)
	TRCell():New(_oSection1,"COK_DTHLIB", _cALias ,"DT LIB"		, 		,20)
	TRCell():New(_oSection1,"C7_XEMOFMS", _cALias ,"DT EM OFMS"	, 		,20)
	TRCell():New(_oSection1,"TMPCOT"	, _cALias ,"TMP COT"	, 		,10,,/*{ || Iif( !Empty((_cALias)->(COI_DTHANL)) .And. !Empty((_cALias)->(COI_DTHCOT)),CtoD((_cALias)->(COI_DTHANL)) - CtoD((_cALias)->(COI_DTHCOT)),0) }*/)
	TRCell():New(_oSection1,"TMPAUT"	, _cALias ,"TMP AUT"	, 		,10,,/*{ || Iif( !Empty((_cALias)->(COK_DTHLIB)) .And. !Empty((_cALias)->(COK_DTHPED)),CtoD((_cALias)->(COK_DTHLIB)) - CtoD((_cALias)->(COK_DTHPED)),0) }*/)
	TRCell():New(_oSection1,"TMPOFMS"	, _cALias ,"TMP OFMS"	, 		,10,,/*{ || Iif( !Empty((_cALias)->(C7_XEMOFMS)) .And. !Empty((_cALias)->(COK_DTHLIB)),CtoD((_cALias)->(C7_XEMOFMS)) - CtoD((_cALias)->(COK_DTHLIB)),0) }*/)
	TRCell():New(_oSection1,"TMPPSQ"	, _cALias ,"TMP PESQ"	, 		,10,,/*{ || Iif( !Empty((_cALias)->(C1_XDTCOMP)) .And. !Empty((_cALias)->(COK_DTHPED)),CtoD((_cALias)->(C1_XDTCOMP)) - CtoD((_cALias)->(COK_DTHPED)),0) }*/)
	TRCell():New(_oSection1,"TMPANTR"	, _cALias ,"TMP AN TR"	, 		,10,,/*{ || Iif( !Empty((_cALias)->(ZF6_DATA))   .And. !Empty((_cALias)->(COI_DTHAPR)),CtoD((_cALias)->(ZF6_DATA))   - CtoD((_cALias)->(COI_DTHAPR)),0) }*/)
	
	_oSection1:AutoSize()
	_oReport:PrintDialog()

Return Nil

/*
+----------+-----------+-------+-------------------+------+-------------+
|Programa  |PRINTREPORT|Autor  |Walmir Junior      | Data |17/10/2017   |
+----------+-----------+-------+-------------------+------+-------------+
|Descrição | Implementa a Rotina  PrintReport                           |
|          |                                                            |
+----------+------------------------------------------------------------+
|Uso       | AP                                                         |
+----------+------------------------------------------------------------+
*/
Static Function PrintReport(_oReport)

	MsgRun( "Selecionando registros...", "Aguarde" ,  {|| GeraQuery() } )
	
	//_oReport:Section(1):Print()

Return

//ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
// funcao que realiza o sql do relatorio
//ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Static Function GeraQuery()

	Local _cSql 	:= ""
	Local cFilSc	:= ""
	Local cNumSc	:= ""
	
	_cSql += " SELECT "			                                                                                                                                                                                    +CRLF
	_cSql += "   DISTINCT C1_FILIAL, "	                                                                                                                                                                            +CRLF
	_cSql += "   C1_NUM, "	                                                                                                                                                                                        +CRLF
	_cSql += "   C1_ITEM, "	                                                                                                                                                                                        +CRLF
	_cSql += "   SubStr(COI_DTHSOL,1,19) As COI_DTHSOL, "	                                                                                                                                                        +CRLF
//	_cSql += "   C1_DESCRI, "	                                                                                                                                                                                    +CRLF
	_cSql += "   (C1_CODCOMP || '-' || Y1_NOME) As Y1_NOME, "                                                                                                                                                       +CRLF
	_cSql += "   SubStr(COI_DTHCOT,1,19) As COI_DTHCOT, "	                                                                                                                                                        +CRLF
	_cSql += "   SubStr(COI_DTHANL,1,19) As COI_DTHANL, "	                                                                                                                                                        +CRLF
	_cSql += "   SubStr(COI_DTHAPR,1,19) As COI_DTHAPR, "	                                                                                                                                                        +CRLF
	_cSql += "   SubStr(COK2.COK_DTHPED,1,19) As COK_DTHPED, "                                                                                                                                                      +CRLF
	_cSql += "   SubStr(COK.COK_DTHLIB,1,19) As COK_DTHLIB, "                                                                                                                                                       +CRLF
	_cSql += "   C7_XEMOFMS, "	                                                                                                                                                                                    +CRLF
	_cSql += "   C1_XDTCOMP, "                                                                                                                                                                                      +CRLF
	_cSql += "   ZF6_DATA    "                                                                                                                                                                                      +CRLF
	//_cSql += "   ZF6_HORA  "                                                                                                                                                                                      +CRLF
	_cSql += " FROM "			                                                                                                                                                                                    +CRLF
	_cSql += " 	"+RetSqlName("SC1")+" SC1 LEFT JOIN "	                                                                                                                                                            +CRLF
	_cSql += " 	"+RetSqlName("SC7")+" SC7 ON SC7.D_E_L_E_T_ = ' ' AND SC7.C7_FILIAL = C1_FILIAL AND SC7.C7_NUMSC = C1_NUM AND SC7.C7_ITEMSC = C1_ITEM LEFT JOIN "	                                                +CRLF
	_cSql += " 	"+RetSqlName("SY1")+" SY1 ON SY1.D_E_L_E_T_ = ' ' AND Y1_FILIAL = '"+xFilial("SY1")+"' AND Y1_COD = C1_CODCOMP LEFT JOIN "                                                                          +CRLF
	_cSql += " 	"+RetSqlName("COI")+" COI ON COI.D_E_L_E_T_ = ' ' AND COI_FILIAL = C1_FILIAL AND COI_NUMSC = C1_NUM AND COI_ITEM = C1_ITEM LEFT JOIN "                                                              +CRLF
	_cSql += " 	"+RetSqlName("COK")+" COK ON COK.D_E_L_E_T_ = ' ' AND COK.COK_FILIAL = C1_FILIAL AND COK.COK_NUMSC = C1_NUM AND COK.COK_ITEM = C1_ITEM AND COK.COK_FORNEC = C1_FORNECE AND COK.COK_LOJA = C1_LOJA " +CRLF
	_cSql += " 					 AND COK.COK_DOCPED = ' ' AND COK.COK_ITPED = ' ' LEFT JOIN "                                                                                                                       +CRLF
	_cSql += " 	"+RetSqlName("COK")+" COK2 ON COK2.D_E_L_E_T_ = ' ' AND COK.COK_FILIAL = COK2.COK_FILIAL AND COK.COK_NUMSC = COK2.COK_NUMSC AND COK.COK_ITEM = COK2.COK_ITEM AND COK.COK_FORNEC = COK2.COK_FORNEC " +CRLF
	_cSql += " 					 AND COK.COK_LOJA = COK2.COK_LOJA AND COK2.COK_DOCPED != ' ' AND COK2.COK_ITPED != ' ' LEFT JOIN "                                                                                  +CRLF
	_cSql += " 	"+RetSqlName("ZF6")+" ZF6 ON ZF6.D_E_L_E_T_ = ' ' AND SC1.C1_FILIAL = ZF6.ZF6_FILIAL AND SC1.C1_NUM = ZF6.ZF6_NUMSC AND ZF6_STTR = 'A' "                                                            +CRLF
	_cSql += " WHERE "						                                                                                                                                                                        +CRLF
	
	If !Empty(mv_par01) .And. !Empty(mv_par02)
		_cSql += " 	C1_EMISSAO Between '"+ DToS(mv_par01)+"' AND '"+ DToS(mv_par02)+"'  AND "	                                                                                                                    +CRLF
	EndIf 
	
	If !Empty(mv_par03)
		_cSql += " 	C1_CODCOMP = '"+mv_par03+"' AND "	                                                                                                                                                            +CRLF
	EndIf 

	If !Empty(mv_par04) .And. !Empty(mv_par05)
		_cSql += " 	C1_NUM Between '"+ mv_par04 +"' AND '"+ mv_par05 +"' AND "                                                                                                                                      +CRLF
	EndIf 
	
	_cSql += " 	SC1.D_E_L_E_T_	= ' ' "	 
	_cSql += "  ORDER BY SC1.C1_FILIAL, SC1.C1_NUM "	                                                                                                                                                                            +CRLF
	
	MemoWrite("C:\Temp\SF02R01X.txt" , _cSql) // escreve em arquivo de texto e se nao encontrar cria o arquivo
	
	If Select(_cALias) > 0
		(_cALias)->(dbClosearea())
	EndIf
	
	DbUseArea(.T., "TOPCONN", TCGenQry(,,ChangeQuery(_cSql)), _cALias, .F., .F.)
	
	_oSection1:Init()
	
	While !(_cALias)->(Eof())
	
		cFilSc := (_cALias)->C1_FILIAL
		cNumSc := (_cALias)->C1_NUM
	
		_oSection1:Cell("C1_FILIAL") :SetValue((_cALias)->C1_FILIAL)
		_oSection1:Cell("C1_NUM")    :SetValue((_cALias)->C1_NUM)
		_oSection1:Cell("Y1_NOME")   :SetValue((_cALias)->Y1_NOME)
		_oSection1:Cell("COI_DTHSOL"):SetValue((_cALias)->COI_DTHSOL)
		//_oSection1:Cell("C1_DESCRI") :SetValue((_cALias)->C1_DESCRI)
		_oSection1:Cell("C1_XDTCOMP"):SetValue((_cALias)->C1_XDTCOMP)
		_oSection1:Cell("COI_DTHCOT"):SetValue((_cALias)->COI_DTHCOT)
		_oSection1:Cell("COI_DTHANL"):SetValue((_cALias)->COI_DTHANL)
		_oSection1:Cell("COK_DTHPED"):SetValue((_cALias)->COK_DTHPED)
		_oSection1:Cell("COK_DTHLIB"):SetValue((_cALias)->COK_DTHLIB)
		_oSection1:Cell("C7_XEMOFMS"):SetValue((_cALias)->C7_XEMOFMS)
		
		If ( !Empty((_cALias)->(COI_DTHANL)) .And. !Empty((_cALias)->(COI_DTHCOT)) )
			nTmpCot := CalcTempo((_cALias)->(COI_DTHCOT), (_cALias)->(COI_DTHANL))
		Else
			nTmpCot := 0 
		EndIf
		
		If( !Empty((_cALias)->(C1_XDTCOMP)) .And. !Empty((_cALias)->(COK_DTHPED)) )
			nTmpPsq := CalcTempo((_cALias)->(C1_XDTCOMP), (_cALias)->(COK_DTHPED))
		Else
			nTmpPsq := 0
		EndIf
		
		If( !Empty((_cALias)->(COK_DTHLIB)) .And. !Empty((_cALias)->(COK_DTHPED)) )
			nTmpAut := CalcTempo((_cALias)->(COK_DTHPED), (_cALias)->(COK_DTHLIB))
		Else
			nTmpAut	:= 0
		EndIf
		
		If( !Empty((_cALias)->(C7_XEMOFMS)) .And. !Empty((_cALias)->(COK_DTHLIB)) )
			nTmpOFMS := CalcTempo((_cALias)->(COK_DTHLIB), (_cALias)->(C7_XEMOFMS))
		Else
			nTmpOFMS := 0
		EndIf		
		
		nTempo 		:= CalcTem((_cALias)->C1_FILIAL,(_cALias)->C1_NUM)
		
		_oSection1:Cell("TMPCOT")    :SetValue(nTmpCot)
		_oSection1:Cell("TMPPSQ")    :SetValue(nTmpPsq)
		_oSection1:Cell("TMPAUT")    :SetValue(nTmpAut)
		_oSection1:Cell("TMPOFMS")   :SetValue(nTmpOFMS)		
		_oSection1:Cell("TMPANTR")   :SetValue(nTempo)

		If _oReport:Cancel()
			Return(Nil)
		EndIf		
		
		_oSection1:Printline()
	
		(_cALias)->(DbSkip())
		
		//------------------------------------------------------
		// A impressão deve ser apenas de um item da solicitação
		//------------------------------------------------------		
		If  !(_cALias)->(Eof()) .And. (_cALias)->C1_FILIAL + (_cALias)->C1_NUM == cFilSc + cNumSc
			While !(_cALias)->(Eof()) .And. (_cALias)->C1_FILIAL + (_cALias)->C1_NUM == cFilSc + cNumSc
				(_cALias)->(DbSkip())
			EndDo
		EndIf
	EndDo

Return

/*/{Protheus.doc} CalcTem
(long_description)
@author j2a.luizjunior
@since 28/11/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function CalcTem(pFilSc,pNumSc)

	Local cNumSc := pNumSc
	Local cFilSc := pFilSc
	Local cAlZF6 := GetNextAlias()
	Local aDados := {}
	Local cRet   := ""
	
	BeginSql Alias cAlZF6 
	
		SELECT ZF6_DATA,
		       ZF6_HORA,
		       ZF6_PROCES   
		FROM  %Table:ZF6%
		WHERE ZF6_NUMSC  = %Exp:cNumSc%
		AND   ZF6_FILIAL = %Exp:cFilSc%
		AND   %NOTDEL%
		ORDER BY R_E_C_N_O_	 

	EndSql
	
	While !(cAlZF6)->(Eof())
	
		aAdd(aDados,{(cAlZF6)->ZF6_DATA,(cAlZF6)->ZF6_HORA,(cAlZF6)->ZF6_PROCES})
	
		(cAlZF6)->(DbSkip())
	EndDo
	
	(cAlZF6)->(DbCloseArea())
	
	cRet := DayHoras(@aDados)
	
Return	cRet

/*/{Protheus.doc} DayHoras
(long_description)
@author j2a.luizjunior
@since 28/11/2017
@version 1.0
@param pDados, ${param_type}, (Descrição do parâmetro)
@return DWSecs2Str(nSecs), tempo de análise da TR
@example
(examples)
@see (links_or_references)
/*/

Static Function DayHoras(pDados)	
	
	Local   nSecs    := 0	
	Local   nDif     := 0
	Local   dDataIni := CToD("  /  /    ") //CToD("25/11/2017")//- 16:30:00
	Local   cHoraIni := ""                 //"16:30:00"	
	Local   dDataFim := CToD("  /  /    ") //CToD("28/11/2017")// - 10:47:00
	Local   cHoraFim := ""                 //"10:47:00"	
	Local   aDados   := pDados 
	Local   lAtiva   := .F.
	Local   lCalc    := .F.
	Local	nSeg     := 0  
	
	For nG := 1 To Len(aDados)
		
		If AllTrim(aDados[nG][3]) == "TR Analise"
			dDataIni := SToD(aDados[nG][1])
			cHoraIni := aDados[nG][2]
			lAtiva   := .T.
		EndIf
		
		If AllTrim(aDados[nG][3]) != "TR Analise" .And. AllTrim(aDados[nG][3]) != "TR Anexado" .And. lAtiva			
			dDataFim := SToD(aDados[nG][1])
			cHoraFim := aDados[nG][2]	
			lCalc    := .T.	
		EndIf	
		
		If lCalc
			nSecs 	 += ExecCalc(dDataIni,cHoraIni,dDataFim,cHoraFim)
			dDataIni := CToD("  /  /    ")
			cHoraIni := ""
			lAtiva   := .F.
			dDataFim := CToD("  /  /    ")
			cHoraFim := ""	
			lCalc    := .F.	
		EndIf
		
	Next nG
	
	If lAtiva
		dDataFim := dDataBase
		cHoraFim := Time()	
		nSecs 	 += ExecCalc(dDataIni,cHoraIni,dDataFim,cHoraFim)
	EndIf
	
Return DWSecs2Str(nSecs)

/*/{Protheus.doc} ExecCalc
(long_description)
@author j2a.luizjunior
@since 28/11/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ExecCalc(pDataIni,pHoraIni,pDataFim,pHoraFim)

	Local dDataIni  := pDataIni
    Local cHoraIni  := pHoraIni
    Local dDataFim  := pDataFim
    Local cHoraFim  := pHoraFim
    Local nDif      := dDataFim - dDataini
    Local nDayI     := Val(Substr(DtoS(dDataIni),7,2))
    Local nDayF     := Val(Substr(DtoS(dDataFim),7,2))
    Local nDayInt   := 0
    Local nHoras    := 0
    Local nMinutos  := 0
    Local cCompDias := "" 
    Local dDataAux  := CToD("  /  /    ")
    Local cSufixo   := ""
    Local	nSeg     := 0
    
    If nDif = 0
    	nDif := 1
    EndIf
    
	For nI := 1 To nDif
	
		If nDif = 1 .Or. nDif = 0 
			cCompDias := ElapTime(cHoraIni,cHoraFim)
		Else
			dDayaux  := Substr(DtoS(dDataIni),7,2) 
			cSufixo  := subStr(DToC(dDataIni),3,8)
			ndayI    += 1
			dDataAux := CToD(AllTrim(Str(ndayI)) + cSufixo)
			
			If dDataAux < dDataFim	
				/*
					Franklin B. Oliveira 21/03/2018 - desconsidera fins de semana.
					Solicitado por Caroline do Nascimento, suporte 244598.
				*/
				If DataValida(dDataAux) == dDataAux
					nDayInt ++	
				EndIf
			Else
				If dDataAux == dDataFim
					cCompDias := ElapTime(cHoraIni,cHoraFim)
				EndIf											
			EndIf			
		EndIf
		
	Next nI
	
	nSeg   += Secs(cCompDias) 
	
Return nSeg

Static Function CalcTempo(pDataIni,pDataFim)

Local dDataIni  := CtoD(SubStr(pDataIni, 1, 10))
Local cHoraIni  := SubStr(pDataIni, 12,08)
Local dDataFim  := CtoD(SubStr(pDataFim, 1, 10))
Local cHoraFim  := SubStr(pDataFim, 12,08)
	
Return DWSecs2Str(DWElapSecs(dDataIni, cHoraIni, dDataFim, cHoraFim))

/*
+----------+----------+-------+--------------------+------+-------------+
|Programa  |CRIASX1   |Autor  |Walmir Junior       | Data |19/10/2016   |
+----------+----------+-------+--------------------+------+-------------+
|Descrição | Cria o Grupo de perguntas para relatorio                   |
|          |                                                            |
+----------+------------------------------------------------------------+
|Uso       | AP                                                         |
+----------+------------------------------------------------------------+
*/

Static Function CriaSX1(_cPerg)

	Local aHelp := {}
	// Texto do help em portugues , ingles, espanhol
	AAdd(aHelp, {{"Informe a Data Inicial"	}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Data Final"	}, {""}, {""}})
	AAdd(aHelp, {{"Informe o Comprador"		}, {""}, {""}})
	AAdd(aHelp, {{"Solicitação De"		    }, {""}, {""}})
	AAdd(aHelp, {{"Solicitação Ate"		    }, {""}, {""}})
	
	u_SFPUTSX1(_cPerg,"01","De Emissao?"	,"","","mv_ch1","D",TamSX3("C1_EMISSAO")[1],00,00,"G","",""   ,"","","mv_Par01","","","","","","","","","","","","","","","","",aHelp[01,1] ,aHelp[01,2] ,aHelp[01,3] ,"")
	u_SFPUTSX1(_cPerg,"02","Até Emissao?"	,"","","mv_ch2","D",TamSX3("C1_EMISSAO")[1],00,00,"G","",""   ,"","","mv_Par02","","","","","","","","","","","","","","","","",aHelp[02,1] ,aHelp[02,2] ,aHelp[02,3] ,"")
	u_SFPUTSX1(_cPerg,"03","Comprador?"		,"","","mv_ch3","C",TamSX3("C1_CODCOMP")[1],00,00,"G","","SY1","","","mv_Par03","","","","","","","","","","","","","","","","",aHelp[03,1] ,aHelp[03,2] ,aHelp[03,3] ,"")
	u_SFPUTSX1(_cPerg,"04","Solicitacao De"	,"","","mv_ch4","C",TamSX3("C1_NUM")[1]    ,00,00,"G","","SC1","","","mv_Par04","","","","","","","","","","","","","","","","",aHelp[04,1] ,aHelp[04,2] ,aHelp[04,3] ,"")
	u_SFPUTSX1(_cPerg,"05","Solicitacao Ate","","","mv_ch5","C",TamSX3("C1_NUM")[1]    ,00,00,"G","","SC1","","","mv_Par05","","","","","","","","","","","","","","","","",aHelp[05,1] ,aHelp[05,2] ,aHelp[05,3] ,"")

Return