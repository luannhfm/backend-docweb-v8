#INCLUDE "PROTHEUS.CH"

/*/{Protheus.doc} SF06R13X
(long_description)
@author j2a.luizjunior
@since 18/05/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

User Function SF06R13X()

	Local oReport := Nil
	Local cPerg   := "SF06R13X"	
	
	Private _aEmpresas := {}
	
	// Utilizado quando for centralizar
	// para não precisar buscar do cadastro de empresa
	Aadd(_aEmpresas, {"01MT", "FIEMT" } )
	Aadd(_aEmpresas, {"02MT", "SESI" } )
	Aadd(_aEmpresas, {"03MT", "SENAI" } )
	Aadd(_aEmpresas, {"04MT", "IEL" } )
	Aadd(_aEmpresas, {"05MT", "CONDOMINIO" } )
	
	CriaSX1(cPerg)
	If !Pergunte(cPerg,.T.)
		Return(Nil)
	EndIf
	
	oReport := ReportDef(cPerg)
	oReport:PrintDialog()	

Return

/*/{Protheus.doc} ReportDef
(long_description)
@author j2a.luizjunior
@since 18/05/2017
@version 1.0
@param cPerg, character, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ReportDef(cPerg)

	Local oReport		
	Local cNomeRel	:= "SF06R13X"
	
	//Local cTitRel	:= "Relatorio de Indicador de Titulos em Atraso por Periodo de Vencimento"
	//Local cDescRel	:= "Relatorio de Indicador de Titulos em Atraso por Periodo de Vencimento"
	Local cTitRel := "Perfil da carteira de inadimplentes"
	Local cDescRel := "Perfil da carteira de inadimplentes"
	
	oReport         := TReport():New( cNomeRel, cTitRel, cPerg, { |oReport| ReportPrint(oReport) }, cDescRel )
	
	oReport:SetPortrait() 
	oReport:SetTotalInLine(.F.) 
	oReport:Page()
	oReport:ParamReadOnly(.T.)
	
	oIndicadores  := TRSection():New(oReport, "Relatorio de Indicador de Titulos em Atraso por Periodo de Vencimento" ,{"SE1"} )

	oTotSec       := TRSection():New(oReport, "Totalizador de filial por seção" ,{"SE1"} )
	oTotSec:lBold := .T.
	oTotSec:lHeaderSection := .F.
	oTotSec:SetLinesBefore(0)
	
	If	MV_PAR09 = 1
	
		oFilial      := TRCell():New(oIndicadores,"M0_FILIAL"              ,"SE1","Filial"                        )

		If MV_PAR10 = 2
			oFilial:SetSize(30)
		Else	
			oFilial:SetSize(10)
		EndIf
		
		oNome        := TRCell():New(oIndicadores,"E1_NOMCLI"              ,"SE1"                                 )
		oTitul       := TRCell():New(oIndicadores,"TITULO"                 ,"SE1","PRF-Num-Parc" ,"@!"            )
		oTipo        := TRCell():New(oIndicadores,"E1_TIPO"                ,"SE1"                                 )	
		oEmissao     := TRCell():New(oIndicadores,"E1_EMISSAO"             ,"SE1"                                 )
		oVencto      := TRCell():New(oIndicadores,"E1_VENCREA"             ,"SE1"                                 )
		oValor       := TRCell():New(oIndicadores,"E1_VALOR"               ,"SE1"                                 )
		oSaldo       := TRCell():New(oIndicadores,"E1_SALDO"               ,"SE1"                                 )	
		//Retirado Indicadores LiquidoÐ
		//oDias        := TRCell():New(oIndicadores,"E1_VALLIQ"            ,"SE1","Val.Corrido"                    )
		//oJuros       := TRCell():New(oIndicadores,"E1_JUROS"             ,"SE1",                                )
		//fim
		oDecres      := TRCell():New(oIndicadores,"E1_DECRESC"             ,"SE1"                                 )	
		oDias        := TRCell():New(oIndicadores,"DIAS"                   ,"SE1","Dias Atr.","@E 99,999"         )
		
		oBrFil  := TRBreak():New(oIndicadores,oIndicadores:Cell("M0_FILIAL"),"Total Filial",.F.)
		TRFunction():New(oIndicadores:Cell("FILIAL"),"Total Grupos","COUNT",oBrFil,,,,.F.,.F.)
		//TRFunction():New(_oFunFer:Cell("nBaseFer")	/*oCell*/, "nBaseFerX"	/*cName*/, "SUM" /*cFunction*/, /*_oBrkCtr/*oBreak*/, "BASE FÉRIAS"			/*cTitle*/, /*cPicture*/, /*uFormula*/, .T./*lEndSection*/, .F./*lEndReport*/, .F./*lEndPage*/, _oFunFer /*oParent*/, /*bCondition*/, /*lDisable*/, /*bCanPrint*/)
				
		TRFunction():New(oIndicadores:Cell("E1_VALOR"  )     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                                                                               )
		TRFunction():New(oIndicadores:Cell("E1_SALDO"  )     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		TRFunction():New(oIndicadores:Cell("E1_DECRESC")     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		
		oIndicadores:SetTotalInLine(.F.)
		
		//TRFunction():New(oIndicadores:Cell("E1_VALLIQ") ,,"SUM",,,,,.F.,.T.                                     )

	Else
		
		oFilial      := TRCell():New(oIndicadores,"M0_FILIAL"              ,"SE1","Filial"                        )
		
		If MV_PAR10 = 2
			oFilial:SetSize(30)
		Else	
			oFilial:SetSize(10)
		EndIf	
		
		oPeriodo     := TRCell():New(oIndicadores,"PERIODO"                ,"SE1","Periodo de atraso (dias)","@!" )
		oPeriodo:SetSize(50)
		oQtde        := TRCell():New(oIndicadores,"QTDE"                   ,"SE1","Quantidade","@E 99,999"        )
        oValor       := TRCell():New(oIndicadores,"E1_VALOR"               ,"SE1"                                 )
		oSaldo       := TRCell():New(oIndicadores,"E1_SALDO"               ,"SE1"                                 )
		oPerQtde     := TRCell():New(oIndicadores,"PERQTDE"                ,"SE1","% Quantidade","@E 999.99"      )
		oPerVal      := TRCell():New(oIndicadores,"PERVAL"                 ,"SE1","% Valor"     ,"@E 999.99"      )
		
		TRFunction():New(oIndicadores:Cell("QTDE")     ,,"SUM",,,,,.F.,.T.                                        )
		TRFunction():New(oIndicadores:Cell("E1_VALOR") ,,"SUM",,,,,.F.,.T.                                        )
		TRFunction():New(oIndicadores:Cell("E1_SALDO") ,,"SUM",,,,,.F.,.T.                                        )
		//TRFunction():New(oIndicadores:Cell("PERQTDE")  ,,"SUM",,,,,.F.,.T.                                        )
		//TRFunction():New(oIndicadores:Cell("PERVAL")   ,,"SUM",,,,,.F.,.T.                                        )
		
		oFilTot      := TRCell():New(oTotSec,"M0_FILIAL"              ,"SE1","Filial"                             )
		If MV_PAR10 = 2
			oFilTot:SetSize(30)
		Else	
			oFilTot:SetSize(10)
		EndIf
		oFilTot:Hide()
		
		oPerTot      := TRCell():New(oTotSec,"PERIODO"                ,"SE1","Periodo de atraso (dias)","@!"      )
		oPerTot:SetSize(50)
		oQtdTot      := TRCell():New(oTotSec,"QTDE"                   ,"SE1","Quantidade","@E 99,999"             )
        oValTot      := TRCell():New(oTotSec,"E1_VALOR"               ,"SE1"                                      )
		oValTot      := TRCell():New(oTotSec,"E1_SALDO"               ,"SE1"                                      )
		oPerTot      := TRCell():New(oTotSec,"PERQTDE"                ,"SE1","% Quantidade","@E 999.99"           )
		oPeVTot      := TRCell():New(oTotSec,"PERVAL"                 ,"SE1","% Valor"     ,"@E 999.99"           )
		
	EndIf

Return(oReport)	

/*/{Protheus.doc} ReportPrint
(long_description)
@author j2a.luizjunior
@since 18/05/2017
@version 1.0
@param oReport, objeto, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ReportPrint(oReport)

	Local   cSql      := ""
	Local   cAlias    := GetNextAlias()
	Local   oSec1     := oReport:Section(1)
	Local   oSec2     := oReport:Section(2)
	Local   aFil      := {}
	Local   cFil      := ""
	Local   cParam    := ""
	Local   cFAnalit  := "" 
	Private _aSelFil  := {}
	Private _lTdasFil := .F.

	If !Empty(MV_PAR01) .And. !Empty(MV_PAR02) 
		cSql += " AND E1_CLIENTE >= '"  + MV_PAR01 + "' "
		cSql += " AND E1_LOJA    >= '"  + MV_PAR02 + "' "	
	EndIf	

	If !Empty(MV_PAR03) .And. !Empty(MV_PAR04) 
		cSql += " AND E1_CLIENTE <= '"  + MV_PAR03 + "' "
		cSql += " AND E1_LOJA    <= '"  + MV_PAR04 + "' "	
	EndIf	

	If !Empty(MV_PAR05) .And. !Empty(MV_PAR06) 
		cSql += " AND E1_EMISSAO BETWEEN '"  + DToS(MV_PAR05) + "' AND '" + DToS(MV_PAR06) + "'"			
	EndIf		

	If !Empty(MV_PAR07) .And. !Empty(MV_PAR08) 
		cSql += " AND E1_VENCREA BETWEEN '"  + DToS(MV_PAR07) + "' AND '" + DToS(MV_PAR08) + "'"			
	EndIf		

	If MV_PAR11 = 1
	
		_aSelFil := AdmGetFil(@_lTdasFil,.F.,"SE1")

		While Len(_aSelFil) = 0
			_aSelFil := AdmGetFil(@_lTdasFil,.F.,"SE1")
		EndDo
		
		cParam   := GetRngFil( _aSelFil, "SE1" )

		cSql += " AND E1_FILIAL " +	cParam +" "
	Else 
		cSql += " AND E1_FILIAL = '" + cFilAnt +"' "
	EndIf
	
	If MV_PAR09 = 1
		
		DbSelectArea("SM0")
		DbGoTop()
		While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAnt
			
			If MV_PAR11 = 1
				//Aviso("VarInfo", VarInfo("_aSelFil",_aSelFil,,.F.) , {"ok"},3 )
				If aScan(_aSelFil , AllTrim(SM0->M0_CODFIL) ) = 0
					SM0->(DbSkip())
					loop
				EndIf
			EndIf
			
			If MV_PAR10 = 1			
				aAdd(aFil,{AllTrim(SM0->M0_FILIAL),SM0->M0_CODFIL})
				If !(SubStr(SM0->M0_CODFIL,1,4) $ cFil)
					cFil += SubStr(SM0->M0_CODFIL,1,4)
				EndIf 			
			Else	
				cFil += SubStr(SM0->M0_CODFIL,1,4)
				aAdd(aFil,{AllTrim(SM0->M0_FILIAL),SM0->M0_CODFIL})
			EndIf
			
			SM0->(DbSkip())
		EndDo	

		cSql := "%"+cSql+"%"		
		
		BeginSql Alias cAlias
		
			SELECT E1_FILIAL,
				   E1_NOMCLI,
			       E1_PREFIXO,
			       E1_NUM,
			       E1_PARCELA,
			       E1_TIPO,
			       E1_VALOR,
			       E1_EMISSAO,
			       E1_VENCREA,
			       E1_JUROS,
			       E1_SALDO,			       
			       E1_DECRESC
			FROM  %Table:SE1% 
			WHERE %NOTDEL%
			//AND   E1_SALDO = E1_VALOR  //SALDO IGUAL VALOR.. 
			and E1_SALDO > 0
			%Exp:cSql%
		
		EndSql
		
		oSec1:Cell("M0_FILIAL"):SetBlock( {|| fGetFil(aFil, (cAlias)->E1_FILIAL) } )
		
		While !(cAlias)->(Eof())
		
			oSec1:Init()
			
			//nPosFil  := aScan(aFil, {|x| AllTrim(x[2]) == AllTrim((cAlias)->E1_FILIAL)})
			//cFAnalit := AllTrim(aFil[nPosFil][2]) + " - " +  aFil[nPosFil][1]
			//oSec1:Cell("M0_FILIAL") :SetValue(cFAnalit)
			
			oSec1:Cell("E1_NOMCLI") :SetValue((cAlias)->E1_NOMCLI)		
			oSec1:Cell("TITULO")    :SetValue((cAlias)->E1_PREFIXO + (cAlias)->E1_NUM + (cAlias)->E1_PARCELA)
			oSec1:Cell("E1_TIPO")   :SetValue((cAlias)->E1_TIPO)
			oSec1:Cell("E1_EMISSAO"):SetValue(DToC(SToD((cAlias)->E1_EMISSAO)))
			oSec1:Cell("E1_VENCREA"):SetValue(DToC(SToD((cAlias)->E1_VENCREA)))
			oSec1:Cell("E1_VALOR")  :SetValue((cAlias)->E1_VALOR)
			oSec1:Cell("E1_SALDO")  :SetValue((cAlias)->E1_SALDO)
			//oSec1:Cell("DIFERE")    :SetValue((cAlias)->E1_VALOR - (cAlias)->E1_SALDO)
			//oSec1:Cell("E1_VALLIQ") :SetValue((cAlias)->E1_VALOR + (cAlias)->E1_JUROS)
			//oSec1:Cell("E1_JUROS")  :SetValue((cAlias)->E1_JUROS)
			oSec1:Cell("E1_DECRESC")  :SetValue((cAlias)->E1_DECRESC)		
			oSec1:Cell("DIAS")      :SetValue( dDatabase - SToD((cAlias)->E1_VENCREA) )			
			
			oSec1:Printline()

			If oReport:Cancel()
				Return(Nil)
			EndIf				
				
			(cAlias)->(DbSkip())
		EndDo
		
		(cAlias)->(DbCloseArea())
		
	Else
		
		
		DbSelectArea("SM0")
		DbGoTop()
		While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAnt
			If MV_PAR11 = 1
				//Aviso("VarInfo", VarInfo("_aSelFil",_aSelFil,,.F.) , {"ok"},3 )
				If aScan(_aSelFil , AllTrim(SM0->M0_CODFIL) ) = 0
					SM0->(DbSkip())
					loop
				EndIf
				
				If MV_PAR10 = 1			
					If !(SubStr(SM0->M0_CODFIL,1,4) $ cFil)
						cFil += SubStr(SM0->M0_CODFIL,1,4)
						aAdd(aFil,{AllTrim(SM0->M0_FILIAL),SM0->M0_CODFIL})
					EndIf 			
				Else	
					cFil += SubStr(SM0->M0_CODFIL,1,4)
					aAdd(aFil,{AllTrim(SM0->M0_FILIAL),SM0->M0_CODFIL})
				EndIf
			Else
				aAdd(aFil,{FWFilialName(),cFilAnt})
				exit
			EndIf
			
			SM0->(DbSkip())
		EndDo
		
		oSec1:Cell("M0_FILIAL"):SetBlock( {|| fGetFil(aFil, aFil[nH][2] ) } )
		
		For nH := 1 To Len(aFil)
			
			oSec1:Init()
			
			if MV_PAR10 == 1 .And. MV_PAR11 = 1
				cFilCon := SubStr(aFil[nH][2],1,4) + "%"
			Else
				cFilCon := AllTrim(aFil[nH][2])
			EndIf
			
			aConsolida := Consolida(cSql,cFilCon)	
			
			oSec1:Init()
			oSec2:Init()
			For nL := 1 To Len(aConsolida)
				
				If nL = 5
					//oSec1:Cell("M0_FILIAL"):SetValue("")		
					//oSec1:Cell("M0_FILIAL"):hide()
					oReport:ThinLine()		
					oSec2:Cell("PERIODO")  :SetValue(aConsolida[nL][1])			
					oSec2:Cell("QTDE")     :SetValue(aConsolida[nL][2])		
					oSec2:Cell("E1_VALOR") :SetValue(aConsolida[nL][3])
					oSec2:Cell("PERQTDE")  :SetValue(aConsolida[nL][4])
					oSec2:Cell("PERVAL")   :SetValue(aConsolida[nL][5])
					oSec2:Cell("E1_SALDO") :SetValue(aConsolida[nL][6])
					oSec2:Printline()
				Else
					oSec1:Cell("PERIODO") :SetValue(aConsolida[nL][1])			
					oSec1:Cell("QTDE")    :SetValue(aConsolida[nL][2])		
					oSec1:Cell("E1_VALOR"):SetValue(aConsolida[nL][3])
					oSec1:Cell("PERQTDE") :SetValue(aConsolida[nL][4])
					oSec1:Cell("PERVAL")  :SetValue(aConsolida[nL][5])
					oSec1:Cell("E1_SALDO"):SetValue(aConsolida[nL][6])
					oSec1:Printline()
				EndIf
				
				//oSec1:Cell("M0_FILIAL"):show()
			Next nL
			
			oSec1:Finish()
			oSec2:Finish()
			
			/*If nH != Len(aFil)
				oReport:ThinLine()
			EndIf*/
			
			If oReport:Cancel()
				Return(Nil)
			EndIf	
			
		Next nH
	
	EndIf	
	
	oSec1:Finish()
	oSec2:Finish()

Return

/*/{Protheus.doc} fGetFil
funcao que busca a descricao da filial de acordo com o parametro
@author j2a.caiolima
@since 06/07/2017
/*/
Static Function fGetFil(_aFil, _cFil)
	Local _cRet := ""
	
	//Aviso("VarInfo", VarInfo("_aFil",_aFil,,.F.) , {"ok"},3 )
	//Aviso("VarInfo", VarInfo("_cFil",_cFil,,.F.) , {"ok"},3 )
	
	_nPosFil  := aScan(_aFil, {|x| AllTrim(x[2]) == AllTrim(_cFil)})
	
	If MV_PAR10 == 1 .And. MV_PAR11 = 1
		// centraliza -> sim
		_nPosFil := aScan(_aEmpresas, {|x| AllTrim(x[1]) == SubStr(_cFil,1,4) } )
		If _nPosFil > 0
			_cRet := _aEmpresas[_nPosFil][2]
		ELse
			// forma antiga de buscar
			If "05MT" $ SubStr(_cFil,1,4)				
				_cRet := _aFil[_nPosFil][1]
			Else
				_cRet := SubStr(_aFil[_nPosFil][1],1,5)
			EndIf
		EndIf
	Else
		// centraliza nao
		_cRet := AllTrim(_aFil[_nPosFil][2]) + " - " +  _aFil[_nPosFil][1]
	EndIf
	
Return(_cRet)


/*/{Protheus.doc} Consolida
(long_description)
@author j2a.luizjunior
@since 18/05/2017
@version 1.0
@param pSql, ${param_type}, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function Consolida(pSql,pFilCon)

	Local cSql    := pSql
	Local cAlCon  := GetNextAlias()
	Local aRet    := {}
	Local cFilCon := pFilCon 
	
	Local qQTot   := 0 
	Local nTotal  := 0
	
	Local nPerQtd := 0
	Local nPerVal := 0 
	
	Local nPerTot := 0 
	Local nPerVTo := 0
	
	Local nQtd1   := 0
	Local nQtd2   := 0
	Local nQtd3   := 0
	Local nQtd4   := 0
	
	Local nVal1   := 0
	Local nVal2   := 0
	Local nVal3   := 0
	Local nVal4   := 0

	Local nSal1	  := 0
	Local nSal2	  := 0
	Local nSal3	  := 0
	Local nSal4	  := 0
	Local nSalTt  := 0

	cSql := "%"+cSql+"%"
	
	BeginSql Alias cAlCon
		
		SELECT E1_NOMCLI,
		       E1_PREFIXO,
		       E1_NUM,
		       E1_PARCELA,
		       E1_TIPO,
		       E1_VALOR,
		       E1_EMISSAO,
		       E1_VENCREA,
		       E1_JUROS,
		       0 as DIFERE, 
		       E1_SALDO
		FROM  %Table:SE1% 
		WHERE %NOTDEL%
		//AND   E1_SALDO = E1_VALOR
		AND E1_SALDO > 0
		%Exp:cSql%
		AND E1_EMISSAO < %Exp:MV_PAR12%
		AND   E1_FILIAL LIKE %Exp:cFilCon%
						
	EndSql	
	
	While !(cAlCon)->(Eof())
		
		nDias := dDatabase - SToD((cAlCon)->E1_VENCREA)
		
		Do Case
		
			//-> vencidos ate 40 dias
			Case nDias <= 40
				nQtd1++
				nVal1 += (cAlCon)->E1_VALOR
				nSal1 += (cAlCon)->E1_SALDO
				
			//-> vencidos a mais de 40 dias e menos de 180
			Case nDias > 40 .And. nDias <= 180
				nQtd2++
				nVal2 += (cAlCon)->E1_VALOR
				nSal2 += (cAlCon)->E1_SALDO
				
			//-> vencidos a mais de 180 dias e menos de 540
			Case nDias > 180 .And. nDias <= 540
				nQtd3++
				nVal3 += (cAlCon)->E1_VALOR
				nSal3 += (cAlCon)->E1_SALDO
				
			//-> vencidos a mais de 540 dias 
			Case nDias > 540
				nQtd4++
				nVal4 += (cAlCon)->E1_VALOR
				nSal4 += (cAlCon)->E1_SALDO
		
		EndCase		
		
		qQTot++
		nTotal += (cAlCon)->E1_VALOR
	
		(cAlCon)->(DbSkip())
	EndDo
	
	(cAlCon)->(DbCloseArea())
	
	nPerQtd := Round((nQtd1 / qQTot) * 100,2)
	nPerVal := Round((nVal1 * 100) / nTotal,2)
	
	nPerTot += nPerQtd
	nPerVTo += nPerVal
		
	aAdd(aRet,{"vencidos ate 40 dias"                          ,nQtd1,nVal1,nPerQtd,nPerVal,nSal1})

	nPerQtd := Round((nQtd2 / qQTot) * 100 ,2)
	nPerVal := Round((nVal2 * 100) / nTotal	,2)
	
	nPerTot += nPerQtd
	nPerVTo += nPerVal	
		
	aAdd(aRet,{"vencidos de 41 a 180 dias"     ,nQtd2,nVal2,nPerQtd,nPerVal,nSal2})

	nPerQtd := Round((nQtd3 / qQTot) * 100 ,2)
	nPerVal := Round((nVal3 * 100) / nTotal	,2)
	
	nPerTot += nPerQtd
	nPerVTo += nPerVal	
		
	aAdd(aRet,{"vencidos de 181 a 540 dias"    ,nQtd3,nVal3,nPerQtd,nPerVal,nSal3})

	nPerQtd := Round((nQtd4 / qQTot) * 100 ,2)
	nPerVal := Round((nVal4 * 100) / nTotal	,2)
	
	nPerTot += nPerQtd
	nPerVTo += nPerVal	
		
	aAdd(aRet,{"vencidos a mais de 541 dias"                   ,nQtd4,nVal4,nPerQtd,nPerVal,nSal4})
	
	nQTot   := nQtd1 + nQtd2 + nQtd3 + nQtd4
	nValTot := nVal1 + nVal2 + nVal3 + nVal4
	nSalTt	:= nSal1 + nSal2 + nSal3 + nSal4
	/*
	nPerTot += nPerQtd
	nPerVTo += nPerVal	
	*/
	aAdd(aRet,{"Total de titulos vencidos ate "+DToC(MV_PAR08) ,nQTot,nValTot,nPerTot,nPerVTo,nSalTt})

Return aRet

/*/{Protheus.doc} CriaSX1
(long_description)
@author j2a.luizjunior
@since 18/05/2017
@version 1.0
@param cPerg, character, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function CriaSX1(cPerg)

	Local aHelp := {}

	//AAdd(aHelp, {{"Filial De"                  } ,{""},{""}})//01
	//AAdd(aHelp, {{"Filial Ate"                 } ,{""},{""}})//02
	AAdd(aHelp, {{"Cliente De"                  } ,{""},{""}})//03
	AAdd(aHelp, {{"Loja De"                     } ,{""},{""}})//04
	AAdd(aHelp, {{"Cliente Ate"                 } ,{""},{""}})//05
	AAdd(aHelp, {{"Loja Ate"                    } ,{""},{""}})//06	
	AAdd(aHelp, {{"Emissão De"                  } ,{""},{""}})//07
	AAdd(aHelp, {{"Emissão Ate"                 } ,{""},{""}})//08
	AAdd(aHelp, {{"Vencimento De"               } ,{""},{""}})//09
	AAdd(aHelp, {{"Vencimento Ate"              } ,{""},{""}})//10
	AAdd(aHelp, {{"Tipo - Analitico/Sintetico"  } ,{""},{""}})//11
	AAdd(aHelp, {{"Centralizar - Sim/Não"       } ,{""},{""}})//12
	AAdd(aHelp, {{"Selecionar filial - Sim/Não" } ,{""},{""}})//12
	AAdd(aHelp, {{"Selecionar Data base."	 	} ,{""},{""}})//12
	
	//u_SFPUTSX1(cPerg,"01","Filial De"      ,"","","mv_ch1"  ,"C",08,00,00,"G","","SM0"  ,"","","mv_par01",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[1 ,1] ,aHelp[1 ,2] ,aHelp[1 ,3] ,"")
	//u_SFPUTSX1(cPerg,"02","Filial Ate"     ,"","","mv_ch2"  ,"C",08,00,00,"G","","SM0"  ,"","","mv_par02",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[2 ,1] ,aHelp[2 ,2] ,aHelp[2 ,3] ,"")
	u_SFPUTSX1(cPerg,"01","Cliente De"       ,"","","mv_ch1"  ,"C",09,00,00,"G","","SA1"  ,"","","mv_par01",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[1 ,1] ,aHelp[1 ,2] ,aHelp[1 ,3] ,"")
	u_SFPUTSX1(cPerg,"02","Loja De"          ,"","","mv_ch2"  ,"C",04,00,00,"G","",""     ,"","","mv_par02",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[2 ,1] ,aHelp[2 ,2] ,aHelp[2 ,3] ,"")
	u_SFPUTSX1(cPerg,"03","Cliente Ate"      ,"","","mv_ch3"  ,"C",09,00,00,"G","","SA1"  ,"","","mv_par03",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[3 ,1] ,aHelp[3 ,2] ,aHelp[3 ,3] ,"")
	u_SFPUTSX1(cPerg,"04","Loja Ate"         ,"","","mv_ch4"  ,"C",04,00,00,"G","",""     ,"","","mv_par04",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[4 ,1] ,aHelp[4 ,2] ,aHelp[4 ,3] ,"")
	u_SFPUTSX1(cPerg,"05","Emissão De"       ,"","","mv_ch5"  ,"D",08,00,00,"G","",""     ,"","","mv_par05",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[5 ,1] ,aHelp[5 ,2] ,aHelp[5 ,3] ,"")
	u_SFPUTSX1(cPerg,"06","Emissão Ate"      ,"","","mv_ch6"  ,"D",08,00,00,"G","",""     ,"","","mv_par06",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[6 ,1] ,aHelp[6 ,2] ,aHelp[6 ,3] ,"")
	u_SFPUTSX1(cPerg,"07","Vencimento De"    ,"","","mv_ch7"  ,"D",08,00,00,"G","",""     ,"","","mv_par07",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[7 ,1] ,aHelp[7 ,2] ,aHelp[7 ,3] ,"")
	u_SFPUTSX1(cPerg,"08","Vencimento Ate"   ,"","","mv_ch8"  ,"D",08,00,00,"G","",""     ,"","","mv_par08",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[8 ,1] ,aHelp[8 ,2] ,aHelp[8 ,3] ,"")
	u_SFPUTSX1(cPerg,"09","Tipo"             ,"","","mv_ch9"  ,"C",01,00,00,"C","",""     ,"","","mv_par09","Analitico","","","","Sintetico","","","","","","","","","","","" ,aHelp[9 ,1] ,aHelp[9 ,2] ,aHelp[9 ,3] ,"")
	u_SFPUTSX1(cPerg,"10","Centralizar"      ,"","","mv_ch10" ,"C",01,00,00,"C","",""     ,"","","mv_par10","Sim"      ,"","","","Nao"      ,"","","","","","","","","","","" ,aHelp[10,1] ,aHelp[10,2] ,aHelp[10,3] ,"")
	u_SFPUTSX1(cPerg,"11","Seleciona Filial" ,"","","mv_ch11" ,"C",01,00,00,"C","",""     ,"","","mv_par11","Sim"      ,"","","","Nao"      ,"","","","","","","","","","","" ,aHelp[11,1] ,aHelp[11,2] ,aHelp[11,3] ,"")
	u_SFPUTSX1(cPerg,"12","Data Base"   	 ,"","","mv_ch12" ,"D",08,00,00,"G","",""     ,"","","mv_par12",""         ,"","","",""         ,"","","","","","","","","","","" ,aHelp[12,1] ,aHelp[12,2] ,aHelp[12,3] ,"")

Return