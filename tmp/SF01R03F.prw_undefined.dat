//Bibliotecas
#Include "Protheus.ch"
#Include "TopConn.ch"
#Include "RPTDef.ch"
#Include "FWPrintSetup.ch"
 
//Alinhamentos
#Define PAD_LEFT    0
#Define PAD_RIGHT   1
#Define PAD_CENTER  2
 
//Cores
#Define COR_CINZA   RGB(180, 180, 180)
#Define COR_PRETO   RGB(000, 000, 000)
 
//Colunas
#Define COL_ITEM   0015
#Define COL_REGPAT 0040
#Define COL_DESCR  0115
#Define COL_NROSER 0275
#Define COL_DTAQUI 0350
#Define COL_VLRAQU 0415
#Define COL_VLRRES 0475

#DEFINE Imp_Spool      	2
 
/*/{Protheus.doc} SF01R03F
Relatório descritivo da solicitação de baixa de ativos fixo.
@author Atilio
@since 27/01/2019
@version 1.0
@type function
/*/
 
User Function SF01R03F()
Local aArea			:= GetArea()
Local aDevice		:= {}
Local aMargProf		:= {}
Local cPerg			:= "SF01R03F"
Local cSession		:= GetPrinterSession()
Local cDevice   	:= fwGetProfString(cSession, "PRINTTYPE", "PDF", .T.)
Local cDestino		:= fwGetProfString(cSession, "DEFAULT", "c:\Util\", .T.)
Local nFlags   		:= PD_ISTOTVSPRINTER + PD_DISABLEORIENTATION
Local nPrintType	:= 0
Local nLocal		:= 0
Private Titulo   := OemToAnsi("Solicitação de Transferência")
//Objeto de Impressão
Private oPrinter
Private oSetup
	If Pergunte(cPerg, .T.)
		//Define os Tipos de Impressao validos
		AADD(aDevice,"DISCO") 
		AADD(aDevice,"SPOOL") 
		AADD(aDevice,"EMAIL") 
		AADD(aDevice,"EXCEL") 
		AADD(aDevice,"HTML" ) 
		AADD(aDevice,"PDF"  )  
		//Realiza as configuracoes necessarias para a impressao
		nPrintType := aScan(aDevice,{|x| x == cDevice }) 
		nLocal     :=  2 //Local
		aMargProf := {fwGetProfString(cSession,"MARG1","60",.T.),fwGetProfString(cSession,"MARG2","60",.T.),fwGetProfString(cSession,"MARG3","60",.T.),fwGetProfString(cSession,"MARG4","60",.T.) }
		oSetup := FWPrintSetup():New(nFlags, Titulo)
		oSetup:SetUserParms( {|| Pergunte(cPerg, .T.) } ) 
		oSetup:SetPropert(PD_PRINTTYPE   , nPrintType)
		oSetup:SetPropert(PD_ORIENTATION , 1) 
		oSetup:SetPropert(PD_DESTINATION , nLocal)
		oSetup:SetPropert(PD_MARGIN      , {Val(aMargProf[1]),Val(aMargProf[2]),Val(aMargProf[3]),Val(aMargProf[4])})
		oSetup:SetPropert(PD_PAPERSIZE   , 2)
		oSetup:SetPropert(PD_PREVIEW, .T.)
		If cDevice == "PDF"
			oSetup:aOptions[PD_VALUETYPE] := cDestino
		EndIf
		oPrinter := FWMSPrinter():New( 'SF01R03F', IMP_PDF , .F., , .T., , oSetup )
		If !(oSetup:Activate() == PD_OK)
			oPrinter:Deactivate() 
			Return
		EndIf
		oPrinter:lServer := oSetup:GetProperty( PD_DESTINATION ) == AMB_SERVER                      
		oPrinter:SetResolution( 75 )
		If oSetup:GetProperty( PD_ORIENTATION ) == 2
			oPrinter:SetLandscape()
		Else
			oPrinter:SetPortrait()
		EndIf
			
		oPrinter:SetPaperSize( oSetup:GetProperty( PD_PAPERSIZE ) )
		oPrinter:SetMargin(oSetup:GetProperty( PD_MARGIN )[1],oSetup:GetProperty( PD_MARGIN )[2],oSetup:GetProperty( PD_MARGIN )[3],oSetup:GetProperty( PD_MARGIN )[4])
		aMargRel := { oSetup:GetProperty( PD_MARGIN )[1],oSetup:GetProperty( PD_MARGIN )[2],oSetup:GetProperty( PD_MARGIN )[3],oSetup:GetProperty( PD_MARGIN )[4] }
		fwWriteProfString(cSession,"LOCAL", If(oSetup:GetProperty(PD_DESTINATION)==1,"SERVER","LOCAL"), .T.)
		fwWriteProfString(cSession,"PRINTTYPE", aDevice[oSetup:GetProperty( PD_PRINTTYPE )], .T.)
		fwWriteProfString(cSession,"MARG1", alltrim(str(aMargRel[1])), .T.)
		fwWriteProfString(cSession,"MARG2", alltrim(str(aMargRel[2])), .T.)
		fwWriteProfString(cSession,"MARG3", alltrim(str(aMargRel[3])), .T.)
		fwWriteProfString(cSession,"MARG4", alltrim(str(aMargRel[4])), .T.)
		If oSetup:GetProperty( PD_PRINTTYPE ) == Imp_Spool  
			oPrinter:nDevice := Imp_Spool
			fwWriteProfString(cSession,"DEFAULT", oSetup:aOptions[PD_VALUETYPE], .T.)
			oPrinter:cPrinter := oSetup:aOptions[PD_VALUETYPE]
		ElseIf oSetup:GetProperty( PD_PRINTTYPE ) == IMP_PDF
			oPrinter:nDevice := IMP_PDF
			fwWriteProfString(cSession,"DEFAULT", oSetup:aOptions[PD_VALUETYPE], .T.)	
			oPrinter:cPathPDF := oSetup:aOptions[PD_VALUETYPE]
		EndIf
		Processa( {|| fMontaRel() }, "Aguarde...", "Gerando relatório...", .F.)
	EndIf
	RestArea(aArea)
Return
 
/*---------------------------------------------------------------------*
 | Func:  fMontaRel                                                    |
 | Desc:  Função que monta o relatório                                 |
 *---------------------------------------------------------------------*/
Static Function fMontaRel()
Local cCaminho  := ""
Local cArquivo  := ""
Local cAliasSNM	:= GetNextAlias()
Local cWhere	:= ""
Local nAtual    := 0
Local nTotal    := 0
Local nTotVlAq	:= 0
Local nTotVlRe	:= 0
//Linhas e colunas
Private nLinAtu   := 000
Private nTamLin   := 010
Private nLinFin   := 630
Private nColIni   := 010
Private nColFin   := 550
Private nColMeio  := (nColFin-nColIni)/2
//Variáveis auxiliares
Private dDataGer  := Date()
Private cHoraGer  := Time()
Private nPagAtu   := 1
Private cNomeUsr  := ""
//Fontes
Private cNomeFont := "Arial"
Private oFontDet  := TFont():New(cNomeFont, 9, -10, .T., .F., 5, .T., 5, .T., .F.)
Private oFontDetN := TFont():New(cNomeFont, 9, -10, .T., .T., 5, .T., 5, .T., .F.)
Private oFontRod  := TFont():New(cNomeFont, 9, -08, .T., .F., 5, .T., 5, .T., .F.)
Private oFontTit  := TFont():New(cNomeFont, 9, -13, .T., .T., 5, .T., 5, .T., .F.)
Private oFntTtDe  := TFont():New(cNomeFont, Nil, -08, Nil, .F., Nil, Nil, Nil, Nil, .F., .F.)
	cWhere := " SNM.NM_CODIGO BETWEEN '" + MV_PAR01 + "' AND '" + MV_PAR02 + "' "
	//Solicitante
	If !Empty(MV_PAR03)
		cWhere += " AND SNM.NM_USRSOL = '" + MV_PAR03 + "' "
	EndIf
	//Data De
	If !Empty(MV_PAR04)
		cWhere += " AND SNM.NM_DATSOL >= '" + DtoS(MV_PAR04) + "' "
	EndIf
	//Data Ate
	If !Empty(MV_PAR05)
		cWhere += " AND SNM.NM_DATSOL <= '" + DtoS(MV_PAR05) + "' "
	EndIf
	cWhere := "%" + cWhere + "%" 
	//Montando a consulta
	BeginSql alias cAliasSNM
	    column N1_AQUISIC as Date
	    column NM_DATSOL as Date
	    SELECT
	        SNM.NM_FILIAL,
	        SNM.NM_CODIGO,
	        SNM.NM_MOTBX,
	        SNM.NM_CDHSOL,
	        SNM.NM_DATSOL,
	        SNM.NM_USRSOL,
	        SN1.N1_CBASE,
	        SN1.N1_ITEM,
	        SN1.N1_DESCRIC,
	        SN1.N1_AQUISIC,
	        SN1.N1_XSERIEP,
	        SN1.N1_VLAQUIS,
	        (SN3.N3_VORIG1 - SN3.N3_VRDACM1) AS VLRESID,
	        SND.ND_CODRESP,
	        ( 
	        	Trim((SELECT SYP.yp_texto FROM %table:SYP% SYP WHERE SYP.%notDel% AND substr(SYP.yp_filial, 1, 4) = substr(snm.nm_filial, 1, 4) AND SYP.yp_chave = snm.nm_cdhsol AND SYP.yp_seq = '001'))
        		|| 
      			Trim((SELECT SYP.yp_texto FROM %table:SYP% SYP WHERE SYP.%notDel% AND substr(SYP.yp_filial, 1, 4) = substr(snm.nm_filial, 1, 4) AND SYP.yp_chave = snm.nm_cdhsol AND SYP.yp_seq = '002'))
      			||
      			Trim((SELECT SYP.yp_texto FROM %table:SYP% SYP WHERE SYP.%notDel% AND substr(SYP.yp_filial, 1, 4) = substr(snm.nm_filial, 1, 4) AND SYP.yp_chave = snm.nm_cdhsol AND SYP.yp_seq = '003'))
      		) as HIST
	    FROM
	        %table:SNM% SNM, %table:SN1% SN1, %table:SN3% SN3, %table:SND% SND
	    WHERE
	    	SNM.%notDel% AND
	    	SN1.%notDel% AND 
	    	SN1.N1_FILIAL = SNM.NM_FILIAL AND
	    	SN1.N1_CBASE = SNM.NM_CBASE AND
	    	SN1.N1_ITEM = SNM.NM_ITEM AND
	    	SN3.%notDel% AND
	    	SN3.N3_FILIAL = SN1.N1_FILIAL AND
	    	SN3.N3_CBASE = SN1.N1_CBASE AND
	    	SN3.N3_ITEM = SN1.N1_ITEM AND
	    	SND.%notDel% AND
	    	SND.ND_FILIAL = SNM.NM_FILIAL AND
	    	SND.ND_CBASE = SNM.NM_CBASE AND 
	    	SND.ND_ITEM = SNM.NM_ITEM AND
	    	SND.ND_STATUS = '1'	AND	//1=Ativo;2=Inativo;3=Transferido
	    	SNM.NM_FILIAL = %Exp:xFilial("SNM")% AND 
	    	SNM.NM_TIPOSOL = '1' AND //1=Baixa;2=Transferência
	    	%exp:cWhere%
	    ORDER BY SNM.NM_USRSOL,
	    	SNM.NM_MOTBX,
	    	HIST,
	    	SND.ND_CODRESP 
	    	
	EndSql
	//Conta o total de registros, seta o tamanho da régua, e volta pro topo
	Count To nTotal
	ProcRegua(nTotal)
	(cAliasSNM)->(DbGoTop())
	nAtual := 0
	
	If ! (cAliasSNM)->(EoF())
		//Imprime o cabeçalho
		cMotbx := (cAliasSNM)->NM_MOTBX
		dDatSol := (cAliasSNM)->NM_DATSOL
		cNomeUsr  := UsrRetName((cAliasSNM)->NM_USRSOL)
		cEmissor := UsrFullName( (cAliasSNM)->NM_USRSOL )
		cCodRes	:= (cAliasSNM)->ND_CODRESP
		cRespons := Posicione("RD0", 1,xFilial("RD0") + cCodRes, "RD0_NOME")
		cHist := (cAliasSNM)->HIST
		nItem	:= 0
		fImpCab( (cAliasSNM)->NM_FILIAL, cMotbx )
		//Enquanto houver registros
		While ! (cAliasSNM)->(EoF())
		    nAtual++
		    nItem++
		    IncProc("Imprimindo solicitação " + (cAliasSNM)->NM_CODIGO + " (" + cValToChar(nAtual) + " de " + cValToChar(nTotal) + ")...")
		    //Se a linha atual mais o espaço que será utilizado forem maior que a linha final, imprime rodapé e cabeçalho
		    If nLinAtu + nTamLin > nLinFin
		        fImpRod( cHist, cEmissor, cRespons )
		        nPagAtu++
		        fImpCab( (cAliasSNM)->NM_FILIAL, (cAliasSNM)->NM_MOTBX )
		    EndIf
		    //Se for uma data ou um solicitante, ou motivo de baixa ou um responsavel diferente, inicia nova página.
		    If (cNomeUsr <> UsrRetName((cAliasSNM)->NM_USRSOL)) .Or. cMotbx <> (cAliasSNM)->NM_MOTBX .Or. ;
		    		cCodRes <> (cAliasSNM)->ND_CODRESP .Or. cHist <> (cAliasSNM)->HIST 
		    	nLinAtu := nLinFin
		    	nLinAtu += nTamLin
				//Total
			    oPrinter:Box( nLinAtu, nColIni, nLinAtu + nTamLin, nColFin )
			    oPrinter:SayAlign(nLinAtu, COL_DESCR, "TOTAL", oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
			    oPrinter:Line(nLinAtu, COL_VLRAQU, nLinAtu + nTamLin, COL_VLRAQU)
			    oPrinter:SayAlign(nLinAtu, COL_VLRAQU, Transform(nTotVlAq, "@E 9,999,999.99"), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
			    oPrinter:Line(nLinAtu, COL_VLRRES, nLinAtu + nTamLin, COL_VLRRES)
			    oPrinter:SayAlign(nLinAtu, COL_VLRRES,Transform(nTotVlRe, "@E 9,999,999.99"), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
		    	fImpRod( cHist, cEmissor, cRespons )
		    	nPagAtu := 1
				cMotbx := (cAliasSNM)->NM_MOTBX
				dDatSol := (cAliasSNM)->NM_DATSOL
		    	cEmissor := UsrFullName( (cAliasSNM)->NM_USRSOL )
		    	cNomeUsr := UsrRetName((cAliasSNM)->NM_USRSOL)
		    	cHist := (cAliasSNM)->HIST
		    	cCodRes	:= (cAliasSNM)->ND_CODRESP
		    	cRespons := Posicione("RD0", 1,xFilial("RD0") + cCodRes, "RD0_NOME")
		        fImpCab( (cAliasSNM)->NM_FILIAL, (cAliasSNM)->NM_MOTBX )
		        nItem := 1
		    	nTotVlAq := 0 
		    	nTotVlRe := 0
		    EndIf
		    //Imprimindo a linha atual
		    cSerieP := If(Empty((cAliasSNM)->N1_XSERIEP), "    ---    ", (cAliasSNM)->N1_XSERIEP)
			oPrinter:SayAlign(nLinAtu, COL_ITEM, cValToChar(nItem), oFontDet, 20, nTamLin, COR_PRETO, PAD_CENTER, 0)
			oPrinter:SayAlign(nLinAtu, COL_REGPAT, (cAliasSNM)->N1_CBASE, oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
			oPrinter:SayAlign(nLinAtu, COL_DESCR, (cAliasSNM)->N1_DESCRIC, oFontDet, 150, nTamLin, COR_PRETO, PAD_LEFT, 0)
			oPrinter:SayAlign(nLinAtu, COL_NROSER, cSerieP, oFontDet, 100, nTamLin, COR_PRETO, PAD_CENTER, 0)
			oPrinter:SayAlign(nLinAtu, COL_DTAQUI, DtoC( (cAliasSNM)->N1_AQUISIC ), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
			oPrinter:SayAlign(nLinAtu, COL_VLRAQU, Transform((cAliasSNM)->N1_VLAQUIS, "@E 9,999,999.99"), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
			oPrinter:SayAlign(nLinAtu, COL_VLRRES, Transform((cAliasSNM)->VLRESID, "@E 9,999,999.99"), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
			oPrinter:Line( nLinAtu, nColIni, nLinAtu, nColFin, COR_PRETO)
		    nLinAtu += nTamLin
		    nTotVlAq += (cAliasSNM)->N1_VLAQUIS
		    nTotVlRe += (cAliasSNM)->VLRESID
		     
		    (cAliasSNM)->(DbSkip())
		EndDo	 
		//Se ainda tiver linhas sobrando na página, imprime o rodapé final
		If nLinAtu <= nLinFin
			nLinAtu := nLinFin
			nLinAtu += nTamLin
			//Total
		    oPrinter:Box( nLinAtu, nColIni, nLinAtu + nTamLin, nColFin )
		    oPrinter:SayAlign(nLinAtu, COL_DESCR, "TOTAL", oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
		    oPrinter:Line(nLinAtu, COL_VLRAQU, nLinAtu + nTamLin, COL_VLRAQU)
		    oPrinter:SayAlign(nLinAtu, COL_VLRAQU, Transform(nTotVlAq, "@E 9,999,999.99"), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
		    oPrinter:Line(nLinAtu, COL_VLRRES, nLinAtu + nTamLin, COL_VLRRES)
		    oPrinter:SayAlign(nLinAtu, COL_VLRRES,Transform(nTotVlRe, "@E 9,999,999.99"), oFontDet, 60, nTamLin, COR_PRETO, PAD_CENTER, 0)
		    fImpRod(cHist, cEmissor, cRespons)
		EndIf
		//Mostrando o relatório
		oPrinter:Preview()
	Else
		Help(;
			NIL,;
			NIL,;
			"Nenhum dado encontrado",;
			NIL,;
			"Não foi encontrato nenhum dado com os parâmetros informados.",;
			1,;
			0,;
			NIL,;
			NIL,;
			NIL,;
			NIL,;
			NIL,;
			{"Verifique o preenchimento dos parâmetros."};
		)
	EndIf
	(cAliasSNM)->(DbCloseArea())
Return
 
/*/{Protheus.doc} fImpCab
Impressão do cabeçalho do relatório
@author Franklin de Brito de Oliveira
@since 03/12/2020
@version 1.0
@return Nil
@param cFilOri, characters, Filial da solicitação
@param cMotbx, characters, Motivo de baixa
@type Static function
/*/
Static Function fImpCab( cFilOri, cMotbx )
Local nLinCab  	:= 030
Local cDsMtBx	:= Capital( AllTrim( Posicione( "SX5", 1, xFilial("SX5") + "16" + cMotbx, "X5Descri()" ) ) )
    //Iniciando Página
    oPrinter:StartPage()
    //Cabeçalho
    oPrinter:Box( nLinCab, nColIni+2, nLinCab + (nTamLin * 4), nColFin )
    //Logo
    oPrinter:SayBitmap( nLinCab+5, nColIni+5, "\system\lgrl   .bmp", 95, (nTamLin * 4)-10 )
    oPrinter:SayAlign( nLinCab+15, nColMeio - 120, "BAIXA DE BENS PATRIMONIAIS", oFontTit, 240, 20, COR_CINZA, PAD_CENTER, 0 )
	oPrinter:Line( nLinCab, nColFin-100, nLinCab + (nTamLin * 4), nColFin-100, COR_PRETO)
	oPrinter:SayAlign( nLinCab+05, nColFin-095, "EMISSOR: " + cNomeUsr, oFntTtDe, 120, nTamLin, COR_PRETO, PAD_LEFT, 0 )
	oPrinter:SayAlign( nLinCab+15, nColFin-095, "DATA: " + dToC(dDataGer), oFntTtDe, 90, nTamLin, COR_PRETO, PAD_LEFT, 0 )
	oPrinter:SayAlign( nLinCab+25, nColFin-095, "FOLHA: " + cValToChar(nPagAtu), oFntTtDe, 90, nTamLin, COR_PRETO, PAD_LEFT, 0 )
    nLinCab += (nTamLin * 4) + nTamLin
	//Filial de origem e destino
	oPrinter:Box( nLinCab, nColIni, nLinCab + (nTamLin * 3), nColMeio - 50 )
	oPrinter:SayAlign( nLinCab+5, nColIni+5, "Filial de Solicitante", oFntTtDe, nColMeio - 50, nTamLin, COR_PRETO, PAD_CENTER, 0 )
	oPrinter:SayAlign( nLinCab+15, nColIni+5, cFilOri, oFntTtDe, nColMeio - 50, nTamLin, COR_PRETO, PAD_CENTER, 0 )
	oPrinter:Box( nLinCab, nColMeio + 50, nLinCab + (nTamLin * 3), nColFin )
	oPrinter:SayAlign( nLinCab+5, nColMeio+055, "Motivo da Baixa:", oFntTtDe, nColMeio - 50, nTamLin, COR_PRETO, PAD_CENTER, 0 )
	oPrinter:SayAlign( nLinCab+15, nColMeio+055, cDsMtBx, oFntTtDe, nColMeio - 50, nTamLin, COR_PRETO, PAD_CENTER, 0 )
    //Observação
	nLinCab += nTamLin + (nTamLin * 3)
	oPrinter:Box( nLinCab, nColIni, nLinCab + (nTamLin * 3), nColFin )
	oPrinter:SayAlign( nLinCab, nColIni+15, "Relação dos Bens a Serem Baixados", oFontTit, nColFin-20, nTamLin*3, COR_PRETO, PAD_CENTER, 0 )
	//Cabeçalho das colunas
    nLinCab += nTamLin + (nTamLin * 3)
	oPrinter:Box( nLinCab, nColIni, nLinFin, nColFin )
    oPrinter:SayAlign(nLinCab, COL_ITEM, "ITEM", oFontDetN, 20, 30, COR_PRETO, PAD_LEFT, 0)
	oPrinter:Line( nLinCab, COL_REGPAT, nLinFin, COL_REGPAT-2, COR_PRETO)
    oPrinter:SayAlign(nLinCab, COL_REGPAT, "REGISTRO PATRIMONIAL", oFontDetN, 60, 30, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinCab, COL_DESCR, nLinFin, COL_DESCR-2, COR_PRETO)
    oPrinter:SayAlign(nLinCab, COL_DESCR, "DESCRIÇÃO", oFontDetN, 100, 30, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinCab, COL_NROSER, nLinFin, COL_NROSER-2, COR_PRETO)
    oPrinter:SayAlign(nLinCab, COL_NROSER, "NÚMERO DE SÉRIE", oFontDetN, 60, 30, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinCab, COL_DTAQUI, nLinFin, COL_DTAQUI-2, COR_PRETO)
    oPrinter:SayAlign(nLinCab, COL_DTAQUI, "DATA DE AQUISIÇÃO", oFontDetN, 60, 30, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinCab, COL_VLRAQU, nLinFin, COL_VLRAQU-2, COR_PRETO)
    oPrinter:SayAlign(nLinCab, COL_VLRAQU, "VALOR DE AQUISIÇÃO", oFontDetN, 60, 30, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinCab, COL_VLRRES, nLinFin, COL_VLRRES-2, COR_PRETO)
    oPrinter:SayAlign(nLinCab, COL_VLRRES, "VALOR RESIDUAL", oFontDetN, 60, 30, COR_PRETO, PAD_CENTER, 0)
    nLinCab += nTamLin * 3
	oPrinter:Line( nLinCab, nColIni, nLinCab, nColFin, COR_PRETO)
    //Atualizando a linha inicial do relatório
    nLinAtu := nLinCab + 3
Return Nil
 
/*/{Protheus.doc} fImpRod
Impressão de rodapé do do relatório
@author Franklin de Brito de Oliveira
@since 03/12/2020
@version 1.0
@return Nil
@param cHistTra, characters, Histórico da baixa
@param cEmissor, characters, Solicitante da baixa
@param cRespons, characters, Responsável pelos bens
@type static function
/*/
Static Function fImpRod( cHistTra, cEmissor, cRespons )
Local nLinRod   := nLinFin + (nTamLin * 3)
Local cTextoEsq := ''
Local cTextoDir := ''
	//Justificativa
	oPrinter:Box( nLinRod, nColIni, nLinRod+(nTamLin * 6), nColFin )
	oPrinter:SayAlign(nLinRod, nColIni+10, "Justificativa: " + cHistTra, oFontDetN, 530, 60, COR_PRETO, PAD_LEFT, 0)
	nLinRod += nTamLin * 7
	//Emissor/Responsável/Facilities/Patrimônio
	oPrinter:Box( nLinRod, nColIni, nLinRod+(nTamLin * 6), nColFin )
	oPrinter:Line( nLinRod+42, nColIni+5, nLinRod+42, COL_NROSER-85, COR_PRETO)
	oPrinter:SayAlign(nLinRod+45, nColIni, Capital(cEmissor), oFontDet, 165, 10, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinRod, COL_NROSER-80, nLinRod+(nTamLin * 6), COL_NROSER-80, COR_PRETO)
	oPrinter:Line( nLinRod+42, COL_NROSER-75, nLinRod+42, COL_VLRAQU-35, COR_PRETO)
	oPrinter:SayAlign(nLinRod+45, COL_NROSER-80, Capital(cRespons), oFontDet, 175, 10, COR_PRETO, PAD_CENTER, 0)
	oPrinter:Line( nLinRod, COL_VLRAQU-30, nLinRod+(nTamLin * 6), COL_VLRAQU-30, COR_PRETO)
	oPrinter:Line( nLinRod+42, COL_VLRAQU-25, nLinRod+42, nColFin-5, COR_PRETO)
	oPrinter:SayAlign(nLinRod+45, COL_VLRAQU-30, "Gestão Patrimonial e Imobiliária", oFontDet, 165, 10, COR_PRETO, PAD_CENTER, 0)
	nLinRod += nTamLin * 7
	//Linha Separatória
    oPrinter:Line(nLinRod, nColIni, nLinRod, nColFin, COR_CINZA)
    nLinRod += 3
    //Finalizando a página
    oPrinter:EndPage()
Return Nil