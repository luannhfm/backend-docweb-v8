#INCLUDE "TOTVS.CH"

/*/{Protheus.doc} SF06R20X
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/
User Function SF06R20X()

	Local   oReport  := Nil
	Local   lTdasFil := .F.
	Private cFilSql  := ""
	Private aSelFil  := {}
	Private cAlNeg   := GetNextAlias()
	Private cPerg := Padr("SF06R20X",10)
	Private cTitRel
	
	ValidPerg()
	Pergunte(cPerg,.T.)
	if LastKey()=27
		Return
	Endif

	mv_par07 := Iif(mv_par07 == cToD("  /  /  "), dDataBase, mv_par07)
	If MV_PAR01 = 1	
		aSelFil := AdmGetFil(@lTdasFil,.F.,"SE1")
		While Len(aSelFil) = 0
			aSelFil := AdmGetFil(@lTdasFil,.F.,"SE1")
		EndDo		
		cParam  := GetRngFil( aSelFil, "SE1" )
		cFilSql := " AND CAMPO " +	cParam +" "
	EndIf	
	
	oReport := ReportDef(cPerg)
	oReport:PrintDialog()

Return

/*/{Protheus.doc} ReportDef
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@param cPerg, character, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ReportDef(cPerg)

	Local oReport		
	Local cNomeRel := "SF06R20X"
	Local cTitRel  := "Relatorio de Indice de Titulos Vencidos - Recebidos"
	Local cDescRel := "Relatorio de Indice de Titulos Vencidos - Recebidos"
	//Walmir Junior - 26/01/2018 - Desenvolvimento da apresentação analítica do relatório.
	Local _oTit, _oTiLin
	Local _cPicture	:= TM(999999999.99,14,2) // "@E 999,999,999.99"
	
	oReport        := TReport():New( cNomeRel, cTitRel, cPerg, { |oReport| ReportPrint(oReport) }, cDescRel )
	
	oReport:SetLandScape() 
	oReport:SetTotalInLine(.F.) 
	oReport:Page()
	oReport:ParamReadOnly(.T.)
	//Walmir Junior - 26/01/2018 - Desenvolvimento da apresentação analítica do relatório.
	If MV_PAR06 == 1
		oIndicadores := TRSection():New(oReport, "Relatorio de Indice de Titulos Vencidos - Recebidos" ,{"SE1"}   )
		oUnidade     := TRCell():New(oIndicadores,"M0_FILIAL"              ,"SE1","Filial"                       )
		oUnidade:SetSize(025)
		oMes         := TRCell():New(oIndicadores,"MES" ,"SE1","MES"       ,"@!"                                  )
		oMes:SetSize(035)
		
		oJan         := TRCell():New(oIndicadores,"JAN" ,"SE1"  ,"Janeiro" ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oJan:SetSize(030)
		
		oFev         := TRCell():New(oIndicadores,"FEV" ,"SE1","Fevereiro" ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oFev:SetSize(030)
		oMar         := TRCell():New(oIndicadores,"MAR" ,"SE1","Março"     ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oMar:SetSize(030)
		oAbr         := TRCell():New(oIndicadores,"ABR" ,"SE1","Abril"     ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oAbr:SetSize(030)
		oMai         := TRCell():New(oIndicadores,"MAI" ,"SE1","Maio"      ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oMai:SetSize(030) 
		oJun         := TRCell():New(oIndicadores,"JUN" ,"SE1","Junho"     ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oJun:SetSize(030)
		oJul         := TRCell():New(oIndicadores,"JUL" ,"SE1","Julho"     ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oJul:SetSize(030)
		oAgo         := TRCell():New(oIndicadores,"AGO" ,"SE1","Agosto"    ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oAgo:SetSize(030)
		oSet         := TRCell():New(oIndicadores,"SET" ,"SE1","Setembro"  ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oSet:SetSize(030)
		oOut         := TRCell():New(oIndicadores,"OUT" ,"SE1","Outubro"   ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oOut:SetSize(030)
		oNov         := TRCell():New(oIndicadores,"NOV" ,"SE1","Novembro"  ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oNov:SetSize(030)
		oDez         := TRCell():New(oIndicadores,"DEZ" ,"SE1","Dezembro"  ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oDez:SetSize(030)
	                                                           
		oTot         := TRCell():New(oIndicadores,"TOT" ,"SE1","Totais"    ,"@E 9,999,999,999,999.99",,.T.,,"LEFT")
		oTot:SetSize(030)
	Else
		//Walmir Junior - 26/01/2018 - Desenvolvimento da apresentação analítica do relatório.
		_oTit	:= TRSection():New(oReport, "Relatorio de Indice de Titulos Vencidos - Recebidos" ,{cAlNeg})
		_oTiLin := TRCell():New(_oTit,"E1_FILIAL"			,cAlNeg,"FILIAL")
		_oTiLin := TRCell():New(_oTit,"FILIAL"				,cAlNeg,"NOM FIL",,20,,{|| FWFilialName("01", (cAlNeg)->E1_FILIAL, 1) })
		_oTiLin := TRCell():New(_oTit,"E1_PREFIXO"			,cAlNeg,"PREFIXO")
		_oTiLin := TRCell():New(_oTit,"E1_NUM"				,cAlNeg,"NUMERO")
		_oTiLin := TRCell():New(_oTit,"E1_PARCELA"			,cAlNeg,"PARCELA")
		_oTiLin := TRCell():New(_oTit,"E1_CLIENTE"			,cAlNeg,"CLIENTE")
		_oTiLin := TRCell():New(_oTit,"E1_NOMCLI"			,cAlNeg,"NOME CLIENTE")
		_oTiLin := TRCell():New(_oTit,"E1_VENCTO"			,cAlNeg,"VENCIMENTO",,12,,{|| SToD((cAlNeg)->E1_VENCTO)})
		_oTiLin := TRCell():New(_oTit,"E1_BAIXA"			,cAlNeg,"DT BAIXA"	,,12,,{|| SToD((cAlNeg)->E1_BAIXA)})
		_oTiLin := TRCell():New(_oTit,"E1_VALOR"			,cAlNeg,"VALOR", 		 _cPicture,20,.T.,,"RIGHT",,"RIGHT")
		_oTiLin := TRCell():New(_oTit,"VLR_JRML"			,cAlNeg,"JUR/MULTA",,20,,{|| (cAlNeg)->VLR_JRML + (cAlNeg)->VLR_JRML2})
		_oTiLin := TRCell():New(_oTit,"VL_DESCO"			,cAlNeg,"DESCONTOS")
		_oTiLin := TRCell():New(_oTit,"VLR_REC"				,cAlNeg,"TOTAL BAIXADO", _cPicture,20,.T.,,"RIGHT",,"RIGHT")
		_oTiLin := TRCell():New(_oTit,"E5_DTDIGIT"			,cAlNeg,"DT. DIG."	,,12,,{|| SToD((cAlNeg)->E5_DTDIGIT)})
		_oTiLin := TRCell():New(_oTit,"E5_MOTBX"			,cAlNeg,"MOT BAIXA")
		_oTiLin := TRCell():New(_oTit,"E5_DTDISPO"			,cAlNeg,"DT. DISP."	,,12,,{|| SToD((cAlNeg)->E5_DTDISPO)})
		//Totalizador
	   oBrFil := TRBreak():New(_oTit,_oTit:Cell("Filial"),"Total Filial") 
             TRFunction():New(_oTit:Cell("FILIAL"),"Total Grupos","COUNT",oBrFil,,,,.F.,.F.) 
             
		TRFunction():New(_oTit:Cell("E1_VALOR"  )     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                                                                               )
		TRFunction():New(_oTit:Cell("VLR_JRML"  )     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		TRFunction():New(_oTit:Cell("VL_DESCO")     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		TRFunction():New(_oTit:Cell("VLR_REC")     ,                       ,"SUM"               ,oBrFil               ,                                 ,             ,             , .F.               ,.T.               , .F.                 )
		oReport:SetTotalInLine(.F.)		
	EndIf

Return(oReport)

/*/{Protheus.doc} ReportPrint
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@param oReport, objeto, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ReportPrint(oReport)

	//Local   cAlNeg   := GetNextAlias() //Mudança de escopo para Private na User Function.
	Local   cAlTP    := GetNextAlias()		
	Local   nValTP   := 0
	Local   nPerMen  := 0
	Local   nValMen  := 0
	Local   nQtdMen  := 0	
	Local   cSql     := ""
 	Local   cAuxMes  := ""
 	Local   cAuxFil  := ""
 	Local   cParam   := ""
 	Local   cFilDesc := ""
 	Local   cAuxEmp  := ""
 	Local   cImpAux  := ""
 	Local   cAuxImp  := ""
	Local   aSelFil  := {} 	
 	Local   aCalMen  := {}
 	Local   aFil     := {}
	Private oSec1    := oReport:Section(1)
	Private _oTit	:= oReport:Section(1)
	
	DbSelectArea("SM0")
	DbGoTop()
	While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAnt

		//If !(SubStr(SM0->M0_CODFIL,1,4) $ cAuxEmp)
			
			cAuxEmp += SubStr(SM0->M0_CODFIL,1,4) + "u"
					
			If SubsTr(SM0->M0_CODFIL,1,4) == "05MT"
				cFilDesc := SM0->M0_FILIAL		
			Else
				cFilDesc := SubStr(SM0->M0_FILIAL,1,5)
			EndIf
			
			aAdd(aFil,{AllTrim(cFilDesc),AllTrim(SM0->M0_CODFIL)})
								
		//EndIf
	
		SM0->(DbSkip())
	EndDo	

	If !Empty(MV_PAR02) .And. !Empty(MV_PAR03) 
		cSql += " AND E1_EMISSAO BETWEEN '"  + DToS(MV_PAR02) + "' AND '" + DToS(MV_PAR03) + "'"			
	EndIf		

	If !Empty(MV_PAR04) .And. !Empty(MV_PAR05) 
		cSql += " AND E1_VENCREA BETWEEN '"  + DToS(MV_PAR04) + "' AND '" + DToS(MV_PAR05) + "'"			
	EndIf		
	
	If MV_PAR01 = 1	
		cSql += StrTran(cFilSql,"CAMPO","E1_FILIAL")	
	EndIf

	cSql := "%"+cSql+"%"

	If MV_PAR06 == 1
		BeginSql Alias cAlTP
		
			SELECT SUM(E1_VALOR) VALOR
			FROM   %Table:SE1%
			WHERE  E1_VENCREA  < %Exp:dToS(mv_par07)%
			AND    %NotDel%
			AND    E1_PREFIXO  != 'REN'		
			%Exp:cSql%
			
		EndSql
		
		If !(cAlTP)->(Eof())
			nValTP := (cAlTP)->VALOR
		EndIf
		
		(cAlTP)->(DbCloseArea())
		
		BeginSql Alias cAlNeg
		
			SELECT
				E1_FILIAL,
				SUBSTR(E1_EMISSAO,1,6) AS DATA,
				SUM(E1_VALOR) AS VLR,
				COUNT(E1_NUM) AS QTD
			FROM (SELECT DISTINCT
					E1_FILIAL,
					E1_PREFIXO,
					E1_NUM,
					E1_PARCELA,
					E5_MOTBX,
					E1_EMISSAO,
					E1_VENCTO,
					E1_VENCREA,
					E1_CLIENTE,
					E1_NOMCLI,
					E1_VENCTO,
					E1_BAIXA,
					E5_DTDIGIT,
					E5_DTDISPO,
					E1_VALOR
				FROM        %Table:SE1% E1
				INNER  JOIN %Table:SE5% E5  
				ON     E5.%NotDel%
				AND    E5_FILIAL   = E1_FILIAL                                                                                              
				AND    E5_PREFIXO  = E1_PREFIXO
				AND    E5_NUMERO   = E1_NUM
				AND    E5_PARCELA  = E1_PARCELA
				AND    E5_TIPO     = E1_TIPO
				AND    E5_CLIFOR   = E1_CLIENTE
				AND    E5_LOJA	   = E1_LOJA 
				AND    E5_DATA 	  <= %Exp:dToS(mv_par07)%
				WHERE  E5_MOTBX    NOT IN ('FAT','LIQ','CMP','CAN','CCO'            )		
				AND    E5_TIPODOC  NOT IN ('RA' , 'ES','TE' ,'EC' , 'JR', 'MT', 'PR')
				AND    E5_SITUACA  NOT IN ('C'  , 'E' ,'X'                          ) 
				AND    E1_SALDO    = 0
				AND    E1_PREFIXO != 'REN' 
				AND    E1_EMISSAO <= %Exp:dToS(mv_par07)%
				AND    E1_BAIXA BETWEEN %Exp:dToS(mv_par08)% AND %Exp:dToS(mv_par09)%
				AND	   E1_BAIXA > E1_VENCREA
				AND    E1.%NotDel%	
				%Exp:cSql%
				ORDER BY E1_FILIAL,E1_EMISSAO)
			GROUP BY E1_FILIAL, SUBSTR(E1_EMISSAO,1,6)
			
		EndSql	
	
	
		While !(cAlNeg)->(Eof())
			
			cMes := SubStr((cAlNeg)->DATA,5,2)
			cFilPar := AllTrim((cAlNeg)->E1_FILIAL)
			nValMen := (cAlNeg)->VLR
			nQtdMen := (cAlNeg)->QTD

			nPerMen := Round((nValMen/nValTP) * 100,2)			
			aAdd(aCalMen,{cFilPar,cMes,nPerMen,nValMen,nQtdMen})
			nPerMen  := 0
			nValMen  := 0
			nQtdMen  := 0				

			
			(cAlNeg)->(DbSkip())
			/*
			If (cAlNeg)->(Eof()) .And. nValMen > 0
				nPerMen := Round((nValMen/nValTP) * 100,2)			
				aAdd(aCalMen,{cFilPar,cMes,nPerMen,nValMen,nQtdMen})
			EndIf
			*/
		EndDo
		
		(cAlNeg)->(DbCloseArea())
		
		cAuxFil := ""
			
		For nI := 1 To 3
	
			oSec1:Init()
			
			For nX := 1 To Len(aCalMen)
			
				If !(aCalMen[nX][1] $ cAuxFil)
					cAuxFil += aCalMen[nX][1] + "u"	
					nPosFil := aScan(aFil,{|x| x[2] == aCalMen[nX][1]})			
					oSec1:Cell("M0_FILIAL"):SetValue(aFil[nPosFil][2])
				EndIf		
	
				For nZ := 1 To Len(aCalMen)
							
					If aCalMen[nZ][1] == aCalMen[nX][1] .And. !(aCalMen[nX][1] $ cAuxImp)
	
						oSec1:Cell("MES"):SetValue("Percentual %")
						ImpPerMes(@aCalMen,aCalMen[nX][1])
						oSec1:Printline()
						
						oSec1:Cell("MES"):SetValue("Valor Recebido")
						ImpValMes(@aCalMen,aCalMen[nX][1])
						oSec1:Printline()
						
						oSec1:Cell("MES"):SetValue("Quantidade")
						ImpQtdMes(@aCalMen,aCalMen[nX][1])
						oSec1:Printline()		
						
						cAuxImp += aCalMen[nX][1] + "u"

						oSec1:Cell("JAN"):SetValue(Nil)
						oSec1:Cell("FEV"):SetValue(Nil)
						oSec1:Cell("MAR"):SetValue(Nil)
						oSec1:Cell("ABR"):SetValue(Nil)
						oSec1:Cell("MAI"):SetValue(Nil)
						oSec1:Cell("JUN"):SetValue(Nil)
						oSec1:Cell("JUL"):SetValue(Nil)
						oSec1:Cell("AGO"):SetValue(Nil)
						oSec1:Cell("SET"):SetValue(Nil)
						oSec1:Cell("OUT"):SetValue(Nil)
						oSec1:Cell("NOV"):SetValue(Nil)
						oSec1:Cell("DEZ"):SetValue(Nil)
						oReport:SkipLine()
						
					EndIf
									
				Next nZ
		
				If oReport:Cancel()
					Return(Nil)
				EndIf				
				
			Next nX
			
		Next nI
		
		oSec1:Finish()
	Else
	
		BeginSql Alias cAlNeg
		
			SELECT	E1_FILIAL,
					E1_PREFIXO,
					E1_NUM,
					E1_PARCELA,
					E5_MOTBX,
					E1_EMISSAO,
				   	E1_VENCTO,
				   	E1_VENCREA,
				   	E1_CLIENTE,
				   	E1_NOMCLI,
				   	E1_VENCTO,
				   	E1_BAIXA,
				   	E5_DTDIGIT,
				   	E5_DTDISPO,
				   	E1_VALOR,
					SUM(E5_VALOR) As VLR_REC,
					SUM(E5_VLDESCO) As VL_DESCO,
					//SUM(E5_VLJUROS) As VLR_JRML,
					//SUM(E5_VLMULTA) As VLR_JRML2
					SUM(E1_JUROS) As VLR_JRML,
					SUM(E1_MULTA) As VLR_JRML2
			FROM        %Table:SE1% E1
			INNER  JOIN %Table:SE5% E5  
			ON     E5.%NotDel%
			AND    E5_FILIAL   = E1_FILIAL                                                                                              
			AND    E5_PREFIXO  = E1_PREFIXO
			AND    E5_NUMERO   = E1_NUM
			AND    E5_PARCELA  = E1_PARCELA
			AND    E5_TIPO     = E1_TIPO
			AND    E5_CLIFOR   = E1_CLIENTE
			AND    E5_LOJA	   = E1_LOJA 
			AND    E5_DATA    <= %Exp:dToS(mv_par07)%
			WHERE  E5_MOTBX    NOT IN ('FAT','LIQ','CMP','CAN','CCO'            )		
			AND    E5_TIPODOC  NOT IN ('RA' , 'ES','TE' ,'EC' , 'JR', 'MT', 'PR')
			AND    E5_SITUACA  NOT IN ('C'  , 'E' ,'X'                          ) 
			AND    E1_SALDO    = 0
			AND    E1_PREFIXO != 'REN' 
			AND    E1_EMISSAO <= %Exp:dToS(mv_par07)%
			AND    E1_BAIXA BETWEEN %Exp:dToS(mv_par08)% AND %Exp:dToS(mv_par09)%
			AND	   E1_BAIXA > E1_VENCREA
			AND    E1.%NotDel%	
			%Exp:cSql%
			GROUP BY E1_FILIAL, E1_PREFIXO, E1_NUM, E1_PARCELA, E5_MOTBX, E1_EMISSAO, E1_VENCTO, E1_VENCREA, E1_CLIENTE, E1_NOMCLI, E1_VENCTO, E1_BAIXA, E5_DTDIGIT,	E5_DTDISPO, E1_VALOR
			ORDER BY E1_FILIAL,E1_PREFIXO,E1_NUM,E1_PARCELA,E1_EMISSAO
			
		EndSql	
		
		_oTit:Init()
		While !(cAlNeg)->(Eof())
			_oTit:PrintLine()
			(cAlNeg)->(Dbskip())
		EndDo
		_oTit:Finish()
		(cAlNeg)->(DbCloseArea())
	EndIf
Return

/*/{Protheus.doc} ImpPerMes
(long_description)
@author j2a.luizjunior
@since 25/10/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/
 
Static Function ImpPerMes(pDados,pFilial)
	
	Local aDados  := pDados
	Local cFilPes := pFilial
	Local nPerTot := 0
	
	For nA := 1 To Len(aDados)
	
		If aDados[nA][1] == cFilPes

			Do Case			
				Case aDados[nA][2] = "01"
					oSec1:Cell("JAN"):SetValue(aDados[nA][3])												
				Case aDados[nA][2] = "02" 
					oSec1:Cell("FEV"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "03" 
					oSec1:Cell("MAR"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "04" 
					oSec1:Cell("ABR"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "05" 
					oSec1:Cell("MAI"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "06" 
					oSec1:Cell("JUN"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "07" 
					oSec1:Cell("JUL"):SetValue(aDados[nA][3])
				Case aDados[nA][2] = "08" 
					oSec1:Cell("AGO"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "09" 
					oSec1:Cell("SET"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "10" 
					oSec1:Cell("OUT"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "11" 
					oSec1:Cell("NOV"):SetValue(aDados[nA][3])					
				Case aDados[nA][2] = "12" 
					oSec1:Cell("DEZ"):SetValue(aDados[nA][3])					
			EndCase

			nPerTot += aDados[nA][3]
		
		EndIf
	
	Next nA
	
	oSec1:Cell("TOT"):SetValue(nPerTot)

Return

/*/{Protheus.doc} ImpValMes
(long_description)
@author j2a.luizjunior
@since 25/10/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ImpValMes(pDados,pFilial)

	Local aDados  := pDados
	Local cFilPes := pFilial
	Local nValTot := 0
	
	For nA := 1 To Len(aDados)
	
		If aDados[nA][1] == cFilPes
		
			Do Case			
				Case aDados[nA][2] = "01"
					oSec1:Cell("JAN"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "02" 
					oSec1:Cell("FEV"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "03" 
					oSec1:Cell("MAR"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "04" 
					oSec1:Cell("ABR"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "05" 
					oSec1:Cell("MAI"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "06" 
					oSec1:Cell("JUN"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "07" 
					oSec1:Cell("JUL"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "08" 
					oSec1:Cell("AGO"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "09" 
					oSec1:Cell("SET"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "10" 
					oSec1:Cell("OUT"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "11" 
					oSec1:Cell("NOV"):SetValue(aDados[nA][4])
				Case aDados[nA][2] = "12" 
					oSec1:Cell("DEZ"):SetValue(aDados[nA][4])
			EndCase	
		
			nValTot += aDados[nA][4]
					
		EndIf	
	
	Next nA
	
	oSec1:Cell("TOT"):SetValue(nValTot)
	
Return

/*/{Protheus.doc} ImpQtdMes
(long_description)
@author j2a.luizjunior
@since 25/10/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ImpQtdMes(pDados,pFilial)

	Local aDados  := pDados
	Local cFilPes := pFilial
	Local nQtdTot := 0
	
	For nA := 1 To Len(aDados)
		
		If aDados[nA][1] == cFilPes
		
			Do Case			
				Case aDados[nA][2] = "01"
					oSec1:Cell("JAN"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "02" 
					oSec1:Cell("FEV"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "03" 
					oSec1:Cell("MAR"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "04" 
					oSec1:Cell("ABR"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "05" 
					oSec1:Cell("MAI"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "06" 
					oSec1:Cell("JUN"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "07" 
					oSec1:Cell("JUL"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "08" 
					oSec1:Cell("AGO"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "09" 
					oSec1:Cell("SET"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "10" 
					oSec1:Cell("OUT"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "11" 
					oSec1:Cell("NOV"):SetValue(aDados[nA][5])
				Case aDados[nA][2] = "12" 
					oSec1:Cell("DEZ"):SetValue(aDados[nA][5])
			EndCase
			
			nQtdTot += aDados[nA][5]
			
		EndIf	
	
	Next nA

	oSec1:Cell("TOT"):SetValue(nQtdTot)

Return

/*/{Protheus.doc} CriaSX1
(long_description)
@author j2a.luizjunior
@since 24/10/2017
@version 1.0
@param cPerg, character, (Descrição do parâmetro)
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function CriaSX1(cPerg)

	Local aHelp := {}
	
	AAdd(aHelp, {{"Selecionar filial - Sim/Não" 		} ,{""},{""}})
	AAdd(aHelp, {{"Emissão De"                  		} ,{""},{""}})
	AAdd(aHelp, {{"Emissão Ate"                			} ,{""},{""}})
	AAdd(aHelp, {{"Vencimento De"               		} ,{""},{""}})
	AAdd(aHelp, {{"Vencimento Ate"              		} ,{""},{""}})
	AAdd(aHelp, {{"Tipo de apresentação do relatório."	} ,{""},{""}})
	
	PutSX1(cPerg,"01","Seleciona Filial" ,"","","mv_ch01","C",01,00,00,"C","","","","","mv_par01","Sim","","","","Nao","","","","","","","","","","","",aHelp[1,1],aHelp[1,2],aHelp[1,3],"")
	PutSX1(cPerg,"02","Emissão De"       ,"","","mv_ch02","D",08,00,00,"G","","","","","mv_par02",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[2,1],aHelp[2,2],aHelp[2,3],"")
	PutSX1(cPerg,"03","Emissão Ate"      ,"","","mv_ch03","D",08,00,00,"G","","","","","mv_par03",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[3,1],aHelp[3,2],aHelp[3,3],"")
	PutSX1(cPerg,"04","Vencimento De"    ,"","","mv_ch04","D",08,00,00,"G","","","","","mv_par04",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[4,1],aHelp[4,2],aHelp[4,3],"")
	PutSX1(cPerg,"05","Vencimento Ate"   ,"","","mv_ch05","D",08,00,00,"G","","","","","mv_par05",""   ,"","","",""   ,"","","","","","","","","","","",aHelp[5,1],aHelp[5,2],aHelp[5,3],"")
	PutSX1(cPerg,"06","Tipo"   			 ,"","","mv_ch06","N",01,00,00,"C","","","","","mv_par06","1-Sintético","","","","2-Analítico"   ,"","","","","","","","","","","",aHelp[6,1],aHelp[6,2],aHelp[6,3],"")

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma ³ValidPerg ºAutor ³Paulo Schwind º Data ³ 02/05/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc. ³ º±±
±±º ³ º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso ³ AP º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

*/
 
Static Function ValidPerg()
 
Local _aArea := GetArea()
Local _cPerg := cPerg
Local _aRegs:={}
Local _nI := 0
Local _nJ := 0
 
dbSelectArea('SX1')
 
dbSetOrder(1)
 
 
Aadd(_aRegs,{_cPerg,"01","Seleciona Filial "," "," ","mv_ch1","C",01,0,0,"C"," ","mv_par01 ","Sim"," "," "," ","Nao"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
Aadd(_aRegs,{_cPerg,"02","Emissão De "," "," ","mv_ch2","D",08,0,0,"G"," ","mv_par02 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",""," "," "})
Aadd(_aRegs,{_cPerg,"03","Emissao Até "," "," ","mv_ch3","D",08,0,0,"G"," ","mv_par03 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",""," "," "})
Aadd(_aRegs,{_cPerg,"04","Vencimento De "," "," ","mv_ch4","D",08,0,0,"G"," ","mv_par04 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
Aadd(_aRegs,{_cPerg,"05","Vencimento Até "," "," ","mv_ch5","D",08,0,0,"G"," ","mv_par05 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
Aadd(_aRegs,{_cPerg,"06","Tipo "," "," ","mv_ch6","N",01,0,1,"C"," ","mv_par06 ","1-Sintético "," "," "," "," ","2-Analítico "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",""," "," "})
Aadd(_aRegs,{_cPerg,"07","Data base"," "," ","mv_ch7","D",08,0,0,"G"," ","mv_par07 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
Aadd(_aRegs,{_cPerg,"08","Baixa De "," "," ","mv_ch8","D",08,0,0,"G"," ","mv_par08 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})
Aadd(_aRegs,{_cPerg,"09","Baixa Até "," "," ","mv_ch9","D",08,0,0,"G"," ","mv_par09 "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","",""," "," "})

For _nI:=1 to Len(_aRegs)
 
If ! DbSeek(_cPerg+_aRegs[_nI,2])
 
RecLock('SX1',.T.)
 
For _nJ:=1 to FCount()
 If _nJ <= Len(_aRegs[_nI])
 FieldPut(_nJ,_aRegs[_nI,_nJ])
 Endif
Next _nJ
 MsUnlock()
Endif
 Next _nI
RestArea(_aArea)
 
Return
