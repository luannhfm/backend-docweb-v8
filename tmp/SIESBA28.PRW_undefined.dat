#INCLUDE "PROTHEUS.CH"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³SIESBA28   ºAutor  ³Microsiga          º Data ³  27/03/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Receptor de EAI - Transferencia de Ativo                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP 11.5 - Sistema Industria                                º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function SIESBA28(_cXML)
Local _cError   := ""
Local _cWarning := ""
Local _cDelimit := "_"
Local aStru     := {}
Local _lInput   := GetRemoteType() == -1 //-1 = sem remote/ 0 = delphi/ 1 = QT windows/ 2 = QT Linux
Local __cFilOri	  := cFilAnt     
Default _cXML   := ""                
Conout(_cXML)

IF !_lInput // Chamada via ESB/EAI
	Return
ENDIF

//Gera o Objeto XML com a estrutura recebida
oXml := XmlParser(_cXML, _cDelimit, @_cError, @_cWarning)

//Verifica se a estrutura foi criada
IF !(Empty(_cError) .and. Empty(_cWarning))
	Return()
ENDIF

_nOperac := Val(oXml:_ATFA060:_OPERATION:TEXT)
_cIDESB  := IIF(Type("oXml:_ATFA060:_SN1MASTER:_N1_XIDESB:REALNAME") <> "U",&("oXml:_ATFA060:_SN1MASTER:_N1_XIDESB:_VALUE:TEXT"),"")
_cEmpOri := IIF(Type("oXml:_ATFA060:_SN1MASTER:_N1_FILIAL:REALNAME") <> "U",&("oXml:_ATFA060:_SN1MASTER:_N1_FILIAL:_VALUE:TEXT"),"")

// Verifica se mensagem trata-se de Produto x Fornecedor
IF Type('oXml:_ATFA060:_SN1MASTER') == "U"
	_cMotivo := "Mensagem invalida para a rotina ATFA060 - Transferencia de Ativos"
	// Gera XML de retorno
	U_SIXMLMSG("ATFA060","Transferencia Entidades",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	Return()
ENDIF

_cBase    := IIF(Type("oXml:_ATFA060:_SN1MASTER:_N1_CBASE") == "U","",oXml:_ATFA060:_SN1MASTER:_N1_CBASE:_VALUE:TEXT)
_cItem    := IIF(Type("oXml:_ATFA060:_SN1MASTER:_N1_ITEM") == "U","",oXml:_ATFA060:_SN1MASTER:_N1_ITEM:_VALUE:TEXT)
_dTransf  := IIF(Type("oXml:_ATFA060:_SN1MASTER:_DDATATRF") == "U","",Stod(oXml:_ATFA060:_SN1MASTER:_DDATATRF:_VALUE:TEXT))
_cFILTRF  := IIF(Type("oXml:_ATFA060:_SN1MASTER:_CFILIALTRF") == "U","",oXml:_ATFA060:_SN1MASTER:_CFILIALTRF:_VALUE:TEXT)
_cCCTRF   := IIF(Type("oXml:_ATFA060:_SN1MASTER:_CCUSTOTRF") == "U","",oXml:_ATFA060:_SN1MASTER:_CCUSTOTRF:_VALUE:TEXT)
_cITEMTRF := IIF(Type("oXml:_ATFA060:_SN1MASTER:_CITEMTRF") == "U","",oXml:_ATFA060:_SN1MASTER:_CITEMTRF:_VALUE:TEXT)
_cCLVLTRF := IIF(Type("oXml:_ATFA060:_SN1MASTER:_CCLVLTRF") == "U","",oXml:_ATFA060:_SN1MASTER:_CCLVLTRF:_VALUE:TEXT)
/*_cGrupo	  := IIF(Type("oXml:_ATFA060:_SN1MASTER:_cGrupo") == "U","",oXml:_ATFA060:_SN1MASTER:_cGrupo:_VALUE:TEXT)
_cCDEPREC := IIF(Type("oXml:_ATFA060:_SN1MASTER:_cCDEPREC") == "U","",oXml:_ATFA060:_SN1MASTER:_cCDEPREC:_VALUE:TEXT)
_cCCDEPR  := IIF(Type("oXml:_ATFA060:_SN1MASTER:_cCCDEPR") == "U","",oXml:_ATFA060:_SN1MASTER:_cCCDEPR:_VALUE:TEXT)*/

// Verifica faltam campos do cabecalho
IF Empty(_cBase) .or. Empty(_cItem) .or. Empty(_dTransf) .or. Empty(_cFILTRF)
	_cMotivo := "Alguns campos do cabecalho nao foram informados. Verifique!"
	// Gera XML de retorno
	U_SIXMLMSG("ATFA060","Transferencia Entidades",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	Return()
ENDIF             

_cBase    := Padr(_cBase,TamSX3('N3_CBASE')[1])
_cItem    := Padr(_cItem,TamSX3('N3_ITEM')[1])
_cFILTRF  := Padr(_cFILTRF,TamSX3('N4_FILIAL')[1])
_cCCTRF   := Padr(_cCCTRF,TamSX3('N3_CUSTBEM')[1])
_cITEMTRF := Padr(_cITEMTRF,TamSX3('N3_SUBCCON')[1])
_cCLVLTRF := Padr(_cCLVLTRF,TamSX3('N3_CLVLCON')[1])
/*_cGrupo	  := Padr(_cGrupo,TamSX3('N1_GRUPO')[1])
_cCDEPREC := Padr(_cCDEPREC,TamSX3('N3_CDEPREC')[1])
_cCCDEPR  := Padr(_cCCDEPR,TamSX3('N3_CCDEPR')[1])*/

SN1->(dbSetOrder(1))
IF !SN1->(dbSeek(XFilial("SN1")+_cBase+_cItem))
	_cMotivo := "O ativo informado nao foi localizado. Verifique!"
	// Gera XML de retorno
	U_SIXMLMSG("ATFA060","Transferencia Entidades",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
	Return()
ENDIF

_cGrupo := SN1->N1_GRUPO

SN3->(dbSetOrder(1))    //N3_FILIAL+N3_CBASE+N3_ITEM+N3_TIPO+N3_BAIXA+N3_SEQ                                                                                                              
SN3->(dbSeek(XFilial("SN3")+_cBase+_cItem))
_cCDEPREC := SN3->N3_CDEPREC  // Conta Desp Deprec
_cCCDEPR  := SN3->N3_CCDEPR 


aStru := {{'N3_FILIAL'		,_cEmpOri		, Nil},;  // Empresa Origem
{'N3_CBASE'		,_cBase		, Nil},;  // Codigo base do ativo
{'N3_ITEM'  	,_cItem		, Nil},;  // Item sequencial do codigo bas do ativo
{'N4_DATA'  	,ddatabase	, Nil},;  // Data da Transferencia
{'N4_FILIAL'  	,_cFILTRF	, Nil},;  // Filial para Transferencia
{'N3_CUSTBEM' 	,_cCCTRF   	, Nil},;  // Centro de Custo de Despesa
{'N3_SUBCCON' 	,_cITEMTRF 	, Nil},;  // Item Contabil da Despesa
{'N1_GRUPO' 	, _cGrupo	, Nil},;  //Grupo
{'N3_CDEPREC' 	, _cCDEPREC	, Nil},;  // Conta Desp Deprec
{'N3_CCDEPR' 	, _cCCDEPR	, Nil},;  // Cta Dep. Acum.
{'N1_XIDESB' 	, _cIDESB	, Nil},;  // xIDESB
{'N3_CLVLCON' 	,_cCLVLTRF  , Nil}}   // Classe de Valor da Despesa

//{'N4_DATA'  	,_dTransf	, Nil},;  // Data da Transferencia

INCLUI         := .T.
lMsErroAuto    := .F.
lMsHelpAuto    := .T.
lAutoErrNoFile := .T.

Begin Transaction                   
//cFilAnt :=_cEmpOri
MSExecAuto({|x, y, z| AtfA060(x, y, z)},aStru, 4)      
//cFilAnt := __cFilOri

If lMsErroAuto
	If (__lSX8)
		RollBackSX8()
	EndIf
	
	DisarmTransaction()
	
	// Tratamento da Mensagem de erro do MSExecAuto
	aLogErr  := GetAutoGRLog()
	aLogErr2 := U_SIESBID(aLogErr)
	_cMotivo := ""
	
	For i := 1 to Len(aLogErr2)
		_cMotivo += aLogErr2[i]
	Next
	
	// Gera XML de retorno
	U_SIXMLMSG("ATFA060","Transferencia Entidades",Alltrim(Str(_nOperac)),_cIDESB,"1",_cMotivo)
		_cMotivo := ""
	
	Break
Else
	If (__lSX8)
		ConfirmSX8()
	EndIf
	
	// Gera XML de retorno
	U_SIXMLMSG("ATFA060","Transferencia Entidades",Alltrim(Str(_nOperac)),_cIDESB,"0","")
	
EndIf
End Transaction

Return()
