#include 'totvs.ch'
#include 'parmtype.ch'

/*/{Protheus.doc} AmarracaoAdapter
Classe Adapter para o serviço
@author  Walmir Junior
@since   02/03/2021
@version 1.0
/*/

CLASS AmarracaoAdapter FROM FWAdapterBaseV2
	METHOD New()
	METHOD GetListAmarracao()
EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Método construtor
@param cVerb, verbo HTTP utilizado
@author  Walmir Junior
@since   02/03/2021
@version 1.0
/*/
//-------------------------------------------------------------------
Method New( cVerb ) CLASS AmarracaoAdapter
	_Super:New( cVerb, .T. )
return

//-------------------------------------------------------------------
/*/{Protheus.doc} GetListAmarracao
Método que retorna uma lista de centros de custo.
@author  Walmir Junior
@since   02/03/2021
@version 1.0
/*/
//-------------------------------------------------------------------
Method GetListAmarracao() CLASS AmarracaoAdapter
	Local aArea 	AS ARRAY
	Local cWhere	AS CHAR
	

	aArea   := FwGetArea()
	AddMapFields( self )
	::SetQuery( GetQuery() )

	cWhere :=	" D_E_L_E_T_ = ' ' "

	::SetWhere( cWhere )
	
    ::SetOrder( " CTA_FILIAL, CTA_REGRA " )

	//Executa a consulta, se retornar .T. tudo ocorreu conforme esperado
	If ::Execute() 
		// Gera o arquivo Json com o retorno da Query
		::FillGetResponse()
	EndIf
	
    FwrestArea(aArea)

return

//-------------------------------------------------------------------
/*/{Protheus.doc} AddMapFields
Função para geração do mapa de campos
@param oSelf, object, Objeto da prórpia classe
@author  Walmir Junior
@since   02/03/2021
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function AddMapFields( oSelf )
	
	oSelf:AddMapFields( 'filial'    	, 'CTA_FILIAL'	, .T., .T., { 'CTA_FILIAL'  , 'C', TamSX3( 'CTA_FILIAL' )[1] , 0 } )
	oSelf:AddMapFields( 'amarracao'	    , 'CTA_REGRA'	, .T., .F., { 'CTA_REGRA'   , 'C', TamSX3( 'CTA_REGRA'  )[1] , 0 } )	
	oSelf:AddMapFields( 'conta' 	    , 'CTA_CONTA'	, .T., .F., { 'CTA_CONTA'   , 'C', TamSX3( 'CTA_CONTA' )[1]  , 0 } )
    oSelf:AddMapFields( 'centro_custo'  , 'CTA_CUSTO'	, .T., .F., { 'CTA_CUSTO'   , 'C', TamSX3( 'CTA_CUSTO' )[1]  , 0 } )
    oSelf:AddMapFields( 'item_contabil' , 'CTA_ITEM'	, .T., .F., { 'CTA_ITEM'    , 'C', TamSX3( 'CTA_ITEM' )[1]   , 0 } )
    oSelf:AddMapFields( 'classe_valor'  , 'CTA_CLVL'	, .T., .F., { 'CTA_CLVL'    , 'C', TamSX3( 'CTA_CLVL' )[1]   , 0 } )
    
	/*
	Classe da Conta Contábil. Podera ser:
	1 = Sintetica (Totalizadora de Valores)
	2 = Analitica (Recebe Valores no Lcto)
	*/

	/*
	Indica se a conta está ou não bloqueada
	para os lançamentos contábeis.
	1 - Conta Bloqueada
	2 - Conta Ativa
	*/

return 

//------------------------------------------------------------------
/*/{Protheus.doc} GetQuery
Retorna a query usada no serviço
@param oSelf, object, Objeto da prórpia classe
@author  Walmir Junior
@since   02/03/2021
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function GetQuery()
	Local cQuery AS CHARACTER
	
	cQuery := " SELECT #QueryFields#"
    cQuery +=   " FROM " + RetSqlName( 'CTA' ) + " CTA "
    cQuery += " WHERE #QueryWhere#"

Return cQuery
