#include "protheus.ch"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±ºPrograma  ³SIFINR15  ºAutor  ³Do.It Sistemas - ET º Data ³  Ago/2014   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Relatório Multiplas Naturezas - SISTEMA FIEMT               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³TREPORT                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

//Definições de constantes
#Define REVISAO 	"Revisão 1.2 - 08/2014"
#Define PERGUNTA 	"SIFINR15"
#Define LOGOTIPO 	"LGRL01.BMP"

User Function SIFINR15()
Private oRep, oTit, cSE1
Private cTitle  := OemToAnsi("Multiplas Naturezas")
Private cLogo   := GetSrvProfString("Startpath","")+LOGOTIPO
Private oFntRep := TFont():New("Courier New",,9,,.F.,,,,.T.,.F.)
Private APARDEF := {}
                                 
DbSelectArea("SE1")

If ! SetPergSX1(.F.)
	Return(Nil)
ElseIf ! File(cLogo)
	MsgStop("Arquivo de Logo não Encontrado:"+CRLF+cLogo,"STOP")
	Return(Nil)
Endif

//TREPORT Class
oRep:=TReport():New(FunName(), cTitle, {|| SetPergSX1(.T.)}, {|| PrintReport()}, REVISAO, .F.)
oRep:HideHeader()				//Nao Imprime Header
oRep:HideFooter()				//Nao Imprime Rodape
oRep:HideParamPage()			//Não imprime Pagina de Parametros
oRep:SetPxLeftMargin(0) 	//Margem
oRep:oPage:SetPaperSize(9) //Pagina Padrão 9=A4 - 8=A3 - 2=Letter
oRep:cPrinterName := "PDF" //Impressora Padrão
oRep:lEdit := .F.				//Personalizar

//Cabelçalho
oRep:bOnPageBreak := {|| ReportCab() }

//Ajusta Fonte Padrão
SetFont(oFntRep)

//Titulo, Section Report
oTit:=TRSection():New(oRep,"Contas a Receber","SE1",{"TITULO","CLIENTE"})
oTit:aTable := {"SE1"}
oTit:SetColSpace(1)
oTit:SetCols(0)
oTit:SetTotalInLine(.F.)
oTit:SetLineStyle(.F.)
oTit:SetLineBreak(.F.)
oTit:SetAutoSize(.F.)
oTit:SetPageBreak(.F.)
oTit:SetBorder('',,,.T.)
oTit:SetHeaderPage(.F.)
oTit:SetHeaderBreak(.F.)
oTit:SetHeaderSection(.F.)
oTit:SetLinesBefore(0)
//Celulas
TRCell():New(oTit,"E1_PREFIXO" ,"SE1","Prf"				,"" 			   			,03,.T.,Nil,"LEFT",.F.,"LEFT" )
TRCell():New(oTit,"E1_NUM"		,"SE1","Número" 			,"" 			   			,09,.T.,Nil,"LEFT",.F.,"LEFT" )
TRCell():New(oTit,"E1_PARCELA"  ,"SE1","Par"				,"" 			   			,03,.T.,Nil,"LEFT",.F.,"LEFT" )
TRCell():New(oTit,"E1_TIPO"	    ,"SE1","Tipo"				,""							,04,.T.,Nil,"LEFT",.F.,"LEFT" )
TRCell():New(oTit,"E1_EMISSAO"  ,"SE1","Emissão"			,""							,10,.T.,Nil,"LEFT",.F.,"LEFT" )
TRCell():New(oTit,"E1_VENCREA"  ,"SE1","Vencimento"		,""							,10,.T.,Nil,"LEFT",.F.,"LEFT" )
TRCell():New(oTit,"E1_VALOR"	,"SE1","Valor Titulo"	,"@E 9,999,999,999.99"	,16,.T.,Nil,"RIGHT",.F.,"RIGHT" )
TRCell():New(oTit,"ACRECIMO"	,"SE1","Juros e Multas"	,"@E 9,999,999,999.99"	,16,.T.,{|| SE1->(E1_JUROS+E1_MULTA)},"RIGHT",.F.,"RIGHT" )
TRCell():New(oTit,"VLRBAIXA"	,"SE1","Valor Baixado"	,"@E 9,999,999,999.99"	,16,.T.,{|| SE1->(E1_VALOR-E1_SALDO)},"RIGHT",.F.,"RIGHT" )
TRCell():New(oTit,"E1_BAIXA"	,"SE1","Data Baixa"		,""							,10,.T.,Nil,"LEFT",.F.,"LEFT" )

//Dialogo do TReport
oRep:PrintDialog()

DbSelectArea("SE1")
dbClearFilter()

Return(Nil)



//Dados Imprimir
Static Function PrintReport()
Local cQry, oNat, aNat, nTot, nPer, cNom, nX

//Natureza, Section Report
oNat:=TRSection():New(oRep,"Naturezas",Nil,{})
oNat:SetColSpace(1)
oNat:SetCols(0)
oNat:SetTotalInLine(.F.)
oNat:SetLineStyle(.F.)
oNat:SetLineBreak(.F.)
oNat:SetAutoSize(.F.)
oNat:SetPageBreak(.F.)
oNat:SetBorder('',,,.T.)
oNat:SetHeaderPage(.F.)
oNat:SetHeaderBreak(.F.)
oNat:SetHeaderSection(.F.)
oNat:SetLinesBefore(0)
//Celulas
TRCell():New(oNat,"DESCRIC","","","",30,.T.,{|| aNat[nX,1]},"LEFT" ,.F.,"LEFT" )
TRCell():New(oNat,"NATUREZ","","","",15,.T.,{|| aNat[nX,2]},"LEFT" ,.F.,"LEFT" )
TRCell():New(oNat,"CCUSTO" ,"","","",20,.T.,{|| aNat[nX,3]},"LEFT" ,.F.,"LEFT" )
TRCell():New(oNat,"ITEM"	  ,"","","",20,.T.,{|| aNat[nX,4]},"LEFT" ,.F.,"LEFT" )
TRCell():New(oNat,"VALOR"  ,"","","",16,.T.,{|| aNat[nX,5]},"RIGHT",.F.,"RIGHT" )
TRCell():New(oNat,"PERC"	  ,"","","",11,.T.,{|| aNat[nX,6]},"RIGHT",.F.,"RIGHT" )
TRCell():New(oNat,"CONTA"  ,"","","",20,.T.,{|| aNat[nX,7]},"RIGHT",.F.,"RIGHT" ) //Auremar

DbSelectArea("SA1")
DbSetOrder(1)

DbSelectArea("SED")
DbSetOrder(1)

DbSelectArea("SE1")
DbSetOrder(oRep:nOrder)

If ! Empty(cSE1)
	DbSetFilter({|| &(cSE1)}, cSE1)
Endif

oRep:SetMeter(RecCount())
oTit:Init()
oNat:Init()
DbGoTop()
cCod := E1_FILIAL

While ! Eof()
	oRep:IncMeter()
	//Cancelamento
	If oRep:Cancel()
		oRep:SkipLine()
		oRep:PrintText(cCancel)
		Exit
	Endif 
	//Valida parametros
	If	(E1_MULTNAT != "2") .And. ;
		(E1_FILIAL  >= Upper(MV_PAR01) .And. E1_FILIAL  <= Upper(MV_PAR02)) .And. ;
		(E1_CLIENTE >= Upper(MV_PAR03) .And. E1_CLIENTE <= Upper(MV_PAR04)) .And. ;
		(E1_EMISSAO >= MV_PAR05 .And. E1_EMISSAO <= MV_PAR06) .And. ;
		(E1_VENCREA >= MV_PAR07 .And. E1_VENCREA <= MV_PAR08) .And. ;
		((Empty(MV_PAR09) .Or. AllTrim(Upper(E1_TIPO)) $ AllTrim(Upper(MV_PAR09)))) .And. ;
		((MV_PAR10 == 1 .And. E1_SALDO != E1_VALOR) .Or. (MV_PAR10 == 2 .And. E1_SALDO == E1_VALOR) .Or. MV_PAR10 == 3)
  		//Consulta Naturezas
		cQry := " SELECT EZ_NATUREZ, EZ_CCUSTO, EZ_ITEMCTA , EZ_VALOR, EZ_PERC"
		cQry += " FROM "+RetSqlName("SEZ")
		cQry += " WHERE D_E_L_E_T_ = ' '"
		cQry += " AND EZ_RECPAG = 'R'"
		cQry += " AND EZ_SEQ = '  '"
		cQry += " AND EZ_FILIAL = '"+E1_FILIAL+"'"
		cQry += " AND EZ_PREFIXO = '"+E1_PREFIXO+"'"
		cQry += " AND EZ_NUM = '"+E1_NUM+"'"
		cQry += " AND EZ_PARCELA = '"+E1_PARCELA+"'"
		cQry += " AND EZ_TIPO = '"+E1_TIPO+"'"
		cQry += " AND EZ_CLIFOR = '"+E1_CLIENTE+"'"
		cQry += " AND EZ_LOJA = '"+E1_LOJA+"'"
		cQry += " ORDER BY EZ_NATUREZ"
		cQry := ChangeQuery(cQry)
		dbUseArea(.T., "TOPCONN", TCGenQry(,,cQry), 'QRYSEV', .F., .F.)
		aNat := {}
		aAdd(aNat, {"Descrição", "Natureza", "C.Custo", "Item Contab.", "Valor", "Perc.", "Conta Ctb."})
		nTot := nPer := 0
		While ! Eof()
			SED->(DbSeek(xFilial("SED")+QRYSEV->EZ_NATUREZ))
			aAdd(aNat, {Upper(SED->ED_DESCRIC), EZ_NATUREZ, EZ_CCUSTO, EZ_ITEMCTA, Transform(EZ_VALOR,"@E 9,999,999,999.99"), Transform(EZ_PERC, "@E 999.9999999"), SED->ED_CONTA})
			nTot += EZ_VALOR
			nPer += EZ_PERC
			DbSkip()
		End
		aAdd(aNat, {"Total", "", "", "" , Transform(nTot,"@E 9,999,999,999.99"), Transform(nPer,"@E 999.9999999"),""})
		QRYSEV->(DbCloseArea())
		DbSelectArea("SE1")
		If Len(aNat) > 2
			If MV_PAR11 < 3 .And. SA1->(DbSeek(xFilial("SA1")+SE1->(E1_CLIENTE+E1_LOJA)))
				If MV_PAR11 == 1
					cNom := SA1->A1_NOME
				Else
					cNom := SA1->A1_NREDUZ
				Endif
			Else
				cNom := SE1->E1_NOMCLI
			Endif
			//Page Break
			If cCod != E1_FILIAL
				cCod := E1_FILIAL
				oRep:EndPage(.F.)
			ElseIf oRep:ChkIncRow(Len(aNat)+9,.T.)
				oRep:EndPage(.F.)
			Endif
			//Imprime Linha Cliente
			oRep:PrintText("Cliente: "+AllTrim(E1_CLIENTE+" "+E1_LOJA)+"    Nome: "+cNom)
			//Imprime Linha Titulo
			oTit:PrintLine()
			//Imprime Linha Naturezas
			oRep:SetRow(oRep:Row()+16)
			For nX := 1 To Len(aNat)
				oNat:PrintLine()
			Next
			oRep:FatLine()
			oRep:SetRow(oRep:Row()+16)
		Endif
	Endif
	DbSkip()
End
Return(.T.)



//Imprimir Cabacalho
Static Function ReportCab()
Local oFntTit := TFont():New("Arial",10,16,,.F.,,,,.T.,.F.)       //Titulo
Local oFntCab := TFont():New("Courier New",9,11,,.T.,,,,.T.,.F.)  //Folha e Data
Local cNomFil := SE1->(E1_FILIAL+" - "+FWFilName(CEMPANT, iif(Empty(E1_FILIAL), CFILANT, E1_FILIAL)))
oRep:SetMsgPrint("Imprimindo, Página: "+AllTrim(Str(oRep:oPage:nPage)))
//Cabec. Excel
oRep:XlsNewRow(.T.)
oRep:XlsNewCell(oRep:cTitle,.F.,,,1,,'C')
oRep:XlsNewRow(.T.)
oRep:XlsNewCell(cNomFil,.F.,,,1,,'C')
//LogoTipo
oRep:SayBitmap(100,10,cLogo,300,100)
//Dados do Report
SetFont(oFntCab)
oRep:SetRow(100)
oRep:PrtRight(iif(Len(DTOC(DDATABASE))==8, "Pag: ", "Folha: ")+Str(oRep:Page(),3)+Space(5))
oRep:SetRow(140)
oRep:PrtRight("Data: "+DTOC(DDATABASE)+Space(5))
oRep:SetRow(180)
oRep:PrtRight("Horas: "+Time()+Space(5))
oRep:SetRow(220)
oRep:PrtRight("Report: "+FunName()+Space(5))
//Titulo do Relatorio
SetFont(oFntTit)
oRep:SetRow(130)
oRep:PrtCenter(Upper(AllTrim(oRep:cTitle)))
//Filial
SetFont(oFntCab)
oRep:SetRow(220)
oRep:PrtCenter("Contas a Receber")
oRep:PrtLeft(Upper(AllTrim(cNomFil)))
//Header
SetFont(oFntRep)
oRep:SetRow(280)
oRep:FatLine()
oTit:SetHeaderSection(.T.)
oTit:PrintHeader(.T.,.F.)
oTit:SetHeaderSection(.F.)
oRep:FatLine()
oRep:SetRow(oRep:Row()+16)
Return(Nil)



//Mudar fonte do relatorio e ajustar corpo e salto de linha
Static Function SetFont(oFont, lBold)
oRep:oFontBody 	:= oFont
oRep:nFontBody 	:= iif(oFont:nWidth != 0, oFont:nWidth, oFont:nHeight)
oRep:cFontBody 	:= oFont:Name
oRep:lBold 		:= iif(Empty(lBold), oFont:Bold, .T.)
oRep:lItalic 	:= oFont:Italic
oRep:lUnderLine := oFont:Underline
oRep:nLineHeight:= oRep:nFontBody * 5
Return(Nil)



//Ajustar Perguntas
Static Function SetPergSX1(lPer)
Local aHelp := {}
Local lRet  := .T.
DbSelectArea("SX1")
DbSetOrder(1)

If ! DbSeek(PERGUNTA)
	lPer := .T.
	aHelp := {"Informe filial de De Até"}
	u_SFPUTSX1(PERGUNTA,	"01","Filial De ?", "Filial De ?", "Filial De ?", "mv_ch1","C",Len(SE1->E1_FILIAL),0,0,"G","","SM0","","",;
	"MV_PAR01","","","","", "","","","", "","","","", "","","","",aHelp)
	u_SFPUTSX1(PERGUNTA,	"02","Filial Até ?","Filial Até ?","Filial Até ?","mv_ch2","C",Len(SE1->E1_FILIAL),0,0,"G","","SM0","","",;
	"MV_PAR02","","","","", "","","","", "","","","", "","","","",aHelp)
	aHelp := {"Informe cliente De Até"}
	u_SFPUTSX1(PERGUNTA,	"03","Cliente De ?", "Cliente De ?", "Cliente De ?", "mv_ch3","C",Len(SE1->E1_CLIENTE),0,0,"G","","SA1CLI","","",;
	"MV_PAR03","","","","", "","","","", "","","","", "","","","",aHelp)
	u_SFPUTSX1(PERGUNTA,	"04","Cliente Até ?","Filial Até ?","Filial Até ?","mv_ch4","C",Len(SE1->E1_CLIENTE),0,0,"G","","SA1CLI","","",;
	"MV_PAR04","","","","", "","","","", "","","","", "","","","",aHelp)
	aHelp := {"Informe data emissão De Até"}
	u_SFPUTSX1(PERGUNTA, 	"05", "A Partir da Emissão ?", "A Partir da Emissão ?", "A Partir da Emissão ?", "mv_ch5", "D", 8, 0, 1, "G", "", "", "", "",;
	"MV_PAR05","","","","", "","","","","","","","","","","","",aHelp)
	u_SFPUTSX1(PERGUNTA, 	"06", "Até a Emissão ?", "Até a Emissão ?", "Até a Emissão ?", "mv_ch6", "D", 8, 0, 1, "G", "", "", "", "",;
	"MV_PAR06","","","","", "","","","","","","","","","","","",aHelp)
	aHelp := {"Informe data vencimento De Até"}
	u_SFPUTSX1(PERGUNTA, 	"07", "A Partir do Vencimento ?", "A Partir do Vencimento ?", "A Partir do Vencimento ?", "mv_ch7", "D", 8, 0, 1, "G", "", "", "", "",;
	"MV_PAR05","","","","", "","","","","","","","","","","","",aHelp)
	u_SFPUTSX1(PERGUNTA, 	"08", "Até o Vencimento ?", "Até o Vencimento ?", "Até o Vencimento ?", "mv_ch8", "D", 8, 0, 1, "G", "", "", "", "",;
	"MV_PAR08","","","","", "","","","","","","","","","","","",aHelp)
	aHelp := {"Informe os tipos de titulos","lista separados por ','","Exemplo: 'BOL,NF,...'","Vazio = Todos"}
	u_SFPUTSX1(PERGUNTA,	"09","Tipos de Titulo ?","Tipos de Titulo ?","Tipos de Titulo ?","mv_ch9","C",60,0,0,"G","","","","",;
	"MV_PAR09","","","","", "","","","", "","","","", "","","","",aHelp)
	aHelp := {"Informe qual o saldo a considerar"}
	u_SFPUTSX1(PERGUNTA,	"10","Saldo ?","Saldo ?","Saldo ?","mv_cha","N",1,0,1,"C","","","","",;
	"MV_PAR11","Baixados","Baixados","Baixados","", "Em Aberto","Em Aberto","Em Aberto","Todos", "Todos","Todos", "","","", "","","",aHelp)
	aHelp := {"Informe qual nome do cliente"}
	u_SFPUTSX1(PERGUNTA,	"11","Nome do Cliente ?","Nome do Cliente ?","Nome do Cliente ?","mv_chb","N",1,0,1,"C","","","","",;
	"MV_PAR11","Razao Social","Razao Social","Razao Social","", "Nome Reduzido","Nome Reduzido","Nome Reduzido","Nome no Titulo", "Nome no Titulo","Nome no Titulo", "","","", "","","",aHelp)
Endif
SetKey(VK_F10,{|| cSE1 := FilterExpr("SE1")})
Pergunte(PERGUNTA, lPer)
SetKey(VK_F10, Nil)
Return(lRet)
