#INCLUDE "FWMVCDEF.CH" 
#INCLUDE "TOPCONN.CH" 
#INCLUDE "MSOLE.CH"
#INCLUDE "PROTHEUS.CH"

/*/{Protheus.doc} SF0503X
(long_description)
@author j2a.luizjunior
@since 03/07/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

User Function SF0503X()

	Local   oBrowse      := Nil
	Local   aRotina      := {}
	Private nValZH1      := 0
	Private cCart        := ""
		
	//Private cCodigo := ""                                        
	//-> Instanciamento da Classe de Browse
	oBrowse := FWMBrowse():New()
	        
	//-> Definição da tabela do Browse
	oBrowse:SetAlias("ZH1")
	oBrowse:SetMenuDef("SF0503X")
	        
	// Titulo da Browse
	oBrowse:SetDescription("Rotina para Cadastro de Carteirinha")
	
	aRotina := MenuDef()
	        
	// Ativação da Classe
	oBrowse:Activate()

Return Nil 

/*/{Protheus.doc} MenuDef
(long_description)
@author j2a.luizjunior
@since 03/07/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function MenuDef()

	Local aRotina := {}
	
	ADD OPTION aRotina Title "Pesquisar"  Action "PesqBrw"         OPERATION 1 ACCESS 0
	ADD OPTION aRotina Title "Visualizar" Action "ViewDef.SF0503X" OPERATION 2 ACCESS 0
	ADD OPTION aRotina Title "Incluir"    Action "ViewDef.SF0503X" OPERATION 3 ACCESS 0
	ADD OPTION aRotina Title "Alterar"    Action "ViewDef.SF0503X" OPERATION 4 ACCESS 0
	ADD OPTION aRotina Title "Excluir"    Action "ViewDef.SF0503X" OPERATION 5 ACCESS 0 
	ADD OPTION aRotina Title "Impr Cart"  Action "U_SF0504X()"     OPERATION 6 ACCESS 0
	ADD OPTION aRotina Title "Imp Adesao" Action "U_SF0514X()"     OPERATION 7 ACCESS 0
	ADD OPTION aRotina Title "Rec Cart"   Action "U_SF0518X()"     OPERATION 8 ACCESS 0
	ADD OPTION aRotina Title "Rec Mens"   Action "U_SF05R03X()"    OPERATION 9 ACCESS 0
 
Return(aRotina)

/*/{Protheus.doc} ModelDef
(long_description)
@author j2a.luizjunior
@since 03/07/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ModelDef()

	Local   oStruZH1 := FWFormStruct(1,"ZH1") 
	Local   oStruZH2 := FWFormStruct(1,"ZH2")
	Local   oModel   := MPFormModel():New("F0503X")
	Local   cCodigo  := ""
	Local   nValCart := GetNewPar("MV_XVALCAR",6)
		
	oStruZH1:SetProperty("ZH1_COD"    , MODEL_FIELD_INIT   , {|x| x := GETCOD("1",x)  })	
	oStruZH1:SetProperty("ZH1_COD"    , MODEL_FIELD_WHEN   , {||.F.                   })
	
	oStruZH1:SetProperty("ZH1_DTCAD"  , MODEL_FIELD_INIT   , {|x| x := dDataBase      })
	oStruZH1:SetProperty("ZH1_DTCAD"  , MODEL_FIELD_WHEN   , {||.F.                   })

	oStruZH1:SetProperty("ZH1_VALOR"  , MODEL_FIELD_INIT   , {|x| x := nValCart       })
	oStruZH1:SetProperty("ZH1_VALOR"  , MODEL_FIELD_WHEN   , {||.F.                   })
	
	oStruZH1:SetProperty("ZH1_FILORI" , MODEL_FIELD_INIT   , {|x| x := cFilAnt        })	
	oStruZH1:SetProperty("ZH1_FILORI" , MODEL_FIELD_WHEN   , {||.F.                   })
	
	oStruZH1:AddTrigger ("ZH1_NUMERO" , "ZH1_NOME",{|| .T.}, {|x| x := 	GATNOME(x)    })	
	oStruZH1:AddTrigger ("ZH1_MATRIC" , "ZH1_NOME",{|| .T.}, {|x| x := 	GATNOME(x)    })	
	
	oStruZH1:RemoveField("ZH1_IMFILE")
	oStruZH2:RemoveField("ZH2_IMFILE")
	
	oModel:AddFields("ZH1MASTER",Nil,oStruZH1)
	oModel:SetDescription("Cadastro de Carteiras")
	oModel:GetModel("ZH1MASTER"):SetDescription("Informações do Titular")      
	oModel:SetPrimaryKey({"ZH1_FILIAL","ZH1_COD","ZH1_CGC"})
	
	oStruZH2:SetProperty("ZH2_COD"    , MODEL_FIELD_INIT   , {|x| x := ATUCODGRID()   })
	oStruZH2:SetProperty("ZH2_COD"    , MODEL_FIELD_WHEN   , {||.F.                   })
	
	oStruZH2:AddTrigger ("ZH2_NOME"   , "ZH2_CODDEP"       , {|| .T.}, {|x| x := GETCOD("2",x) })
	
	oModel:AddGrid ("ZH2DETAIL", "ZH1MASTER",oStruZH2,,,,)
	oModel:GetModel("ZH2DETAIL"):SetDescription("Dependentes")
	oModel:GetModel("ZH2DETAIL"):SetUniqueLine({"ZH2_ITEM"})
	oModel:GetModel("ZH2DETAIL"):SetOptional(.T.)
	oModel:SetRelation("ZH2DETAIL",{{"ZH2_FILIAL","xFilial('ZH2')"},{"ZH2_COD","ZH1_COD"}},ZH2->(IndexKey(1)))
	oModel:SetPrimaryKey({"ZH2_FILIAL","ZH2_COD"})

Return(oModel) 

/*/{Protheus.doc} ViewDef
(long_description)
@author j2a.luizjunior
@since 03/07/2017
@version 1.0
@example
(examples)
@see (links_or_references)Ç
/*/

Static Function ViewDef()

	Local oModel   := FWLoadModel("SF0503X")
	Local oStruZH1 := FWFormStruct(2,"ZH1")
	Local oStruZH2 := FWFormStruct(2,"ZH2") 
	Local oView	   := FWFormView():New()
	
	oView:SetModel(oModel)
	oView:AddField("VIEW_ZH1", oStruZH1, "ZH1MASTER")
	oView:AddGrid ("VIEW_ZH2", oStruZH2, "ZH2DETAIL")

	oStruZH1:SetProperty("ZH1_VLNEG"   , MVC_VIEW_CANCHANGE , .F.)
	oStruZH1:SetProperty("ZH1_FILMAT"  , MVC_VIEW_CANCHANGE , .F.)
	oStruZH1:SetProperty("ZH1_VALCON"  , MVC_VIEW_CANCHANGE , .F.)
	
	If Altera
		oStruZH1:SetProperty("ZH1_NUMERO"  , MVC_VIEW_CANCHANGE , .F.)
		oStruZH1:SetProperty("ZH1_MATRIC"  , MVC_VIEW_CANCHANGE , .F.)
		oStruZH1:SetProperty("ZH1_CONDPG"  , MVC_VIEW_CANCHANGE , .F.)
		oStruZH1:SetProperty("ZH1_SITCAR"  , MVC_VIEW_CANCHANGE , .F.)
		oStruZH1:SetProperty("ZH1_CGC"     , MVC_VIEW_CANCHANGE , .F.)
	EndIf
	
	oStruZH2:SetProperty("ZH2_CODDEP" , MVC_VIEW_CANCHANGE , .F.)
	oStruZH2:SetProperty("ZH2_ITEM"   , MVC_VIEW_CANCHANGE , .F.)
	
	oView:AddIncrementField("VIEW_ZH2", "ZH2_ITEM")
	oStruZH1:RemoveField("ZH1_TITCAR")
	oStruZH1:RemoveField("ZH1_IMFILE")
	oStruZH2:RemoveField("ZH2_IMFILE")
	
	oView:CreateHorizontalBox("SUPERIOR" ,60)
	oView:CreateHorizontalBox("INFERIOR" ,40)
	
	oView:CreateFolder("GRADES", "INFERIOR")
	oView:AddSheet("GRADES", "PASTA01", OemToAnsi("Dependentes"))
	
	oView:CreateHorizontalBox("PASTA_ZH2",100,,, "GRADES","PASTA01")
	
	oView:SetOwnerView("VIEW_ZH1", "SUPERIOR")
	oView:SetOwnerView("VIEW_ZH2", "PASTA_ZH2")
	
	oView:EnableTitleView("VIEW_ZH1")
	oView:EnableTitleView("VIEW_ZH2")
	
	oView:SetCloseOnOk({||.t.})

Return(oView)	

/*/{Protheus.doc} GETCOD
(long_description)
@author j2a.luizjunior
@since 06/07/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function GETCOD(pParam,oField) 
	
	Local cRet      := ""
	Local cNCart    := ""
	Local nValor    := 0 
	Local nVlnEG    := 0 
	Local cParam    := pParam
	Local aArea     := GetArea()
 	Local oModel    := Nil
 	Local oModelZH1 := Nil 
	
	If cParam == "1"
	
		If Altera
			cRet  := ZH1->ZH1_COD
			Return cRet	
		Else	
			__xNumCart := GetMv("MV_XCART",,.T.)
			__xNumCart := Soma1(__xNumCart,10)
			
			DbSelectArea("ZH1")
			DbSetOrder(1)
			
			Do While (!Empty(__xNumCart) .And. ZH1->(MsSeek(xFilial("ZH1") + __xNumCart)))
				__xNumCart := Soma1(__xNumCart)		
			EndDo
		
		EndIf
		
		cCart := __xNumCart
	
	Else

		cNCart := oField:GetValue("ZH2_CODDEP")
		
		If !Empty(cNCart)
			Return(cNCart)
		EndIf
	
		If Altera .And.	Empty(__xNumCart)		
			__xNumCart := GetMv("MV_XCART",,.T.)
			__xNumCart := Soma1(__xNumCart,10)
		Else
			__xNumCart := Soma1(__xNumCart,10)
		EndIf
			
		DbSelectArea("ZH1")
		DbSetOrder(1)
			
		Do While (!Empty(__xNumCart) .And. ZH1->(MsSeek(xFilial("ZH1") + __xNumCart)))
			__xNumCart := Soma1(__xNumCart)		
		EndDo		

		oModel    := FWModelActive()
		oModelZH1 := oModel:GetModel("ZH1MASTER") 

		nValor    := oModelZH1:GetValue("ZH1_VALOR") 
		nVlnEG    := oModelZH1:GetValue("ZH1_VLNEG") 				
		
		nVlnEG += nValor
		
		oModelZH1:SetValue("ZH1_VLNEG"  ,nVlnEG )
		
	EndIf	
	
	RestArea(aArea)
	
Return __xNumCart

/*/{Protheus.doc} ATUCODGRID
(long_description)
@author j2a.luizjunior
@since 06/07/2017
@version 1.0
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

Static Function ATUCODGRID()
	
	local cRet  := ""
	Local aArea := GetArea()

	cRet := If(Altera,ZH1->ZH1_COD,cCart)

	RestArea(aArea)
	
return cRet

/*/{Protheus.doc} GATNOME
(long_description)
@author j2a.luizjunior
@since 06/07/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function GATNOME(oField)

	Local cNumero   := oField:GetValue("ZH1_NUMERO")
	Local cRevisa   := oField:GetValue("ZH1_REVISA")
	Local cFilMat   := oField:GetValue("ZH1_FILMAT")
	Local cMatric   := oField:GetValue("ZH1_MATRIC")
	Local nValNeg   := oField:GetValue("ZH1_VLNEG" )	
	Local aArea     := GetArea()
	Local cRet      := ""
	Local cCat      := ""
	Local nValCon   := 0
	Local cProposta := ""
	Local cProConv  := ""
	
	If !Empty(cMatric)
	
		DbSelectArea("SRA")
		DbSetOrder(1)
		If DbSeek(cFilMat + cMatric)

			oField:SetValue("ZH1_END"   ,SRA->RA_ENDEREC )
			oField:SetValue("ZH1_MUN"   ,SRA->RA_MUNICIP )
			oField:SetValue("ZH1_BAIRRO",SRA->RA_BAIRRO  )
			oField:SetValue("ZH1_EST"   ,SRA->RA_ESTADO  )			
			oField:SetValue("ZH1_CGC"   ,SRA->RA_CIC     )		
			oField:SetValue("ZH1_CEP"   ,SRA->RA_CEP     )
			oField:SetValue("ZH1_FONRES",SRA->RA_TELEFON )
			oField:SetValue("ZH1_EMAIL" ,SRA->RA_EMAIL   )
			oField:SetValue("ZH1_TIPO"  ,"S"             )
			oField:SetValue("ZH1_CATEGO","S"             )
		
			cRet := SRA->RA_NOME
		
		EndIf	
	
	Else
	
		DbSelectArea("CN9")
		DbSetOrder(1)
		If DbSeek(xFilial("CN9") + cNumero )
			
			If CN9->CN9_XCATPL == "1"
				cCat := "C"
			Else
				cCat := "I"
			EndIf
			
			//-> Preenche valor do campo de Val Convenio
			cProposta := Posicione("ADY",2,xFilial("ADY") + CN9->CN9_XOPORT ,"ADY_PROPOS")
			
			DbSelectArea("ADZ")
			DbSetOrder(2)			
			If DbSeek(xFilial("ADZ") + cProposta)
				
				While !ADZ->(Eof()) .And. xFilial("ADZ") + cProposta == ADZ->ADZ_FILIAL + ADZ->ADZ_PROPOS 
				
					cProConv := Posicione("SB1",1,xFilial("SB1") + ADZ->ADZ_PRODUT,"B1_XPRDCON")
					
					If cProConv == "S"
						nValCon += ADZ->ADZ_TOTAL
					EndIf
				
					ADZ->(DbSkip())
				EndDo
				
				oField:SetValue("ZH1_VALCON"  ,nValCon  )
				
			EndIf
			
			
			oField:SetValue("ZH1_VALID"  ,CN9->CN9_XDTFIM  )
			oField:SetValue("ZH1_CATEGO" ,cCat             )
			oField:SetValue("ZH1_VALOR"  ,CN9->CN9_VLINI   )

			//oField:SetValue("ZH1_SITMEN" ,CN9->CN9_XSITME)
			oField:SetValue("ZH1_SITCAR" ,CN9->CN9_XSITCA  )
			
			If nValNeg = 0
				oField:SetValue("ZH1_VLNEG",GetNewPar("MV_XVALCAR",6) )
			EndIf
			
			DbSelectArea("SA1")
			DbSetOrder(1)
			If DbSeek(xFilial("SA1") + CN9->CN9_CLIENT + CN9->CN9_LOJACL)
			
				If SA1->A1_PESSOA == "J"
					cRet := ""
					Return cRet
				EndIf
	
				oField:SetValue("ZH1_END"   ,SA1->A1_END     )
				oField:SetValue("ZH1_MUN"   ,SA1->A1_MUN     )
				oField:SetValue("ZH1_BAIRRO",SA1->A1_BAIRRO  )
				oField:SetValue("ZH1_EST"   ,SA1->A1_EST     )			
				oField:SetValue("ZH1_CGC"   ,SA1->A1_CGC     )		
				oField:SetValue("ZH1_CEP"   ,SA1->A1_CEP     )
				oField:SetValue("ZH1_FONRES",SA1->A1_TEL     )
				oField:SetValue("ZH1_EMAIL" ,SA1->A1_EMAIL   )
				oField:SetValue("ZH1_TIPO"  ,SA1->A1_PESSOA  )
				
				cRet := SA1->A1_NOME
			
			EndIf
		
		EndIf

	EndIf
	
	RestArea(aArea)
	 
Return cRet

/*/{Protheus.doc} CHKCGC
(long_description)
@author j2a.luizjunior
@since 14/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function CHKCGC(pAlTab,pCont,pCod)

	Local lRet   := .F.
	Local cAlZH1 := GetNextAlias()
	Local cAlZH2 := GetNextAlias()
	Local cAlTab := pAlTab
	Local cCont  := pCont
	Local cCod   := pCod
	
	If cAlTab == "ZH1"
	
		If Select("cAlZH1") > 0
			(cAlZH1)->(DbCloseArea())
		EndIf
		
		BeginSql Alias cAlZH1
		
			SELECT Count(*) COUNT
			FROM   %Table:ZH1%
			WHERE  %NotDel%
			AND    ZH1_CGC  = %Exp:cCont%
			AND    ZH1_COD != %Exp:cCod% 
		
		EndSql
		
		If (cAlZH1)->COUNT > 0
			lRet := .T.
		EndIf
		
	Else

		If Select("cAlZH2") > 0
			(cAlZH1)->(DbCloseArea())
		EndIf
		
		BeginSql Alias cAlZH2
		
			SELECT Count(*) COUNT
			FROM   %Table:ZH2%
			WHERE  %NotDel%
			AND    ZH2_CGC     = %Exp:cCont%
		
		EndSql
		
		If (cAlZH2)->COUNT > 1
			lRet := .T.
		EndIf
	
	EndIf	

Return lRet

/*/{Protheus.doc} F0503X
(long_description)
@author j2a.luizjunior
@since 06/07/2017
@version 1.0
@return ${return}, ${return_description}
@example
(examples)
@see (links_or_references)
/*/

User Function F0503X()

	Local aParam   := PARAMIXB
	Local cIdPonto := aParam[2]
	Local oObj     := aParam[1]
	Local cCGC     := ""
	Local lRet     := .T.
	Local cAux     := ""
	Local lSucess  := .F.
	Local cPaga    := "" 
	Local oModel   := Nil
	Local oGridZH2 := Nil
	Local oStrZH1  := Nil	
	Local cNumero  := ""
	Local cRevisa  := ""
	Local nL := 0

	Private cNum     := RETMAXE1NUM()
	
	If cIdPonto == "MODELPOS"

		oModel   := FWModelActive()
		oGridZH2 := oModel:GetModel("ZH2DETAIL")
		oStrZH1  := oModel:GetModel("ZH1MASTER")

		If GetMv("MV_XCART") < __xNumCart	
		
			If RecLock("SX6",.F.)
				Replace X6_CONTEUD With __xNumCart 
				Replace X6_CONTSPA With __xNumCart
				Replace X6_CONTENG With __xNumCart
				SX6->(MsUnLock())
			EndIf
			
		EndIf	

		If oObj:GetOperation() == 5		
			If !Empty(ZH1->ZH1_MATRIC)
				Return lRet
			EndIf		
			FWMsgRun(,{|| lSucess := ATUFIN() },"Excluindo titulos, aguarde...","Aguarde")
			If !lSucess			
				Aviso("Atenção","Não foi possivel excluir titulos, verifique!",{"OK"})							
			EndIf
			Return lSucess			
		EndIf
		
		For nL := 1 To oGridZH2:Length()		
			oGridZH2:GoLine(nL)			
			If oGridZH2:IsDeleted()			
				nValor    := oStrZH1:GetValue("ZH1_VALOR")				
				nVlNeg    := oStrZH1:GetValue("ZH1_VLNEG")				
				nNewValor := nVlNeg - nValor
				oStrZH1:SetValue("ZH1_VLNEG",nNewValor)
			EndIf			
		Next nL					
		
 	ElseIf cIdPonto == "FORMPOS"
 	
		oModel   := FWModelActive()
		oGridZH2 := oModel:GetModel("ZH2DETAIL")
		oStrZH1  := oModel:GetModel("ZH1MASTER")

		If oObj:GetOperation() == 3		
			cCGC    := AllTrim(oStrZH1:GetValue("ZH1_CGC"))
			//cPaga   := oStrZH1:GetValue("ZH1_SITMEN")
			cPaga2  := oStrZH1:GetValue("ZH1_SITCAR")
			cCod    := oStrZH1:GetValue("ZH1_COD")
			cMatric := oStrZH1:GetValue("ZH1_MATRIC")
			cNumero := oStrZH1:GetValue("ZH1_NUMERO")
			cRevisa := oStrZH1:GetValue("ZH1_REVISA")
		Else
			cPaga2  := ZH1->ZH1_SITCAR
			//cPaga   := ZH1->ZH1_SITMEN
			cCGC    := ZH1->ZH1_CGC
			cCod    := ZH1->ZH1_COD
			cMatric := ZH1->ZH1_MATRIC
			cNumero := ZH1->ZH1_NUMERO
			cRevisa := ZH1->ZH1_REVISA
		EndIf
		
		If CHKCGC("ZH1",cCGC,cCod)	
			Aviso("Atenção","CPF do titular já utilizado, verifique!",{"OK"})	
			lRet := .F.
			Return lRet
		EndIf
		
		If oObj:GetOperation() == 3
			
			//-> SE O NUMERO DE CONTRATO ESTIVER PREENCHIDO É OBRIGATORIO INFORMAR O PAGADOR DA MENSALIDADE E DA CARTEIRA
			//If Empty(oStrZH1:GetValue("ZH1_SITMEN")) .And. Empty(oStrZH1:GetValue("ZH1_SITCAR")) .And. !Empty(oStrZH1:GetValue("ZH1_NUMERO")) 
			//	Aviso("Atenção","É Necessario informar um dos campos 'Matricula' ou 'Contrato', verifique!",{"OK"})
			//	Return .F.			
			//EndIf
		
			//-> É necessario informar a matricula e/ou o numero do contrato para confirmar o cadastro de carteira
			If Empty(oStrZH1:GetValue("ZH1_MATRIC")) .And. Empty(oStrZH1:GetValue("ZH1_NUMERO"))
				Aviso("Atenção","É Necessario informar um dos campos 'Matricula' ou 'Contrato', verifique!",{"OK"})
				Return .F.
			EndIf
			
			//-> É necessario informar o CPF ou o numero do passaport para confirmar o cadastro de carteira
			If Empty(oStrZH1:GetValue("ZH1_CGC")) .And. Empty(oStrZH1:GetValue("ZH1_PASSPO"))
				Aviso("Atenção","É Necessario informar um dos campos 'CPF/CGC' ou 'Passaporte', verifique!",{"OK"})
				Return .F.
			EndIf
			
			//-> É necessario informar a condição de pagamento quando existir contrato para a geração do titulo de carteira
			If Empty(oStrZH1:GetValue("ZH1_CONDPG")) .And. !Empty(oStrZH1:GetValue("ZH1_NUMERO")) .And. oStrZH1:GetValue("ZH1_SITCAR") != "E"
				Aviso("Atenção","É Necessario informar a condição de pagamento, verifique!",{"OK"})
				Return .F.			
			EndIf			
			
		EndIf
		
		For nL := 1 To oGridZH2:Length()
		
			oGridZH2:GoLine(nL)
			
			cCGC := AllTrim(oGridZH2:GetValue("ZH2_CGC"))
			If !Empty(cCGC) 
			
				If CHKCGC("ZH2",cCGC,"") .Or. cCGC $ cAux		
					Aviso("Atenção","CPF do dependente já utilizado, verifique!",{"OK"})
					lRet := .F.
					Return lRet					
				EndIf
				
			EndIf
			
			cAux += AllTrim(oGridZH2:GetValue("ZH2_CGC")) + "u"	
						
		Next nL
		
		If !Empty(cMatric)
			Return lRet
		EndIf
		
		If !CHKTITCAR(@oStrZH1)			
			FWMsgRun(,{||lSucess := INCFIN040(cPaga2,"2",oStrZH1)},"Gerando titulos referente a confecção de carteira...", "Aguarde")
			If !lSucess
				lRet := .F.
				Return lRet
			Else	
				ATUZH2(@oStrZH1)				
				ATUZH1(@oStrZH1)	
			EndIf			
		EndIf
		
		//-> titulo referente a mensalidade sera gerado pela rotina de "gera faturamento"
		/*
		If !CHKTITMEN(@oStrZH1)					
			//-> Valida medição eventual, caso variavel cMedEve = 1 nao deixa gerar titulo de mensalidade
			cTipCon := Posicione("CN9",1,xFilial("CN9") + cNumero  + cRevisa ,"CN9_TPCTO" )			
			cMedEve := Posicione("CN1",1,xFilial("CN1") + cTipCon            ,"CN1_MEDEVE")			
			If cMedEve == "1"
				ATUZH1(@oStrZH1) 
				Return lRet
			EndIf
			
			//-> gera titulo de adesao para medição diferente de eventual
			FWMsgRun(,{||lSucess := INCFIN040(cPaga,"1",oStrZH1)},"Gerando titulos referente a adesao...", "Aguarde")		
			If !lSucess
				lRet := .F.
				Return lRet
			Else
				ATUZH1(@oStrZH1)	
			EndIf			
		EndIf				
		*/
		
	EndIf
	
Return lRet

/*/{Protheus.doc} INCFIN040
(long_description)
@author j2a.luizjunior
@since 22/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function INCFIN040(pPaga,pParam,pObj)

	Local   lRet        := .T.
	Local   oObj        := pObj
	Local   cPaga       := pPaga
	Local   aTit        := {}
	Local   aHistCob    := Array(9)
	Local   cPrefixo    := GetNewPar("MV_XPREPRQ","RMF")
	Local   cTipo       := ""
	Local   aParcelas   := {}
	Local   aDados      := {}
	Local   cParam      := pParam
	Local   cCondPg     := ""
	Local   nVlTot      := 0 
	Local   cCliente    := ""
	Local   cLoja       := ""
	Local   cNome	    := ""
	Local   nMoeda	    := 1
	Local   lMata030    := .F.
	Local   cNumero     := ""
	Local   cRevisa     := ""	
	Local   cContrato   := ""
	Local   cNatureza   := ""
	Local   cCredit     := ""  
	Local   cNatCar     := GetNewPar("MV_XNATCAR","1300000010"    )
	Local   cNatMen     := GetNewPar("MV_XNATMEN","1300000023"    )   
	Local   cCCC        := GetNewPar("MV_XCCCPRQ","1301090103"    )
	Local   cItemC      := GetNewPar("MV_XITEMPQ","1730403011603" )
	Local   cCConCAR    := GetNewPar("MV_XCCONCA","41010405006"   )
	Local   cCConMEN    := GetNewPar("MV_XCCONME","41010408001"   ) 	
	Local   cMatric     := "" 
	Local nI, nP := 0
	Private lMsErroAuto := .F.
	
	If oObj:GetOperation() == 3 
		cNumero   := oObj:GetValue("ZH1_NUMERO")
		cRevisa   := oObj:GetValue("ZH1_REVISA")
		cCondPg   := oObj:GetValue("ZH1_CONDPG")		
		cNome	  := PADR(AllTrim(oObj:GetValue("ZH1_NOME"))   ,TamSX3('A1_NOME')[1]  ,Space(TamSX3('A1_NOME')[1] ))
		cMatric   := oObj:GetValue("ZH1_MATRIC")
	Else
		cCondPg   := ZH1->ZH1_CONDPG
		cNumero   := ZH1->ZH1_NUMERO
		cRevisa   := ZH1->ZH1_REVISA
		cNome	  := PADR(AllTrim(ZH1->ZH1_NOME),TamSX3('A1_NOME')[1],Space(TamSX3('A1_NOME')[1]))
		cMatric   := ZH1->ZH1_MATRIC
	EndIf	
	
	//-> se for funcionario nao vai inserir titulo
	If !Empty(cMatric)
		Return lRet
	EndIf
	
	If cPaga == "E"//-> EMPRESA PAGA		
		/*
		Se a empresa for pagar o titulo de carteira, nao deve permitir a geração do titulo de carteirinha.
		Este devera ser gerado pela medição de contrato.
		*/		
		Return lRet	
		/*	
		cCliente := Posicione("CN9",1,xFilial("CN9") + cNumero  + cRevisa ,"CN9_CLIENT")
		cLoja    := Posicione("CN9",1,xFilial("CN9") + cNumero  + cRevisa ,"CN9_LOJACL")
		cNome	 := Posicione("SA1",1,xFilial("SA1") + cCliente +  cLoja  ,"A1_NOME"   )
		*/
	Else
		//-> TITULAR PAGA
		lMata030 := CHECKMATA030(pObj)
		
		If !lMata030		
			Aviso("Atenção","Não foi possivel inserir cliente, verifique!",{"OK"})
			Return lMata030 
		EndIf
		
		cCodAux   := oObj:GetValue("ZH1_CGC")
		cCliente  := Posicione("SA1",3,xFilial("SA1") + cCodAux  ,"A1_COD"   )
		cLoja     := Posicione("SA1",3,xFilial("SA1") + cCodAux  ,"A1_LOJA"  )
	EndIf
	
	If cParam == "1" //-> TITULO DO CONTRATO/MENSALIDADE 
		/*
		cCredit   := cCConMEN
		cNatureza := cNatMen
		cTipo     := "CTR"
		cCondCon  := Posicione("CN9",1,xFilial("CN9") + cNumero + cRevisa,"CN9_CONDPG")
		nVlTot    := Posicione("CNB",1,xFilial("CNB") + cNumero + cRevisa,"CNB_VLTOT" )
		
		If nVlTot = 0 
			Aviso("Atenção","Não foi possivel inserir Titulo referente a mensalidade, não achou valor na tabela correspondente(CNB). Verifique!",{"OK"})
			lRet  := .F.
			Return lRet 		
		EndIf
		
		aParcelas := Condicao(nVlTot,cCondCon,,dDataBase)
		*/		
	Else
		//-> TITULO DA CARTEIRINHA
		cCredit   := cCConCAR 
		cNatureza := cNatCar
		cTipo     := "OR"
		nValTit   := CALVALCAR(@oObj)
		
		If nValTit = 0 
			Aviso("Atenção","Não foi possivel inserir Titulo referente a carteira, verifique!",{"OK"})
			lRet  := .F.
			Return lRet 		
		EndIf
		 
		aParcelas := Condicao(nValTit,cCondPg,,dDataBase)
	EndIf
	
	cNum := Soma1(cNum)
	
	For nI := 1 To Len(aParcelas)
		Aadd(aDados,{cPrefixo,cTipo,cNatureza,cNum,StrZero(nI,TamSX3("E1_PARCELA")[1]),cCliente,cLoja,cNome,aParcelas[nI,1],aParcelas[nI,2],cCCC,cItemc,.F.})
	Next nI
	
	Begin Transaction
	
		For nP := 1 To Len(aDados)	
	
			AADD(aTit , {"E1_FILIAL"  , FWxFilial("SE1")						  , NIL})
			AADD(aTit , {"E1_PREFIXO" , aDados[nP][1]    						  , NIL})
			AADD(aTit , {"E1_NUM"     , aDados[nP][4]        					  , NIL})
			AADD(aTit , {"E1_PARCELA" , aDados[nP][5]   		 				  , NIL})
			AADD(aTit , {"E1_TIPO"	  , aDados[nP][2]   						  , NIL})
			AADD(aTit , {"E1_NATUREZ" , aDados[nP][3]   						  , NIL})
			AADD(aTit , {"E1_SITUACA" , "0"										  , NIL})
			AADD(aTit , {"E1_VENCTO"  , aDados[nP][9]							  , NIL})
			AADD(aTit , {"E1_VENCREA" , DataValida(aDados[nP][9],.T.)			  , NIL})
			AADD(aTit , {"E1_VENCORI" , aDados[nP][9]							  , NIL})
			AADD(aTit , {"E1_EMISSAO" , dDataBase								  , NIL})
			AADD(aTit , {"E1_EMIS1"	  , dDataBase								  , NIL})
			AADD(aTit , {"E1_CLIENTE" , aDados[nP][6]							  , NIL})
			AADD(aTit , {"E1_LOJA"	  , aDados[nP][7]							  , NIL})
			AADD(aTit , {"E1_NOMCLI"  , aDados[nP][8]							  , NIL})
			AADD(aTit , {"E1_MOEDA"	  , nMoeda			 				  		  , NIL})
			AADD(aTit , {"E1_VALOR"	  , aDados[nP][10]							  , NIL})
			AADD(aTit , {"E1_SALDO"	  , aDados[nP][10]							  , NIL})
			AADD(aTit , {"E1_VLCRUZ"  , xMoeda(aDados[nP][10],nMoeda,1,dDataBase) , NIL})
			AADD(aTit , {"E1_ORIGEM"  , "SF0503X"								  , NIL})
			AADD(aTit , {"E1_FILORIG" , cFilAnt									  , NIL})			
			AADD(aTit , {"E1_XNUMERO" , cNumero                                   , Nil})
			AADD(aTit , {"E1_XREVISA" , cRevisa									  , NIL})
			AADD(aTit , {"E1_CCC"	  , cCCC								      , NIL})
			AADD(aTit , {"E1_ITEMC"   , cItemC								      , NIL})
			AADD(aTit , {"E1_CREDIT"  , cCredit								      , NIL})
						
			MSExecAuto({|x, y| FINA040(x, y)}, aTit, 3)
			
			//Verifica se a gravacao ocorreu normalmente
			If lMsErroAuto
				MOSTRAERRO()
				DisarmTransaction()
				lRet := .F.
				Return lRet
			Else
				cTxtTit := ""
				cTxtTit += "Filial: " + FWxFilial("SE1") + " Prefixo: " + aDados[nP][1] + " Número: " + aDados[nP][4] + " Tipo: " + aDados[nP][2] + " Parcela: " + aDados[nP][5] //+ CRLF
				//------------------------------------------------------
				//-- Grava Histórico de cobrança - Novos Títulos
				//------------------------------------------------------
				aHistCob[1]:= aDados[nP][6]
				aHistCob[2]:= aDados[nP][7]
				aHistCob[3]:= SE1->E1_PREFIXO 
				aHistCob[4]:= SE1->E1_NUM
				aHistCob[5]:= SE1->E1_PARCELA
				aHistCob[6]:= SE1->E1_TIPO
				aHistCob[7]:= STOD("//")
				aHistCob[8]:= "TÍTULO GERADO PELA GESTAO DE PARQUE " + CRLF 
				aHistCob[8]+= "Numero do Titulo: "  + aDados[nP][4]  + CRLF
				aHistCob[8]+= "Condição: "+ cCondPg + "-" + Posicione("SE4",1,FWxFilial("SE4")+cCondPg,"E4_DESCRI")+ CRLF + CRLF
			
				aHistCob[9]:= "01"
				
				//------------------------------------------------------
				//-- Chama unção que grava historico
				//------------------------------------------------------
				U_SF06A66X(aHistCob,"SF0503X") 
				aTit := {}
				
			EndIf
	
		Next nP
	
	End Transaction
	
Return lRet

/*/{Protheus.doc} CHECKMATA030
(long_description)
@author j2a.luizjunior
@since 12/09/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function CHECKMATA030(pObj)
	
	Local oObj     := pObj
	Local cCliente := ""  
	Local cLoja    := "00PF"                                                                   
	Local lRet     := .T.
	Local lMata030 := .F.
	Local cAlSA1   := GetNextAlias()
	  
	If oObj:GetOperation() == 3
		cCGC	   := oObj:GetValue("ZH1_CGC")      
		cCliente   := PADR(Substr(cCGC,1,9),TamSX3('A1_COD')[1] ,Space(TamSX3('A1_COD')[1]))		                                                                   
	Else	
		cCGC	   := ZH1->ZH1_CGC      
		cCliente   := PADR(Substr(cCGC,1,9),TamSX3('A1_COD')[1] ,Space(TamSX3('A1_COD')[1]))		                                                                   
	EndIf	
	
	BeginSql Alias cAlSA1
		
		SELECT A1_CGC
		FROM   %TABLE:SA1%
		WHERE  %NOTDEL%
		AND A1_CGC = %Exp:cCGC%
		
	EndSql
	
	If !Empty((cAlSA1)->A1_CGC)
		Return lRet
	EndIF
	
	FWMsgRun(,{||lRet := INCMATA030(@oObj)},"Atualizando cadastro de clientes", "Aguarde")
 
Return lRet

/*/{Protheus.doc} INCMATA030
(long_description)
@author j2a.luizjunior
@since 22/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function INCMATA030(pObj)

	Local   oObj        := pObj
	Local   lRet        := .T.
	Local   cTipo	    := PADR(AllTrim("F"),TamSX3('A1_TIPO')[1],Space(TamSX3('A1_TIPO')[1]))//-> Consumidor Final
	Local   cPessoa     := ""    
	Local   cCGC	    := ""      
	Local   cCliente    := ""  
	Local   cLoja       := "00PF"                                                                   
	Local   cNome	    := ""   
	Local   cNReduz     := ""
	Local   cEnd	    := ""   
	Local   cMun 	    := ""
	Local   cCodMun     := ""   
	Local   cBairro     := ""
	Local   cCep 	    := ""   
	Local   cEst	    := ""   
	Local   cEmail      := "" 
	Local   aMata030    := {}
	Private lMsErroAuto := .F.	
	
	If oObj:GetOperation() == 3
		cPessoa     := oObj:GetValue("ZH1_TIPO")    
		cCGC	    := oObj:GetValue("ZH1_CGC")      
		cCliente    := PADR(Substr(cCGC,1,9),TamSX3('A1_COD')[1] ,Space(TamSX3('A1_COD')[1]))		                                                                   
		cNome	    := oObj:GetValue("ZH1_NOME")   
		cNReduz     := oObj:GetValue("ZH1_NREDUZ")
		cEnd	    := oObj:GetValue("ZH1_END")      
		cMun 	    := oObj:GetValue("ZH1_DESMUN")
		cCodMun     := oObj:GetValue("ZH1_MUN")      
		cBairro     := oObj:GetValue("ZH1_BAIRRO")
		cCep 	    := oObj:GetValue("ZH1_CEP")      
		cEst	    := oObj:GetValue("ZH1_EST")      
		cClvl       := PADR(AllTrim("CF" + AllTrim(cCliente)),TamSX3('A1_CLVL')[1]  ,Space(TamSX3('A1_CLVL')[1]  ))
		cEmail      := oObj:GetValue("ZH1_EMAIL")
	Else	
		cPessoa     := ZH1->ZH1_TIPO    
		cCGC	    := ZH1->ZH1_CGC      
		cCliente    := PADR(Substr(cCGC,1,9),TamSX3('A1_COD')[1] ,Space(TamSX3('A1_COD')[1]))		                                                                   
		cNome	    := ZH1->ZH1_CGC   
		cNReduz     := ZH1->ZH1_NREDUZ
		cEnd	    := ZH1->ZH1_END   
		cMun 	    := ZH1->ZH1_DESMUN
		cCodMun     := ZH1->ZH1_MUN   
		cBairro     := ZH1->ZH1_BAIRRO
		cCep 	    := ZH1->ZH1_CEP   
		cEst	    := ZH1->ZH1_EST   
		cClvl       := PADR(AllTrim("CF" + AllTrim(cCliente)),TamSX3('A1_CLVL')[1]  ,Space(TamSX3('A1_CLVL')[1]  ))
		cEmail      := ZH1->ZH1_EMAIL
	EndIf	
	
	aAdd( aMata030 ,{"A1_TIPO"    ,cTipo 	,Nil})// Tipo
	aAdd( aMata030 ,{"A1_PESSOA"  ,cPessoa	,Nil})// Pessoa
	aAdd( aMata030 ,{"A1_CGC"     ,cCGC	  	,Nil})// CGC
	aAdd( aMata030 ,{"A1_COD"	  ,cCliente	,Nil})// Codigo
	aAdd( aMata030 ,{"A1_LOJA"    ,cLoja  	,Nil})// Loja
	aAdd( aMata030 ,{"A1_NOME"    ,cNome 	,Nil})// Nome
	aAdd( aMata030 ,{"A1_NREDUZ"  ,cNReduz	,Nil})// Nome reduz.
	aAdd( aMata030 ,{"A1_END"  	  ,cEnd		,Nil})// Endereco
	aAdd( aMata030 ,{"A1_MUN"     ,cMun		,Nil})// Cidade
	aAdd( aMata030 ,{"A1_BAIRRO"  ,cBairro	,Nil})// Bairro
	aAdd( aMata030 ,{"A1_CEP"     ,cCep		,Nil})// CEP
	aAdd( aMata030 ,{"A1_EST"     ,cEst		,Nil})// Estado
	aAdd( aMata030 ,{"A1_EMAIL"   ,cEmail	,Nil})// Email
	aAdd( aMata030 ,{"A1_ENDCOB"  ,cEnd		,Nil})// Endereco Cob.
	aAdd( aMata030 ,{"A1_MUNC"    ,cMun		,Nil})// Cidade Cob.
	aAdd( aMata030 ,{"A1_BAIRROC" ,cBairro	,Nil})// Bairro Cob.
	aAdd( aMata030 ,{"A1_CEPC"    ,cCep		,Nil})// CEP Cob.
	aAdd( aMata030 ,{"A1_ESTC"    ,cEst		,Nil})// Estado Cob.
	aAdd( aMata030 ,{"A1_MSBLQL"  ,'2'		,Nil})// Bloqueio de Tela = Sim
	
	Begin Transaction
	
		MSExecAuto({|x,y| MATA030(x,y)},aMata030, 3)  //3- Inclusão, 4- Alteração, 5- Exclusão
		
		If lMsErroAuto
			MostraErro()
			DisarmTransaction()
			lRet := .F.
		EndIf

	End Transaction

Return lRet

/*/{Protheus.doc} RETMAXE1NUM
(long_description)
@author j2a.luizjunior
@since 23/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function RETMAXE1NUM() 
	
	Local cRet := ""
	Local cQry := ""

	cQry := " SELECT MAX(E1_NUM) E1_NUM "
	cQry += " FROM " + RetSqlName("SE1")
	cQry += " WHERE E1_FILIAL = '" + FWxFilial("SE1") + "' AND E1_PREFIXO = 'RMF' AND D_E_L_E_T_ != '*' " 
	cQry := ChangeQuery(cQry)
	
	DbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),"TRBSE1",.F.,.T.)
	
	If TRBSE1->(!Eof()) .And. !Empty(TRBSE1->E1_NUM)
		cRet := TRBSE1->E1_NUM
	Else
		cRet := StrZero(1,tamSX3("E1_NUM")[1])
	EndIf
	
	TRBSE1->(DbCloseArea())
	
Return cRet

/*/{Protheus.doc} CHKTITMEN
(long_description)
@author j2a.luizjunior
@since 23/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function CHKTITMEN(pObj)

	Local lRet     := .F.
	Local oObj     := pObj 
	Local cCod     := ""
 	Local cRevisa  := ""
 	Local cAlSE1   := GetNextAlias()
 	Local cCGC	   := "" 	
 	Local cCliente := ""
	Local cLoja    := ""
	Local cMensal  := "" 
	Local cCart    := ""
	Local cCliMen  := ""
	Local cLojaMe  := ""
	Local cCliCart := ""
	Local cLojaCar := ""	
 	
	If oObj:GetOperation() == 3 
		cCod     := oObj:GetValue("ZH1_NUMERO" )
		cRevisa  := oObj:GetValue("ZH1_REVISA" )
 	    cCGC	 := oObj:GetValue("ZH1_CGC"    )
		//cMensal  := oObj:GetValue("ZH1_SITMEN" ) 
		cCart    := oObj:GetValue("ZH1_SITCAR" ) 	     	
	Else
		cCod     := ZH1->ZH1_NUMERO
		cRevisa  := ZH1->ZH1_REVISA
		cCGC	 := ZH1->ZH1_CGC
		//cMensal  := ZH1->ZH1_SITMEN 
	    cCart    := ZH1->ZH1_SITCAR		
	EndIf
	
	//If cMensal == "S"
	//	cCliMen := Posicione("SA1",3,xFilial("SA1")  + cCGC            ,"A1_COD"     )
	//	cLojaMe := Posicione("SA1",3,xFilial("SA1")  + cCGC            ,"A1_LOJA"    )
	//Else
	cCliMen := Posicione("CN9",1,xFilial("CN9")  + cCod  + cRevisa ,"CN9_CLIENT" )
	cLojaMe := Posicione("CN9",1,xFilial("CN9")  + cCod  + cRevisa ,"CN9_LOJACL" )
	//EndIf
	
	If cCart == "S"
		cCliCart := Posicione("SA1",3,xFilial("SA1") + cCGC            ,"A1_COD"     )
		cLojaCar := Posicione("SA1",3,xFilial("SA1") + cCGC            ,"A1_LOJA"    )
	Else
		cCliCart := Posicione("CN9",1,xFilial("CN9") + cCod  + cRevisa ,"CN9_CLIENT" )
		cLojaCar := Posicione("CN9",1,xFilial("CN9") + cCod  + cRevisa ,"CN9_LOJACL" )	
	EndIf
	
	BeginSql Alias cAlSE1
	
		SELECT E1_XNUMERO
		FROM   %Table:SE1%
		WHERE  E1_XNUMERO = %Exp:cCod%
		AND    E1_XREVISA = %Exp:cRevisa%	
		AND    E1_PREFIXO = 'RMP'	
		AND    E1_TIPO    = 'CTR'
		AND    ((E1_CLIENTE >= %Exp:cCliMen% AND E1_LOJA    >= %Exp:cLojaMe% ) OR (E1_CLIENTE <= %Exp:cCliCart%  AND E1_LOJA <= %Exp:cLojaCar%  ))
		AND    %NOTDEL%  	    
	
	EndSql
	
	If !(cAlSE1)->(Eof())
	
		If !Empty((cAlSE1)->E1_XNUMERO) 
			lRet     := .T.
		EndIf
	
	EndIf
	
	(cAlSE1)->(DbcloseArea())
	
Return lRet

/*/{Protheus.doc} CHKTITCAR
(long_description)
@author j2a.luizjunior
@since 23/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function CHKTITCAR(pObj)
	
	Local oObj     := pObj 
	Local cCod     := ""
	Local lAtuZH1  := ""
	Local lRet     := .T.
	Local oModel   := FWModelActive()
	Local oGridZH2 := oModel:GetModel("ZH2DETAIL")
	Local nK := 0
	
	If (oObj:GetOperation() == 3 .And.  oObj:GetValue("ZH1_TITCAR") != "S") .Or. oObj:GetValue("ZH1_SEGVIA") == "S" 
		lRet    := .F.
	Else
		For nK := 1 To oGridZH2:Length()
			oGridZH2:GoLine(nK)
			If oGridZH2:GetValue("ZH2_TITCAR") != "S" .And. !Empty(oGridZH2:GetValue("ZH2_CODDEP")) .And. !oGridZH2:IsDeleted()	   
				lRet    := .F.
				Exit
			EndIf
		Next nK		
	EndIf	
	
Return lRet

/*/{Protheus.doc} ATUCN9
(long_description)
@author j2a.luizjunior
@since 24/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ATUCN9(pObj)

	Local oObj    := pObj 
	Local cCod    := ""
	Local cRevisa := ""
	
	If oObj:GetOperation() == 3 
		cCod    := oObj:GetValue("ZH1_NUMERO")
		cRevisa := oObj:GetValue("ZH1_REVISA")
	Else
		cCod    := ZH1->ZH1_NUMERO
		cRevisa := ZH1->ZH1_REVISA
	EndIf	
	
	DbSelectArea("CN9")
	DbSetOrder(1)
	If DbSeek(xFilial("CN9") + cCod + cRevisa)		
		While !CN9->(Eof()) .And. xFilial("CN9") + cCod + cRevisa == CN9->CN9_FILIAL + CN9->CN9_NUMERO + CN9->CN9_REVISA			
			If RecLock("CN9",.F.)				
				CN9->CN9_XTITME := "S"				
				MsUnlock()
			EndIf			
			CN9->(DbSkip())
		EndDo		
	EndIf

Return

/*/{Protheus.doc} ATUZH1
(long_description)
@author j2a.luizjunior
@since 24/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ATUZH1(pObj)

	Local oObj := pObj
	Local cCod := ""

	cCod := oObj:GetValue("ZH1_COD")
	oObj:LoadValue("ZH1_TITCAR","S")
	oObj:LoadValue("ZH1_SEGVIA","N")
	oObj:LoadValue("ZH1_UNSVIA",0  )

Return

/*/{Protheus.doc} ATUZH2
(long_description)
@author j2a.luizjunior
@since 24/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ATUZH2(pObj)

	Local oObj     := pObj
	Local cCod     := ""
	Local oModel   := FWModelActive()
	Local oGridZH2 := oModel:GetModel("ZH2DETAIL")
	Local nK := 0
	
	If oObj:GetOperation() == 3  		
		For nK := 1 To oGridZH2:Length()
			oGridZH2:GoLine(nK)
			If !Empty(oGridZH2:GetValue("ZH2_CODDEP"))				
				oGridZH2:LoadValue("ZH2_TITCAR","S")
			EndIf
		Next nK			
	Else
		cCod := ZH1->ZH1_COD
		For nK := 1 To oGridZH2:Length()
			oGridZH2:GoLine(nK)
			If oGridZH2:GetValue("ZH2_TITCAR") != "S"				
				oGridZH2:LoadValue("ZH2_TITCAR","S")
			EndIf
		Next nK			
	EndIf
	
Return

/*/{Protheus.doc} CALVALCAR
(long_description)
@author j2a.luizjunior
@since 24/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function CALVALCAR(pObj)

	Local oObj      := pObj
	Local cCod      := ""
	Local lAtuZH1   := .F.
	Local nRet      := 0
	Local nValNeg   := 0
	Local oModel    := Nil
	Local oGridZH2  := Nil
	Local cSegVia   := If(oObj:GetOperation() == 4,oObj:GetValue("ZH1_SEGVIA"),"")
	Local nK := 0
	
	If cSegVia == "S"
		nRet := oObj:GetValue("ZH1_UNSVIA") * oObj:GetValue("ZH1_VLNEG")
	Else	
		If oObj:GetOperation() == 3 
			nRet     := oObj:GetValue("ZH1_VLNEG")
		Else
			oModel   := FWModelActive()
			oGridZH2 := oModel:GetModel("ZH2DETAIL")
			For nK   := 1 To oGridZH2:Length()
				oGridZH2:GoLine(nK)
				If oGridZH2:GetValue("ZH2_TITCAR") != "S"
					nRet += ZH1->ZH1_VALOR
				EndIf		
			Next nK			
		EndIf
	EndIf
	
Return nRet

/*/{Protheus.doc} ATUFIN
(long_description)
@author j2a.luizjunior
@since 25/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function ATUFIN
	
	Local   aDados      := {}
	Local   aFina070    := {}
	Local   cAlSE1      := GetNextAlias()
	Local   lRet        := .F.
	//Local   cMensal     := ZH1->ZH1_SITMEN 
	Local   cCart       := ZH1->ZH1_SITCART
	Local   cNumero     := ZH1->ZH1_NUMERO
	Local   cRevisa     := ZH1->ZH1_REVISA 
	Local   cCGC        := ZH1->ZH1_CGC
	Local   cCliMen     := ""
	Local   cLojaMe     := ""
	Local   cCliCart    := ""
	Local   cLojaCar    := ""
	Private lMsErroAuto := .F.
	
	 
	If cMensal == "S"
		cCliMen := Posicione("SA1",3,xFilial("SA1")  + cCGC               ,"A1_COD"    )
		cLojaMe := Posicione("SA1",3,xFilial("SA1")  + cCGC               ,"A1_LOJA"   )
	Else
		cCliMen := Posicione("CN9",1,xFilial("CN9")  + cNumero  + cRevisa ,"CN9_CLIENT")
		cLojaMe := Posicione("CN9",1,xFilial("CN9")  + cNumero  + cRevisa ,"CN9_LOJACL")
	EndIf
	
	If cCart == "S"
		cCliCart := Posicione("SA1",3,xFilial("SA1") + cCGC               ,"A1_COD"    )
		cLojaCar := Posicione("SA1",3,xFilial("SA1") + cCGC               ,"A1_LOJA"   )
	Else
		cCliCart := Posicione("CN9",1,xFilial("CN9") + cNumero  + cRevisa ,"CN9_CLIENT")
		cLojaCar := Posicione("CN9",1,xFilial("CN9") + cNumero  + cRevisa ,"CN9_LOJACL")	
	EndIf
	
	BeginSql Alias cAlSE1
	
		SELECT E1_FILIAL,
		       E1_PREFIXO,
	           E1_NUM,
	           E1_PARCELA,
	           E1_TIPO,
	           E1_CLIENTE,
	           E1_LOJA
	    FROM   %Table:SE1%       
	    WHERE  %NotDel%
	    AND    E1_XNUMERO = %Exp:ZH1->ZH1_NUMERO%
	    AND    E1_XREVISA = %Exp:ZH1->ZH1_REVISA%
		AND    ((E1_CLIENTE >= %Exp:cCliMen% AND E1_LOJA    >= %Exp:cLojaMe% ) OR (E1_CLIENTE <= %Exp:cCliCart%  AND E1_LOJA <= %Exp:cLojaCar%  ))
		AND    %NOTDEL%  	    
	           
	EndSql	
	
	While !(cAlSE1)->(Eof())	
		aAdd(aDados,{(cAlSE1)->E1_FILIAL,(cAlSE1)->E1_PREFIXO,(cAlSE1)->E1_NUM,(cAlSE1)->E1_PARCELA,(cAlSE1)->E1_TIPO,(cAlSE1)->E1_CLIENTE,(cAlSE1)->E1_LOJA})	
		(cAlSE1)->(DbSkip())
	EndDo

	lRet := EXCFINA070(aDados)
	
	//If lRet
	//	LIBCONTRA()
	//EndIf

Return lRet

/*/{Protheus.doc} EXCFINA070
(long_description)
@author j2a.luizjunior
@since 28/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function EXCFINA070(pExc)

	Local aFina070 := {}
	Local aExc     := pExc
	Local lRet     := .T.
	Local nH := 0
	
	Begin Transaction
	
		For nH := 1 To Len(aExc)
		
			aFina070 := {{"E1_FILIAL" ,aExc[nH][1],Nil},;
					     {"E1_PREFIXO",aExc[nH][2],Nil},;
					     {"E1_NUM"    ,aExc[nH][3],Nil},;
					     {"E1_PARCELA",aExc[nH][4],Nil},;
					     {"E1_TIPO"   ,aExc[nH][5],Nil},;
					     {"E1_CLIENTE",aExc[nH][6],Nil},;
					     {"E1_LOJA"   ,aExc[nH][7],Nil}}
					  
			MsExecAuto({|x,y| FINA040(x,y)},aFina070,5)
			
			If lMsErroAuto
				DisarmTransaction()
				MostraErro()	
				lRet := .F.	
				Return lRet	
			EndIf
					
		Next nH
	
	End Transaction
	
Return	lRet

/*/{Protheus.doc} EXCCONTRA
(long_description)
@author j2a.luizjunior
@since 29/08/2017
@version 1.0
@example
(examples)
@see (links_or_references)
/*/

Static Function LIBCONTRA 

	Local cCod    := ZH1->ZH1_NUMERO
	Local cRevisa := ZH1->ZH1_REVISA
	
	DbSelectArea("CN9")
	DbSetOrder(1)
	If DbSeek(xFilial("CN9") + cCod + cRevisa)
		
		While !CN9->(Eof()) .And. xFilial("CN9") + cCod + cRevisa == CN9->CN9_FILIAL + CN9->CN9_NUMERO + CN9->CN9_REVISA
			If RecLock("CN9",.F.)				
				CN9->CN9_XTITME := " "				
				MsUnlock()
			EndIf			
			CN9->(DbSkip())
		EndDo
		
	EndIf

Return
