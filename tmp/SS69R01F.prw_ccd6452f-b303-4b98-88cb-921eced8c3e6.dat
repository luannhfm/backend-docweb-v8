#Include 'Protheus.ch'
#Include 'TopConn.ch'

/*/{Protheus.doc} SS69R01F
@description Relatório para demonstrar de forma resumida, em um período escolhido por parâmetro, os dados para apuração dos contratos ativos e suas respectivas informações.
	
@author franklin.oliveira
@since 24/05/2016

@type function
@history 13/01/2020, Franklin de Brito de Oliveira, Adicionado as colunas ADY_XFIL01, ADY_XPCT01, ADY_XFIL02, e ADY_XPCT02.
/*/
User Function SS69R01F()

	Local cEstat := U_SFGN001A(ProcName(0), "SS69R01F")
	Local cPerg		:= FunName()
	Local oReport
	
	If TRepInUse()
		fCriaSx1(cPerg)
		If Pergunte(cPerg)
			oReport := ReportDef(cPerg)
			oReport:PrintDialog()
		EndIf
	EndIf
	
Return


/*/{Protheus.doc} ReportDef
	Função para definições do relatório para apuração de contratos

@author franklin.oliveira
@since 24/05/2016
@param cPerg, characters, nome do arquivo de perguntas
@type function
/*/
Static Function ReportDef(cPerg)

	Local cEstat := U_SFGN001A(ProcName(0), "SS69R01F")
	Local cTitle		:= "Relatório apuração de contratos"
	Local cDescription	:= ""
	Local oReport, oSection

	cDescription := "Relatório para demonstrar de forma resumida, em um período escolhido por parâmetro,"
	cDescription += "os dados para apuração dos contratos ativos e suas respectivas informações."
	
	oReport := TReport():New(cPerg, cTitle, cPerg, {|oReport| PrintReport(oReport)}, cDescription)
	oReport:SetLandScape()
	
	oSection:= TRSection():New(oReport, OemToAnsi(""), {"CN9","SB1","ADZ","SA1"})
	
	//TRCell():New(/*oSection*/, /*X3_CAMPO*/, /*Tabela*/, /*Titulo*/, /*Picture*/, /*Tamanho*/, /*lPixel*/, /*{|| code-block de impressao }*/)
	TRCell():New(oSection, "CN9_FILIAL"	, "CN9", "Filial")
	TRCell():New(oSection, "CN9_XNROCV"	, "CN9", "Nº Ctr. Vend.")
	TRCell():New(oSection, "CN9_REVISA"	, "CN9", "Revisão")
	TRCell():New(oSection, "A1_NOME"	, "SA1", "Cliente")
	TRCell():New(oSection, "A1_CGC"		, "SA1", "CNPJ")
	TRCell():New(oSection, "B1_DESC"	, "SB1", "Serviço(s)")
	TRCell():New(oSection, "ADZ_XUNEXE"	, "ADZ", "Unid. Executora")
	TRCell():New(oSection, "A3_NOME"	, "SA3", "Consultor(a)")
	TRCell():New(oSection, "ADY_XFIL01"	, "ADY", "Filial Participacao 01")
	TRCell():New(oSection, "ADY_XPCT01"	, "ADY", "Percentual Participacao 1")
	TRCell():New(oSection, "ADY_XFIL02"	, "ADY", "Filial Participacao 02")
	TRCell():New(oSection, "ADY_XPCT02"	, "ADY", "Percentual Participacao 2")
	TRCell():New(oSection, "ADZ_TOTAL"	, "ADZ", "Valor")
	TRCell():New(oSection, "A1_XTRATIN"	, "SA1", "Cli. Ind?")	
	TRCell():New(oSection, "A1_XTOPUF"	, "SA1", "TOP UF?")
	TRCell():New(oSection, "CN9_XDTINI"	, "CN9", "Dt. Inc. Exec.")
	TRCell():New(oSection, "CN9_XDTFIM"	, "CN9", "Dt. Fin. Exec.")
	TRCell():New(oSection, "CN9_DTINI"	, "CN9", "Dt. Inc. Vig.")
	TRCell():New(oSection, "CN9_DTFIM"	, "CN9", "Dt. Fin. Vig.")
	TRCell():New(oSection, "CN9_XCLASS"	, "CN9", "Classificação")
	TRCell():New(oSection, "CN9_XFECHA"	, "CN9", "CTR Fechado")
	TRCell():New(oSection, "CN9_XMINUT"	, "CN9", "Minuta Client")
	TRCell():New(oSection, "MESINIVIG"	, "CN9", "Mês do inicio da vigencia", , 8)
	TRCell():New(oSection, "B1_TIPO"	, "SB1", "Tipo")
	TRCell():New(oSection, "B1_GRUPO"	, "SB1", "Grupo")
	TRCell():New(oSection, "CN9_DTASSI"	, "CN9", "Data de assinatura do contrato")
	TRCell():New(oSection, "MESASSICTO"	, "CN9", "Mês da assinatura", , 8)
	TRCell():New(oSection, "CN9_SITUAC"	, "CN9", "Situação CTR")
	TRCell():New(oSection, "A1_MUN"		, "SA1", "Municipio")
	
Return oReport


/*/{Protheus.doc} PrintReport
@description Função responsável por impressão do relatório para apuração de contratos, conforme parâmetros.
@author Franklin B. Oliveira
@since 24/05/2016
@version 11.0
@param oReport, object, objeto do relatório do tipo TReport
@type Static function
@history 11/07/2016, Franklin B. Oliveira, Adicionado o status 'Distrato'
@history 12/02/2019, Alan Teles de Oliveira, retirado na query o case responsável por retornar a situação do contrato e criado a variável cSituac para passar a situação ao objeto responsável pela impressão do relatório. 
/*/
Static Function PrintReport(oReport)

	Local cEstat 		:= U_SFGN001A(ProcName(0), "SS69R01F")
	Local cQuery		:= ""
	Local cNomVend		:= ""
	Local cProdut		:= ""
	Local cUndExe		:= ""
	Local cTipo			:= ""
	Local cGrupo		:= ""
	Local cSituac 		:= ''
	Local lTesGeraFin	:= .F.
	Local nVlrProp		:= 0
	Local nTotRegs		:= 0
	Local oSection 		:= oReport:Section(1)

	If Select("TRA") > 0
		DbSelectarea("TRA")
		DbCloseArea()
	EndIf

	cQuery := "SELECT CN9_FILIAL,	" + CRLF
	cQuery += "	CN9_XNROCV, 	" + CRLF	
	cQuery += "	CN9_REVISA, 	" + CRLF
	cQuery += "	CN9_REVATU, 	" + CRLF
	cQuery += "	CN9_XDTINI, 	" + CRLF
	cQuery += "	CN9_XDTFIM, 	" + CRLF
	cQuery += "	CN9_DTINIC, 	" + CRLF
	cQuery += "	CN9_DTFIM,		" + CRLF
	cQuery += "	TO_CHAR(TO_DATE(CN9_DTINIC, 'YYYY-MM-DD'), 'MON/YYYY') AS MESINIVIG, " + CRLF
	cQuery += "	CN9_SITUAC,	" 		+ CRLF
	cQuery += "	CN9_XOPORT,			" + CRLF
	cQuery += "	CN9_XREVOP,			" + CRLF
	cQuery += "	CASE CN9_XCLASS		" + CRLF
	cQuery += "		WHEN '1' THEN 'Base Estadual'	" + CRLF
	cQuery += "		WHEN '2' THEN 'Parceria'		" + CRLF
	cQuery += "		WHEN '3' THEN 'Patrocínio'		" + CRLF
	cQuery += "		WHEN '4' THEN 'Novo'			" + CRLF
	cQuery += "		WHEN '5' THEN 'Renovação'		" + CRLF
	cQuery += " 	ELSE '' 						" + CRLF
	cQuery += "END AS CN9_XCLASS,		" + CRLF
	cQuery += "CASE	CN9_XFECHA 			" + CRLF
	cQuery += "		WHEN '1' THEN 'Serviço Fomentado'		" + CRLF
	cQuery += "		WHEN '2' THEN 'Serviço Não Fomentado'	" + CRLF
	cQuery += "		WHEN '3' THEN 'Fomentado Parcial'		" + CRLF
	cQuery += "		ELSE '' 		" + CRLF
	cQuery += "END AS CN9_XFECHA,	" + CRLF
	cQuery += "	CASE CN9_XMINUT			" + CRLF
	cQuery += "		WHEN 'S' THEN 'SIM'	" + CRLF
	cQuery += "		WHEN 'N' THEN 'NAO'	" + CRLF 
	cQuery += "		ELSE ' '			" + CRLF 
	cQuery += "	END AS CN9_XMINUT,		" + CRLF
	cQuery += "	CN9_DTASSI,		" + CRLF
	cQuery += "	CASE
	cQuery += "	WHEN CN9_DTASSI <> ' ' THEN TO_CHAR(TO_DATE(CN9_DTASSI, 'YYYY-MM-DD'), 'MON/YYYY') 
	cQuery += "	ELSE
	cQuery += "	' '
	cQuery += "	END AS MESASSICTO,
	//cQuery += "	TO_CHAR(TO_DATE(CN9_DTASSI, 'YYYY-MM-DD'), 'MON/YYYY') AS MESASSICTO, " + CRLF
	cQuery += "	A1_NOME,		" + CRLF
	cQuery += "	A1_CGC,			" + CRLF
	cQuery += "	CASE A1_XTRATIN			" + CRLF
	cQuery += "		WHEN 'S' THEN 'SIM'	" + CRLF
	cQuery += "		WHEN 'N' THEN 'NAO'	" + CRLF 
	cQuery += "		ELSE ' '			" + CRLF 
	cQuery += "	END AS A1_XTRATIN,		" + CRLF
	cQuery += "	CASE A1_XTOPUF			" + CRLF
	cQuery += "		WHEN 'S' THEN 'SIM'	" + CRLF
	cQuery += "		WHEN 'N' THEN 'NAO'	" + CRLF
	cQuery += "		ELSE ' '			" + CRLF
	cQuery += "	END AS A1_XTOPUF,		" + CRLF
	cQuery += "	ADZ_XUNEXE, 	" + CRLF
	cQuery += "	ADZ_TOTAL, 		" + CRLF
	cQuery += "	ADZ_TES, 		" + CRLF
	cQuery += "	ADY_VEND,		" + CRLF
	cQuery += "	ADY_XFIL01,		" + CRLF
	cQuery += "	ADY_XPCT01,		" + CRLF
	cQuery += "	ADY_XFIL02,		" + CRLF
	cQuery += "	ADY_XPCT02,		" + CRLF
	cQuery += "	B1_DESC,		" + CRLF
	cQuery += "	B1_TIPO,		" + CRLF
	cQuery += "	B1_GRUPO,		" + CRLF
	cQuery += "	A1_MUN,		" + CRLF
	cQuery += "	CN9_XISDIS,		" + CRLF	
	cQuery += "	CN9_DTFIM		" + CRLF	
	cQuery += "FROM " + RetSqlName("CN9") + " CN9 " + CRLF
	cQuery += "INNER JOIN " + RetSqlName("SA1") + " SA1 ON SA1.A1_FILIAL = '" + xFilial("SA1") + "' 	" + CRLF
	cQuery += "								AND SA1.A1_COD = CN9.CN9_CLIENT					" + CRLF
	cQuery += "								AND SA1.A1_LOJA = CN9.CN9_LOJACL				" + CRLF
	cQuery += "								AND SA1.D_E_L_E_T_ = ' '						" + CRLF
	cQuery += "LEFT JOIN " + RetSqlName("ADY") + " ADY ON ADY.ADY_FILIAL = CN9.CN9_FILIAL	" + CRLF
	cQuery += "								AND ADY.ADY_OPORTU = CN9_XOPORT					" + CRLF
	cQuery += "								AND ADY.ADY_REVISA = CN9_XREVOP					" + CRLF
	cQuery += "								AND ADY.D_E_L_E_T_ = ' '						" + CRLF
	cQuery += "LEFT JOIN " + RetSqlName("ADZ") + " ADZ ON ADZ.ADZ_FILIAL = ADY.ADY_FILIAL	" + CRLF
	cQuery += "								AND ADZ.ADZ_PROPOS = ADY.ADY_PROPOS				" + CRLF
	cQuery += "								AND ADZ.ADZ_REVISA = ADY.ADY_PREVIS				" + CRLF
	cQuery += "								AND ADZ.D_E_L_E_T_ = ' '						" + CRLF
	cQuery += "INNER JOIN " + RetSqlName("SB1") + " SB1 ON SB1.D_E_L_E_T_ = ' '				" + CRLF
	cQuery += "								AND SB1.B1_FILIAL = '" + xFilial("SB1") + "' 	" + CRLF
	cQuery += "								AND SB1.B1_COD 	  = ADZ.ADZ_PRODUT				" + CRLF
	cQuery += "WHERE	CN9.D_E_L_E_T_ = ' '												" + CRLF
	cQuery += "		AND CN9_FILIAL 	BETWEEN '" + MV_PAR01 + "' AND '" + MV_PAR02 + "'		" + CRLF 
	cQuery += "		AND CN9_CLIENT 	BETWEEN '" + MV_PAR03 + "' AND '" + MV_PAR04 + "'		" + CRLF
	cQuery += "		AND CN9_DTINIC 	>= '" + DtoS(MV_PAR05) + "'								" + CRLF
	cQuery += "		AND CN9_DTFIM  	<= '" + DtoS(MV_PAR06) + "'								" + CRLF
	cQuery += "		AND ( " + CRLF
	cQuery += "		    	CN9_SITUAC	= '05' AND (ADY_STATUS	= 'B' OR ADY_STATUS = 'E') 		" + CRLF //Vigente - Fechada / Aprovada
	cQuery += "		      	OR CN9_SITUAC IN ('02','03') AND (ADY_STATUS = 'E')						" + CRLF //Em Elaboração ; Emitido / Aprovada
	cQuery += "				OR CN9_SITUAC = '01' AND CN9_XISDIS <> '1' 	AND (ADY_STATUS = 'Y')	" + CRLF //Cancelado apos aceite 
	cQuery += "				OR CN9_SITUAC = '01' AND CN9_XISDIS = '1' 	AND (ADY_STATUS = 'B') 	" + CRLF //Distrato / Fechado
	cQuery += "				OR CN9_SITUAC = '09' AND (ADY_STATUS = 'B') 								" + CRLF //Revisao - Fechada
	cQuery += "				OR CN9_SITUAC = '11' AND (ADY_STATUS = 'B') 								" + CRLF //Aguar. Finalizacao - Fechada
	cQuery += "			 )	" + CRLF
	cQuery += "ORDER BY CN9.CN9_FILIAL,	" + CRLF
	cQuery += "	CN9.CN9_XNROCV				" + CRLF

	TCQUERY cQuery NEW ALIAS "TRA"
		
	DbSelectArea("TRA")
	
	dbEval( {|x| nTotRegs++ },,{|| !TRA->( EoF() )})
	
	TRA->(DbGoTop())
		
	oReport:SetMeter( nTotRegs )
	
	oSection:Init()
		
	While !TRA->( EoF() )
		
		If oReport:Cancel()
			Exit
		EndIf
		
		Do Case 

			Case Alltrim(TRA->CN9_SITUAC) == '01' .And. (TRA->CN9_XISDIS == '2' .Or. Empty(TRA->CN9_XISDIS))
				cSituac := 'Cancelado'

			Case Alltrim(TRA->CN9_SITUAC) == '02' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Em Elaboração'

			Case Alltrim(TRA->CN9_SITUAC) == '03' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Emitido'

			Case Alltrim(TRA->CN9_SITUAC) == '04' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Em Aprovação'

			Case Alltrim(TRA->CN9_SITUAC) == '05' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Vigente'

			Case Alltrim(TRA->CN9_SITUAC) == '06' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Paralisado'

			Case Alltrim(TRA->CN9_SITUAC) == '07' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Sol. Finalização'

			Case Alltrim(TRA->CN9_SITUAC) == '08'
				cSituac := 'Finalizado'

			Case Alltrim(TRA->CN9_SITUAC) == '09' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Revisão'

			Case Alltrim(TRA->CN9_SITUAC) == '10' .And. (Empty(TRA->CN9_DTFIM) .Or. StoD(TRA->CN9_DTFIM) >= dDataBase)
				cSituac := 'Revisado'

			Case !Empty(TRA->CN9_DTFIM) .And. StoD(TRA->CN9_DTFIM) <= dDataBase .And. TRA->CN9_SITUAC <> '08' .And. TRA->CN9_SITUAC <> '01'
				cSituac := 'Aguardando Finalização'

			Case Alltrim(TRA->CN9_SITUAC) == '01' .And. AllTrim(TRA->CN9_XISDIS) == '1'
				cSituac := 'Distrato'

		EndCase

		cFilCto	:= AllTrim(TRA->CN9_FILIAL)
		cCtoVen	:= AllTrim(TRA->CN9_XNROCV)
		cRevAtu	:= AllTrim(TRA->CN9_REVISA)
		cNomVend := AllTrim(Posicione("SA3", 1, xFilial("SA3") + TRA->ADY_VEND, "A3_NOME"))
		
		nVlrProp := 0
		cProdut	:= ""
		cUndExe	:= ""
		cTipo	:= ""
		cGrupo	:= ""
		
		oSection:Cell("CN9_FILIAL"):SetValue(AllTrim(TRA->CN9_FILIAL))
		oSection:Cell("CN9_XNROCV"):SetValue(cCtoVen)
		oSection:Cell("CN9_REVISA"):SetValue(cRevAtu)
		oSection:Cell("A1_NOME"):SetValue(AllTrim(TRA->A1_NOME))
		oSection:Cell("A1_CGC"):SetValue(AllTrim(TRA->A1_CGC))
		oSection:Cell("A3_NOME"):SetValue(cNomVend)
		oSection:Cell("ADY_XFIL01"):SetValue(AllTrim(TRA->ADY_XFIL01))
		oSection:Cell("ADY_XPCT01"):SetValue(AllTrim(TRA->ADY_XPCT01))
		oSection:Cell("ADY_XFIL02"):SetValue(AllTrim(TRA->ADY_XFIL02))
		oSection:Cell("ADY_XPCT02"):SetValue(AllTrim(TRA->ADY_XPCT02))
		oSection:Cell("A1_XTRATIN"):SetValue(AllTrim(TRA->A1_XTRATIN))
		oSection:Cell("A1_XTOPUF"):SetValue(AllTrim(TRA->A1_XTOPUF))
		oSection:Cell("CN9_XDTINI"):SetValue(DtoC(StoD(TRA->CN9_XDTINI)))
		oSection:Cell("CN9_XDTFIM"):SetValue(DtoC(StoD(TRA->CN9_XDTFIM)))
		oSection:Cell("CN9_DTINI"):SetValue(DtoC(StoD(TRA->CN9_DTINIC)))
		oSection:Cell("CN9_DTFIM"):SetValue(DtoC(StoD(TRA->CN9_DTFIM)))
		oSection:Cell("CN9_XCLASS"):SetValue(TRA->CN9_XCLASS)
		oSection:Cell("CN9_XFECHA"):SetValue(TRA->CN9_XFECHA)
		oSection:Cell("CN9_XMINUT"):SetValue(TRA->CN9_XMINUT)
		oSection:Cell("MESINIVIG"):SetValue(TRA->MESINIVIG)
		oSection:Cell("CN9_DTASSI"):SetValue(DtoC(StoD(TRA->CN9_DTASSI)))
		oSection:Cell("MESASSICTO"):SetValue(TRA->MESASSICTO)
		oSection:Cell("CN9_SITUAC"):SetValue(cSituac)
		oSection:Cell("A1_MUN"):SetValue(AllTrim(TRA->A1_MUN))
		
		//Agrupo produtos do contrato
		While .Not. TRA->( EoF() ) .And. TRA->CN9_FILIAL + TRA->CN9_XNROCV == cFilCto + cCtoVen
		
			If .Not. Empty(TRA->CN9_REVATU)
				TRA->(DbSkip())
				Loop
			EndIf
			
			lTesGeraFin 	:= If(Posicione("SF4", 1, xFilial("SF4") + TRA->ADZ_TES, "F4_DUPLIC") == "N", .F., .T.)
			
			//Tratamento para gratuidades/bonificacao para o valor total
			If lTesGeraFin
				nVlrProp	+= TRA->ADZ_TOTAL
			Else
				nVlrProp	+= 0
			EndIf 
			
			//Agrupamento dos produtos
			If .Not. ( AllTrim(TRA->B1_DESC) $ cProdut)
				cProdut += AllTrim(TRA->B1_DESC) + " / "  
			EndIf
			
			//Agrupamento das unidades executoras
			If .Not. (AllTrim(TRA->ADZ_XUNEXE) $ cUndExe)
				cUndExe += AllTrim(TRA->ADZ_XUNEXE) + " / "  
			EndIf
			
			//Agrupamento dos tipos de produto
			If .Not. (AllTrim(TRA->B1_TIPO) $ cTipo)
				cTipo += AllTrim(TRA->B1_TIPO) + " / "  
			EndIf
			
			//Agrupamento dos grupos de produto
			If .Not. (AllTrim(TRA->B1_GRUPO) $ cGrupo)
				cGrupo += AllTrim(TRA->B1_GRUPO) + " / "  
			EndIf
			
			TRA->( DbSkip() )
			
			oReport:IncMeter(1)
		EndDo
		
		oSection:Cell("ADZ_TOTAL"):SetValue( nVlrProp )
		oSection:Cell("B1_DESC"):SetValue( cProdut )
		oSection:Cell("ADZ_XUNEXE"):SetValue( cUndExe )
		oSection:Cell("B1_TIPO"):SetValue( cTipo )
		oSection:Cell("B1_GRUPO"):SetValue( cGrupo )
			
		oSection:PrintLine()
		
	End
		
	TRA->(DbCloseArea())
	
	oSection:Finish()
	
Return


/*/{Protheus.doc} fCriaSx1
	Função responsável por criar arquivo de perguntas,
	do relatório para apuração de contratos.
	
@author franklin.oliveira
@since 24/05/2016
@param cPerg, characters, Nome do arquivo de perguntas
@type function
/*/
Static Function fCriaSx1(cPerg)

	Local cEstat := U_SFGN001A(ProcName(0), "SS69R01F")
	Local aHelp	:= {}

	AAdd(aHelp, {{"Informe a Filial Inicial"				}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Filial Final"					}, {""}, {""}})
	AAdd(aHelp, {{"Informe o Cliente Inicial"				}, {""}, {""}})
	AAdd(aHelp, {{"Informe o Cliente Final"					}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Data de Vigência Inicial"		}, {""}, {""}})
	AAdd(aHelp, {{"Informe a Data de Vigência Final"		}, {""}, {""}})
	
	u_SFPUTSX1( cPerg, "01","Filial de?  					", "", "", "mv_ch1", "C",TamSX3("CN9_FILIAL")[1]	, 0, 0, "G","", "SM0"	, "", "", "mv_par01", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", aHelp[1,1], aHelp[1,2], aHelp[1,3], "")
	u_SFPUTSX1( cPerg, "02","Filial Ate?					", "", "", "mv_ch2", "C",TamSX3("CN9_FILIAL")[1]	, 0, 0, "G","", "SM0"	, "", "", "mv_par02", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", aHelp[2,1], aHelp[2,2], aHelp[2,3], "")
	u_SFPUTSX1( cPerg, "03","Cliente De?					", "", "", "mv_ch3", "C",TamSX3("CN9_CLIENT")[1]	, 0, 0, "G","", "SA1"	, "", "", "mv_par03", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", aHelp[3,1], aHelp[3,2], aHelp[3,3], "")
	u_SFPUTSX1( cPerg, "04","Cliente Até?					", "", "", "mv_ch4", "C",TamSX3("CN9_CLIENT")[1]	, 0, 0, "G","", "SA1"	, "", "", "mv_par04", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", aHelp[4,1], aHelp[4,2], aHelp[4,3], "")
	u_SFPUTSX1( cPerg, "05","Data de Vigencia Inicial?	", "", "", "mv_ch5", "D",8								, 0, 0, "G","", ""		, "", "", "mv_par05", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", aHelp[5,1], aHelp[5,2], aHelp[5,3], "")
	u_SFPUTSX1( cPerg, "06","Data de Vigencia Final?	", "", "", "mv_ch6", "D",8								, 0, 0, "G","", ""		, "", "", "mv_par06", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", aHelp[6,1], aHelp[6,2], aHelp[6,3], "")
	
Return