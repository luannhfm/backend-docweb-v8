/*/
=========================================================================
Autor.................: Peder Munksgaard (Do.it Sistemas)
-------------------------------------------------------------------------
Data..................: 28/02/2014
-------------------------------------------------------------------------
Descrição.............: Rotina de processamento responsável por atualizar
                        o campo B1_XXDESCR (memo/real) com as informações
                        retiradas do campo B1_VM_PROC (memo/virtual)
                        existentes na SYP. 
                        Criação necessária devido ao não compartilhamento
                        da tabela SYP para todas as empresas, filiais e
                        unidades de negócios.
                        Solicitado por Carla Barzsina.
-------------------------------------------------------------------------
Alteração.............: (dd/mm/yyyy) - Motivo
-------------------------------------------------------------------------
Partida...............: Lanctos Contábeis/Fórmulas
-------------------------------------------------------------------------
Função................: u_AceSYP()
=========================================================================
/*/

#Include "Protheus.ch"
#Include "Rwmake.ch"
#Include "Topconn.ch"

User Function AceSYP()

   Local _cMsg
   
   _cMsg := "Esta rotina realizará a leitura do campo B1_VM_PROC " + CRLF
   _cMsg += "localizado na SYP e carregará a informação para o   " + CRLF
   _cMsg += "campo B1_XXDESCR (memo/real) para utilização correta" + CRLF
   _cMsg += "Deseja realmente continuar?                         " + CRLF
   _cMsg += "                                                    " + CRLF
   _cMsg += "Caso não tenha certeza do que está fazendo entre em " + CRLF
   _cMsg += "com o setor de Tecnologia da Informação             " + CRLF
   
   If MsgYesNo(OemToAnsi(_cMsg))   
      Processa({||fProcSYP()},OemToAnsi('Acertando registros memo de SYP'))
   Endif
   
Return NiL

Static Function fProcSYP()

   Local _cQry     := ''
   Local _cAliasB1 := GetNextAlias()
   Local _cAliasYP := GetNextAlias()
   Local _nRegsB1  := 0             
   Local _nRegsYP  := 0             
   Local _cTxt     := ''
   
   _cQry := " SELECT B1_CODPROC, R_E_C_N_O_ REGNOI FROM " + RetSqlName("SB1") + " B11" + CRLF
   _cQry += " WHERE B11.D_E_L_E_T_ <> '*'                                            " + CRLF
   _cQry += " AND   B11.B1_CODPROC <> ' '                                            " + CRLF
   _cQry += " ORDER BY B11.B1_CODPROC                                                " + CRLF

   _cQry := ChangeQuery(_cQry)
   
   If Select((_cAliasB1)) > 0
      (_cAliasB1)->(dbCloseArea())
   Endif
   
   TcQuery _cQry New Alias (_cAliasB1) 

   _nRegsB1 := Contar((_cAliasB1),"!Eof()")
   
   (_cAliasB1)->(dbGotop())               
   
   
   _cQry := " SELECT YP_CHAVE, YP_SEQ, YP_TEXTO FROM " + RetSqlName("SYP") + " YP1   " + CRLF
   _cQry += " INNER JOIN " + RetSqlName("SB1") + " B11                               " + CRLF
   _cQry += "         ON YP1.YP_CHAVE = B11.B1_CODPROC                               " + CRLF
   _cQry += " WHERE YP1.D_E_L_E_T_ <> '*'                                            " + CRLF
   _cQry += " AND   B11.D_E_L_E_T_ <> '*'                                            " + CRLF
   _cQry += " AND   SUBSTR(YP1.YP_TEXTO,1,3) <> '000'                                " + CRLF
   _cQry += " ORDER BY YP1.YP_CHAVE, YP1.YP_SEQ                                      " + CRLF
   
   _cQry := ChangeQuery(_cQry)
   
   If Select((_cAliasYP)) > 0
      (_cAliasYP)->(dbCloseArea())
   Endif
   
   TcQuery _cQry New Alias (_cAliasYP) 
   
   _nRegsYP := Contar((_cAliasYP),"!Eof()")
   
   (_cAliasYP)->(dbGotop())         
   
   ProcRegua(_nRegsB1 * _nRegsYP)
   
   While (_cAliasB1)->(!Eof())
      While (_cAliasYP)->YP_CHAVE == (_cAliasB1)->B1_CODPROC
         _cTxt += Strtran((_cAliasYP)->YP_TEXTO,"\13\10",CRLF)
         (_cAliasYP)->(dbSkip())
         Incproc()
      End                
      dbSelectArea("SB1")
      SB1->(dbGoto((_cAliasB1)->REGNOI))
      Reclock("SB1",.F.)
      Replace B1_XXDESCR With _cTxt
      SB1->(MsUnlock())
      _cTxt := '' 
      (_cAliasB1)->(dbSkip())
      IncProc()
   End
      
Return NiL