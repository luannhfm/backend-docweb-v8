#INCLUDE 'PROTHEUS.CH'
#INCLUDE 'topconn.ch'

	/*/{Protheus.doc} SF06R30X
@description  Relatório de Detalhe Resultado Financeiro , liquidacao por operador.

@author Daniel Castro
@since 28/01/2022
@version 12.1.27

	/*/
User Function SF06R30X()

	Local oReport 	:= Nil
	Local cPerg   	:= PadR('SF06R30X',10,Space(1))

	Private aRet 	:= {}
	Private _aFils  := {}
	Private _aOper  := {}
	Private cOper	:= ""

	//Criando Pergunta
	If !AjustaSX1(cPerg)
		RETURN
	EndIf

	//Cria as definições do relatório
	oReport := ReportDef(cPerg)

	If Valtype( oReport ) == 'O'

		// If !Empty( oReport:uParam )
		// 	Pergunte( oReport:uParam, .F. )
		// EndIf

		oReport:PrintDialog()
	Endif

Return

/*/{Protheus.doc} ReportDef
@description 
/*/
Static Function ReportDef(cPerg)

	Local oReport	:= Nil
	Local oSection	:= Nil
	Local oSection2	:= Nil
	Local oSection3	:= Nil
	Local cDescTit  := "Relatorio Detalhe Resultado Financeiro"
	Local cTitulo   := "Relatorio Detalhe Resultado Financeiro. Periodo: " + dToC(MV_PAR01) + " a " + dToC(MV_PAR02) + " Operador: " + Alltrim(MV_PAR03)
	Local oBreak	:= Nil
	Local oBreak2	:= Nil
	Local oBreak3	:= Nil

	//Criação do componente de impressão
	oReport:=TReport():New("SF06R30X",cTitulo,cPerg,{|oReport| ReportPrint(oReport)},cDescTit)
	oReport:SetTotalInLine(.F.)
	oReport:SetTitle(cTitulo)
	oReport:SetLandscape(.F.)
	oReport:SetLineHeight(40)
	oReport:SetColSpace(1)
	oReport:SetLeftMargin(0)
	oReport:cFontBody := 'Courier New'
	oReport:nFontBody := 6
	oReport:lBold := .F.
	oReport:lUnderLine := .F.
	oReport:lHeaderVisible := .T.
	oReport:lFooterVisible := .T.
	oReport:lParamPage := .F.

	//Criando a seção de dados
	oSection:= TRSection():New(oReport,"Operador",{"TRB"})
	oSection:AddTable("oSection")
	//oSection:SetHeaderPage(.T.)
	//Criando a seção de dados
	oSection2:= TRSection():New(oReport,"Cliente",{"TRB"})
	oSection2:AddTable("oSection")
	//oSection2:SetHeaderPage(.T.)
	//Criando a seção de dados
	oSection3:= TRSection():New(oReport,"Titulos",{"TRB"})
	oSection3:AddTable("oSection")
	//oSection3:SetHeaderPage(.T.)

	//Criando Cell
	TRCell():New(oSection,"ZAF_NOME"		,"TRB", "Operador: "	, PesqPict('ZAF',"ZAF_NOME"),TamSX3("ZAF_NOME")[1]+1 , .F.)

	TRCell():New(oSection2,"E1_NOME"    	,"TRB", "Cliente: " 	, PesqPict('SA1',"A1_NOME"),TamSX3("A1_NOME")[1]+1	, .F.)

	TRCell():New(oSection3,"E1_PERFIXO" 	,"TRB", "Prefixo" 		, PesqPict('SE1',"E1_PREFIXO"),TamSX3("E1_PREFIXO")[1]+1, .F.)
	TRCell():New(oSection3,"E1_NUM"     	,"TRB", "Numero" 		, PesqPict('SE1',"E1_NUM"),TamSX3("E1_NUM")[1]+1, .F.)
	TRCell():New(oSection3,"E1_PARCELA"   	,"TRB", "Parcela" 		, PesqPict('SE1',"E1_PARCELA"),TamSX3("E1_PARCELA")[1]+1, .F.)
	TRCell():New(oSection3,"E1_TIPO" 	 	,"TRB", "Tipo" 			, PesqPict('SE1',"E1_TIPO"),TamSX3("E1_TIPO")[1]+1, .F.)
	TRCell():New(oSection3,"E1_VALOR" 	 	,"TRB", "Valor" 		, PesqPict('SE1',"E1_VALOR"),TamSX3("E1_VALOR")[1]+1, .F.)
	TRCell():New(oSection3,"E1_BAIXA" 	 	,"TRB", "Baixa" 		, PesqPict('SE1',"E1_BAIXA"),TamSX3("E1_BAIXA")[1]+1, .F.)
	TRCell():New(oSection3,"E1_MULTA" 	 	,"TRB", "Multa" 		, PesqPict('SE1',"E1_MULTA"),TamSX3("E1_MULTA")[1]+1, .F.)
	TRCell():New(oSection3,"E1_JUROS" 	 	,"TRB", "Juros" 		, PesqPict('SE1',"E1_JUROS"),TamSX3("E1_JUROS")[1]+1, .F.)
	TRCell():New(oSection3,"E1_DESCFIN" 	,"TRB", "Desconto" 		, PesqPict('SE1',"E1_DESCFIN"),TamSX3("E1_DESCFIN")[1]+1, .F.)
	TRCell():New(oSection3,"E1_VLBX" 	 	,"TRB", "Vl. Baixa" 	, PesqPict('SE1',"E1_VALOR"),TamSX3("E1_VALOR")[1]+1, .F.)
	TRCell():New(oSection3,"E1_SALDO" 	 	,"TRB", "Saldo" 		, PesqPict('SE1',"E1_SALDO"),TamSX3("E1_SALDO")[1]+1, .F.)
	TRCell():New(oSection3,"ZAL_CODATE" 	,"TRB", "Atendimento" 	, PesqPict('ZAL',"ZAL_CODATE"),TamSX3("ZAL_CODATE")[1]+1, .F.)

	oBreak := TRBreak():New(oSection,oSection:Cell("ZAF_NOME"),,.F.)
	oBreak2 := TRBreak():New(oSection2,oSection2:Cell("E1_NOME"),,.F.)
	oBreak3 := TRBreak():New(oSection3,oSection3:Cell("ZAL_CODATE"),,.F.)

	//TRFunction():New(oSection:Cell("ZAL_VLRNEG"),"TOTAL","SUM",oBreak,"Total: ",PesqPict('ZAL',"ZAL_VLRNEG"),,.F.,.F.)

Return oReport

/*/{Protheus.doc} ReportPrint
@description Funcao para impressao do relatorio 
/*/
Static Function ReportPrint(oReport)

	Local oSection   	:= oReport:Section(1)
	Local oSection2  	:= oReport:Section(2)
	Local oSection3   	:= oReport:Section(3)
	Local nTotRec     	:= 0
	Local TRB		  	:= GetNextAlias()
	Local cQry			:= ""

	oSection:Init()


	cQry := " SELECT E1_NUM, E1_PREFIXO, E1_PARCELA, E1_TIPO, E1_VALOR, E1_VENCREA, E1_BAIXA, E1_MULTA, E1_JUROS, E1_DESCFIN, "
	cQry += " (E1_VALOR - E1_SALDO - E1_DESCONT) + ( E1_JUROS+E1_MULTA+E1_CORREC) AS E1_VLBX, "
	cQry += " E1_SALDO, ZAL_CODATE, ZAF_NOME, E1_CLIENTE, E1_LOJA "
	cQry += " FROM " + RetSqlTab("SE1") + " "
	cQry += " INNER JOIN " +RetSqlTab("ZAM") + " ON ZAM.D_E_L_E_T_ = ' ' "
	cQry += " AND ZAM_PREFIX = E1_PREFIXO "
	cQry += " AND ZAM_NUM = E1_NUM "
	cQry += " AND ZAM_PARCEL = E1_PARCELA "
	cQry += " AND ZAM_TIPO = E1_TIPO "
	cQry += " AND ZAM_FILTIT = E1_FILIAL "
	cQry += " INNER JOIN " +RetSqlTab("ZAL") + " ON ZAL.D_E_L_E_T_  = ' ' "
	cQry += " AND ZAL_COD = ZAM_CODNEG "
	cQry += " AND ZAL_STATUS = 'F' "
	cQry += " AND ZAL_VALIDA BETWEEN '" + dToS(MV_PAR01) + "' AND '" + dToS(MV_PAR02) + "' "
	cQry += " INNER JOIN " +RetSqlTab("ZAF") + "ON ZAF.D_E_L_E_T_  = ' '"
	cQry += " AND ZAL_CODOPE = ZAF_COD "

	If MV_PAR03 <> "Todos"
		cQry += " AND ZAF_NREDUZ IN '" + SubStr(MV_PAR03,At("-",MV_PAR03) +1, Len(MV_PAR03))+ "' "
	EndIf 
	
	cQry += " WHERE SE1.D_E_L_E_T_ = ' ' "
	cQry += " ORDER BY ZAF_NOME, E1_CLIENTE "

	TCQuery cQry New Alias (TRB)

	Count to nTotRec
	//Define o limite da régua de progressão do relatório.
	oReport:SetMeter(nTotRec)

	//Enquanto houver dados
	(TRB)->(DbGoTop())
	While (TRB)->(!Eof())

		// Impressao da oSection
		oReport:IncMeter()

		If oReport:Cancel()
			Exit
		EndIf

		oSection:Cell("ZAF_NOME"):SetValue((TRB)->ZAF_NOME)
		oSection:PrintLine()

		oSection2:Init()
		oSection2:Cell("E1_NOME"):SetValue(Posicione("SA1",1,xFilial("SA1") + (TRB)->E1_CLIENTE + (TRB)->E1_LOJA,"A1_NOME"))
		oSection2:PrintLine()
		cCli := (TRB)->E1_CLIENTE

		oSection3:Init()
		While (TRB)->(!Eof()) .And. (TRB)->E1_CLIENTE == cCli
			oSection3:Cell("E1_PERFIXO"):SetValue((TRB)->E1_PREFIXO)
			oSection3:Cell("E1_NUM"):SetValue((TRB)->E1_NUM)
			oSection3:Cell("E1_PARCELA"):SetValue((TRB)->E1_PARCELA)
			oSection3:Cell("E1_TIPO"):SetValue((TRB)->E1_TIPO)
			oSection3:Cell("ZAL_CODATE"):SetValue((TRB)->ZAL_CODATE)
			oSection3:Cell("E1_VALOR"):SetValue((TRB)->E1_VALOR)
			oSection3:Cell("E1_BAIXA"):SetValue(StoD((TRB)->E1_BAIXA))
			oSection3:Cell("E1_MULTA"):SetValue((TRB)->E1_MULTA)
			oSection3:Cell("E1_JUROS"):SetValue((TRB)->E1_JUROS)
			oSection3:Cell("E1_DESCFIN"):SetValue((TRB)->E1_DESCFIN)
			oSection3:Cell("E1_VLBX"):SetValue((TRB)->E1_VLBX)
			oSection3:Cell("E1_SALDO"):SetValue((TRB)->E1_SALDO)
			oSection3:Cell("ZAL_CODATE"):SetValue((TRB)->ZAL_CODATE)
			oSection3:PrintLine()
			cCli := (TRB)->E1_CLIENTE
			(TRB)->(DbSkip())
		END

	End

	(TRB)->(DbCloseArea())

	oSection:Finish()
	oSection2:Finish()
	oSection3:Finish()

Return

//================================================================================================

/*/{Protheus.doc} AjustaSx1
@description Criando as Perguntas
/*/
Static Function AjustaSx1(p_cPerg)

	Local aPergs    := {}
	Local aCombo    := {}
	Local cCombo	:= "Todos,"
	Local lRet		:= .T.

	BeginSql Alias "TOPER"
		SELECT * FROM %TABLE:ZAF% ZAF
		WHERE ZAF.%NOTDEL% 
		AND ZAF_ATIVO = %EXP:"S"%
		ORDER BY ZAF_NOME
	EndSQL

	While TOPER->(!EOF())
		cCombo +=  Alltrim(TOPER->ZAF_NOME) + "-" + Alltrim(TOPER->ZAF_NREDUZ) +','
		TOPER->(dbSkip())
	EndDo
	TOPER->(dbCloseArea())

	aCombo :=  strtokarr(cCombo, ",")

	aAdd(aPergs,{1,"Data De  ",dDataBase,"","","","",70,.T.})
	aAdd(aPergs,{1,"Data Ate ",dDataBase,"","","","",70,.T.})
	aAdd(aPergs,{2,"Operador  ","Todos",aCombo,120,"",.T.})

	If !ParamBox(aPergs ,"Parametros",aRet)
		MsgAlert("Processo Cancelado ","ATENÇÃO")
		lRet := .F.
	EndIf

Return(lRet)

//================================================================================================

/*/{Protheus.doc} Sel_Fil
	@description Seleciona as filiais
	@type  Static Function
	@author user
	@since 28/01/2022
/*/
Static Function Sel_Fil( lSelFil )
	Local aAreaSM0 :=SM0->(GetArea())
	Local aSM0     := FWLoadSM0(.T.,,.T.)

	// Variaveis utilizadas na selecao
	Local oChkQual,lQual,oQual,cVarQ
	// Carrega bitmaps
	Local oOk      := LoadBitmap( GetResources(), "LBOK")
	Local oNo      := LoadBitmap( GetResources(), "LBNO")
	Default lSelFil := .F.
	If !lSelFil
		Return .T.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega filiais da empresa corrente                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aEval(aSM0,{ |x| Aadd(_aFils, {.F., x[SM0_CODFIL],x[SM0_NOMRED],x[SM0_CGC]} ) } )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta tela para selecao de filiais                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE MSDIALOG oDlg TITLE OemToAnsi( "Filiais") STYLE DS_MODALFRAME From 145,0 To 445,628 OF oMainWnd PIXEL
	oDlg:lEscClose := .F.

	@ 05,15 TO 125,300 LABEL OemToAnsi("Selecione as Filiais") OF oDlg  PIXEL

	@ 15,20 CHECKBOX oChkQual VAR lQual PROMPT OemToAnsi("Inverter Selecao") SIZE 70, 10 OF;
		oDlg PIXEL ON CLICK (AEval(_aFils, {|z| z[1] := If(z[1]==.T.,.F.,.T.)}), oQual:Refresh(.F.))

	@ 30,20 LISTBOX oQual VAR cVarQ Fields HEADER "", OemToAnsi("Filial"), OemToAnsi("Descricao"), OemToAnsi("CGC")  SIZE 273,090 ON DBLCLICK ;
		(_aFils:=Troca(oQual:nAt,_aFils),oQual:Refresh()) NOSCROLL OF oDlg PIXEL

	oQual:SetArray(_aFils)
	oQual:bLine := { || { If(_aFils[oQual:nAt,1],oOk,oNo),_aFils[oQual:nAt,2],_aFils[oQual:nAt,3],_aFils[oQual:nAt,4] } }

	DEFINE SBUTTON FROM 134,240 TYPE 1 ACTION oDlg:End() ENABLE OF oDlg
	DEFINE SBUTTON FROM 134,270 TYPE 2 ACTION (_aFils := {},oDlg:End()) ENABLE OF oDlg
	ACTIVATE MSDIALOG oDlg CENTERED

	RestArea(aAreaSM0)

Return .T.

//================================================================================================

/*/{Protheus.doc} Troca
	(Inverte selecao de filiais)
	@type  Function
	@author user
	@since 28/01/2022
/*/
Static Function Troca(nIt,aArray)
	aArray[nIt,1] := !aArray[nIt,1]
Return aArray
