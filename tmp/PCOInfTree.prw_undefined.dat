#INCLUDE "rwmake.ch"
#INCLUDE "protheus.ch"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³PCOInfTreeºAutor  ³Claudinei Ferreira  º Data ³  26/02/12   º±±
±±ºPrograma  ³          ºAutor  ³Carlos A. Queiroz   º Data ³  29/01/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validar se usuario podera acessar o modo de Alteracao	      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Especifico CNI (GAP093)                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function PCOInfTree()
Local lAcessOk		:= .T.
Local lVisualiza	:= .T.
Local lRet			:= .T.
Local _aArea		:= GetArea()
Local _aAreaAK2		:= AK2->(GetArea())
Local lUoF			:=.F.
Local lUoA			:=.F.
Local cAlias    	:= PARAMIXB
Local nx		:= 0

Local lAcessUser     := .T.
Local lCCAcessUser   := .T.
Local lICAcessUser   := .T.
Local lCVAcessUser   := .T.

/* Estrutura da tabela temporária
{"CTRLNIV","C",1,0}
{"L_I_XO","C",1,0}
{"ALIAS","C",3,0}
{"RECNO","N",14,0}
{"FLAG","L",1,0}
*/

IF AK1->AK1_XAPROV == '1' // finalizado
	lRet:= .F.
	MsgAlert("Não é possível efetuar alterações.", "Orcamento Finalizado")
ELSEIF AK1->AK1_XAPROV == '2' // aprovado
	lRet:= .F.
	MsgAlert("Não é possível efetuar alterações.", "Orcamento Aprovado")
ELSE
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se usuario possui acesso ao C.Custo e finaliza item    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	/*  // Comentado por Carlos Queiroz em 28/01/13
	dbSelectArea('AK2')
	AK2->(dbSetOrder(1))
	AK2->(dbSeek(xFilial('AK2')+AK1->(AK1_CODIGO+AK1_VERSAO)))
	
	While !Eof() .and. AK2->(AK2_FILIAL+AK2_ORCAME+AK2_VERSAO) = AK1->(AK1_FILIAL+AK1_CODIGO+AK1_VERSAO) .AND. lRet
	*/
	
	
	// Inserido por Carlos Queiroz em 29/01/13 uma validacao referente ao arquivo repassado ao ponto de entrada PCOInfTree
	dbSelectArea(cAlias)
	(cAlias)->(dbGoTop())
			
		// Verifica os direitos do Usuario x Centro Custo
		dbSelectArea("AKG")
		dbSetOrder(1)
		If MsSeek(xFilial()+AK1->(AK1_CODIGO)+(cAlias)->(XK3_CO)+__cUserID)
			// Se tem acesso total por CC, libera
			If Val(AKG->AKG_CCUSTO) > 1
				lCCAcessUser := .T.
			Else
				// Necessário validar quais restrições na tabela AKX
				lCCAcessUser := .F.
			EndIf
		EndIf
		
		// Verifica os direitos do Usuario x Item Contabil
		dbSelectArea("AKG")
		dbSetOrder(1)
		If MsSeek(xFilial()+AK1->(AK1_CODIGO)+(cAlias)->(XK3_CO)+__cUserID)
			//Se tem acesso total retorna TRUE
			If Val(AKG->AKG_ITMCTB) > 1
				lICAcessUser := .T.
			Else
				// Necessário validar quais restrições na tabela AKY
				lICAcessUser := .F.
			EndIf
		EndIf
		
		//Verifica os direitos do Usuario x Classe Valor
		dbSelectArea("AKG")
		dbSetOrder(1)
		If MsSeek(xFilial()+AK1->(AK1_CODIGO)+(cAlias)->(XK3_CO)+__cUserID)
			//Se tem acesso total retorna TRUE
			If Val(AKG->AKG_CLAVLR) > 1
				lCVAcessUser := .T.
			Else
				// Necessário validar quais restrições na tabela AKV
				lCVAcessUser := .F.
			EndIf
		EndIf
		
	    if !lCCAcessUser .or. !lICAcessUser .or. !lCVAcessUser
	        lAcessUser := .F.     
	    endif
	
	dbSelectArea(cAlias)
	(cAlias)->(dbGoTop())            
	
	While (cAlias)->(!Eof()) .AND. lRet
		
		dbSelectArea('AK2')
		AK2->(dbSetOrder(1))
		AK2->(dbSeek(xFilial('AK2')+AK1->AK1_CODIGO+AK1->AK1_VERSAO+(cAlias)->(XK3_CO)))
		
		While !Eof() .and. AK2->(AK2_FILIAL+AK2_ORCAME+AK2_VERSAO+AK2_CO) = AK1->(AK1_FILIAL)+AK1->(AK1_CODIGO)+AK1->(AK1_VERSAO)+(cAlias)->(XK3_CO) //.AND. lRet
			
			If !lAcessUser
				lAcessOk:=U_SIVldAK2_CC_CV_IC(lVisualiza)
			EndIf
			
			If lAcessOk
				
				If AK2->(AK2_XSTS)	== '1'
					lUoF:= .T.
				Elseif AK2->(AK2_XSTS)	== '0'
					lUoA:= .T.
				Endif
				
			Endif
			
			AK2->(dbSkip())
		Enddo
		
		(cAlias)->(dbskip())
	EndDo
	
	If lUoF .and. !lUoA
		lRet:= .F.
		MsgAlert("Não é possível efetuar alterações.", "UO Finalizada")    
	Endif
	
Endif

RestArea(_aAreaAK2)
RestArea(_aArea)

Return(lRet)