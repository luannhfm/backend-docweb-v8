#Include 'Totvs.ch'

STATIC 	CLIENTE_DE  :=	01
STATIC  LOJA_DE		:=  02
STATIC 	CLIENTE_ATE :=	03
STATIC 	LOJA_ATE	:=  04
STATIC 	DATA_DE  	:=	05
STATIC 	DATA_ATE  	:=	06
STATIC 	TITULO_BX	:=	07
STATIC 	PREFIXO_DE  :=	08
STATIC 	PREFIXO_ATE :=	09
STATIC 	TITULO_DE   :=	10
STATIC 	TITULO_ATE  :=	11
STATIC 	PARCELA_DE  :=	12
STATIC 	PARCELA_ATE	:= 	13
STATIC 	EMISSAO_DE	:=	14
STATIC 	EMISSAO_ATE :=	15
STATIC 	VENCTO_DE 	:=	16
STATIC 	VENCTO_ATE	:=	17
STATIC 	SELECT_FIL	:=	18
STATIC 	QTD_PARAM	:=	18
STATIC aPar 		:= Array(QTD_PARAM)

//------------------------------------------------------
/*/{Protheus.doc} SF06R01X
Relatório do Historico de  Cobrança

@author Allan da Silva Faria
@since 25/04/2016
@version 1.0
/*/
//------------------------------------------------------
User Function SF06R01X()

	Local oReport 	:= Nil
	Private cTrab	:= GetNextAlias()
	Private aSelFil	:= {}
	Private lTodasFil := .F.
	Private cPerg   := AllTrim(FunName())

	PergDef(cPerg)
	lPerg := Pergunte(cPerg,.T.)
		
	oReport:= ReportDef()
	oReport:PrintDialog()
		
Return Nil

//------------------------------------------------------
/*/{Protheus.doc} ReportDef

@author Allan da Silva Faria
@since 25/04/2016
@version 1.0
@return Objecto, objeto do report
/*/
//------------------------------------------------------
Static Function ReportDef()

	Local oReport := Nil
	Local oSecCli := Nil
	Local oSecTit := Nil
	Local oSecHit := Nil
	Local cTitulo := "Relatório de Historico de Cobrança"
	Local cDescri := "Esse relatório ira emitir a relação de histórico de cobrança por Cliente X Título a Receber."

	oReport:= TReport():New(AllTrim(FunName()),cTitulo,cPerg,{|oReport| PrintDef(oReport)},cDescri)
	oReport:oPage:SetPaperSize(9) 	//-- Pagina A4
	oReport:nFontBody:= 8			//-- Tamanho do fonte
	oReport:nLineHeight:= 40		//-- Altura das Linhas
	oReport:SetMsgPrint("Imprimindo...")  

	//--------------------------------------
	//-- Seção do Cliente
	//--------------------------------------
	oSecCli:= TRSection():New(oReport,"Cliente","SA1")
	TRCell():New(oSecCli,"A1_COD" ,"SA1")
	TRCell():New(oSecCli,"A1_LOJA","SA1")
	TRCell():New(oSecCli,"A1_NOME","SA1")
	TRCell():New(oSecCli,"A1_CGC" ,"SA1")

	//--------------------------------------
	//-- Seção do Título a Receber
	//--------------------------------------
	oSecTit:= TRSection():New(oSecCli,"Títulos a Receber","SE1")
	TRCell():New(oSecTit,"E1_FILIAL" ,"SE1","Emp/Filial")
	TRCell():New(oSecTit,"E1_PREFIXO","SE1")
	TRCell():New(oSecTit,"E1_NUM"	 ,"SE1")
	TRCell():New(oSecTit,"E1_PARCELA","SE1")
	TRCell():New(oSecTit,"E1_TIPO"   ,"SE1")
	TRCell():New(oSecTit,"E1_EMISSAO","SE1",,,12)
	TRCell():New(oSecTit,"E1_VENCTO" ,"SE1",,,12)
	TRCell():New(oSecTit,"E1_VENCREA","SE1",,,12)
	TRCell():New(oSecTit,"E1_BAIXA"	 ,"SE1",,,12)
	TRCell():New(oSecTit,"E1_VALOR"  ,"SE1")
	TRCell():New(oSecTit,"E1_SALDO"  ,"SE1")

	//--------------------------------------
	//-- Seção do Histórico de Cobrançã
	//--------------------------------------
	oSecHit:= TRSection():New(oSecTit,"histórico de Cobrança","ZF1")
	TRCell():New(oSecHit,"ZF1_DATA"     ,"ZF1",,,12)
	TRCell():New(oSecHit,"ZF1_HORA"		,"ZF1")
	TRCell():New(oSecHit,"ZF1_AGENDA"   ,"ZF1",,,12)
	TRCell():New(oSecHit,"ZF1_ORIGEM"   ,"ZF1")
	TRCell():New(oSecHit,"ZF1_HISTOR"   ,"ZF1")
	TRCell():New(oSecHit,"NOMEUSER"		,,"Responsável","@!",15,.F.,{|| UsrFullName(ZF1->ZF1_CODUSR) })

	//--------------------------------------
	//-- Seta conteudo do Combo Box (Origem)
	//--------------------------------------
	oSecHit:Cell("ZF1_ORIGEM"):SetCBox(ORIGEM("S")[1])

	//--------------------------------------
	//-- Posiciona tabela
	//--------------------------------------
	TRPosition():New(oSecCli,"SA1",1,{|| SA1->(dbGoTo((cTrab)->A1_REC))},.F.)
	TRPosition():New(oSecTit,"SE1",1,{|| SE1->(dbGoTo((cTrab)->E1_REC))},.F.)
	TRPosition():New(oSecHit,"ZF1",1,{|| ZF1->(dbGoTo((cTrab)->ZF1_REC))},.F.)

Return(oReport)


//------------------------------------------------------
/*/{Protheus.doc} PrintDef
Imprime

@author Allan da Silva Faria
@since 25/04/2016
@version 1.0
@param oReport, objeto, objeto do report
@return objeto, objeto do report
/*/
//------------------------------------------------------
Static Function PrintDef(oReport)

	Local oSecCli := oReport:Section(1)
	Local oSecTit := oReport:Section(1):Section(1)
	Local oSecHit := oReport:Section(1):Section(1):Section(1)
	Local cWhere  := " 1=1 "
	Local nTam	  := TamSX3("E1_VALOR")[1]
	Local cFil	  := ""

	For _nn:=1 To Len(aPar)
		aPar[_nn] := &("mv_par"+STRZERO(_nn,2))
	Next _nn

	//---------------------------
	//-- Seleciona Filial
	//---------------------------
	If ( aPar[SELECT_FIL] == 1) 
		aSelFil := AdmGetFil(@lTodasFil)
	//Else
		//lTodasFil := .T.
	EndIf

	If ( aPar[TITULO_BX] == 2 )
		cWhere  := " SE1.E1_SALDO > 0 "
	EndIf

	If Len(aSelFil) > 0
		aEval(aSelFil,{|HH| cFil+=HH+"\"})
		cWhere += " AND SE1.E1_FILIAL IN "+FormatIn(cFil,"\")
	Else
		cWhere += " AND SE1.E1_FILIAL = '" + cFilAnt + "' "
	EndIf

	If !Empty(MV_PAR19)
		cWhere += " AND ZF1_CODUSR IN " + FormatIn( AllTrim(StrTran(MV_PAR19,' ','')), ";")
	EndIf

	cWhere := "%"+cWhere+"%" 

	//--------------------------
	//-- Consulta Banco de dados
	//--------------------------
	oSecCli:BeginQuery()
		
	BeginSQL Alias cTrab

		column ZF1_DATA 	as Date
		column E1_EMISSAO 	as Date
		column E1_VENCREA 	as Date
		
		SELECT 
			SE1.E1_FILIAL,SA1.A1_COD,SA1.A1_LOJA,ZF1.ZF1_PREF,ZF1.ZF1_NUM,
			ZF1.ZF1_PARC,ZF1.ZF1_TIPO,ZF1.ZF1_DATA,ZF1.ZF1_HORA,SE1.E1_EMISSAO,SE1.E1_VENCREA,
			SA1.R_E_C_N_O_ AS A1_REC,SE1.R_E_C_N_O_ AS E1_REC,ZF1.R_E_C_N_O_ AS ZF1_REC
		FROM %table:SA1% SA1
		INNER JOIN  %table:SE1% SE1
			ON(SA1.A1_COD = SE1.E1_CLIENTE AND SA1.A1_LOJA = SE1.E1_LOJA)
		INNER JOIN %table:ZF1% ZF1
			ON(SE1.E1_FILIAL = ZF1.ZF1_FILIAL AND SE1.E1_CLIENTE = ZF1.ZF1_CLIENT AND SE1.E1_LOJA = SE1.E1_LOJA
				AND SE1.E1_PREFIXO = ZF1.ZF1_PREF AND SE1.E1_NUM = ZF1.ZF1_NUM AND SE1.E1_PARCELA = ZF1.ZF1_PARC) 
		WHERE 	SA1.%notDel%
			AND SE1.%notDel%
			AND ZF1.%notDel%
			AND %exp:cWhere%
			AND ZF1_ORIGEM NOT IN('SFINA20B','FINA060T')
			AND ( SA1.A1_COD 		BETWEEN %exp:aPar[CLIENTE_DE]% 	AND %exp:aPar[CLIENTE_ATE]% )
			AND ( SA1.A1_LOJA 		BETWEEN %exp:aPar[LOJA_DE]% 	AND %exp:aPar[LOJA_ATE]%	)
			AND ( SE1.E1_PREFIXO 	BETWEEN %exp:aPar[PREFIXO_DE]% 	AND %exp:aPar[PREFIXO_ATE]%	)
			AND ( SE1.E1_NUM 		BETWEEN %exp:aPar[TITULO_DE]% 	AND %exp:aPar[TITULO_ATE]%	)
			AND ( SE1.E1_PARCELA 	BETWEEN %exp:aPar[PARCELA_DE]% 	AND %exp:aPar[PARCELA_ATE]%	)
			AND ( SE1.E1_EMISSAO 	BETWEEN %exp:aPar[EMISSAO_DE]% 	AND %exp:aPar[EMISSAO_ATE]%	)
			AND ( SE1.E1_VENCREA  	BETWEEN %exp:aPar[VENCTO_DE]% 	AND %exp:aPar[VENCTO_ATE]%	)
			AND ( ZF1.ZF1_DATA 		BETWEEN %exp:aPar[DATA_DE]% 	AND %exp:aPar[DATA_ATE]%	)
		ORDER BY SE1.E1_FILIAL,SA1.A1_COD,SA1.A1_LOJA,ZF1.ZF1_PREF,ZF1.ZF1_NUM,ZF1.ZF1_PARC,SE1.E1_EMISSAO,ZF1.ZF1_DATA,ZF1.ZF1_HORA

	EndSQL	

	oSecCli:EndQuery()
	oSecTit:SetParentQuery()
	oSecHit:SetParentQuery()

	oSecTit:SetParentFilter({|cParam| (cTrab)->(A1_COD+A1_LOJA) == cParam },{|| (cTrab)->(A1_COD+A1_LOJA) })
	oSecHit:SetParentFilter({|cParam| (cTrab)->(A1_COD+A1_LOJA+ZF1_PREF+ZF1_NUM+ZF1_PARC+ZF1_TIPO) == cParam },{|| (cTrab)->(A1_COD+A1_LOJA+ZF1_PREF+ZF1_NUM+ZF1_PARC+ZF1_TIPO) })

	oSecCli:Print()

Return(oReport)


//------------------------------------------------------
/*/{Protheus.doc} PergDef
Valida se pergunta existe na SX1, caso não existe
cadastra as perguntas.

@author Allan da Silva Faria
@since 25/04/2016
@version 1.0
@param cPerg, character, Nome da pergunta
/*/
//------------------------------------------------------
Static Function PergDef(cPerg)

	Local aHelpPor := {}

	//---------------------------------------
	//-- Help
	//---------------------------------------
	aAdd(aHelpPor,SepS2A("Informar o cliente inicial que deseja imprimir o relatório. Caso queira imprimir todos os clientes, deixe o campo em branco. Utilize <F3> para escolher."))
	aAdd(aHelpPor,SepS2A("Informar o loja do cliente inicial que deseja imprimir o relatório. Caso queira imprimir todos os clientes, deixe o campo em branco."))
	aAdd(aHelpPor,SepS2A("Informar o cliente final que deseja imprimir o relatório. Caso queira imprimir todos os clientes, informar ZZZZZZ. Utilize <F3> para escolher."))
	aAdd(aHelpPor,SepS2A("Informar o loja do cliente final que deseja imprimir o relatório. Caso queira imprimir todos os clientes, informar ZZZZZZ."))
	aAdd(aHelpPor,SepS2A("Informar a data inicial do histórico que deseja imprimir no relatório.")) 
	aAdd(aHelpPor,SepS2A("Informar a data final do histórico que deseja imprimir no relatório.")) 
	aAdd(aHelpPor,SepS2A("Imprime histórico de cobrança de títulos a receber baixado?"))
	aAdd(aHelpPor,SepS2A("Informar o prefixo inicial dos títulos que deseja imprimir no relatório. Caso queira imprimir todos os prefixos, deixe o campo em branco."))
	aAdd(aHelpPor,SepS2A("Informar o prefixo final dos títulos que deseja imprimir no relatório. Caso queira imprimir todos os prefixos, informar ZZZ."))
	aAdd(aHelpPor,SepS2A("Informar o título inicial que deseja imprimir no relatório. Caso queira imprimir todos os títulos, deixe o campo em branco."))
	aAdd(aHelpPor,SepS2A("Informar o título final que deseja imprimir no relatório. Caso queira imprimir todos os títulos, informar ZZZZZZ."))
	aAdd(aHelpPor,SepS2A("Informar a parcela inicial dos títulos deseja imprimir no relatório. Caso queira imprimir todos as parcelas, deixe o campo em branco."))
	aAdd(aHelpPor,SepS2A("Informar a parcela final dos títulos deseja imprimir no relatório. Caso queira imprimir todos as parcelas, informar ZZZ."))
	aAdd(aHelpPor,SepS2A("Informar a data de emissão inicial dos títulos que deseja imprimir no relatório.")) 
	aAdd(aHelpPor,SepS2A("Informar a data de emissão final dos títulos que deseja imprimir no relatório.")) 
	aAdd(aHelpPor,SepS2A("Informar a data de vencimento real inicial dos títulos que deseja imprimir no relatório.")) 
	aAdd(aHelpPor,SepS2A("Informar a data de vencimento real final dos títulos que deseja imprimir no relatório.")) 
	aAdd(aHelpPor,SepS2A("Seleciona Filiais?, Se selecionar não, o relatório ira considerar todas as filiais.")) 
	aAdd(aHelpPor,SepS2A("Usuario? Codigo dos usuarios a serem filtrados separados por ';'.")) 

	//---------------------------------------
	//-- Cadastra perguntas
	//---------------------------------------
	u_SFPUTSX1(cPerg,"01","Do Cliente?"			,"","","mv_ch1","C",TamSX3("E1_CLIENTE")[1]	,00,00,"G","","SA1","","","mv_par01",,,,,,,,,,,,,,,,,aHelpPor[01],,,)
	u_SFPUTSX1(cPerg,"02","Da Loja?"			,"","","mv_ch2","C",TamSX3("E1_LOJA")[1]	,00,00,"G","","  ","","","mv_par02",,,,,,,,,,,,,,,,,aHelpPor[02],,,)
	u_SFPUTSX1(cPerg,"03","Até Cliente?"		,"","","mv_ch3","C",TamSX3("E1_CLIENTE")[1]	,00,00,"G","","SA1","","","mv_par03",,,,,,,,,,,,,,,,,aHelpPor[03],,,)
	u_SFPUTSX1(cPerg,"04","Até Loja?"			,"","","mv_ch4","C",TamSX3("E1_LOJA")[1]	,00,00,"G","","  ","","","mv_par04",,,,,,,,,,,,,,,,,aHelpPor[04],,,)
	u_SFPUTSX1(cPerg,"05","Da Data ?"			,"","","mv_ch5","D",TamSX3("ZF1_DATA")[1]	,00,00,"G","","  ","","","mv_par05",,,,,,,,,,,,,,,,,aHelpPor[05],,,)
	u_SFPUTSX1(cPerg,"06","Até Data ?"			,"","","mv_ch6","D",TamSX3("ZF1_DATA")[1]	,00,00,"G","","  ","","","mv_par06",,,,,,,,,,,,,,,,,aHelpPor[06],,,)
	u_SFPUTSX1(cPerg,"07","Cons.Tit Baixado?"	,"","","mv_ch7","N",01						,00,00,"C","","  ","","","mv_par07","Sim","Sim","Sim","Não","Não","Não","Não",,,,,,,,,,aHelpPor[07],,,)
	u_SFPUTSX1(cPerg,"08","Do Prefixo?"			,"","","mv_ch8","C",TamSX3("E1_PREFIXO")[1]	,00,00,"G","","  ","","","mv_par08",,,,,,,,,,,,,,,,,aHelpPor[08],,,)
	u_SFPUTSX1(cPerg,"09","Até Prefixo?"		,"","","mv_ch9","C",TamSX3("E1_PREFIXO")[1]	,00,00,"G","","  ","","","mv_par09",,,,,,,,,,,,,,,,,aHelpPor[09],,,)
	u_SFPUTSX1(cPerg,"10","Do Título?" 			,"","","mv_chA","C",TamSX3("E1_NUM")[1]		,00,00,"G","","  ","","","mv_par10",,,,,,,,,,,,,,,,,aHelpPor[10],,,)
	u_SFPUTSX1(cPerg,"11","Até Título?"			,"","","mv_chB","C",TamSX3("E1_NUM")[1]		,00,00,"G","","  ","","","mv_par11",,,,,,,,,,,,,,,,,aHelpPor[11],,,)
	u_SFPUTSX1(cPerg,"12","Da Parcela?" 		,"","","mv_chC","C",TamSX3("E1_PARCELA")[1]	,00,00,"G","","  ","","","mv_par12",,,,,,,,,,,,,,,,,aHelpPor[12],,,)
	u_SFPUTSX1(cPerg,"13","Até Parcela?"		,"","","mv_chD","C",TamSX3("E1_PARCELA")[1]	,00,00,"G","","  ","","","mv_par13",,,,,,,,,,,,,,,,,aHelpPor[13],,,)
	u_SFPUTSX1(cPerg,"14","Da Emissão?" 		,"","","mv_che","D",TamSX3("E1_EMISSAO")[1]	,00,00,"G","","  ","","","mv_par14",,,,,,,,,,,,,,,,,aHelpPor[14],,,)
	u_SFPUTSX1(cPerg,"15","Até Emissão?"		,"","","mv_chf","D",TamSX3("E1_EMISSAO")[1]	,00,00,"G","","  ","","","mv_par15",,,,,,,,,,,,,,,,,aHelpPor[15],,,)
	u_SFPUTSX1(cPerg,"16","Do Vencimento?" 		,"","","mv_chg","D",TamSX3("E1_VENCREA")[1]	,00,00,"G","","  ","","","mv_par16",,,,,,,,,,,,,,,,,aHelpPor[16],,,)
	u_SFPUTSX1(cPerg,"17","Até Vencimento?"		,"","","mv_chh","D",TamSX3("E1_VENCREA")[1]	,00,00,"G","","  ","","","mv_par17",,,,,,,,,,,,,,,,,aHelpPor[17],,,)
	u_SFPUTSX1(cPerg,"18","Seleciona Filial?"	,"","","mv_chi","N",01						,00,00,"C","","  ","","","mv_par18","Sim","Sim","Sim","Não","Não","Não","Não",,,,,,,,,,aHelpPor[18],,,)
	u_SFPUTSX1(cPerg,"19","Usuario?" 			,"","","mv_chj","C",50						,00,00,"G","","  ","","","mv_par19",,,,,,,,,,,,,,,,,aHelpPor[19],,,)

Return Nil


//------------------------------------------------------
/*/{Protheus.doc} SepS2A
Transforma help de pergunta de string para array

@author Edimar Tinti
@since 25/04/2016
@version 1.0
@param cStr, character, help em string
@return Array, Help da pergunta em array
/*/
//------------------------------------------------------
Static Function SepS2A(cStr)

Local aRet	:= StrToArray(cStr," ")
Local nMax	:= 39
Local nCnt	:= 0
Local nLen	:= 0

cStr := ""
For nCnt:=1 To Len(aRet)
	If Len(cStr) + Len(aRet[nCnt]) > nMax + nLen
 		cStr += CHR(13)
 		nLen := Len(cStr)
 	EndIf
 	cStr += AllTrim(aRet[nCnt])+" "
Next nCnt
aRet:= StrToArray(cStr,CHR(13))
Return(aRet)

//-----------------------------------------------------
/*/{Protheus.doc} Origem
Origem de histórico de cobrança.

@author Allan da Silva Faria
@since 26/04/2016
@version 1.0
@param cTipo, character, Tipo de retorno, A=Array,S=String
@return Array, Array com as origens.
/*/
//-----------------------------------------------------

Static Function Origem(cTipo) //, p_Acao)

	Local _aRet 	:= {""}
	Local _aOrigem 	:= {}

	//-------------------------------------------
	//-- Origens
	//-------------------------------------------
    aAdd(_aOrigem,"SF06A01X1=Hist. Cobrança / 1-Agendamento"     ) 
    aAdd(_aOrigem,"SF06A01X2=Hist. Cobrança / 2-Parecer Jurídico")
    aAdd(_aOrigem,"SF06A01X3=Hist. Cobrança / 3-Ação Judicial" )
    aAdd(_aOrigem,"SF06A01X =Hist. Cobrança / Outras " )
	aAdd(_aOrigem,"FINA280  =Fat. Receber"	    )
	aAdd(_aOrigem,"FINA460  =Liquidação" 		)
	aAdd(_aOrigem,"SFINA20A =Renegociação" 		)	//-- Baixado
	aAdd(_aOrigem,"SFINA20B =Renegociação" 		)	//-- Incluido
	aAdd(_aOrigem,"FINA070  =Baixa a Receber"	)
	aAdd(_aOrigem,"FINA040S =Spc"				)
	aAdd(_aOrigem,"FINA040J =Cobrança Judicial"	)
	aAdd(_aOrigem,"DTFINR01 =Carta de Cobrança"	)
	aAdd(_aOrigem,"FINA060T =Transf. Carteira"	)
	aAdd(_aOrigem,"FINA060B =Emissão Borderô"	)
	aAdd(_aOrigem,"SF06A07X =Transf. Carteira"  )

	If cTipo == "A"
		_aRet := aClone(_aOrigem)
	ElseIf cTipo == "S"
		aEval(_aOrigem,{|HH| _aRet[1]+=AllTrim(HH)+";"})
	EndIf

Return(_aRet)
